

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Jan 18 16:23:02 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	12LF1571
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC12LF1571 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  008C                     	;# 
    89  0091                     	;# 
    90  0092                     	;# 
    91  0093                     	;# 
    92  0095                     	;# 
    93  0096                     	;# 
    94  0097                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009A                     	;# 
    98  009B                     	;# 
    99  009B                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009E                     	;# 
   103  009F                     	;# 
   104  010C                     	;# 
   105  0111                     	;# 
   106  0112                     	;# 
   107  0115                     	;# 
   108  0116                     	;# 
   109  0117                     	;# 
   110  0118                     	;# 
   111  0119                     	;# 
   112  011D                     	;# 
   113  011D                     	;# 
   114  018C                     	;# 
   115  0191                     	;# 
   116  0191                     	;# 
   117  0192                     	;# 
   118  0193                     	;# 
   119  0193                     	;# 
   120  0194                     	;# 
   121  0195                     	;# 
   122  0196                     	;# 
   123  020C                     	;# 
   124  028C                     	;# 
   125  030C                     	;# 
   126  038C                     	;# 
   127  0391                     	;# 
   128  0392                     	;# 
   129  0393                     	;# 
   130  0691                     	;# 
   131  0692                     	;# 
   132  0693                     	;# 
   133  0694                     	;# 
   134  0695                     	;# 
   135  0D8E                     	;# 
   136  0D8F                     	;# 
   137  0D90                     	;# 
   138  0D91                     	;# 
   139  0D91                     	;# 
   140  0D92                     	;# 
   141  0D93                     	;# 
   142  0D93                     	;# 
   143  0D94                     	;# 
   144  0D95                     	;# 
   145  0D95                     	;# 
   146  0D96                     	;# 
   147  0D97                     	;# 
   148  0D97                     	;# 
   149  0D98                     	;# 
   150  0D99                     	;# 
   151  0D99                     	;# 
   152  0D9A                     	;# 
   153  0D9B                     	;# 
   154  0D9C                     	;# 
   155  0D9C                     	;# 
   156  0D9D                     	;# 
   157  0D9D                     	;# 
   158  0D9E                     	;# 
   159  0D9F                     	;# 
   160  0DA0                     	;# 
   161  0DA1                     	;# 
   162  0DA1                     	;# 
   163  0DA2                     	;# 
   164  0DA3                     	;# 
   165  0DA3                     	;# 
   166  0DA4                     	;# 
   167  0DA5                     	;# 
   168  0DA5                     	;# 
   169  0DA6                     	;# 
   170  0DA7                     	;# 
   171  0DA7                     	;# 
   172  0DA8                     	;# 
   173  0DA9                     	;# 
   174  0DA9                     	;# 
   175  0DAA                     	;# 
   176  0DAB                     	;# 
   177  0DAC                     	;# 
   178  0DAC                     	;# 
   179  0DAD                     	;# 
   180  0DAD                     	;# 
   181  0DAE                     	;# 
   182  0DAF                     	;# 
   183  0DB0                     	;# 
   184  0DB1                     	;# 
   185  0DB1                     	;# 
   186  0DB2                     	;# 
   187  0DB3                     	;# 
   188  0DB3                     	;# 
   189  0DB4                     	;# 
   190  0DB5                     	;# 
   191  0DB5                     	;# 
   192  0DB6                     	;# 
   193  0DB7                     	;# 
   194  0DB7                     	;# 
   195  0DB8                     	;# 
   196  0DB9                     	;# 
   197  0DB9                     	;# 
   198  0DBA                     	;# 
   199  0DBB                     	;# 
   200  0DBC                     	;# 
   201  0DBC                     	;# 
   202  0DBD                     	;# 
   203  0DBD                     	;# 
   204  0DBE                     	;# 
   205  0DBF                     	;# 
   206  0DC0                     	;# 
   207  0FE4                     	;# 
   208  0FE5                     	;# 
   209  0FE6                     	;# 
   210  0FE7                     	;# 
   211  0FE8                     	;# 
   212  0FE8                     	;# 
   213  0FE9                     	;# 
   214  0FEA                     	;# 
   215  0FEA                     	;# 
   216  0FEB                     	;# 
   217  0FED                     	;# 
   218  0FEE                     	;# 
   219  0FEE                     	;# 
   220  0FEF                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  0011                     	;# 
   235  0012                     	;# 
   236  0013                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0016                     	;# 
   240  0017                     	;# 
   241  0018                     	;# 
   242  0019                     	;# 
   243  001A                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  008C                     	;# 
   247  0091                     	;# 
   248  0092                     	;# 
   249  0093                     	;# 
   250  0095                     	;# 
   251  0096                     	;# 
   252  0097                     	;# 
   253  0098                     	;# 
   254  0099                     	;# 
   255  009A                     	;# 
   256  009B                     	;# 
   257  009B                     	;# 
   258  009C                     	;# 
   259  009D                     	;# 
   260  009E                     	;# 
   261  009F                     	;# 
   262  010C                     	;# 
   263  0111                     	;# 
   264  0112                     	;# 
   265  0115                     	;# 
   266  0116                     	;# 
   267  0117                     	;# 
   268  0118                     	;# 
   269  0119                     	;# 
   270  011D                     	;# 
   271  011D                     	;# 
   272  018C                     	;# 
   273  0191                     	;# 
   274  0191                     	;# 
   275  0192                     	;# 
   276  0193                     	;# 
   277  0193                     	;# 
   278  0194                     	;# 
   279  0195                     	;# 
   280  0196                     	;# 
   281  020C                     	;# 
   282  028C                     	;# 
   283  030C                     	;# 
   284  038C                     	;# 
   285  0391                     	;# 
   286  0392                     	;# 
   287  0393                     	;# 
   288  0691                     	;# 
   289  0692                     	;# 
   290  0693                     	;# 
   291  0694                     	;# 
   292  0695                     	;# 
   293  0D8E                     	;# 
   294  0D8F                     	;# 
   295  0D90                     	;# 
   296  0D91                     	;# 
   297  0D91                     	;# 
   298  0D92                     	;# 
   299  0D93                     	;# 
   300  0D93                     	;# 
   301  0D94                     	;# 
   302  0D95                     	;# 
   303  0D95                     	;# 
   304  0D96                     	;# 
   305  0D97                     	;# 
   306  0D97                     	;# 
   307  0D98                     	;# 
   308  0D99                     	;# 
   309  0D99                     	;# 
   310  0D9A                     	;# 
   311  0D9B                     	;# 
   312  0D9C                     	;# 
   313  0D9C                     	;# 
   314  0D9D                     	;# 
   315  0D9D                     	;# 
   316  0D9E                     	;# 
   317  0D9F                     	;# 
   318  0DA0                     	;# 
   319  0DA1                     	;# 
   320  0DA1                     	;# 
   321  0DA2                     	;# 
   322  0DA3                     	;# 
   323  0DA3                     	;# 
   324  0DA4                     	;# 
   325  0DA5                     	;# 
   326  0DA5                     	;# 
   327  0DA6                     	;# 
   328  0DA7                     	;# 
   329  0DA7                     	;# 
   330  0DA8                     	;# 
   331  0DA9                     	;# 
   332  0DA9                     	;# 
   333  0DAA                     	;# 
   334  0DAB                     	;# 
   335  0DAC                     	;# 
   336  0DAC                     	;# 
   337  0DAD                     	;# 
   338  0DAD                     	;# 
   339  0DAE                     	;# 
   340  0DAF                     	;# 
   341  0DB0                     	;# 
   342  0DB1                     	;# 
   343  0DB1                     	;# 
   344  0DB2                     	;# 
   345  0DB3                     	;# 
   346  0DB3                     	;# 
   347  0DB4                     	;# 
   348  0DB5                     	;# 
   349  0DB5                     	;# 
   350  0DB6                     	;# 
   351  0DB7                     	;# 
   352  0DB7                     	;# 
   353  0DB8                     	;# 
   354  0DB9                     	;# 
   355  0DB9                     	;# 
   356  0DBA                     	;# 
   357  0DBB                     	;# 
   358  0DBC                     	;# 
   359  0DBC                     	;# 
   360  0DBD                     	;# 
   361  0DBD                     	;# 
   362  0DBE                     	;# 
   363  0DBF                     	;# 
   364  0DC0                     	;# 
   365  0FE4                     	;# 
   366  0FE5                     	;# 
   367  0FE6                     	;# 
   368  0FE7                     	;# 
   369  0FE8                     	;# 
   370  0FE8                     	;# 
   371  0FE9                     	;# 
   372  0FEA                     	;# 
   373  0FEA                     	;# 
   374  0FEB                     	;# 
   375  0FED                     	;# 
   376  0FEE                     	;# 
   377  0FEE                     	;# 
   378  0FEF                     	;# 
   379  0000                     	;# 
   380  0001                     	;# 
   381  0002                     	;# 
   382  0003                     	;# 
   383  0004                     	;# 
   384  0005                     	;# 
   385  0006                     	;# 
   386  0007                     	;# 
   387  0008                     	;# 
   388  0009                     	;# 
   389  000A                     	;# 
   390  000B                     	;# 
   391  000C                     	;# 
   392  0011                     	;# 
   393  0012                     	;# 
   394  0013                     	;# 
   395  0015                     	;# 
   396  0016                     	;# 
   397  0016                     	;# 
   398  0017                     	;# 
   399  0018                     	;# 
   400  0019                     	;# 
   401  001A                     	;# 
   402  001B                     	;# 
   403  001C                     	;# 
   404  008C                     	;# 
   405  0091                     	;# 
   406  0092                     	;# 
   407  0093                     	;# 
   408  0095                     	;# 
   409  0096                     	;# 
   410  0097                     	;# 
   411  0098                     	;# 
   412  0099                     	;# 
   413  009A                     	;# 
   414  009B                     	;# 
   415  009B                     	;# 
   416  009C                     	;# 
   417  009D                     	;# 
   418  009E                     	;# 
   419  009F                     	;# 
   420  010C                     	;# 
   421  0111                     	;# 
   422  0112                     	;# 
   423  0115                     	;# 
   424  0116                     	;# 
   425  0117                     	;# 
   426  0118                     	;# 
   427  0119                     	;# 
   428  011D                     	;# 
   429  011D                     	;# 
   430  018C                     	;# 
   431  0191                     	;# 
   432  0191                     	;# 
   433  0192                     	;# 
   434  0193                     	;# 
   435  0193                     	;# 
   436  0194                     	;# 
   437  0195                     	;# 
   438  0196                     	;# 
   439  020C                     	;# 
   440  028C                     	;# 
   441  030C                     	;# 
   442  038C                     	;# 
   443  0391                     	;# 
   444  0392                     	;# 
   445  0393                     	;# 
   446  0691                     	;# 
   447  0692                     	;# 
   448  0693                     	;# 
   449  0694                     	;# 
   450  0695                     	;# 
   451  0D8E                     	;# 
   452  0D8F                     	;# 
   453  0D90                     	;# 
   454  0D91                     	;# 
   455  0D91                     	;# 
   456  0D92                     	;# 
   457  0D93                     	;# 
   458  0D93                     	;# 
   459  0D94                     	;# 
   460  0D95                     	;# 
   461  0D95                     	;# 
   462  0D96                     	;# 
   463  0D97                     	;# 
   464  0D97                     	;# 
   465  0D98                     	;# 
   466  0D99                     	;# 
   467  0D99                     	;# 
   468  0D9A                     	;# 
   469  0D9B                     	;# 
   470  0D9C                     	;# 
   471  0D9C                     	;# 
   472  0D9D                     	;# 
   473  0D9D                     	;# 
   474  0D9E                     	;# 
   475  0D9F                     	;# 
   476  0DA0                     	;# 
   477  0DA1                     	;# 
   478  0DA1                     	;# 
   479  0DA2                     	;# 
   480  0DA3                     	;# 
   481  0DA3                     	;# 
   482  0DA4                     	;# 
   483  0DA5                     	;# 
   484  0DA5                     	;# 
   485  0DA6                     	;# 
   486  0DA7                     	;# 
   487  0DA7                     	;# 
   488  0DA8                     	;# 
   489  0DA9                     	;# 
   490  0DA9                     	;# 
   491  0DAA                     	;# 
   492  0DAB                     	;# 
   493  0DAC                     	;# 
   494  0DAC                     	;# 
   495  0DAD                     	;# 
   496  0DAD                     	;# 
   497  0DAE                     	;# 
   498  0DAF                     	;# 
   499  0DB0                     	;# 
   500  0DB1                     	;# 
   501  0DB1                     	;# 
   502  0DB2                     	;# 
   503  0DB3                     	;# 
   504  0DB3                     	;# 
   505  0DB4                     	;# 
   506  0DB5                     	;# 
   507  0DB5                     	;# 
   508  0DB6                     	;# 
   509  0DB7                     	;# 
   510  0DB7                     	;# 
   511  0DB8                     	;# 
   512  0DB9                     	;# 
   513  0DB9                     	;# 
   514  0DBA                     	;# 
   515  0DBB                     	;# 
   516  0DBC                     	;# 
   517  0DBC                     	;# 
   518  0DBD                     	;# 
   519  0DBD                     	;# 
   520  0DBE                     	;# 
   521  0DBF                     	;# 
   522  0DC0                     	;# 
   523  0FE4                     	;# 
   524  0FE5                     	;# 
   525  0FE6                     	;# 
   526  0FE7                     	;# 
   527  0FE8                     	;# 
   528  0FE8                     	;# 
   529  0FE9                     	;# 
   530  0FEA                     	;# 
   531  0FEA                     	;# 
   532  0FEB                     	;# 
   533  0FED                     	;# 
   534  0FEE                     	;# 
   535  0FEE                     	;# 
   536  0FEF                     	;# 
   537  0000                     	;# 
   538  0001                     	;# 
   539  0002                     	;# 
   540  0003                     	;# 
   541  0004                     	;# 
   542  0005                     	;# 
   543  0006                     	;# 
   544  0007                     	;# 
   545  0008                     	;# 
   546  0009                     	;# 
   547  000A                     	;# 
   548  000B                     	;# 
   549  000C                     	;# 
   550  0011                     	;# 
   551  0012                     	;# 
   552  0013                     	;# 
   553  0015                     	;# 
   554  0016                     	;# 
   555  0016                     	;# 
   556  0017                     	;# 
   557  0018                     	;# 
   558  0019                     	;# 
   559  001A                     	;# 
   560  001B                     	;# 
   561  001C                     	;# 
   562  008C                     	;# 
   563  0091                     	;# 
   564  0092                     	;# 
   565  0093                     	;# 
   566  0095                     	;# 
   567  0096                     	;# 
   568  0097                     	;# 
   569  0098                     	;# 
   570  0099                     	;# 
   571  009A                     	;# 
   572  009B                     	;# 
   573  009B                     	;# 
   574  009C                     	;# 
   575  009D                     	;# 
   576  009E                     	;# 
   577  009F                     	;# 
   578  010C                     	;# 
   579  0111                     	;# 
   580  0112                     	;# 
   581  0115                     	;# 
   582  0116                     	;# 
   583  0117                     	;# 
   584  0118                     	;# 
   585  0119                     	;# 
   586  011D                     	;# 
   587  011D                     	;# 
   588  018C                     	;# 
   589  0191                     	;# 
   590  0191                     	;# 
   591  0192                     	;# 
   592  0193                     	;# 
   593  0193                     	;# 
   594  0194                     	;# 
   595  0195                     	;# 
   596  0196                     	;# 
   597  020C                     	;# 
   598  028C                     	;# 
   599  030C                     	;# 
   600  038C                     	;# 
   601  0391                     	;# 
   602  0392                     	;# 
   603  0393                     	;# 
   604  0691                     	;# 
   605  0692                     	;# 
   606  0693                     	;# 
   607  0694                     	;# 
   608  0695                     	;# 
   609  0D8E                     	;# 
   610  0D8F                     	;# 
   611  0D90                     	;# 
   612  0D91                     	;# 
   613  0D91                     	;# 
   614  0D92                     	;# 
   615  0D93                     	;# 
   616  0D93                     	;# 
   617  0D94                     	;# 
   618  0D95                     	;# 
   619  0D95                     	;# 
   620  0D96                     	;# 
   621  0D97                     	;# 
   622  0D97                     	;# 
   623  0D98                     	;# 
   624  0D99                     	;# 
   625  0D99                     	;# 
   626  0D9A                     	;# 
   627  0D9B                     	;# 
   628  0D9C                     	;# 
   629  0D9C                     	;# 
   630  0D9D                     	;# 
   631  0D9D                     	;# 
   632  0D9E                     	;# 
   633  0D9F                     	;# 
   634  0DA0                     	;# 
   635  0DA1                     	;# 
   636  0DA1                     	;# 
   637  0DA2                     	;# 
   638  0DA3                     	;# 
   639  0DA3                     	;# 
   640  0DA4                     	;# 
   641  0DA5                     	;# 
   642  0DA5                     	;# 
   643  0DA6                     	;# 
   644  0DA7                     	;# 
   645  0DA7                     	;# 
   646  0DA8                     	;# 
   647  0DA9                     	;# 
   648  0DA9                     	;# 
   649  0DAA                     	;# 
   650  0DAB                     	;# 
   651  0DAC                     	;# 
   652  0DAC                     	;# 
   653  0DAD                     	;# 
   654  0DAD                     	;# 
   655  0DAE                     	;# 
   656  0DAF                     	;# 
   657  0DB0                     	;# 
   658  0DB1                     	;# 
   659  0DB1                     	;# 
   660  0DB2                     	;# 
   661  0DB3                     	;# 
   662  0DB3                     	;# 
   663  0DB4                     	;# 
   664  0DB5                     	;# 
   665  0DB5                     	;# 
   666  0DB6                     	;# 
   667  0DB7                     	;# 
   668  0DB7                     	;# 
   669  0DB8                     	;# 
   670  0DB9                     	;# 
   671  0DB9                     	;# 
   672  0DBA                     	;# 
   673  0DBB                     	;# 
   674  0DBC                     	;# 
   675  0DBC                     	;# 
   676  0DBD                     	;# 
   677  0DBD                     	;# 
   678  0DBE                     	;# 
   679  0DBF                     	;# 
   680  0DC0                     	;# 
   681  0FE4                     	;# 
   682  0FE5                     	;# 
   683  0FE6                     	;# 
   684  0FE7                     	;# 
   685  0FE8                     	;# 
   686  0FE8                     	;# 
   687  0FE9                     	;# 
   688  0FEA                     	;# 
   689  0FEA                     	;# 
   690  0FEB                     	;# 
   691  0FED                     	;# 
   692  0FEE                     	;# 
   693  0FEE                     	;# 
   694  0FEF                     	;# 
   695  0000                     	;# 
   696  0001                     	;# 
   697  0002                     	;# 
   698  0003                     	;# 
   699  0004                     	;# 
   700  0005                     	;# 
   701  0006                     	;# 
   702  0007                     	;# 
   703  0008                     	;# 
   704  0009                     	;# 
   705  000A                     	;# 
   706  000B                     	;# 
   707  000C                     	;# 
   708  0011                     	;# 
   709  0012                     	;# 
   710  0013                     	;# 
   711  0015                     	;# 
   712  0016                     	;# 
   713  0016                     	;# 
   714  0017                     	;# 
   715  0018                     	;# 
   716  0019                     	;# 
   717  001A                     	;# 
   718  001B                     	;# 
   719  001C                     	;# 
   720  008C                     	;# 
   721  0091                     	;# 
   722  0092                     	;# 
   723  0093                     	;# 
   724  0095                     	;# 
   725  0096                     	;# 
   726  0097                     	;# 
   727  0098                     	;# 
   728  0099                     	;# 
   729  009A                     	;# 
   730  009B                     	;# 
   731  009B                     	;# 
   732  009C                     	;# 
   733  009D                     	;# 
   734  009E                     	;# 
   735  009F                     	;# 
   736  010C                     	;# 
   737  0111                     	;# 
   738  0112                     	;# 
   739  0115                     	;# 
   740  0116                     	;# 
   741  0117                     	;# 
   742  0118                     	;# 
   743  0119                     	;# 
   744  011D                     	;# 
   745  011D                     	;# 
   746  018C                     	;# 
   747  0191                     	;# 
   748  0191                     	;# 
   749  0192                     	;# 
   750  0193                     	;# 
   751  0193                     	;# 
   752  0194                     	;# 
   753  0195                     	;# 
   754  0196                     	;# 
   755  020C                     	;# 
   756  028C                     	;# 
   757  030C                     	;# 
   758  038C                     	;# 
   759  0391                     	;# 
   760  0392                     	;# 
   761  0393                     	;# 
   762  0691                     	;# 
   763  0692                     	;# 
   764  0693                     	;# 
   765  0694                     	;# 
   766  0695                     	;# 
   767  0D8E                     	;# 
   768  0D8F                     	;# 
   769  0D90                     	;# 
   770  0D91                     	;# 
   771  0D91                     	;# 
   772  0D92                     	;# 
   773  0D93                     	;# 
   774  0D93                     	;# 
   775  0D94                     	;# 
   776  0D95                     	;# 
   777  0D95                     	;# 
   778  0D96                     	;# 
   779  0D97                     	;# 
   780  0D97                     	;# 
   781  0D98                     	;# 
   782  0D99                     	;# 
   783  0D99                     	;# 
   784  0D9A                     	;# 
   785  0D9B                     	;# 
   786  0D9C                     	;# 
   787  0D9C                     	;# 
   788  0D9D                     	;# 
   789  0D9D                     	;# 
   790  0D9E                     	;# 
   791  0D9F                     	;# 
   792  0DA0                     	;# 
   793  0DA1                     	;# 
   794  0DA1                     	;# 
   795  0DA2                     	;# 
   796  0DA3                     	;# 
   797  0DA3                     	;# 
   798  0DA4                     	;# 
   799  0DA5                     	;# 
   800  0DA5                     	;# 
   801  0DA6                     	;# 
   802  0DA7                     	;# 
   803  0DA7                     	;# 
   804  0DA8                     	;# 
   805  0DA9                     	;# 
   806  0DA9                     	;# 
   807  0DAA                     	;# 
   808  0DAB                     	;# 
   809  0DAC                     	;# 
   810  0DAC                     	;# 
   811  0DAD                     	;# 
   812  0DAD                     	;# 
   813  0DAE                     	;# 
   814  0DAF                     	;# 
   815  0DB0                     	;# 
   816  0DB1                     	;# 
   817  0DB1                     	;# 
   818  0DB2                     	;# 
   819  0DB3                     	;# 
   820  0DB3                     	;# 
   821  0DB4                     	;# 
   822  0DB5                     	;# 
   823  0DB5                     	;# 
   824  0DB6                     	;# 
   825  0DB7                     	;# 
   826  0DB7                     	;# 
   827  0DB8                     	;# 
   828  0DB9                     	;# 
   829  0DB9                     	;# 
   830  0DBA                     	;# 
   831  0DBB                     	;# 
   832  0DBC                     	;# 
   833  0DBC                     	;# 
   834  0DBD                     	;# 
   835  0DBD                     	;# 
   836  0DBE                     	;# 
   837  0DBF                     	;# 
   838  0DC0                     	;# 
   839  0FE4                     	;# 
   840  0FE5                     	;# 
   841  0FE6                     	;# 
   842  0FE7                     	;# 
   843  0FE8                     	;# 
   844  0FE8                     	;# 
   845  0FE9                     	;# 
   846  0FEA                     	;# 
   847  0FEA                     	;# 
   848  0FEB                     	;# 
   849  0FED                     	;# 
   850  0FEE                     	;# 
   851  0FEE                     	;# 
   852  0FEF                     	;# 
   853                           
   854                           	psect	nvCOMMON
   855  007A                     __pnvCOMMON:
   856  007A                     _timer1ReloadVal:
   857  007A                     	ds	2
   858                           
   859                           	psect	nvBANK0
   860  0020                     __pnvBANK0:
   861  0020                     _TMR1_InterruptHandler:
   862  0020                     	ds	2
   863  000C                     _PORTAbits	set	12
   864  0019                     _T1GCONbits	set	25
   865  0018                     _T1CONbits	set	24
   866  0018                     _T1CON	set	24
   867  0011                     _PIR1bits	set	17
   868  0016                     _TMR1L	set	22
   869  0017                     _TMR1H	set	23
   870  0019                     _T1GCON	set	25
   871  000B                     _INTCONbits	set	11
   872  0091                     _PIE1bits	set	145
   873  0095                     _OPTION_REGbits	set	149
   874  008C                     _TRISA	set	140
   875  0097                     _WDTCON	set	151
   876  0098                     _OSCTUNE	set	152
   877  0099                     _OSCCON	set	153
   878  010C                     _LATAbits	set	268
   879  011D                     _APFCON	set	285
   880  010C                     _LATA	set	268
   881  0116                     _BORCON	set	278
   882  018C                     _ANSELA	set	396
   883  020C                     _WPUA	set	524
   884  028C                     _ODCONA	set	652
   885  030C                     _SLRCONA	set	780
   886  0391                     _IOCAPbits	set	913
   887  038C                     _INLVLA	set	908
   888                           
   889                           	psect	cinit
   890  0027                     start_initialization:	
   891                           ; #config settings
   892                           
   893  0027                     __initialization:
   894                           
   895                           ; Clear objects allocated to COMMON
   896  0027  01F0               	clrf	__pbssCOMMON& (0+127)
   897  0028  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   898  0029  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   899  002A  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   900  002B  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   901  002C                     end_of_initialization:	
   902                           ;End of C runtime variable initialization code
   903                           
   904  002C                     __end_of__initialization:
   905  002C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   906  002D  0020               	movlb	0
   907  002E  282F               	ljmp	_main	;jump to C main() function
   908                           
   909                           	psect	bssCOMMON
   910  0070                     __pbssCOMMON:
   911  0070                     _demandedSecondsTick:
   912  0070                     	ds	2
   913  0072                     _currentSecondsTick:
   914  0072                     	ds	2
   915  0074                     _currentState:
   916  0074                     	ds	1
   917                           
   918                           	psect	cstackCOMMON
   919  0075                     __pcstackCOMMON:
   920  0075                     ?_PIN_MANAGER_Initialize:
   921  0075                     ?_OSCILLATOR_Initialize:	
   922                           ; 1 bytes @ 0x0
   923                           
   924  0075                     ?_WDT_Initialize:	
   925                           ; 1 bytes @ 0x0
   926                           
   927  0075                     ?_TMR1_Initialize:	
   928                           ; 1 bytes @ 0x0
   929                           
   930  0075                     ?_TMR1_DefaultInterruptHandler:	
   931                           ; 1 bytes @ 0x0
   932                           
   933  0075                     ??_TMR1_DefaultInterruptHandler:	
   934                           ; 1 bytes @ 0x0
   935                           
   936  0075                     ?_TMR1_CallBack:	
   937                           ; 1 bytes @ 0x0
   938                           
   939  0075                     ??_TMR1_CallBack:	
   940                           ; 1 bytes @ 0x0
   941                           
   942  0075                     ?_secondsTick:	
   943                           ; 1 bytes @ 0x0
   944                           
   945  0075                     ??_secondsTick:	
   946                           ; 1 bytes @ 0x0
   947                           
   948  0075                     ?_setState:	
   949                           ; 1 bytes @ 0x0
   950                           
   951  0075                     ?_SYSTEM_Initialize:	
   952                           ; 1 bytes @ 0x0
   953                           
   954  0075                     ?_PIN_MANAGER_IOC:	
   955                           ; 1 bytes @ 0x0
   956                           
   957  0075                     ??_PIN_MANAGER_IOC:	
   958                           ; 1 bytes @ 0x0
   959                           
   960  0075                     ?_TMR1_StartTimer:	
   961                           ; 1 bytes @ 0x0
   962                           
   963  0075                     ?_TMR1_WriteTimer:	
   964                           ; 1 bytes @ 0x0
   965                           
   966  0075                     ?_TMR1_ISR:	
   967                           ; 1 bytes @ 0x0
   968                           
   969  0075                     ?_INTERRUPT_InterruptManager:	
   970                           ; 1 bytes @ 0x0
   971                           
   972  0075                     ?_main:	
   973                           ; 1 bytes @ 0x0
   974                           
   975  0075                     TMR1_WriteTimer@timerVal:	
   976                           ; 1 bytes @ 0x0
   977                           
   978                           
   979                           ; 2 bytes @ 0x0
   980  0075                     	ds	2
   981  0077                     ??_PIN_MANAGER_Initialize:
   982  0077                     ??_OSCILLATOR_Initialize:	
   983                           ; 1 bytes @ 0x2
   984                           
   985  0077                     ??_WDT_Initialize:	
   986                           ; 1 bytes @ 0x2
   987                           
   988  0077                     ?_TMR1_SetInterruptHandler:	
   989                           ; 1 bytes @ 0x2
   990                           
   991  0077                     ??_setState:	
   992                           ; 1 bytes @ 0x2
   993                           
   994  0077                     ??_TMR1_StartTimer:	
   995                           ; 1 bytes @ 0x2
   996                           
   997  0077                     ??_TMR1_WriteTimer:	
   998                           ; 1 bytes @ 0x2
   999                           
  1000  0077                     ??_TMR1_ISR:	
  1001                           ; 1 bytes @ 0x2
  1002                           
  1003  0077                     ??_INTERRUPT_InterruptManager:	
  1004                           ; 1 bytes @ 0x2
  1005                           
  1006  0077                     TMR1_SetInterruptHandler@InterruptHandler:	
  1007                           ; 1 bytes @ 0x2
  1008                           
  1009                           
  1010                           ; 2 bytes @ 0x2
  1011  0077                     	ds	2
  1012  0079                     ??_TMR1_Initialize:
  1013  0079                     ??_TMR1_SetInterruptHandler:	
  1014                           ; 1 bytes @ 0x4
  1015                           
  1016  0079                     ??_SYSTEM_Initialize:	
  1017                           ; 1 bytes @ 0x4
  1018                           
  1019  0079                     setState@newState:	
  1020                           ; 1 bytes @ 0x4
  1021                           
  1022                           
  1023                           ; 1 bytes @ 0x4
  1024  0079                     	ds	1
  1025                           
  1026                           	psect	cstackBANK0
  1027  0022                     __pcstackBANK0:
  1028  0022                     ??_main:
  1029                           
  1030                           ; 1 bytes @ 0x0
  1031  0022                     	ds	2
  1032                           
  1033                           	psect	maintext
  1034  002F                     __pmaintext:	
  1035 ;;
  1036 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1037 ;;
  1038 ;; *************** function _main *****************
  1039 ;; Defined at:
  1040 ;;		line 66 in file "main.c"
  1041 ;; Parameters:    Size  Location     Type
  1042 ;;		None
  1043 ;; Auto vars:     Size  Location     Type
  1044 ;;		None
  1045 ;; Return value:  Size  Location     Type
  1046 ;;                  1    wreg      void 
  1047 ;; Registers used:
  1048 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1049 ;; Tracked objects:
  1050 ;;		On entry : B1F/0
  1051 ;;		On exit  : 0/0
  1052 ;;		Unchanged: 0/0
  1053 ;; Data sizes:     COMMON   BANK0   BANK1
  1054 ;;      Params:         0       0       0
  1055 ;;      Locals:         0       0       0
  1056 ;;      Temps:          0       2       0
  1057 ;;      Totals:         0       2       0
  1058 ;;Total ram usage:        2 bytes
  1059 ;; Hardware stack levels required when called:    7
  1060 ;; This function calls:
  1061 ;;		_SYSTEM_Initialize
  1062 ;;		_TMR1_SetInterruptHandler
  1063 ;;		_TMR1_StartTimer
  1064 ;;		_setState
  1065 ;; This function is called by:
  1066 ;;		Startup code after reset
  1067 ;; This function uses a non-reentrant model
  1068 ;;
  1069                           
  1070                           
  1071                           ;psect for function _main
  1072  002F                     _main:
  1073  002F                     l1065:	
  1074                           ;incstack = 0
  1075                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1076                           
  1077                           
  1078                           ;main.c: 69:     SYSTEM_Initialize();
  1079  002F  3181  2135  3180   	fcall	_SYSTEM_Initialize
  1080  0032                     l1067:
  1081                           
  1082                           ;main.c: 75:     (INTCONbits.GIE = 1);
  1083  0032  178B               	bsf	11,7	;volatile
  1084  0033                     l1069:
  1085                           
  1086                           ;main.c: 78:     (INTCONbits.PEIE = 1);
  1087  0033  170B               	bsf	11,6	;volatile
  1088                           
  1089                           ;main.c: 87:     TMR1_SetInterruptHandler(secondsTick);
  1090  0034  3069               	movlw	low _secondsTick
  1091  0035  00F7               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  1092  0036  3001               	movlw	high _secondsTick
  1093  0037  00F8               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  1094  0038  3181  2163  3180   	fcall	_TMR1_SetInterruptHandler
  1095  003B                     l1071:
  1096                           
  1097                           ;main.c: 90:     TMR1_StartTimer();
  1098  003B  3181  2172  3180   	fcall	_TMR1_StartTimer
  1099  003E                     l1073:
  1100                           
  1101                           ;main.c: 92:     setState(STATE_WAIT_TIME);
  1102  003E  3001               	movlw	1
  1103  003F  3180  20AC  3180   	fcall	_setState
  1104  0042  2894               	goto	l1095
  1105  0043                     l168:	
  1106                           ;main.c: 99:         {;main.c: 100:             case STATE_WAIT_TIME:
  1107                           
  1108                           
  1109                           ;main.c: 101:                 if(PORTAbits.RA5 && (currentSecondsTick >= demandedSeconds
      +                          Tick))
  1110  0043  1E8C               	btfss	12,5	;volatile
  1111  0044  2846               	goto	u301
  1112  0045  2847               	goto	u300
  1113  0046                     u301:
  1114  0046  2856               	goto	l169
  1115  0047                     u300:
  1116  0047                     l1075:
  1117  0047  0871               	movf	_demandedSecondsTick+1,w
  1118  0048  0273               	subwf	_currentSecondsTick+1,w	;volatile
  1119  0049  1D03               	skipz
  1120  004A  284D               	goto	u315
  1121  004B  0870               	movf	_demandedSecondsTick,w
  1122  004C  0272               	subwf	_currentSecondsTick,w	;volatile
  1123  004D                     u315:
  1124  004D  1C03               	skipc
  1125  004E  2850               	goto	u311
  1126  004F  2851               	goto	u310
  1127  0050                     u311:
  1128  0050  2856               	goto	l169
  1129  0051                     u310:
  1130  0051                     l1077:
  1131                           
  1132                           ;main.c: 102:                 {;main.c: 103:                     setState(STATE_OPEN_VAL
      +                          VE);
  1133  0051  3002               	movlw	2
  1134  0052  3180  20AC  3180   	fcall	_setState
  1135                           
  1136                           ;main.c: 104:                 }
  1137  0055  2894               	goto	l1095
  1138  0056                     l169:	
  1139                           ;main.c: 105:                 else if(PORTAbits.RA4)
  1140                           
  1141  0056  1E0C               	btfss	12,4	;volatile
  1142  0057  2859               	goto	u321
  1143  0058  285A               	goto	u320
  1144  0059                     u321:
  1145  0059  2894               	goto	l167
  1146  005A                     u320:
  1147  005A                     l1079:
  1148                           
  1149                           ;main.c: 106:                 {;main.c: 107:                     setState(STATE_CLOSE_VA
      +                          LVE);
  1150  005A  3003               	movlw	3
  1151  005B  3180  20AC  3180   	fcall	_setState
  1152  005E  2894               	goto	l1095
  1153  005F                     l173:	
  1154                           ;main.c: 111:             case STATE_OPEN_VALVE:
  1155                           
  1156                           
  1157                           ;main.c: 113:                 if(PORTAbits.RA4 || (currentSecondsTick >= demandedSeconds
      +                          Tick))
  1158  005F  1A0C               	btfsc	12,4	;volatile
  1159  0060  2862               	goto	u331
  1160  0061  2863               	goto	u330
  1161  0062                     u331:
  1162  0062  286D               	goto	l1083
  1163  0063                     u330:
  1164  0063                     l1081:
  1165  0063  0871               	movf	_demandedSecondsTick+1,w
  1166  0064  0273               	subwf	_currentSecondsTick+1,w	;volatile
  1167  0065  1D03               	skipz
  1168  0066  2869               	goto	u345
  1169  0067  0870               	movf	_demandedSecondsTick,w
  1170  0068  0272               	subwf	_currentSecondsTick,w	;volatile
  1171  0069                     u345:
  1172  0069  1C03               	skipc
  1173  006A  286C               	goto	u341
  1174  006B  286D               	goto	u340
  1175  006C                     u341:
  1176  006C  2894               	goto	l167
  1177  006D                     u340:
  1178  006D                     l1083:
  1179                           
  1180                           ;main.c: 114:                 {;main.c: 115:                     setState(STATE_CLOSE_VA
      +                          LVE);
  1181  006D  3003               	movlw	3
  1182  006E  3180  20AC  3180   	fcall	_setState
  1183  0071  2894               	goto	l1095
  1184  0072                     l177:	
  1185                           ;main.c: 119:             case STATE_CLOSE_VALVE:
  1186                           
  1187                           
  1188                           ;main.c: 120:                 if(PORTAbits.RA5)
  1189  0072  1E8C               	btfss	12,5	;volatile
  1190  0073  2875               	goto	u351
  1191  0074  2876               	goto	u350
  1192  0075                     u351:
  1193  0075  287B               	goto	l1087
  1194  0076                     u350:
  1195  0076                     l1085:
  1196                           
  1197                           ;main.c: 121:                 {;main.c: 122:                     setState(STATE_OPEN_VAL
      +                          VE);
  1198  0076  3002               	movlw	2
  1199  0077  3180  20AC  3180   	fcall	_setState
  1200                           
  1201                           ;main.c: 123:                 }
  1202  007A  2894               	goto	l1095
  1203  007B                     l1087:
  1204  007B  0871               	movf	_demandedSecondsTick+1,w
  1205  007C  0273               	subwf	_currentSecondsTick+1,w	;volatile
  1206  007D  1D03               	skipz
  1207  007E  2881               	goto	u365
  1208  007F  0870               	movf	_demandedSecondsTick,w
  1209  0080  0272               	subwf	_currentSecondsTick,w	;volatile
  1210  0081                     u365:
  1211  0081  1C03               	skipc
  1212  0082  2884               	goto	u361
  1213  0083  2885               	goto	u360
  1214  0084                     u361:
  1215  0084  2894               	goto	l167
  1216  0085                     u360:
  1217  0085                     l1089:
  1218                           
  1219                           ;main.c: 125:                 {;main.c: 126:                     setState(STATE_END);
  1220  0085  3004               	movlw	4
  1221  0086  3180  20AC  3180   	fcall	_setState
  1222  0089  2894               	goto	l1095
  1223  008A                     l181:	
  1224                           ;main.c: 130:             case STATE_END:
  1225                           
  1226                           
  1227                           ;main.c: 132:                 IOCAPbits.IOCAP5 = 1;
  1228  008A  0027               	movlb	7	; select bank7
  1229  008B  1691               	bsf	17,5	;volatile
  1230  008C  0063               	sleep	;# 
  1231                           
  1232                           ;main.c: 138:                 IOCAPbits.IOCAP5 = 0;
  1233  008D  0027               	movlb	7	; select bank7
  1234  008E  1291               	bcf	17,5	;volatile
  1235  008F                     l1091:
  1236                           
  1237                           ;main.c: 141:                 setState(STATE_WAIT_TIME);
  1238  008F  3001               	movlw	1
  1239  0090  3180  20AC  3180   	fcall	_setState
  1240                           
  1241                           ;main.c: 142:                 break;
  1242  0093  2894               	goto	l1095
  1243  0094                     l167:
  1244  0094                     l1095:
  1245  0094  0874               	movf	_currentState,w
  1246  0095  0020               	movlb	0	; select bank0
  1247  0096  00A2               	movwf	??_main
  1248  0097  01A3               	clrf	??_main+1
  1249                           
  1250                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1251                           ; Switch size 1, requested type "simple"
  1252                           ; Number of cases is 1, Range of values is 0 to 0
  1253                           ; switch strategies available:
  1254                           ; Name         Instructions Cycles
  1255                           ; simple_byte            4     3 (average)
  1256                           ; direct_byte            8     6 (fixed)
  1257                           ; jumptable            260     6 (fixed)
  1258                           ;	Chosen strategy is simple_byte
  1259  0098  0823               	movf	??_main+1,w
  1260  0099  3A00               	xorlw	0	; case 0
  1261  009A  1903               	skipnz
  1262  009B  289D               	goto	l1141
  1263  009C  2894               	goto	l1095
  1264  009D                     l1141:
  1265                           
  1266                           ; Switch size 1, requested type "simple"
  1267                           ; Number of cases is 4, Range of values is 1 to 4
  1268                           ; switch strategies available:
  1269                           ; Name         Instructions Cycles
  1270                           ; simple_byte           13     7 (average)
  1271                           ; direct_byte           17     9 (fixed)
  1272                           ; jumptable            263     9 (fixed)
  1273                           ;	Chosen strategy is simple_byte
  1274  009D  0822               	movf	??_main,w
  1275  009E  3A01               	xorlw	1	; case 1
  1276  009F  1903               	skipnz
  1277  00A0  2843               	goto	l168
  1278  00A1  3A03               	xorlw	3	; case 2
  1279  00A2  1903               	skipnz
  1280  00A3  285F               	goto	l173
  1281  00A4  3A01               	xorlw	1	; case 3
  1282  00A5  1903               	skipnz
  1283  00A6  2872               	goto	l177
  1284  00A7  3A07               	xorlw	7	; case 4
  1285  00A8  1903               	skipnz
  1286  00A9  288A               	goto	l181
  1287  00AA  2894               	goto	l1095
  1288  00AB  2826               	ljmp	start
  1289  00AC                     __end_of_main:
  1290                           
  1291                           	psect	text1
  1292  00AC                     __ptext1:	
  1293 ;; *************** function _setState *****************
  1294 ;; Defined at:
  1295 ;;		line 154 in file "main.c"
  1296 ;; Parameters:    Size  Location     Type
  1297 ;;  newState        1    wreg     enum E2961
  1298 ;; Auto vars:     Size  Location     Type
  1299 ;;  newState        1    4[COMMON] enum E2961
  1300 ;; Return value:  Size  Location     Type
  1301 ;;                  1    wreg      void 
  1302 ;; Registers used:
  1303 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1304 ;; Tracked objects:
  1305 ;;		On entry : 0/0
  1306 ;;		On exit  : 0/0
  1307 ;;		Unchanged: 0/0
  1308 ;; Data sizes:     COMMON   BANK0   BANK1
  1309 ;;      Params:         0       0       0
  1310 ;;      Locals:         1       0       0
  1311 ;;      Temps:          2       0       0
  1312 ;;      Totals:         3       0       0
  1313 ;;Total ram usage:        3 bytes
  1314 ;; Hardware stack levels used:    1
  1315 ;; Hardware stack levels required when called:    4
  1316 ;; This function calls:
  1317 ;;		Nothing
  1318 ;; This function is called by:
  1319 ;;		_main
  1320 ;; This function uses a non-reentrant model
  1321 ;;
  1322                           
  1323                           
  1324                           ;psect for function _setState
  1325  00AC                     _setState:
  1326                           
  1327                           ;incstack = 0
  1328                           ; Regs used in _setState: [wreg-fsr0h+status,2+status,0]
  1329                           ;setState@newState stored from wreg
  1330  00AC  00F9               	movwf	setState@newState
  1331  00AD                     l807:
  1332                           
  1333                           ;main.c: 154: void setState(states_t newState);main.c: 155: {;main.c: 156:     if(newSta
      +                          te == currentState)
  1334  00AD  0879               	movf	setState@newState,w
  1335  00AE  0674               	xorwf	_currentState,w
  1336  00AF  1D03               	skipz
  1337  00B0  28B2               	goto	u31
  1338  00B1  28B3               	goto	u30
  1339  00B2                     u31:
  1340  00B2  28B4               	goto	l811
  1341  00B3                     u30:
  1342  00B3  28F3               	goto	l188
  1343  00B4                     l811:
  1344                           
  1345                           ;main.c: 161:     currentSecondsTick = 0;
  1346  00B4  01F2               	clrf	_currentSecondsTick	;volatile
  1347  00B5  01F3               	clrf	_currentSecondsTick+1	;volatile
  1348                           
  1349                           ;main.c: 164:     switch(newState)
  1350  00B6  28D9               	goto	l821
  1351  00B7                     l191:	
  1352                           ;main.c: 167:             do { LATAbits.LATA1 = 0; } while(0);
  1353                           
  1354  00B7  0022               	movlb	2	; select bank2
  1355  00B8  108C               	bcf	12,1	;volatile
  1356  00B9                     l193:	
  1357                           ;main.c: 168:             do { LATAbits.LATA2 = 0; } while(0);
  1358                           
  1359  00B9  110C               	bcf	12,2	;volatile
  1360  00BA                     l813:
  1361                           
  1362                           ;main.c: 169:             demandedSecondsTick = currentSecondsTick + 2;
  1363  00BA  0872               	movf	_currentSecondsTick,w	;volatile
  1364  00BB  3E02               	addlw	2
  1365  00BC  00F0               	movwf	_demandedSecondsTick
  1366  00BD  3000               	movlw	0
  1367  00BE  3D73               	addwfc	_currentSecondsTick+1,w	;volatile
  1368  00BF  00F1               	movwf	_demandedSecondsTick+1
  1369                           
  1370                           ;main.c: 170:             break;
  1371  00C0  28EF               	goto	l823
  1372  00C1                     l197:	
  1373                           ;main.c: 173:             do { LATAbits.LATA1 = 1; } while(0);
  1374                           
  1375  00C1  0022               	movlb	2	; select bank2
  1376  00C2  148C               	bsf	12,1	;volatile
  1377  00C3                     l199:	
  1378                           ;main.c: 174:             do { LATAbits.LATA2 = 0; } while(0);
  1379                           
  1380  00C3  110C               	bcf	12,2	;volatile
  1381  00C4                     l815:
  1382                           
  1383                           ;main.c: 175:             demandedSecondsTick = currentSecondsTick + 1200;
  1384  00C4  0872               	movf	_currentSecondsTick,w	;volatile
  1385  00C5  3EB0               	addlw	176
  1386  00C6  00F0               	movwf	_demandedSecondsTick
  1387  00C7  3004               	movlw	4
  1388  00C8  3D73               	addwfc	_currentSecondsTick+1,w	;volatile
  1389  00C9  00F1               	movwf	_demandedSecondsTick+1
  1390                           
  1391                           ;main.c: 176:             break;
  1392  00CA  28EF               	goto	l823
  1393  00CB                     l202:	
  1394                           ;main.c: 179:             do { LATAbits.LATA1 = 0; } while(0);
  1395                           
  1396  00CB  0022               	movlb	2	; select bank2
  1397  00CC  108C               	bcf	12,1	;volatile
  1398  00CD                     l204:	
  1399                           ;main.c: 180:             do { LATAbits.LATA2 = 1; } while(0);
  1400                           
  1401  00CD  150C               	bsf	12,2	;volatile
  1402  00CE                     l817:
  1403                           
  1404                           ;main.c: 181:             demandedSecondsTick = currentSecondsTick + 10;
  1405  00CE  0872               	movf	_currentSecondsTick,w	;volatile
  1406  00CF  3E0A               	addlw	10
  1407  00D0  00F0               	movwf	_demandedSecondsTick
  1408  00D1  3000               	movlw	0
  1409  00D2  3D73               	addwfc	_currentSecondsTick+1,w	;volatile
  1410  00D3  00F1               	movwf	_demandedSecondsTick+1
  1411                           
  1412                           ;main.c: 182:             break;
  1413  00D4  28EF               	goto	l823
  1414  00D5                     l207:	
  1415                           ;main.c: 185:             do { LATAbits.LATA1 = 0; } while(0);
  1416                           
  1417  00D5  0022               	movlb	2	; select bank2
  1418  00D6  108C               	bcf	12,1	;volatile
  1419  00D7                     l209:	
  1420                           ;main.c: 186:             do { LATAbits.LATA2 = 0; } while(0);
  1421                           
  1422  00D7  110C               	bcf	12,2	;volatile
  1423  00D8  28EF               	goto	l823
  1424  00D9                     l821:
  1425  00D9  0879               	movf	setState@newState,w
  1426  00DA  00F7               	movwf	??_setState
  1427  00DB  01F8               	clrf	??_setState+1
  1428                           
  1429                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1430                           ; Switch size 1, requested type "simple"
  1431                           ; Number of cases is 1, Range of values is 0 to 0
  1432                           ; switch strategies available:
  1433                           ; Name         Instructions Cycles
  1434                           ; simple_byte            4     3 (average)
  1435                           ; direct_byte            8     6 (fixed)
  1436                           ; jumptable            260     6 (fixed)
  1437                           ;	Chosen strategy is simple_byte
  1438  00DC  0878               	movf	??_setState+1,w
  1439  00DD  3A00               	xorlw	0	; case 0
  1440  00DE  1903               	skipnz
  1441  00DF  28E1               	goto	l1143
  1442  00E0  28EF               	goto	l823
  1443  00E1                     l1143:
  1444                           
  1445                           ; Switch size 1, requested type "simple"
  1446                           ; Number of cases is 4, Range of values is 1 to 4
  1447                           ; switch strategies available:
  1448                           ; Name         Instructions Cycles
  1449                           ; simple_byte           13     7 (average)
  1450                           ; direct_byte           17     9 (fixed)
  1451                           ; jumptable            263     9 (fixed)
  1452                           ;	Chosen strategy is simple_byte
  1453  00E1  0877               	movf	??_setState,w
  1454  00E2  3A01               	xorlw	1	; case 1
  1455  00E3  1903               	skipnz
  1456  00E4  28B7               	goto	l191
  1457  00E5  3A03               	xorlw	3	; case 2
  1458  00E6  1903               	skipnz
  1459  00E7  28C1               	goto	l197
  1460  00E8  3A01               	xorlw	1	; case 3
  1461  00E9  1903               	skipnz
  1462  00EA  28CB               	goto	l202
  1463  00EB  3A07               	xorlw	7	; case 4
  1464  00EC  1903               	skipnz
  1465  00ED  28D5               	goto	l207
  1466  00EE  28EF               	goto	l823
  1467  00EF                     l823:
  1468                           
  1469                           ;main.c: 190:     currentState = newState;
  1470  00EF  0879               	movf	setState@newState,w
  1471  00F0  00F7               	movwf	??_setState
  1472  00F1  0877               	movf	??_setState,w
  1473  00F2  00F4               	movwf	_currentState
  1474  00F3                     l188:
  1475  00F3  0008               	return
  1476  00F4                     __end_of_setState:
  1477                           
  1478                           	psect	text2
  1479  0172                     __ptext2:	
  1480 ;; *************** function _TMR1_StartTimer *****************
  1481 ;; Defined at:
  1482 ;;		line 93 in file "mcc_generated_files/tmr1.c"
  1483 ;; Parameters:    Size  Location     Type
  1484 ;;		None
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;		None
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  1    wreg      void 
  1489 ;; Registers used:
  1490 ;;		None
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMMON   BANK0   BANK1
  1496 ;;      Params:         0       0       0
  1497 ;;      Locals:         0       0       0
  1498 ;;      Temps:          0       0       0
  1499 ;;      Totals:         0       0       0
  1500 ;;Total ram usage:        0 bytes
  1501 ;; Hardware stack levels used:    1
  1502 ;; Hardware stack levels required when called:    4
  1503 ;; This function calls:
  1504 ;;		Nothing
  1505 ;; This function is called by:
  1506 ;;		_main
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           
  1511                           ;psect for function _TMR1_StartTimer
  1512  0172                     _TMR1_StartTimer:
  1513  0172                     l801:	
  1514                           ;incstack = 0
  1515                           ; Regs used in _TMR1_StartTimer: []
  1516                           
  1517                           
  1518                           ;mcc_generated_files/tmr1.c: 96:     T1CONbits.TMR1ON = 1;
  1519  0172  0020               	movlb	0	; select bank0
  1520  0173  1418               	bsf	24,0	;volatile
  1521  0174                     l83:
  1522  0174  0008               	return
  1523  0175                     __end_of_TMR1_StartTimer:
  1524                           
  1525                           	psect	text3
  1526  0135                     __ptext3:	
  1527 ;; *************** function _SYSTEM_Initialize *****************
  1528 ;; Defined at:
  1529 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1530 ;; Parameters:    Size  Location     Type
  1531 ;;		None
  1532 ;; Auto vars:     Size  Location     Type
  1533 ;;		None
  1534 ;; Return value:  Size  Location     Type
  1535 ;;                  1    wreg      void 
  1536 ;; Registers used:
  1537 ;;		wreg, status,2, status,0, pclath, cstack
  1538 ;; Tracked objects:
  1539 ;;		On entry : 0/0
  1540 ;;		On exit  : 0/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMMON   BANK0   BANK1
  1543 ;;      Params:         0       0       0
  1544 ;;      Locals:         0       0       0
  1545 ;;      Temps:          0       0       0
  1546 ;;      Totals:         0       0       0
  1547 ;;Total ram usage:        0 bytes
  1548 ;; Hardware stack levels used:    1
  1549 ;; Hardware stack levels required when called:    6
  1550 ;; This function calls:
  1551 ;;		_OSCILLATOR_Initialize
  1552 ;;		_PIN_MANAGER_Initialize
  1553 ;;		_TMR1_Initialize
  1554 ;;		_WDT_Initialize
  1555 ;; This function is called by:
  1556 ;;		_main
  1557 ;; This function uses a non-reentrant model
  1558 ;;
  1559                           
  1560                           
  1561                           ;psect for function _SYSTEM_Initialize
  1562  0135                     _SYSTEM_Initialize:
  1563  0135                     l969:	
  1564                           ;incstack = 0
  1565                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1566                           
  1567                           
  1568                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1569  0135  3181  210C  3181   	fcall	_PIN_MANAGER_Initialize
  1570                           
  1571                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1572  0138  3181  215C  3181   	fcall	_OSCILLATOR_Initialize
  1573                           
  1574                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  1575  013B  3181  216E  3181   	fcall	_WDT_Initialize
  1576                           
  1577                           ;mcc_generated_files/mcc.c: 56:     TMR1_Initialize();
  1578  013E  3180  20F4  3181   	fcall	_TMR1_Initialize
  1579  0141                     l19:
  1580  0141  0008               	return
  1581  0142                     __end_of_SYSTEM_Initialize:
  1582                           
  1583                           	psect	text4
  1584  016E                     __ptext4:	
  1585 ;; *************** function _WDT_Initialize *****************
  1586 ;; Defined at:
  1587 ;;		line 69 in file "mcc_generated_files/mcc.c"
  1588 ;; Parameters:    Size  Location     Type
  1589 ;;		None
  1590 ;; Auto vars:     Size  Location     Type
  1591 ;;		None
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  1    wreg      void 
  1594 ;; Registers used:
  1595 ;;		wreg
  1596 ;; Tracked objects:
  1597 ;;		On entry : 0/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMMON   BANK0   BANK1
  1601 ;;      Params:         0       0       0
  1602 ;;      Locals:         0       0       0
  1603 ;;      Temps:          0       0       0
  1604 ;;      Totals:         0       0       0
  1605 ;;Total ram usage:        0 bytes
  1606 ;; Hardware stack levels used:    1
  1607 ;; Hardware stack levels required when called:    4
  1608 ;; This function calls:
  1609 ;;		Nothing
  1610 ;; This function is called by:
  1611 ;;		_SYSTEM_Initialize
  1612 ;; This function uses a non-reentrant model
  1613 ;;
  1614                           
  1615                           
  1616                           ;psect for function _WDT_Initialize
  1617  016E                     _WDT_Initialize:
  1618  016E                     l763:	
  1619                           ;incstack = 0
  1620                           ; Regs used in _WDT_Initialize: [wreg]
  1621                           
  1622                           
  1623                           ;mcc_generated_files/mcc.c: 72:     WDTCON = 0x16;
  1624  016E  3016               	movlw	22
  1625  016F  0021               	movlb	1	; select bank1
  1626  0170  0097               	movwf	23	;volatile
  1627  0171                     l25:
  1628  0171  0008               	return
  1629  0172                     __end_of_WDT_Initialize:
  1630                           
  1631                           	psect	text5
  1632  00F4                     __ptext5:	
  1633 ;; *************** function _TMR1_Initialize *****************
  1634 ;; Defined at:
  1635 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  1636 ;; Parameters:    Size  Location     Type
  1637 ;;		None
  1638 ;; Auto vars:     Size  Location     Type
  1639 ;;		None
  1640 ;; Return value:  Size  Location     Type
  1641 ;;                  1    wreg      void 
  1642 ;; Registers used:
  1643 ;;		wreg, status,2, status,0, pclath, cstack
  1644 ;; Tracked objects:
  1645 ;;		On entry : 0/0
  1646 ;;		On exit  : 0/0
  1647 ;;		Unchanged: 0/0
  1648 ;; Data sizes:     COMMON   BANK0   BANK1
  1649 ;;      Params:         0       0       0
  1650 ;;      Locals:         0       0       0
  1651 ;;      Temps:          0       0       0
  1652 ;;      Totals:         0       0       0
  1653 ;;Total ram usage:        0 bytes
  1654 ;; Hardware stack levels used:    1
  1655 ;; Hardware stack levels required when called:    5
  1656 ;; This function calls:
  1657 ;;		_TMR1_SetInterruptHandler
  1658 ;; This function is called by:
  1659 ;;		_SYSTEM_Initialize
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           
  1664                           ;psect for function _TMR1_Initialize
  1665  00F4                     _TMR1_Initialize:
  1666  00F4                     l935:	
  1667                           ;incstack = 0
  1668                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1669                           
  1670                           
  1671                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  1672  00F4  0020               	movlb	0	; select bank0
  1673  00F5  0199               	clrf	25	;volatile
  1674  00F6                     l937:
  1675                           
  1676                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x86;
  1677  00F6  3086               	movlw	134
  1678  00F7  0097               	movwf	23	;volatile
  1679  00F8                     l939:
  1680                           
  1681                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xE8;
  1682  00F8  30E8               	movlw	232
  1683  00F9  0096               	movwf	22	;volatile
  1684  00FA                     l941:
  1685                           
  1686                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  1687  00FA  1011               	bcf	17,0	;volatile
  1688  00FB                     l943:
  1689                           
  1690                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  1691  00FB  0817               	movf	23,w	;volatile
  1692  00FC  00FB               	movwf	_timer1ReloadVal+1	;volatile
  1693  00FD  0816               	movf	22,w	;volatile
  1694  00FE  00FA               	movwf	_timer1ReloadVal	;volatile
  1695  00FF                     l945:
  1696                           
  1697                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  1698  00FF  0021               	movlb	1	; select bank1
  1699  0100  1411               	bsf	17,0	;volatile
  1700  0101                     l947:
  1701                           
  1702                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  1703  0101  3075               	movlw	low _TMR1_DefaultInterruptHandler
  1704  0102  00F7               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  1705  0103  3001               	movlw	high _TMR1_DefaultInterruptHandler
  1706  0104  00F8               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  1707  0105  3181  2163  3180   	fcall	_TMR1_SetInterruptHandler
  1708  0108                     l949:
  1709                           
  1710                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x41;
  1711  0108  3041               	movlw	65
  1712  0109  0020               	movlb	0	; select bank0
  1713  010A  0098               	movwf	24	;volatile
  1714  010B                     l80:
  1715  010B  0008               	return
  1716  010C                     __end_of_TMR1_Initialize:
  1717                           
  1718                           	psect	text6
  1719  0163                     __ptext6:	
  1720 ;; *************** function _TMR1_SetInterruptHandler *****************
  1721 ;; Defined at:
  1722 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  1725 ;;		 -> secondsTick(1), TMR1_DefaultInterruptHandler(1), 
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;		None
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  1    wreg      void 
  1730 ;; Registers used:
  1731 ;;		wreg
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMMON   BANK0   BANK1
  1737 ;;      Params:         2       0       0
  1738 ;;      Locals:         0       0       0
  1739 ;;      Temps:          0       0       0
  1740 ;;      Totals:         2       0       0
  1741 ;;Total ram usage:        2 bytes
  1742 ;; Hardware stack levels used:    1
  1743 ;; Hardware stack levels required when called:    4
  1744 ;; This function calls:
  1745 ;;		Nothing
  1746 ;; This function is called by:
  1747 ;;		_TMR1_Initialize
  1748 ;;		_main
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           
  1752                           
  1753                           ;psect for function _TMR1_SetInterruptHandler
  1754  0163                     _TMR1_SetInterruptHandler:
  1755  0163                     l931:	
  1756                           ;incstack = 0
  1757                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  1758                           
  1759                           
  1760                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  1761  0163  0878               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  1762  0164  0020               	movlb	0	; select bank0
  1763  0165  00A1               	movwf	_TMR1_InterruptHandler+1
  1764  0166  0877               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  1765  0167  00A0               	movwf	_TMR1_InterruptHandler
  1766  0168                     l113:
  1767  0168  0008               	return
  1768  0169                     __end_of_TMR1_SetInterruptHandler:
  1769                           
  1770                           	psect	text7
  1771  010C                     __ptext7:	
  1772 ;; *************** function _PIN_MANAGER_Initialize *****************
  1773 ;; Defined at:
  1774 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1775 ;; Parameters:    Size  Location     Type
  1776 ;;		None
  1777 ;; Auto vars:     Size  Location     Type
  1778 ;;		None
  1779 ;; Return value:  Size  Location     Type
  1780 ;;                  1    wreg      void 
  1781 ;; Registers used:
  1782 ;;		wreg, status,2
  1783 ;; Tracked objects:
  1784 ;;		On entry : 0/0
  1785 ;;		On exit  : 0/0
  1786 ;;		Unchanged: 0/0
  1787 ;; Data sizes:     COMMON   BANK0   BANK1
  1788 ;;      Params:         0       0       0
  1789 ;;      Locals:         0       0       0
  1790 ;;      Temps:          0       0       0
  1791 ;;      Totals:         0       0       0
  1792 ;;Total ram usage:        0 bytes
  1793 ;; Hardware stack levels used:    1
  1794 ;; Hardware stack levels required when called:    4
  1795 ;; This function calls:
  1796 ;;		Nothing
  1797 ;; This function is called by:
  1798 ;;		_SYSTEM_Initialize
  1799 ;; This function uses a non-reentrant model
  1800 ;;
  1801                           
  1802                           
  1803                           ;psect for function _PIN_MANAGER_Initialize
  1804  010C                     _PIN_MANAGER_Initialize:
  1805  010C                     l743:	
  1806                           ;incstack = 0
  1807                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1808                           
  1809                           
  1810                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1811  010C  0022               	movlb	2	; select bank2
  1812  010D  018C               	clrf	12	;volatile
  1813  010E                     l745:
  1814                           
  1815                           ;mcc_generated_files/pin_manager.c: 65:     TRISA = 0x39;
  1816  010E  3039               	movlw	57
  1817  010F  0021               	movlb	1	; select bank1
  1818  0110  008C               	movwf	12	;volatile
  1819  0111                     l747:
  1820                           
  1821                           ;mcc_generated_files/pin_manager.c: 70:     ANSELA = 0x07;
  1822  0111  3007               	movlw	7
  1823  0112  0023               	movlb	3	; select bank3
  1824  0113  008C               	movwf	12	;volatile
  1825                           
  1826                           ;mcc_generated_files/pin_manager.c: 75:     WPUA = 0x00;
  1827  0114  0024               	movlb	4	; select bank4
  1828  0115  018C               	clrf	12	;volatile
  1829  0116                     l749:
  1830                           
  1831                           ;mcc_generated_files/pin_manager.c: 76:     OPTION_REGbits.nWPUEN = 1;
  1832  0116  0021               	movlb	1	; select bank1
  1833  0117  1795               	bsf	21,7	;volatile
  1834                           
  1835                           ;mcc_generated_files/pin_manager.c: 81:     ODCONA = 0x00;
  1836  0118  0025               	movlb	5	; select bank5
  1837  0119  018C               	clrf	12	;volatile
  1838  011A                     l751:
  1839                           
  1840                           ;mcc_generated_files/pin_manager.c: 86:     SLRCONA = 0x37;
  1841  011A  3037               	movlw	55
  1842  011B  0026               	movlb	6	; select bank6
  1843  011C  008C               	movwf	12	;volatile
  1844  011D                     l753:
  1845                           
  1846                           ;mcc_generated_files/pin_manager.c: 91:     INLVLA = 0x3F;
  1847  011D  303F               	movlw	63
  1848  011E  0027               	movlb	7	; select bank7
  1849  011F  008C               	movwf	12	;volatile
  1850                           
  1851                           ;mcc_generated_files/pin_manager.c: 96:     APFCON = 0x00;
  1852  0120  0022               	movlb	2	; select bank2
  1853  0121  019D               	clrf	29	;volatile
  1854  0122                     l755:
  1855                           
  1856                           ;mcc_generated_files/pin_manager.c: 103:     INTCONbits.IOCIE = 1;
  1857  0122  158B               	bsf	11,3	;volatile
  1858  0123                     l48:
  1859  0123  0008               	return
  1860  0124                     __end_of_PIN_MANAGER_Initialize:
  1861                           
  1862                           	psect	text8
  1863  015C                     __ptext8:	
  1864 ;; *************** function _OSCILLATOR_Initialize *****************
  1865 ;; Defined at:
  1866 ;;		line 59 in file "mcc_generated_files/mcc.c"
  1867 ;; Parameters:    Size  Location     Type
  1868 ;;		None
  1869 ;; Auto vars:     Size  Location     Type
  1870 ;;		None
  1871 ;; Return value:  Size  Location     Type
  1872 ;;                  1    wreg      void 
  1873 ;; Registers used:
  1874 ;;		wreg, status,2
  1875 ;; Tracked objects:
  1876 ;;		On entry : 0/0
  1877 ;;		On exit  : 0/0
  1878 ;;		Unchanged: 0/0
  1879 ;; Data sizes:     COMMON   BANK0   BANK1
  1880 ;;      Params:         0       0       0
  1881 ;;      Locals:         0       0       0
  1882 ;;      Temps:          0       0       0
  1883 ;;      Totals:         0       0       0
  1884 ;;Total ram usage:        0 bytes
  1885 ;; Hardware stack levels used:    1
  1886 ;; Hardware stack levels required when called:    4
  1887 ;; This function calls:
  1888 ;;		Nothing
  1889 ;; This function is called by:
  1890 ;;		_SYSTEM_Initialize
  1891 ;; This function uses a non-reentrant model
  1892 ;;
  1893                           
  1894                           
  1895                           ;psect for function _OSCILLATOR_Initialize
  1896  015C                     _OSCILLATOR_Initialize:
  1897  015C                     l757:	
  1898                           ;incstack = 0
  1899                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1900                           
  1901                           
  1902                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x02;
  1903  015C  3002               	movlw	2
  1904  015D  0021               	movlb	1	; select bank1
  1905  015E  0099               	movwf	25	;volatile
  1906  015F                     l759:
  1907                           
  1908                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
  1909  015F  0198               	clrf	24	;volatile
  1910  0160                     l761:
  1911                           
  1912                           ;mcc_generated_files/mcc.c: 66:     BORCON = 0x00;
  1913  0160  0022               	movlb	2	; select bank2
  1914  0161  0196               	clrf	22	;volatile
  1915  0162                     l22:
  1916  0162  0008               	return
  1917  0163                     __end_of_OSCILLATOR_Initialize:
  1918                           
  1919                           	psect	intentry
  1920  0004                     __pintentry:	
  1921 ;; *************** function _INTERRUPT_InterruptManager *****************
  1922 ;; Defined at:
  1923 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;		None
  1926 ;; Auto vars:     Size  Location     Type
  1927 ;;		None
  1928 ;; Return value:  Size  Location     Type
  1929 ;;                  1    wreg      void 
  1930 ;; Registers used:
  1931 ;;		wreg, status,2, status,0, pclath, cstack
  1932 ;; Tracked objects:
  1933 ;;		On entry : 0/0
  1934 ;;		On exit  : 0/0
  1935 ;;		Unchanged: 0/0
  1936 ;; Data sizes:     COMMON   BANK0   BANK1
  1937 ;;      Params:         0       0       0
  1938 ;;      Locals:         0       0       0
  1939 ;;      Temps:          0       0       0
  1940 ;;      Totals:         0       0       0
  1941 ;;Total ram usage:        0 bytes
  1942 ;; Hardware stack levels used:    1
  1943 ;; Hardware stack levels required when called:    3
  1944 ;; This function calls:
  1945 ;;		_PIN_MANAGER_IOC
  1946 ;;		_TMR1_ISR
  1947 ;; This function is called by:
  1948 ;;		Interrupt level 1
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           
  1952  0004                     _INTERRUPT_InterruptManager:
  1953                           
  1954                           ;incstack = 0
  1955  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1956                           
  1957                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  1958  0005  3180               	pagesel	$
  1959  0006                     i1l977:
  1960                           
  1961                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
  1962  0006  1D8B               	btfss	11,3	;volatile
  1963  0007  2809               	goto	u18_21
  1964  0008  280A               	goto	u18_20
  1965  0009                     u18_21:
  1966  0009  2812               	goto	i1l131
  1967  000A                     u18_20:
  1968  000A                     i1l979:
  1969  000A  1C0B               	btfss	11,0	;volatile
  1970  000B  280D               	goto	u19_21
  1971  000C  280E               	goto	u19_20
  1972  000D                     u19_21:
  1973  000D  2812               	goto	i1l131
  1974  000E                     u19_20:
  1975  000E                     i1l981:
  1976                           
  1977                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
  1978  000E  3181  2176  3180   	fcall	_PIN_MANAGER_IOC
  1979                           
  1980                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  1981  0011  2824               	goto	i1l137
  1982  0012                     i1l131:	
  1983                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  1984                           
  1985  0012  1F0B               	btfss	11,6	;volatile
  1986  0013  2815               	goto	u20_21
  1987  0014  2816               	goto	u20_20
  1988  0015                     u20_21:
  1989  0015  2824               	goto	i1l137
  1990  0016                     u20_20:
  1991  0016                     i1l983:
  1992                           
  1993                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  1994  0016  0021               	movlb	1	; select bank1
  1995  0017  1C11               	btfss	17,0	;volatile
  1996  0018  281A               	goto	u21_21
  1997  0019  281B               	goto	u21_20
  1998  001A                     u21_21:
  1999  001A  2824               	goto	i1l136
  2000  001B                     u21_20:
  2001  001B                     i1l985:
  2002  001B  0020               	movlb	0	; select bank0
  2003  001C  1C11               	btfss	17,0	;volatile
  2004  001D  281F               	goto	u22_21
  2005  001E  2820               	goto	u22_20
  2006  001F                     u22_21:
  2007  001F  2824               	goto	i1l136
  2008  0020                     u22_20:
  2009  0020                     i1l987:
  2010                           
  2011                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR1_ISR();
  2012  0020  3181  2142  3180   	fcall	_TMR1_ISR
  2013                           
  2014                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  2015  0023  2824               	goto	i1l137
  2016  0024                     i1l136:	
  2017                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
  2018                           
  2019  0024                     i1l137:
  2020  0024  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2021  0025  0009               	retfie
  2022  0026                     __end_of_INTERRUPT_InterruptManager:
  2023                           
  2024                           	psect	text10
  2025  0142                     __ptext10:	
  2026 ;; *************** function _TMR1_ISR *****************
  2027 ;; Defined at:
  2028 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  2029 ;; Parameters:    Size  Location     Type
  2030 ;;		None
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;		None
  2033 ;; Return value:  Size  Location     Type
  2034 ;;                  1    wreg      void 
  2035 ;; Registers used:
  2036 ;;		wreg, status,2, status,0, pclath, cstack
  2037 ;; Tracked objects:
  2038 ;;		On entry : 0/0
  2039 ;;		On exit  : 0/0
  2040 ;;		Unchanged: 0/0
  2041 ;; Data sizes:     COMMON   BANK0   BANK1
  2042 ;;      Params:         0       0       0
  2043 ;;      Locals:         0       0       0
  2044 ;;      Temps:          0       0       0
  2045 ;;      Totals:         0       0       0
  2046 ;;Total ram usage:        0 bytes
  2047 ;; Hardware stack levels used:    1
  2048 ;; Hardware stack levels required when called:    2
  2049 ;; This function calls:
  2050 ;;		_TMR1_CallBack
  2051 ;;		_TMR1_WriteTimer
  2052 ;; This function is called by:
  2053 ;;		_INTERRUPT_InterruptManager
  2054 ;; This function uses a non-reentrant model
  2055 ;;
  2056                           
  2057                           
  2058                           ;psect for function _TMR1_ISR
  2059  0142                     _TMR1_ISR:
  2060  0142                     i1l971:	
  2061                           ;incstack = 0
  2062                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  2063                           
  2064                           
  2065                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  2066  0142  0020               	movlb	0	; select bank0
  2067  0143  1011               	bcf	17,0	;volatile
  2068  0144                     i1l973:
  2069                           
  2070                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  2071  0144  087B               	movf	_timer1ReloadVal+1,w	;volatile
  2072  0145  00F6               	movwf	TMR1_WriteTimer@timerVal+1
  2073  0146  087A               	movf	_timer1ReloadVal,w	;volatile
  2074  0147  00F5               	movwf	TMR1_WriteTimer@timerVal
  2075  0148  3181  2124  3181   	fcall	_TMR1_WriteTimer
  2076                           
  2077                           ;mcc_generated_files/tmr1.c: 166:     TMR1_CallBack();
  2078  014B  3181  214F  3181   	fcall	_TMR1_CallBack
  2079  014E                     i1l106:
  2080  014E  0008               	return
  2081  014F                     __end_of_TMR1_ISR:
  2082                           
  2083                           	psect	text11
  2084  0124                     __ptext11:	
  2085 ;; *************** function _TMR1_WriteTimer *****************
  2086 ;; Defined at:
  2087 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  2088 ;; Parameters:    Size  Location     Type
  2089 ;;  timerVal        2    0[COMMON] unsigned short 
  2090 ;; Auto vars:     Size  Location     Type
  2091 ;;		None
  2092 ;; Return value:  Size  Location     Type
  2093 ;;                  1    wreg      void 
  2094 ;; Registers used:
  2095 ;;		wreg, status,2
  2096 ;; Tracked objects:
  2097 ;;		On entry : 0/0
  2098 ;;		On exit  : 0/0
  2099 ;;		Unchanged: 0/0
  2100 ;; Data sizes:     COMMON   BANK0   BANK1
  2101 ;;      Params:         2       0       0
  2102 ;;      Locals:         0       0       0
  2103 ;;      Temps:          0       0       0
  2104 ;;      Totals:         2       0       0
  2105 ;;Total ram usage:        2 bytes
  2106 ;; Hardware stack levels used:    1
  2107 ;; This function calls:
  2108 ;;		Nothing
  2109 ;; This function is called by:
  2110 ;;		_TMR1_ISR
  2111 ;;		_TMR1_Reload
  2112 ;; This function uses a non-reentrant model
  2113 ;;
  2114                           
  2115                           
  2116                           ;psect for function _TMR1_WriteTimer
  2117  0124                     _TMR1_WriteTimer:
  2118  0124                     i1l951:	
  2119                           ;incstack = 0
  2120                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  2121                           
  2122                           
  2123                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  2124  0124  0020               	movlb	0	; select bank0
  2125  0125  1D18               	btfss	24,2	;volatile
  2126  0126  2928               	goto	u16_21
  2127  0127  2929               	goto	u16_20
  2128  0128                     u16_21:
  2129  0128  2930               	goto	i1l961
  2130  0129                     u16_20:
  2131  0129                     i1l953:
  2132                           
  2133                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  2134  0129  1018               	bcf	24,0	;volatile
  2135  012A                     i1l955:
  2136                           
  2137                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (timerVal >> 8);
  2138  012A  0876               	movf	TMR1_WriteTimer@timerVal+1,w
  2139  012B  0097               	movwf	23	;volatile
  2140  012C                     i1l957:
  2141                           
  2142                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = timerVal;
  2143  012C  0875               	movf	TMR1_WriteTimer@timerVal,w
  2144  012D  0096               	movwf	22	;volatile
  2145  012E                     i1l959:
  2146                           
  2147                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  2148  012E  1418               	bsf	24,0	;volatile
  2149                           
  2150                           ;mcc_generated_files/tmr1.c: 133:     }
  2151  012F  2934               	goto	i1l94
  2152  0130                     i1l961:
  2153                           
  2154                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (timerVal >> 8);
  2155  0130  0876               	movf	TMR1_WriteTimer@timerVal+1,w
  2156  0131  0097               	movwf	23	;volatile
  2157  0132                     i1l963:
  2158                           
  2159                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = timerVal;
  2160  0132  0875               	movf	TMR1_WriteTimer@timerVal,w
  2161  0133  0096               	movwf	22	;volatile
  2162  0134                     i1l94:
  2163  0134  0008               	return
  2164  0135                     __end_of_TMR1_WriteTimer:
  2165                           
  2166                           	psect	text12
  2167  014F                     __ptext12:	
  2168 ;; *************** function _TMR1_CallBack *****************
  2169 ;; Defined at:
  2170 ;;		line 169 in file "mcc_generated_files/tmr1.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;		None
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;		None
  2175 ;; Return value:  Size  Location     Type
  2176 ;;                  1    wreg      void 
  2177 ;; Registers used:
  2178 ;;		wreg, status,2, status,0, pclath, cstack
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMMON   BANK0   BANK1
  2184 ;;      Params:         0       0       0
  2185 ;;      Locals:         0       0       0
  2186 ;;      Temps:          0       0       0
  2187 ;;      Totals:         0       0       0
  2188 ;;Total ram usage:        0 bytes
  2189 ;; Hardware stack levels used:    1
  2190 ;; Hardware stack levels required when called:    1
  2191 ;; This function calls:
  2192 ;;		Absolute function
  2193 ;;		_TMR1_DefaultInterruptHandler
  2194 ;;		_secondsTick
  2195 ;; This function is called by:
  2196 ;;		_TMR1_ISR
  2197 ;; This function uses a non-reentrant model
  2198 ;;
  2199                           
  2200                           
  2201                           ;psect for function _TMR1_CallBack
  2202  014F                     _TMR1_CallBack:
  2203  014F                     i1l965:	
  2204                           ;incstack = 0
  2205                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
  2206                           
  2207                           
  2208                           ;mcc_generated_files/tmr1.c: 172:     if(TMR1_InterruptHandler)
  2209  014F  0020               	movlb	0	; select bank0
  2210  0150  0820               	movf	_TMR1_InterruptHandler,w
  2211  0151  0421               	iorwf	_TMR1_InterruptHandler+1,w
  2212  0152  1903               	btfsc	3,2
  2213  0153  2955               	goto	u17_21
  2214  0154  2956               	goto	u17_20
  2215  0155                     u17_21:
  2216  0155  295B               	goto	i1l110
  2217  0156                     u17_20:
  2218  0156                     i1l967:
  2219                           
  2220                           ;mcc_generated_files/tmr1.c: 173:     {;mcc_generated_files/tmr1.c: 174:         TMR1_In
      +                          terruptHandler();
  2221  0156  0821               	movf	_TMR1_InterruptHandler+1,w
  2222  0157  008A               	movwf	10
  2223  0158  0820               	movf	_TMR1_InterruptHandler,w
  2224  0159  000A               	callw
  2225  015A  3181               	pagesel	$
  2226  015B                     i1l110:
  2227  015B  0008               	return
  2228  015C                     __end_of_TMR1_CallBack:
  2229                           
  2230                           	psect	text13
  2231  0175                     __ptext13:	
  2232 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  2233 ;; Defined at:
  2234 ;;		line 182 in file "mcc_generated_files/tmr1.c"
  2235 ;; Parameters:    Size  Location     Type
  2236 ;;		None
  2237 ;; Auto vars:     Size  Location     Type
  2238 ;;		None
  2239 ;; Return value:  Size  Location     Type
  2240 ;;                  1    wreg      void 
  2241 ;; Registers used:
  2242 ;;		None
  2243 ;; Tracked objects:
  2244 ;;		On entry : 0/0
  2245 ;;		On exit  : 0/0
  2246 ;;		Unchanged: 0/0
  2247 ;; Data sizes:     COMMON   BANK0   BANK1
  2248 ;;      Params:         0       0       0
  2249 ;;      Locals:         0       0       0
  2250 ;;      Temps:          0       0       0
  2251 ;;      Totals:         0       0       0
  2252 ;;Total ram usage:        0 bytes
  2253 ;; Hardware stack levels used:    1
  2254 ;; This function calls:
  2255 ;;		Nothing
  2256 ;; This function is called by:
  2257 ;;		_TMR1_Initialize
  2258 ;;		_TMR1_CallBack
  2259 ;; This function uses a non-reentrant model
  2260 ;;
  2261                           
  2262                           
  2263                           ;psect for function _TMR1_DefaultInterruptHandler
  2264  0175                     _TMR1_DefaultInterruptHandler:
  2265  0175                     i1l116:	
  2266                           ;incstack = 0
  2267                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  2268                           
  2269  0175  0008               	return
  2270  0176                     __end_of_TMR1_DefaultInterruptHandler:
  2271                           
  2272                           	psect	text14
  2273  0169                     __ptext14:	
  2274 ;; *************** function _secondsTick *****************
  2275 ;; Defined at:
  2276 ;;		line 194 in file "main.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;		None
  2279 ;; Auto vars:     Size  Location     Type
  2280 ;;		None
  2281 ;; Return value:  Size  Location     Type
  2282 ;;                  1    wreg      void 
  2283 ;; Registers used:
  2284 ;;		wreg
  2285 ;; Tracked objects:
  2286 ;;		On entry : 0/0
  2287 ;;		On exit  : 0/0
  2288 ;;		Unchanged: 0/0
  2289 ;; Data sizes:     COMMON   BANK0   BANK1
  2290 ;;      Params:         0       0       0
  2291 ;;      Locals:         0       0       0
  2292 ;;      Temps:          0       0       0
  2293 ;;      Totals:         0       0       0
  2294 ;;Total ram usage:        0 bytes
  2295 ;; Hardware stack levels used:    1
  2296 ;; This function calls:
  2297 ;;		Nothing
  2298 ;; This function is called by:
  2299 ;;		_main
  2300 ;;		_TMR1_CallBack
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           
  2304                           
  2305                           ;psect for function _secondsTick
  2306  0169                     _secondsTick:
  2307  0169                     i1l933:	
  2308                           ;incstack = 0
  2309                           ; Regs used in _secondsTick: [wreg]
  2310                           
  2311                           
  2312                           ;main.c: 196:     currentSecondsTick++;
  2313  0169  3001               	movlw	1
  2314  016A  07F2               	addwf	_currentSecondsTick,f	;volatile
  2315  016B  3000               	movlw	0
  2316  016C  3DF3               	addwfc	_currentSecondsTick+1,f	;volatile
  2317  016D                     i1l213:
  2318  016D  0008               	return
  2319  016E                     __end_of_secondsTick:
  2320                           
  2321                           	psect	text15
  2322  0176                     __ptext15:	
  2323 ;; *************** function _PIN_MANAGER_IOC *****************
  2324 ;; Defined at:
  2325 ;;		line 107 in file "mcc_generated_files/pin_manager.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;		None
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;		None
  2330 ;; Return value:  Size  Location     Type
  2331 ;;                  1    wreg      void 
  2332 ;; Registers used:
  2333 ;;		None
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMMON   BANK0   BANK1
  2339 ;;      Params:         0       0       0
  2340 ;;      Locals:         0       0       0
  2341 ;;      Temps:          0       0       0
  2342 ;;      Totals:         0       0       0
  2343 ;;Total ram usage:        0 bytes
  2344 ;; Hardware stack levels used:    1
  2345 ;; This function calls:
  2346 ;;		Nothing
  2347 ;; This function is called by:
  2348 ;;		_INTERRUPT_InterruptManager
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352                           
  2353                           ;psect for function _PIN_MANAGER_IOC
  2354  0176                     _PIN_MANAGER_IOC:
  2355  0176                     i1l51:	
  2356                           ;incstack = 0
  2357                           ; Regs used in _PIN_MANAGER_IOC: []
  2358                           
  2359  0176  0008               	return
  2360  0177                     __end_of_PIN_MANAGER_IOC:
  2361  007E                     btemp	set	126	;btemp
  2362  007E                     int$flags	set	126
  2363  007E                     wtemp0	set	126
  2364                           
  2365                           	psect	config
  2366                           
  2367                           ;Config register CONFIG1 @ 0x8007
  2368                           ;	
  2369                           ;	FOSC = INTOSC, INTOSC oscillator; I/O function on CLKIN pin
  2370                           ;	Watchdog Timer Enable
  2371                           ;	WDTE = OFF, WDT disabled
  2372                           ;	Power-up Timer Enable
  2373                           ;	PWRTE = OFF, PWRT disabled
  2374                           ;	MCLR Pin Function Select
  2375                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2376                           ;	Flash Program Memory Code Protection
  2377                           ;	CP = ON, Program memory code protection is enabled
  2378                           ;	Brown-out Reset Enable
  2379                           ;	BOREN = ON, Brown-out Reset enabled
  2380                           ;	Clock Out Enable
  2381                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2382  8007                     	org	32775
  2383  8007  3F64               	dw	16228
  2384                           
  2385                           ;Config register CONFIG2 @ 0x8008
  2386                           ;	Flash Memory Self-Write Protection
  2387                           ;	WRT = OFF, Write protection off
  2388                           ;	PLL Enable
  2389                           ;	PLLEN = OFF, 4x PLL disabled
  2390                           ;	Stack Overflow/Underflow Reset Enable
  2391                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2392                           ;	Brown-out Reset Voltage Selection
  2393                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2394                           ;	Low Power Brown-out Reset enable bit
  2395                           ;	LPBOREN = OFF, LPBOR is disabled
  2396                           ;	Low-Voltage Programming Enable
  2397                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  2398  8008                     	org	32776
  2399  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      12
    BANK0            80      2       4
    BANK1            32      0       0

Pointer List with Targets:

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> secondsTick(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> secondsTick(), Absolute function(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_setState
    _TMR1_Initialize->_TMR1_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     393
                                              0 BANK0      2     2      0
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
                           _setState
 ---------------------------------------------------------------------------------
 (1) _setState                                             3     3      0      45
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0     240
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     240
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                        _secondsTick *
 ---------------------------------------------------------------------------------
 (7) _secondsTick                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _PIN_MANAGER_IOC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize
   _TMR1_SetInterruptHandler
   _TMR1_StartTimer
   _setState

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _secondsTick *
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      10       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2       4       6        5.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      10       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Jan 18 16:23:02 2021

                                      l22 0162                                        l25 0171  
                                      l19 0141                                        l48 0123  
                                      l80 010B                                        l83 0174  
                                      u30 00B3                                        u31 00B2  
                                     l113 0168                                       l202 00CB  
                                     l204 00CD                                       l207 00D5  
                                     l209 00D7                                       l181 008A  
                                     l173 005F                                       l191 00B7  
                                     l167 0094                                       l168 0043  
                                     l193 00B9                                       l177 0072  
                                     l169 0056                                       l188 00F3  
                                     l197 00C1                                       l199 00C3  
                                     l801 0172                                       l811 00B4  
                                     l813 00BA                                       l821 00D9  
                                     l751 011A                                       l743 010C  
                                     l815 00C4                                       l823 00EF  
                                     l807 00AD                                       l761 0160  
                                     l753 011D                                       l745 010E  
                                     l817 00CE                                       l755 0122  
                                     l747 0111                                       l931 0163  
                                     l763 016E                                       l757 015C  
                                     l749 0116                                       l941 00FA  
                                     l759 015F                                       l943 00FB  
                                     l935 00F4                                       l945 00FF  
                                     l937 00F6                                       l947 0101  
                                     l939 00F8                                       l949 0108  
                                     l969 0135                                       u300 0047  
                                     u301 0046                                       u310 0051  
                                     u311 0050                                       u320 005A  
                                     u321 0059                                       u330 0063  
                                     u331 0062                                       u315 004D  
                                     u340 006D                                       u341 006C  
                                     u350 0076                                       u351 0075  
                                     u360 0085                                       u361 0084  
                                     u345 0069                                       u365 0081  
                         _timer1ReloadVal 007A                                      l1141 009D  
                                    l1143 00E1                                      l1071 003B  
                                    l1081 0063                                      l1073 003E  
                                    l1065 002F                                      l1091 008F  
                                    l1083 006D                                      l1075 0047  
                                    l1067 0032                                      l1085 0076  
                                    l1077 0051                                      l1069 0033  
                                    l1087 007B                                      l1079 005A  
                                    l1095 0094                                      l1089 0085  
                                    _LATA 010C                                      i1l51 0176  
                                    i1l94 0134                                      _WPUA 020C  
                                    _main 002F                                      btemp 007E  
                                    start 0026                ??_TMR1_SetInterruptHandler 0079  
          __size_of_OSCILLATOR_Initialize 0007             __end_of_OSCILLATOR_Initialize 0163  
                                   ?_main 0075                           _TMR1_StartTimer 0172  
                                   _T1CON 0018                                     i1l110 015B  
                                   i1l106 014E                                     i1l131 0012  
                                   i1l116 0175                                     i1l213 016D  
                                   i1l136 0024                                     i1l137 0024  
                                   i1l933 0169                                     i1l951 0124  
                                   i1l953 0129                                     i1l961 0130  
                                   i1l963 0132                                     i1l955 012A  
                                   i1l971 0142                                     i1l965 014F  
                                   i1l957 012C                                     i1l973 0144  
                                   i1l981 000E                                     i1l967 0156  
                                   i1l959 012E                                     i1l983 0016  
                                   i1l985 001B                                     i1l977 0006  
                                   i1l987 0020                                     i1l979 000A  
                                   u20_20 0016                                     u20_21 0015  
                                   u21_20 001B                                     u21_21 001A  
                                   u22_20 0020                                     u22_21 001F  
                                   u16_20 0129                                     u16_21 0128  
                                   u17_20 0156                                     u17_21 0155  
                                   _TMR1H 0017                                     _TMR1L 0016  
                                   u18_20 000A                                     u18_21 0009  
                                   u19_20 000E                                     u19_21 000D  
                                   _TRISA 008C                          __end_of_TMR1_ISR 014F  
                 __end_of_PIN_MANAGER_IOC 0177                            _WDT_Initialize 016E  
                 __end_of_TMR1_Initialize 010C                                     pclath 000A  
                                   status 0003                                     wtemp0 007E  
                         _TMR1_WriteTimer 0124                           __initialization 0027  
                            __end_of_main 00AC               ?_INTERRUPT_InterruptManager 0075  
                                  ??_main 0022                              ?_secondsTick 0075  
                  __end_of_WDT_Initialize 0172                                    _APFCON 011D  
                                  _ANSELA 018C                                    _BORCON 0116  
                                  _T1GCON 0019                   TMR1_WriteTimer@timerVal 0075  
                                  _ODCONA 028C                                    _INLVLA 038C  
                                  _OSCCON 0099                                    _WDTCON 0097  
    __end_of_TMR1_DefaultInterruptHandler 0176     __size_of_TMR1_DefaultInterruptHandler 0001  
            _TMR1_DefaultInterruptHandler 0175                   __end_of_TMR1_StartTimer 0175  
                        __end_of_setState 00F4                           ?_WDT_Initialize 0075  
TMR1_SetInterruptHandler@InterruptHandler 0077                          ?_PIN_MANAGER_IOC 0075  
                 __end_of_TMR1_WriteTimer 0135                     __end_of_TMR1_CallBack 015C  
                        ?_TMR1_Initialize 0075                         _SYSTEM_Initialize 0135  
                 __end_of__initialization 002C                        ?_SYSTEM_Initialize 0075  
                          __pcstackCOMMON 0075                       ??_SYSTEM_Initialize 0079  
                               ?_TMR1_ISR 0075             ?_TMR1_DefaultInterruptHandler 0075  
                          _OPTION_REGbits 0095                 __end_of_SYSTEM_Initialize 0142  
                              __pnvCOMMON 007A                                __pmaintext 002F  
                        ?_TMR1_StartTimer 0075                                ??_TMR1_ISR 0077  
                              __pintentry 0004                                   _OSCTUNE 0098  
                                 _SLRCONA 030C                      __size_of_secondsTick 0005  
                        ?_TMR1_WriteTimer 0075                                 ?_setState 0075  
                                 __ptext1 00AC                                   __ptext2 0172  
                                 __ptext3 0135                                   __ptext4 016E  
                                 __ptext5 00F4                                   __ptext6 0163  
                                 __ptext7 010C                                   __ptext8 015C  
          ??_TMR1_DefaultInterruptHandler 0075                                 _T1CONbits 0018  
                   _OSCILLATOR_Initialize 015C         __size_of_TMR1_SetInterruptHandler 0006  
                ??_PIN_MANAGER_Initialize 0077                 ?_TMR1_SetInterruptHandler 0077  
                               _IOCAPbits 0391                __size_of_SYSTEM_Initialize 000D  
                    end_of_initialization 002C                                ??_setState 0077  
                        ??_WDT_Initialize 0077                                 _PORTAbits 000C  
                       __size_of_TMR1_ISR 000D                    ?_OSCILLATOR_Initialize 0075  
                     start_initialization 0027           __size_of_PIN_MANAGER_Initialize 0018  
                __size_of_PIN_MANAGER_IOC 0001                  __size_of_TMR1_Initialize 0018  
                  __size_of_TMR1_CallBack 000D                               __pbssCOMMON 0070  
                               ___latbits 0000                             __pcstackBANK0 0022  
                        setState@newState 0079                              _currentState 0074  
                               __pnvBANK0 0020                    _PIN_MANAGER_Initialize 010C  
        __end_of_TMR1_SetInterruptHandler 0169                         __size_of_setState 0048  
            ??_INTERRUPT_InterruptManager 0077                  __size_of_TMR1_StartTimer 0003  
                           ??_secondsTick 0075                             _TMR1_CallBack 014F  
                                _LATAbits 010C                                  _PIE1bits 0091  
                __size_of_TMR1_WriteTimer 0011       __size_of_INTERRUPT_InterruptManager 0022  
                                _PIR1bits 0011                                  _TMR1_ISR 0142  
                       ??_PIN_MANAGER_IOC 0075                         ??_TMR1_Initialize 0079  
                      _currentSecondsTick 0072                       __end_of_secondsTick 016E  
                          ?_TMR1_CallBack 0075                   ??_OSCILLATOR_Initialize 0077  
                _TMR1_SetInterruptHandler 0163                     _TMR1_InterruptHandler 0020  
                                __ptext10 0142                                  __ptext11 0124  
                                __ptext12 014F                                  __ptext13 0175  
                              _T1GCONbits 0019                                  __ptext14 0169  
                                __ptext15 0176                         ??_TMR1_StartTimer 0077  
                           __size_of_main 007D                                  _setState 00AC  
                     _demandedSecondsTick 0070                                  int$flags 007E  
      __end_of_INTERRUPT_InterruptManager 0026                _INTERRUPT_InterruptManager 0004  
                       ??_TMR1_WriteTimer 0077                                _INTCONbits 000B  
                             _secondsTick 0169                           ??_TMR1_CallBack 0075  
                 __size_of_WDT_Initialize 0004                                  intlevel1 0000  
                 ?_PIN_MANAGER_Initialize 0075            __end_of_PIN_MANAGER_Initialize 0124  
                         _PIN_MANAGER_IOC 0176                           _TMR1_Initialize 00F4  
