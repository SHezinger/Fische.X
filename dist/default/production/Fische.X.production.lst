

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Aug 13 07:06:05 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	12F1571
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.20
    28                           ; Generated 09/04/2020 GMT
    29                           ; 
    30                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC12F1571 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  008C                     	;# 
    87  0091                     	;# 
    88  0092                     	;# 
    89  0093                     	;# 
    90  0095                     	;# 
    91  0096                     	;# 
    92  0097                     	;# 
    93  0098                     	;# 
    94  0099                     	;# 
    95  009A                     	;# 
    96  009B                     	;# 
    97  009B                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  0111                     	;# 
   104  0112                     	;# 
   105  0115                     	;# 
   106  0116                     	;# 
   107  0117                     	;# 
   108  0118                     	;# 
   109  0119                     	;# 
   110  011D                     	;# 
   111  011D                     	;# 
   112  018C                     	;# 
   113  0191                     	;# 
   114  0191                     	;# 
   115  0192                     	;# 
   116  0193                     	;# 
   117  0193                     	;# 
   118  0194                     	;# 
   119  0195                     	;# 
   120  0196                     	;# 
   121  0197                     	;# 
   122  020C                     	;# 
   123  028C                     	;# 
   124  030C                     	;# 
   125  038C                     	;# 
   126  0391                     	;# 
   127  0392                     	;# 
   128  0393                     	;# 
   129  0691                     	;# 
   130  0692                     	;# 
   131  0693                     	;# 
   132  0694                     	;# 
   133  0695                     	;# 
   134  0D8E                     	;# 
   135  0D8F                     	;# 
   136  0D90                     	;# 
   137  0D91                     	;# 
   138  0D91                     	;# 
   139  0D92                     	;# 
   140  0D93                     	;# 
   141  0D93                     	;# 
   142  0D94                     	;# 
   143  0D95                     	;# 
   144  0D95                     	;# 
   145  0D96                     	;# 
   146  0D97                     	;# 
   147  0D97                     	;# 
   148  0D98                     	;# 
   149  0D99                     	;# 
   150  0D99                     	;# 
   151  0D9A                     	;# 
   152  0D9B                     	;# 
   153  0D9C                     	;# 
   154  0D9C                     	;# 
   155  0D9D                     	;# 
   156  0D9D                     	;# 
   157  0D9E                     	;# 
   158  0D9F                     	;# 
   159  0DA0                     	;# 
   160  0DA1                     	;# 
   161  0DA1                     	;# 
   162  0DA2                     	;# 
   163  0DA3                     	;# 
   164  0DA3                     	;# 
   165  0DA4                     	;# 
   166  0DA5                     	;# 
   167  0DA5                     	;# 
   168  0DA6                     	;# 
   169  0DA7                     	;# 
   170  0DA7                     	;# 
   171  0DA8                     	;# 
   172  0DA9                     	;# 
   173  0DA9                     	;# 
   174  0DAA                     	;# 
   175  0DAB                     	;# 
   176  0DAC                     	;# 
   177  0DAC                     	;# 
   178  0DAD                     	;# 
   179  0DAD                     	;# 
   180  0DAE                     	;# 
   181  0DAF                     	;# 
   182  0DB0                     	;# 
   183  0DB1                     	;# 
   184  0DB1                     	;# 
   185  0DB2                     	;# 
   186  0DB3                     	;# 
   187  0DB3                     	;# 
   188  0DB4                     	;# 
   189  0DB5                     	;# 
   190  0DB5                     	;# 
   191  0DB6                     	;# 
   192  0DB7                     	;# 
   193  0DB7                     	;# 
   194  0DB8                     	;# 
   195  0DB9                     	;# 
   196  0DB9                     	;# 
   197  0DBA                     	;# 
   198  0DBB                     	;# 
   199  0DBC                     	;# 
   200  0DBC                     	;# 
   201  0DBD                     	;# 
   202  0DBD                     	;# 
   203  0DBE                     	;# 
   204  0DBF                     	;# 
   205  0DC0                     	;# 
   206  0FE4                     	;# 
   207  0FE5                     	;# 
   208  0FE6                     	;# 
   209  0FE7                     	;# 
   210  0FE8                     	;# 
   211  0FE8                     	;# 
   212  0FE9                     	;# 
   213  0FEA                     	;# 
   214  0FEA                     	;# 
   215  0FEB                     	;# 
   216  0FED                     	;# 
   217  0FEE                     	;# 
   218  0FEE                     	;# 
   219  0FEF                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  0011                     	;# 
   234  0012                     	;# 
   235  0013                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  008C                     	;# 
   246  0091                     	;# 
   247  0092                     	;# 
   248  0093                     	;# 
   249  0095                     	;# 
   250  0096                     	;# 
   251  0097                     	;# 
   252  0098                     	;# 
   253  0099                     	;# 
   254  009A                     	;# 
   255  009B                     	;# 
   256  009B                     	;# 
   257  009C                     	;# 
   258  009D                     	;# 
   259  009E                     	;# 
   260  009F                     	;# 
   261  010C                     	;# 
   262  0111                     	;# 
   263  0112                     	;# 
   264  0115                     	;# 
   265  0116                     	;# 
   266  0117                     	;# 
   267  0118                     	;# 
   268  0119                     	;# 
   269  011D                     	;# 
   270  011D                     	;# 
   271  018C                     	;# 
   272  0191                     	;# 
   273  0191                     	;# 
   274  0192                     	;# 
   275  0193                     	;# 
   276  0193                     	;# 
   277  0194                     	;# 
   278  0195                     	;# 
   279  0196                     	;# 
   280  0197                     	;# 
   281  020C                     	;# 
   282  028C                     	;# 
   283  030C                     	;# 
   284  038C                     	;# 
   285  0391                     	;# 
   286  0392                     	;# 
   287  0393                     	;# 
   288  0691                     	;# 
   289  0692                     	;# 
   290  0693                     	;# 
   291  0694                     	;# 
   292  0695                     	;# 
   293  0D8E                     	;# 
   294  0D8F                     	;# 
   295  0D90                     	;# 
   296  0D91                     	;# 
   297  0D91                     	;# 
   298  0D92                     	;# 
   299  0D93                     	;# 
   300  0D93                     	;# 
   301  0D94                     	;# 
   302  0D95                     	;# 
   303  0D95                     	;# 
   304  0D96                     	;# 
   305  0D97                     	;# 
   306  0D97                     	;# 
   307  0D98                     	;# 
   308  0D99                     	;# 
   309  0D99                     	;# 
   310  0D9A                     	;# 
   311  0D9B                     	;# 
   312  0D9C                     	;# 
   313  0D9C                     	;# 
   314  0D9D                     	;# 
   315  0D9D                     	;# 
   316  0D9E                     	;# 
   317  0D9F                     	;# 
   318  0DA0                     	;# 
   319  0DA1                     	;# 
   320  0DA1                     	;# 
   321  0DA2                     	;# 
   322  0DA3                     	;# 
   323  0DA3                     	;# 
   324  0DA4                     	;# 
   325  0DA5                     	;# 
   326  0DA5                     	;# 
   327  0DA6                     	;# 
   328  0DA7                     	;# 
   329  0DA7                     	;# 
   330  0DA8                     	;# 
   331  0DA9                     	;# 
   332  0DA9                     	;# 
   333  0DAA                     	;# 
   334  0DAB                     	;# 
   335  0DAC                     	;# 
   336  0DAC                     	;# 
   337  0DAD                     	;# 
   338  0DAD                     	;# 
   339  0DAE                     	;# 
   340  0DAF                     	;# 
   341  0DB0                     	;# 
   342  0DB1                     	;# 
   343  0DB1                     	;# 
   344  0DB2                     	;# 
   345  0DB3                     	;# 
   346  0DB3                     	;# 
   347  0DB4                     	;# 
   348  0DB5                     	;# 
   349  0DB5                     	;# 
   350  0DB6                     	;# 
   351  0DB7                     	;# 
   352  0DB7                     	;# 
   353  0DB8                     	;# 
   354  0DB9                     	;# 
   355  0DB9                     	;# 
   356  0DBA                     	;# 
   357  0DBB                     	;# 
   358  0DBC                     	;# 
   359  0DBC                     	;# 
   360  0DBD                     	;# 
   361  0DBD                     	;# 
   362  0DBE                     	;# 
   363  0DBF                     	;# 
   364  0DC0                     	;# 
   365  0FE4                     	;# 
   366  0FE5                     	;# 
   367  0FE6                     	;# 
   368  0FE7                     	;# 
   369  0FE8                     	;# 
   370  0FE8                     	;# 
   371  0FE9                     	;# 
   372  0FEA                     	;# 
   373  0FEA                     	;# 
   374  0FEB                     	;# 
   375  0FED                     	;# 
   376  0FEE                     	;# 
   377  0FEE                     	;# 
   378  0FEF                     	;# 
   379  0000                     	;# 
   380  0001                     	;# 
   381  0002                     	;# 
   382  0003                     	;# 
   383  0004                     	;# 
   384  0005                     	;# 
   385  0006                     	;# 
   386  0007                     	;# 
   387  0008                     	;# 
   388  0009                     	;# 
   389  000A                     	;# 
   390  000B                     	;# 
   391  000C                     	;# 
   392  0011                     	;# 
   393  0012                     	;# 
   394  0013                     	;# 
   395  0015                     	;# 
   396  0016                     	;# 
   397  0016                     	;# 
   398  0017                     	;# 
   399  0018                     	;# 
   400  0019                     	;# 
   401  001A                     	;# 
   402  001B                     	;# 
   403  001C                     	;# 
   404  008C                     	;# 
   405  0091                     	;# 
   406  0092                     	;# 
   407  0093                     	;# 
   408  0095                     	;# 
   409  0096                     	;# 
   410  0097                     	;# 
   411  0098                     	;# 
   412  0099                     	;# 
   413  009A                     	;# 
   414  009B                     	;# 
   415  009B                     	;# 
   416  009C                     	;# 
   417  009D                     	;# 
   418  009E                     	;# 
   419  009F                     	;# 
   420  010C                     	;# 
   421  0111                     	;# 
   422  0112                     	;# 
   423  0115                     	;# 
   424  0116                     	;# 
   425  0117                     	;# 
   426  0118                     	;# 
   427  0119                     	;# 
   428  011D                     	;# 
   429  011D                     	;# 
   430  018C                     	;# 
   431  0191                     	;# 
   432  0191                     	;# 
   433  0192                     	;# 
   434  0193                     	;# 
   435  0193                     	;# 
   436  0194                     	;# 
   437  0195                     	;# 
   438  0196                     	;# 
   439  0197                     	;# 
   440  020C                     	;# 
   441  028C                     	;# 
   442  030C                     	;# 
   443  038C                     	;# 
   444  0391                     	;# 
   445  0392                     	;# 
   446  0393                     	;# 
   447  0691                     	;# 
   448  0692                     	;# 
   449  0693                     	;# 
   450  0694                     	;# 
   451  0695                     	;# 
   452  0D8E                     	;# 
   453  0D8F                     	;# 
   454  0D90                     	;# 
   455  0D91                     	;# 
   456  0D91                     	;# 
   457  0D92                     	;# 
   458  0D93                     	;# 
   459  0D93                     	;# 
   460  0D94                     	;# 
   461  0D95                     	;# 
   462  0D95                     	;# 
   463  0D96                     	;# 
   464  0D97                     	;# 
   465  0D97                     	;# 
   466  0D98                     	;# 
   467  0D99                     	;# 
   468  0D99                     	;# 
   469  0D9A                     	;# 
   470  0D9B                     	;# 
   471  0D9C                     	;# 
   472  0D9C                     	;# 
   473  0D9D                     	;# 
   474  0D9D                     	;# 
   475  0D9E                     	;# 
   476  0D9F                     	;# 
   477  0DA0                     	;# 
   478  0DA1                     	;# 
   479  0DA1                     	;# 
   480  0DA2                     	;# 
   481  0DA3                     	;# 
   482  0DA3                     	;# 
   483  0DA4                     	;# 
   484  0DA5                     	;# 
   485  0DA5                     	;# 
   486  0DA6                     	;# 
   487  0DA7                     	;# 
   488  0DA7                     	;# 
   489  0DA8                     	;# 
   490  0DA9                     	;# 
   491  0DA9                     	;# 
   492  0DAA                     	;# 
   493  0DAB                     	;# 
   494  0DAC                     	;# 
   495  0DAC                     	;# 
   496  0DAD                     	;# 
   497  0DAD                     	;# 
   498  0DAE                     	;# 
   499  0DAF                     	;# 
   500  0DB0                     	;# 
   501  0DB1                     	;# 
   502  0DB1                     	;# 
   503  0DB2                     	;# 
   504  0DB3                     	;# 
   505  0DB3                     	;# 
   506  0DB4                     	;# 
   507  0DB5                     	;# 
   508  0DB5                     	;# 
   509  0DB6                     	;# 
   510  0DB7                     	;# 
   511  0DB7                     	;# 
   512  0DB8                     	;# 
   513  0DB9                     	;# 
   514  0DB9                     	;# 
   515  0DBA                     	;# 
   516  0DBB                     	;# 
   517  0DBC                     	;# 
   518  0DBC                     	;# 
   519  0DBD                     	;# 
   520  0DBD                     	;# 
   521  0DBE                     	;# 
   522  0DBF                     	;# 
   523  0DC0                     	;# 
   524  0FE4                     	;# 
   525  0FE5                     	;# 
   526  0FE6                     	;# 
   527  0FE7                     	;# 
   528  0FE8                     	;# 
   529  0FE8                     	;# 
   530  0FE9                     	;# 
   531  0FEA                     	;# 
   532  0FEA                     	;# 
   533  0FEB                     	;# 
   534  0FED                     	;# 
   535  0FEE                     	;# 
   536  0FEE                     	;# 
   537  0FEF                     	;# 
   538  0000                     	;# 
   539  0001                     	;# 
   540  0002                     	;# 
   541  0003                     	;# 
   542  0004                     	;# 
   543  0005                     	;# 
   544  0006                     	;# 
   545  0007                     	;# 
   546  0008                     	;# 
   547  0009                     	;# 
   548  000A                     	;# 
   549  000B                     	;# 
   550  000C                     	;# 
   551  0011                     	;# 
   552  0012                     	;# 
   553  0013                     	;# 
   554  0015                     	;# 
   555  0016                     	;# 
   556  0016                     	;# 
   557  0017                     	;# 
   558  0018                     	;# 
   559  0019                     	;# 
   560  001A                     	;# 
   561  001B                     	;# 
   562  001C                     	;# 
   563  008C                     	;# 
   564  0091                     	;# 
   565  0092                     	;# 
   566  0093                     	;# 
   567  0095                     	;# 
   568  0096                     	;# 
   569  0097                     	;# 
   570  0098                     	;# 
   571  0099                     	;# 
   572  009A                     	;# 
   573  009B                     	;# 
   574  009B                     	;# 
   575  009C                     	;# 
   576  009D                     	;# 
   577  009E                     	;# 
   578  009F                     	;# 
   579  010C                     	;# 
   580  0111                     	;# 
   581  0112                     	;# 
   582  0115                     	;# 
   583  0116                     	;# 
   584  0117                     	;# 
   585  0118                     	;# 
   586  0119                     	;# 
   587  011D                     	;# 
   588  011D                     	;# 
   589  018C                     	;# 
   590  0191                     	;# 
   591  0191                     	;# 
   592  0192                     	;# 
   593  0193                     	;# 
   594  0193                     	;# 
   595  0194                     	;# 
   596  0195                     	;# 
   597  0196                     	;# 
   598  0197                     	;# 
   599  020C                     	;# 
   600  028C                     	;# 
   601  030C                     	;# 
   602  038C                     	;# 
   603  0391                     	;# 
   604  0392                     	;# 
   605  0393                     	;# 
   606  0691                     	;# 
   607  0692                     	;# 
   608  0693                     	;# 
   609  0694                     	;# 
   610  0695                     	;# 
   611  0D8E                     	;# 
   612  0D8F                     	;# 
   613  0D90                     	;# 
   614  0D91                     	;# 
   615  0D91                     	;# 
   616  0D92                     	;# 
   617  0D93                     	;# 
   618  0D93                     	;# 
   619  0D94                     	;# 
   620  0D95                     	;# 
   621  0D95                     	;# 
   622  0D96                     	;# 
   623  0D97                     	;# 
   624  0D97                     	;# 
   625  0D98                     	;# 
   626  0D99                     	;# 
   627  0D99                     	;# 
   628  0D9A                     	;# 
   629  0D9B                     	;# 
   630  0D9C                     	;# 
   631  0D9C                     	;# 
   632  0D9D                     	;# 
   633  0D9D                     	;# 
   634  0D9E                     	;# 
   635  0D9F                     	;# 
   636  0DA0                     	;# 
   637  0DA1                     	;# 
   638  0DA1                     	;# 
   639  0DA2                     	;# 
   640  0DA3                     	;# 
   641  0DA3                     	;# 
   642  0DA4                     	;# 
   643  0DA5                     	;# 
   644  0DA5                     	;# 
   645  0DA6                     	;# 
   646  0DA7                     	;# 
   647  0DA7                     	;# 
   648  0DA8                     	;# 
   649  0DA9                     	;# 
   650  0DA9                     	;# 
   651  0DAA                     	;# 
   652  0DAB                     	;# 
   653  0DAC                     	;# 
   654  0DAC                     	;# 
   655  0DAD                     	;# 
   656  0DAD                     	;# 
   657  0DAE                     	;# 
   658  0DAF                     	;# 
   659  0DB0                     	;# 
   660  0DB1                     	;# 
   661  0DB1                     	;# 
   662  0DB2                     	;# 
   663  0DB3                     	;# 
   664  0DB3                     	;# 
   665  0DB4                     	;# 
   666  0DB5                     	;# 
   667  0DB5                     	;# 
   668  0DB6                     	;# 
   669  0DB7                     	;# 
   670  0DB7                     	;# 
   671  0DB8                     	;# 
   672  0DB9                     	;# 
   673  0DB9                     	;# 
   674  0DBA                     	;# 
   675  0DBB                     	;# 
   676  0DBC                     	;# 
   677  0DBC                     	;# 
   678  0DBD                     	;# 
   679  0DBD                     	;# 
   680  0DBE                     	;# 
   681  0DBF                     	;# 
   682  0DC0                     	;# 
   683  0FE4                     	;# 
   684  0FE5                     	;# 
   685  0FE6                     	;# 
   686  0FE7                     	;# 
   687  0FE8                     	;# 
   688  0FE8                     	;# 
   689  0FE9                     	;# 
   690  0FEA                     	;# 
   691  0FEA                     	;# 
   692  0FEB                     	;# 
   693  0FED                     	;# 
   694  0FEE                     	;# 
   695  0FEE                     	;# 
   696  0FEF                     	;# 
   697  0000                     	;# 
   698  0001                     	;# 
   699  0002                     	;# 
   700  0003                     	;# 
   701  0004                     	;# 
   702  0005                     	;# 
   703  0006                     	;# 
   704  0007                     	;# 
   705  0008                     	;# 
   706  0009                     	;# 
   707  000A                     	;# 
   708  000B                     	;# 
   709  000C                     	;# 
   710  0011                     	;# 
   711  0012                     	;# 
   712  0013                     	;# 
   713  0015                     	;# 
   714  0016                     	;# 
   715  0016                     	;# 
   716  0017                     	;# 
   717  0018                     	;# 
   718  0019                     	;# 
   719  001A                     	;# 
   720  001B                     	;# 
   721  001C                     	;# 
   722  008C                     	;# 
   723  0091                     	;# 
   724  0092                     	;# 
   725  0093                     	;# 
   726  0095                     	;# 
   727  0096                     	;# 
   728  0097                     	;# 
   729  0098                     	;# 
   730  0099                     	;# 
   731  009A                     	;# 
   732  009B                     	;# 
   733  009B                     	;# 
   734  009C                     	;# 
   735  009D                     	;# 
   736  009E                     	;# 
   737  009F                     	;# 
   738  010C                     	;# 
   739  0111                     	;# 
   740  0112                     	;# 
   741  0115                     	;# 
   742  0116                     	;# 
   743  0117                     	;# 
   744  0118                     	;# 
   745  0119                     	;# 
   746  011D                     	;# 
   747  011D                     	;# 
   748  018C                     	;# 
   749  0191                     	;# 
   750  0191                     	;# 
   751  0192                     	;# 
   752  0193                     	;# 
   753  0193                     	;# 
   754  0194                     	;# 
   755  0195                     	;# 
   756  0196                     	;# 
   757  0197                     	;# 
   758  020C                     	;# 
   759  028C                     	;# 
   760  030C                     	;# 
   761  038C                     	;# 
   762  0391                     	;# 
   763  0392                     	;# 
   764  0393                     	;# 
   765  0691                     	;# 
   766  0692                     	;# 
   767  0693                     	;# 
   768  0694                     	;# 
   769  0695                     	;# 
   770  0D8E                     	;# 
   771  0D8F                     	;# 
   772  0D90                     	;# 
   773  0D91                     	;# 
   774  0D91                     	;# 
   775  0D92                     	;# 
   776  0D93                     	;# 
   777  0D93                     	;# 
   778  0D94                     	;# 
   779  0D95                     	;# 
   780  0D95                     	;# 
   781  0D96                     	;# 
   782  0D97                     	;# 
   783  0D97                     	;# 
   784  0D98                     	;# 
   785  0D99                     	;# 
   786  0D99                     	;# 
   787  0D9A                     	;# 
   788  0D9B                     	;# 
   789  0D9C                     	;# 
   790  0D9C                     	;# 
   791  0D9D                     	;# 
   792  0D9D                     	;# 
   793  0D9E                     	;# 
   794  0D9F                     	;# 
   795  0DA0                     	;# 
   796  0DA1                     	;# 
   797  0DA1                     	;# 
   798  0DA2                     	;# 
   799  0DA3                     	;# 
   800  0DA3                     	;# 
   801  0DA4                     	;# 
   802  0DA5                     	;# 
   803  0DA5                     	;# 
   804  0DA6                     	;# 
   805  0DA7                     	;# 
   806  0DA7                     	;# 
   807  0DA8                     	;# 
   808  0DA9                     	;# 
   809  0DA9                     	;# 
   810  0DAA                     	;# 
   811  0DAB                     	;# 
   812  0DAC                     	;# 
   813  0DAC                     	;# 
   814  0DAD                     	;# 
   815  0DAD                     	;# 
   816  0DAE                     	;# 
   817  0DAF                     	;# 
   818  0DB0                     	;# 
   819  0DB1                     	;# 
   820  0DB1                     	;# 
   821  0DB2                     	;# 
   822  0DB3                     	;# 
   823  0DB3                     	;# 
   824  0DB4                     	;# 
   825  0DB5                     	;# 
   826  0DB5                     	;# 
   827  0DB6                     	;# 
   828  0DB7                     	;# 
   829  0DB7                     	;# 
   830  0DB8                     	;# 
   831  0DB9                     	;# 
   832  0DB9                     	;# 
   833  0DBA                     	;# 
   834  0DBB                     	;# 
   835  0DBC                     	;# 
   836  0DBC                     	;# 
   837  0DBD                     	;# 
   838  0DBD                     	;# 
   839  0DBE                     	;# 
   840  0DBF                     	;# 
   841  0DC0                     	;# 
   842  0FE4                     	;# 
   843  0FE5                     	;# 
   844  0FE6                     	;# 
   845  0FE7                     	;# 
   846  0FE8                     	;# 
   847  0FE8                     	;# 
   848  0FE9                     	;# 
   849  0FEA                     	;# 
   850  0FEA                     	;# 
   851  0FEB                     	;# 
   852  0FED                     	;# 
   853  0FEE                     	;# 
   854  0FEE                     	;# 
   855  0FEF                     	;# 
   856                           
   857                           	psect	nvCOMMON
   858  0075                     __pnvCOMMON:
   859  0075                     _TMR1_InterruptHandler:
   860  0075                     	ds	2
   861  0077                     _timer1ReloadVal:
   862  0077                     	ds	2
   863  000C                     _PORTAbits	set	12
   864  000B                     _INTCONbits	set	11
   865  0019                     _T1GCONbits	set	25
   866  0018                     _T1CONbits	set	24
   867  0018                     _T1CON	set	24
   868  0011                     _PIR1bits	set	17
   869  0016                     _TMR1L	set	22
   870  0017                     _TMR1H	set	23
   871  0019                     _T1GCON	set	25
   872  0091                     _PIE1bits	set	145
   873  0095                     _OPTION_REGbits	set	149
   874  008C                     _TRISA	set	140
   875  0097                     _WDTCON	set	151
   876  0098                     _OSCTUNE	set	152
   877  0099                     _OSCCON	set	153
   878  010C                     _LATAbits	set	268
   879  011D                     _APFCON	set	285
   880  010C                     _LATA	set	268
   881  0116                     _BORCON	set	278
   882  018C                     _ANSELA	set	396
   883  020C                     _WPUA	set	524
   884  028C                     _ODCONA	set	652
   885  030C                     _SLRCONA	set	780
   886  038C                     _INLVLA	set	908
   887                           
   888                           	psect	cinit
   889  001A                     start_initialization:	
   890                           ; #config settings
   891                           
   892  001A                     __initialization:
   893                           
   894                           ; Clear objects allocated to COMMON
   895  001A  01F0               	clrf	__pbssCOMMON& (0+127)
   896  001B  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   897  001C  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   898  001D  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   899  001E  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   900  001F                     end_of_initialization:	
   901                           ;End of C runtime variable initialization code
   902                           
   903  001F                     __end_of__initialization:
   904  001F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   905  0020  0020               	movlb	0
   906  0021  2863               	ljmp	_main	;jump to C main() function
   907                           
   908                           	psect	bssCOMMON
   909  0070                     __pbssCOMMON:
   910  0070                     _demandedSecondsTick:
   911  0070                     	ds	2
   912  0072                     _currentSecondsTick:
   913  0072                     	ds	2
   914  0074                     _currentState:
   915  0074                     	ds	1
   916                           
   917                           	psect	cstackCOMMON
   918  0079                     __pcstackCOMMON:
   919  0079                     ?_PIN_MANAGER_Initialize:
   920  0079                     ?_OSCILLATOR_Initialize:	
   921                           ; 1 bytes @ 0x0
   922                           
   923  0079                     ?_WDT_Initialize:	
   924                           ; 1 bytes @ 0x0
   925                           
   926  0079                     ?_TMR1_Initialize:	
   927                           ; 1 bytes @ 0x0
   928                           
   929  0079                     ?_TMR1_DefaultInterruptHandler:	
   930                           ; 1 bytes @ 0x0
   931                           
   932  0079                     ??_TMR1_DefaultInterruptHandler:	
   933                           ; 1 bytes @ 0x0
   934                           
   935  0079                     ?_TMR1_CallBack:	
   936                           ; 1 bytes @ 0x0
   937                           
   938  0079                     ??_TMR1_CallBack:	
   939                           ; 1 bytes @ 0x0
   940                           
   941  0079                     ?_secondsTick:	
   942                           ; 1 bytes @ 0x0
   943                           
   944  0079                     ??_secondsTick:	
   945                           ; 1 bytes @ 0x0
   946                           
   947  0079                     ?_setState:	
   948                           ; 1 bytes @ 0x0
   949                           
   950  0079                     ?_SYSTEM_Initialize:	
   951                           ; 1 bytes @ 0x0
   952                           
   953  0079                     ?_TMR1_StartTimer:	
   954                           ; 1 bytes @ 0x0
   955                           
   956  0079                     ?_TMR1_WriteTimer:	
   957                           ; 1 bytes @ 0x0
   958                           
   959  0079                     ?_TMR1_ISR:	
   960                           ; 1 bytes @ 0x0
   961                           
   962  0079                     ?_INTERRUPT_InterruptManager:	
   963                           ; 1 bytes @ 0x0
   964                           
   965  0079                     ?_main:	
   966                           ; 1 bytes @ 0x0
   967                           
   968  0079                     TMR1_WriteTimer@timerVal:	
   969                           ; 1 bytes @ 0x0
   970                           
   971                           
   972                           ; 2 bytes @ 0x0
   973  0079                     	ds	2
   974  007B                     ??_PIN_MANAGER_Initialize:
   975  007B                     ??_OSCILLATOR_Initialize:	
   976                           ; 1 bytes @ 0x2
   977                           
   978  007B                     ??_WDT_Initialize:	
   979                           ; 1 bytes @ 0x2
   980                           
   981  007B                     ??_TMR1_Initialize:	
   982                           ; 1 bytes @ 0x2
   983                           
   984  007B                     ??_TMR1_SetInterruptHandler:	
   985                           ; 1 bytes @ 0x2
   986                           
   987  007B                     ??_SYSTEM_Initialize:	
   988                           ; 1 bytes @ 0x2
   989                           
   990  007B                     ??_TMR1_StartTimer:	
   991                           ; 1 bytes @ 0x2
   992                           
   993  007B                     ??_TMR1_WriteTimer:	
   994                           ; 1 bytes @ 0x2
   995                           
   996  007B                     ??_TMR1_ISR:	
   997                           ; 1 bytes @ 0x2
   998                           
   999  007B                     ??_INTERRUPT_InterruptManager:	
  1000                           ; 1 bytes @ 0x2
  1001                           
  1002  007B                     setState@newState:	
  1003                           ; 1 bytes @ 0x2
  1004                           
  1005                           
  1006                           ; 1 bytes @ 0x2
  1007  007B                     	ds	1
  1008  007C                     ??_main:
  1009                           
  1010                           	psect	cstackBANK0
  1011  0020                     __pcstackBANK0:	
  1012                           ; 1 bytes @ 0x3
  1013                           
  1014  0020                     ?_TMR1_SetInterruptHandler:
  1015  0020                     ??_setState:	
  1016                           ; 1 bytes @ 0x0
  1017                           
  1018  0020                     TMR1_SetInterruptHandler@InterruptHandler:	
  1019                           ; 1 bytes @ 0x0
  1020                           
  1021                           
  1022                           ; 2 bytes @ 0x0
  1023  0020                     	ds	2
  1024                           
  1025                           	psect	maintext
  1026  0063                     __pmaintext:	
  1027 ;;
  1028 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1029 ;;
  1030 ;; *************** function _main *****************
  1031 ;; Defined at:
  1032 ;;		line 68 in file "main.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;		None
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;		None
  1037 ;; Return value:  Size  Location     Type
  1038 ;;                  1    wreg      void 
  1039 ;; Registers used:
  1040 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1041 ;; Tracked objects:
  1042 ;;		On entry : B1F/0
  1043 ;;		On exit  : 0/0
  1044 ;;		Unchanged: 0/0
  1045 ;; Data sizes:     COMMON   BANK0   BANK1
  1046 ;;      Params:         0       0       0
  1047 ;;      Locals:         0       0       0
  1048 ;;      Temps:          0       0       0
  1049 ;;      Totals:         0       0       0
  1050 ;;Total ram usage:        0 bytes
  1051 ;; Hardware stack levels required when called:    7
  1052 ;; This function calls:
  1053 ;;		_SYSTEM_Initialize
  1054 ;;		_TMR1_SetInterruptHandler
  1055 ;;		_TMR1_StartTimer
  1056 ;;		_setState
  1057 ;; This function is called by:
  1058 ;;		Startup code after reset
  1059 ;; This function uses a non-reentrant model
  1060 ;;
  1061                           
  1062                           
  1063                           ;psect for function _main
  1064  0063                     _main:
  1065  0063                     l1033:	
  1066                           ;incstack = 0
  1067                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1068                           
  1069                           
  1070                           ;main.c: 71:     SYSTEM_Initialize();
  1071  0063  3180  20CE  3180   	fcall	_SYSTEM_Initialize
  1072  0066                     l1035:
  1073                           
  1074                           ;main.c: 77:     (INTCONbits.GIE = 1);
  1075  0066  178B               	bsf	11,7	;volatile
  1076  0067                     l1037:
  1077                           
  1078                           ;main.c: 80:     (INTCONbits.PEIE = 1);
  1079  0067  170B               	bsf	11,6	;volatile
  1080                           
  1081                           ;main.c: 89:     TMR1_SetInterruptHandler(secondsTick);
  1082  0068  3001               	movlw	low _secondsTick
  1083  0069  0020               	movlb	0	; select bank0
  1084  006A  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  1085  006B  3001               	movlw	high _secondsTick
  1086  006C  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  1087  006D  3180  20FB  3180   	fcall	_TMR1_SetInterruptHandler
  1088  0070                     l1039:
  1089                           
  1090                           ;main.c: 91:     TMR1_StartTimer();
  1091  0070  3181  210A  3180   	fcall	_TMR1_StartTimer
  1092  0073                     l1041:
  1093                           
  1094                           ;main.c: 93:     setState(STATE_WAIT_TIME);
  1095  0073  3001               	movlw	1
  1096  0074  3180  2022  3180   	fcall	_setState
  1097  0077                     l1043:
  1098                           
  1099                           ;main.c: 96:     {;main.c: 97:         if(PORTAbits.RA4)
  1100  0077  0020               	movlb	0	; select bank0
  1101  0078  1E0C               	btfss	12,4	;volatile
  1102  0079  287B               	goto	u161
  1103  007A  287C               	goto	u160
  1104  007B                     u161:
  1105  007B  287F               	goto	l163
  1106  007C                     u160:
  1107  007C                     l160:	
  1108                           ;main.c: 98:         {;main.c: 99:             do { LATAbits.LATA2 = 1; } while(0);
  1109                           
  1110  007C  0022               	movlb	2	; select bank2
  1111  007D  150C               	bsf	12,2	;volatile
  1112  007E  2881               	goto	l162
  1113  007F                     l163:	
  1114                           ;main.c: 102:         {;main.c: 103:             do { LATAbits.LATA2 = 0; } while(0);
  1115                           
  1116  007F  0022               	movlb	2	; select bank2
  1117  0080  110C               	bcf	12,2	;volatile
  1118  0081                     l162:	
  1119                           ;main.c: 104:         }
  1120                           
  1121                           
  1122                           ;main.c: 106:         if(PORTAbits.RA5)
  1123  0081  0020               	movlb	0	; select bank0
  1124  0082  1E8C               	btfss	12,5	;volatile
  1125  0083  2885               	goto	u171
  1126  0084  2886               	goto	u170
  1127  0085                     u171:
  1128  0085  2889               	goto	l169
  1129  0086                     u170:
  1130  0086                     l166:	
  1131                           ;main.c: 107:         {;main.c: 108:             do { LATAbits.LATA1 = 1; } while(0);
  1132                           
  1133  0086  0022               	movlb	2	; select bank2
  1134  0087  148C               	bsf	12,1	;volatile
  1135  0088  2877               	goto	l1043
  1136  0089                     l169:	
  1137                           ;main.c: 111:         {;main.c: 112:             do { LATAbits.LATA1 = 0; } while(0);
  1138                           
  1139  0089  0022               	movlb	2	; select bank2
  1140  008A  108C               	bcf	12,1	;volatile
  1141  008B  2877               	goto	l1043
  1142  008C  2819               	ljmp	start
  1143  008D                     __end_of_main:
  1144                           
  1145                           	psect	text1
  1146  0022                     __ptext1:	
  1147 ;; *************** function _setState *****************
  1148 ;; Defined at:
  1149 ;;		line 160 in file "main.c"
  1150 ;; Parameters:    Size  Location     Type
  1151 ;;  newState        1    wreg     enum E2970
  1152 ;; Auto vars:     Size  Location     Type
  1153 ;;  newState        1    2[COMMON] enum E2970
  1154 ;; Return value:  Size  Location     Type
  1155 ;;                  1    wreg      void 
  1156 ;; Registers used:
  1157 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1158 ;; Tracked objects:
  1159 ;;		On entry : 0/0
  1160 ;;		On exit  : 0/0
  1161 ;;		Unchanged: 0/0
  1162 ;; Data sizes:     COMMON   BANK0   BANK1
  1163 ;;      Params:         0       0       0
  1164 ;;      Locals:         1       0       0
  1165 ;;      Temps:          0       2       0
  1166 ;;      Totals:         1       2       0
  1167 ;;Total ram usage:        3 bytes
  1168 ;; Hardware stack levels used:    1
  1169 ;; Hardware stack levels required when called:    4
  1170 ;; This function calls:
  1171 ;;		Nothing
  1172 ;; This function is called by:
  1173 ;;		_main
  1174 ;; This function uses a non-reentrant model
  1175 ;;
  1176                           
  1177                           
  1178                           ;psect for function _setState
  1179  0022                     _setState:
  1180                           
  1181                           ;incstack = 0
  1182                           ; Regs used in _setState: [wreg-fsr0h+status,2+status,0]
  1183                           ;setState@newState stored from wreg
  1184  0022  00FB               	movwf	setState@newState
  1185  0023                     l1015:
  1186                           
  1187                           ;main.c: 160: void setState(states_t newState);main.c: 161: {;main.c: 162:     if(newSta
      +                          te == currentState)
  1188  0023  087B               	movf	setState@newState,w
  1189  0024  0674               	xorwf	_currentState,w
  1190  0025  1D03               	skipz
  1191  0026  2828               	goto	u151
  1192  0027  2829               	goto	u150
  1193  0028                     u151:
  1194  0028  2846               	goto	l1025
  1195  0029                     u150:
  1196  0029  2862               	goto	l194
  1197  002A                     l197:	
  1198                           ;main.c: 169:             do { LATAbits.LATA1 = 0; } while(0);
  1199                           
  1200  002A  0022               	movlb	2	; select bank2
  1201  002B  108C               	bcf	12,1	;volatile
  1202  002C                     l199:	
  1203                           ;main.c: 170:             do { LATAbits.LATA2 = 0; } while(0);
  1204                           
  1205  002C  110C               	bcf	12,2	;volatile
  1206  002D                     l1019:
  1207                           
  1208                           ;main.c: 171:             demandedSecondsTick = currentSecondsTick + 1;
  1209  002D  0872               	movf	_currentSecondsTick,w	;volatile
  1210  002E  3E01               	addlw	1
  1211  002F  00F0               	movwf	_demandedSecondsTick
  1212  0030  3000               	movlw	0
  1213  0031  3D73               	addwfc	_currentSecondsTick+1,w	;volatile
  1214  0032  00F1               	movwf	_demandedSecondsTick+1
  1215                           
  1216                           ;main.c: 172:             break;
  1217  0033  285D               	goto	l1027
  1218  0034                     l203:	
  1219                           ;main.c: 175:             do { LATAbits.LATA1 = 1; } while(0);
  1220                           
  1221  0034  0022               	movlb	2	; select bank2
  1222  0035  148C               	bsf	12,1	;volatile
  1223  0036                     l205:	
  1224                           ;main.c: 176:             do { LATAbits.LATA2 = 0; } while(0);
  1225                           
  1226  0036  110C               	bcf	12,2	;volatile
  1227  0037  285D               	goto	l1027
  1228  0038                     l208:	
  1229                           ;main.c: 180:             do { LATAbits.LATA1 = 0; } while(0);
  1230                           
  1231  0038  0022               	movlb	2	; select bank2
  1232  0039  108C               	bcf	12,1	;volatile
  1233  003A                     l210:	
  1234                           ;main.c: 181:             do { LATAbits.LATA2 = 1; } while(0);
  1235                           
  1236  003A  150C               	bsf	12,2	;volatile
  1237  003B                     l1021:
  1238                           
  1239                           ;main.c: 182:             demandedSecondsTick = currentSecondsTick + 30;
  1240  003B  0872               	movf	_currentSecondsTick,w	;volatile
  1241  003C  3E1E               	addlw	30
  1242  003D  00F0               	movwf	_demandedSecondsTick
  1243  003E  3000               	movlw	0
  1244  003F  3D73               	addwfc	_currentSecondsTick+1,w	;volatile
  1245  0040  00F1               	movwf	_demandedSecondsTick+1
  1246                           
  1247                           ;main.c: 183:             break;
  1248  0041  285D               	goto	l1027
  1249  0042                     l213:	
  1250                           ;main.c: 186:             do { LATAbits.LATA1 = 0; } while(0);
  1251                           
  1252  0042  0022               	movlb	2	; select bank2
  1253  0043  108C               	bcf	12,1	;volatile
  1254  0044                     l215:	
  1255                           ;main.c: 187:             do { LATAbits.LATA2 = 0; } while(0);
  1256                           
  1257  0044  110C               	bcf	12,2	;volatile
  1258  0045  285D               	goto	l1027
  1259  0046                     l1025:
  1260  0046  087B               	movf	setState@newState,w
  1261  0047  0020               	movlb	0	; select bank0
  1262  0048  00A0               	movwf	??_setState
  1263  0049  01A1               	clrf	??_setState+1
  1264                           
  1265                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1266                           ; Switch size 1, requested type "simple"
  1267                           ; Number of cases is 1, Range of values is 0 to 0
  1268                           ; switch strategies available:
  1269                           ; Name         Instructions Cycles
  1270                           ; simple_byte            4     3 (average)
  1271                           ; direct_byte            8     6 (fixed)
  1272                           ; jumptable            260     6 (fixed)
  1273                           ;	Chosen strategy is simple_byte
  1274  004A  0821               	movf	??_setState+1,w
  1275  004B  3A00               	xorlw	0	; case 0
  1276  004C  1903               	skipnz
  1277  004D  284F               	goto	l1081
  1278  004E  285D               	goto	l1027
  1279  004F                     l1081:
  1280                           
  1281                           ; Switch size 1, requested type "simple"
  1282                           ; Number of cases is 4, Range of values is 1 to 4
  1283                           ; switch strategies available:
  1284                           ; Name         Instructions Cycles
  1285                           ; simple_byte           13     7 (average)
  1286                           ; direct_byte           17     9 (fixed)
  1287                           ; jumptable            263     9 (fixed)
  1288                           ;	Chosen strategy is simple_byte
  1289  004F  0820               	movf	??_setState,w
  1290  0050  3A01               	xorlw	1	; case 1
  1291  0051  1903               	skipnz
  1292  0052  282A               	goto	l197
  1293  0053  3A03               	xorlw	3	; case 2
  1294  0054  1903               	skipnz
  1295  0055  2834               	goto	l203
  1296  0056  3A01               	xorlw	1	; case 3
  1297  0057  1903               	skipnz
  1298  0058  2838               	goto	l208
  1299  0059  3A07               	xorlw	7	; case 4
  1300  005A  1903               	skipnz
  1301  005B  2842               	goto	l213
  1302  005C  285D               	goto	l1027
  1303  005D                     l1027:
  1304                           
  1305                           ;main.c: 191:     currentState = newState;
  1306  005D  087B               	movf	setState@newState,w
  1307  005E  0020               	movlb	0	; select bank0
  1308  005F  00A0               	movwf	??_setState
  1309  0060  0820               	movf	??_setState,w
  1310  0061  00F4               	movwf	_currentState
  1311  0062                     l194:
  1312  0062  0008               	return
  1313  0063                     __end_of_setState:
  1314                           
  1315                           	psect	text2
  1316  010A                     __ptext2:	
  1317 ;; *************** function _TMR1_StartTimer *****************
  1318 ;; Defined at:
  1319 ;;		line 93 in file "mcc_generated_files/tmr1.c"
  1320 ;; Parameters:    Size  Location     Type
  1321 ;;		None
  1322 ;; Auto vars:     Size  Location     Type
  1323 ;;		None
  1324 ;; Return value:  Size  Location     Type
  1325 ;;                  1    wreg      void 
  1326 ;; Registers used:
  1327 ;;		None
  1328 ;; Tracked objects:
  1329 ;;		On entry : 0/0
  1330 ;;		On exit  : 0/0
  1331 ;;		Unchanged: 0/0
  1332 ;; Data sizes:     COMMON   BANK0   BANK1
  1333 ;;      Params:         0       0       0
  1334 ;;      Locals:         0       0       0
  1335 ;;      Temps:          0       0       0
  1336 ;;      Totals:         0       0       0
  1337 ;;Total ram usage:        0 bytes
  1338 ;; Hardware stack levels used:    1
  1339 ;; Hardware stack levels required when called:    4
  1340 ;; This function calls:
  1341 ;;		Nothing
  1342 ;; This function is called by:
  1343 ;;		_main
  1344 ;; This function uses a non-reentrant model
  1345 ;;
  1346                           
  1347                           
  1348                           ;psect for function _TMR1_StartTimer
  1349  010A                     _TMR1_StartTimer:
  1350  010A                     l805:	
  1351                           ;incstack = 0
  1352                           ; Regs used in _TMR1_StartTimer: []
  1353                           
  1354                           
  1355                           ;mcc_generated_files/tmr1.c: 96:     T1CONbits.TMR1ON = 1;
  1356  010A  0020               	movlb	0	; select bank0
  1357  010B  1418               	bsf	24,0	;volatile
  1358  010C                     l81:
  1359  010C  0008               	return
  1360  010D                     __end_of_TMR1_StartTimer:
  1361                           
  1362                           	psect	text3
  1363  00CE                     __ptext3:	
  1364 ;; *************** function _SYSTEM_Initialize *****************
  1365 ;; Defined at:
  1366 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;		None
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;		None
  1371 ;; Return value:  Size  Location     Type
  1372 ;;                  1    wreg      void 
  1373 ;; Registers used:
  1374 ;;		wreg, status,2, status,0, pclath, cstack
  1375 ;; Tracked objects:
  1376 ;;		On entry : 0/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMMON   BANK0   BANK1
  1380 ;;      Params:         0       0       0
  1381 ;;      Locals:         0       0       0
  1382 ;;      Temps:          0       0       0
  1383 ;;      Totals:         0       0       0
  1384 ;;Total ram usage:        0 bytes
  1385 ;; Hardware stack levels used:    1
  1386 ;; Hardware stack levels required when called:    6
  1387 ;; This function calls:
  1388 ;;		_OSCILLATOR_Initialize
  1389 ;;		_PIN_MANAGER_Initialize
  1390 ;;		_TMR1_Initialize
  1391 ;;		_WDT_Initialize
  1392 ;; This function is called by:
  1393 ;;		_main
  1394 ;; This function uses a non-reentrant model
  1395 ;;
  1396                           
  1397                           
  1398                           ;psect for function _SYSTEM_Initialize
  1399  00CE                     _SYSTEM_Initialize:
  1400  00CE                     l1013:	
  1401                           ;incstack = 0
  1402                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1403                           
  1404                           
  1405                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1406  00CE  3180  20A6  3180   	fcall	_PIN_MANAGER_Initialize
  1407                           
  1408                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1409  00D1  3180  20F4  3180   	fcall	_OSCILLATOR_Initialize
  1410                           
  1411                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  1412  00D4  3181  2106  3180   	fcall	_WDT_Initialize
  1413                           
  1414                           ;mcc_generated_files/mcc.c: 56:     TMR1_Initialize();
  1415  00D7  3180  208D  3180   	fcall	_TMR1_Initialize
  1416  00DA                     l19:
  1417  00DA  0008               	return
  1418  00DB                     __end_of_SYSTEM_Initialize:
  1419                           
  1420                           	psect	text4
  1421  0106                     __ptext4:	
  1422 ;; *************** function _WDT_Initialize *****************
  1423 ;; Defined at:
  1424 ;;		line 69 in file "mcc_generated_files/mcc.c"
  1425 ;; Parameters:    Size  Location     Type
  1426 ;;		None
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;		None
  1429 ;; Return value:  Size  Location     Type
  1430 ;;                  1    wreg      void 
  1431 ;; Registers used:
  1432 ;;		wreg
  1433 ;; Tracked objects:
  1434 ;;		On entry : 0/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMMON   BANK0   BANK1
  1438 ;;      Params:         0       0       0
  1439 ;;      Locals:         0       0       0
  1440 ;;      Temps:          0       0       0
  1441 ;;      Totals:         0       0       0
  1442 ;;Total ram usage:        0 bytes
  1443 ;; Hardware stack levels used:    1
  1444 ;; Hardware stack levels required when called:    4
  1445 ;; This function calls:
  1446 ;;		Nothing
  1447 ;; This function is called by:
  1448 ;;		_SYSTEM_Initialize
  1449 ;; This function uses a non-reentrant model
  1450 ;;
  1451                           
  1452                           
  1453                           ;psect for function _WDT_Initialize
  1454  0106                     _WDT_Initialize:
  1455  0106                     l767:	
  1456                           ;incstack = 0
  1457                           ; Regs used in _WDT_Initialize: [wreg]
  1458                           
  1459                           
  1460                           ;mcc_generated_files/mcc.c: 72:     WDTCON = 0x16;
  1461  0106  3016               	movlw	22
  1462  0107  0021               	movlb	1	; select bank1
  1463  0108  0097               	movwf	23	;volatile
  1464  0109                     l25:
  1465  0109  0008               	return
  1466  010A                     __end_of_WDT_Initialize:
  1467                           
  1468                           	psect	text5
  1469  008D                     __ptext5:	
  1470 ;; *************** function _TMR1_Initialize *****************
  1471 ;; Defined at:
  1472 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;		None
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;		None
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  1    wreg      void 
  1479 ;; Registers used:
  1480 ;;		wreg, status,2, status,0, pclath, cstack
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMMON   BANK0   BANK1
  1486 ;;      Params:         0       0       0
  1487 ;;      Locals:         0       0       0
  1488 ;;      Temps:          0       0       0
  1489 ;;      Totals:         0       0       0
  1490 ;;Total ram usage:        0 bytes
  1491 ;; Hardware stack levels used:    1
  1492 ;; Hardware stack levels required when called:    5
  1493 ;; This function calls:
  1494 ;;		_TMR1_SetInterruptHandler
  1495 ;; This function is called by:
  1496 ;;		_SYSTEM_Initialize
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500                           
  1501                           ;psect for function _TMR1_Initialize
  1502  008D                     _TMR1_Initialize:
  1503  008D                     l997:	
  1504                           ;incstack = 0
  1505                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1506                           
  1507                           
  1508                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  1509  008D  0020               	movlb	0	; select bank0
  1510  008E  0199               	clrf	25	;volatile
  1511  008F                     l999:
  1512                           
  1513                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x86;
  1514  008F  3086               	movlw	134
  1515  0090  0097               	movwf	23	;volatile
  1516  0091                     l1001:
  1517                           
  1518                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xE8;
  1519  0091  30E8               	movlw	232
  1520  0092  0096               	movwf	22	;volatile
  1521  0093                     l1003:
  1522                           
  1523                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  1524  0093  1011               	bcf	17,0	;volatile
  1525  0094                     l1005:
  1526                           
  1527                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  1528  0094  0817               	movf	23,w	;volatile
  1529  0095  00F8               	movwf	_timer1ReloadVal+1	;volatile
  1530  0096  0816               	movf	22,w	;volatile
  1531  0097  00F7               	movwf	_timer1ReloadVal	;volatile
  1532  0098                     l1007:
  1533                           
  1534                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  1535  0098  0021               	movlb	1	; select bank1
  1536  0099  1411               	bsf	17,0	;volatile
  1537  009A                     l1009:
  1538                           
  1539                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  1540  009A  300D               	movlw	low _TMR1_DefaultInterruptHandler
  1541  009B  0020               	movlb	0	; select bank0
  1542  009C  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  1543  009D  3001               	movlw	high _TMR1_DefaultInterruptHandler
  1544  009E  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  1545  009F  3180  20FB  3180   	fcall	_TMR1_SetInterruptHandler
  1546  00A2                     l1011:
  1547                           
  1548                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0xC1;
  1549  00A2  30C1               	movlw	193
  1550  00A3  0020               	movlb	0	; select bank0
  1551  00A4  0098               	movwf	24	;volatile
  1552  00A5                     l78:
  1553  00A5  0008               	return
  1554  00A6                     __end_of_TMR1_Initialize:
  1555                           
  1556                           	psect	text6
  1557  00FB                     __ptext6:	
  1558 ;; *************** function _TMR1_SetInterruptHandler *****************
  1559 ;; Defined at:
  1560 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  1561 ;; Parameters:    Size  Location     Type
  1562 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  1563 ;;		 -> secondsTick(1), TMR1_DefaultInterruptHandler(1), 
  1564 ;; Auto vars:     Size  Location     Type
  1565 ;;		None
  1566 ;; Return value:  Size  Location     Type
  1567 ;;                  1    wreg      void 
  1568 ;; Registers used:
  1569 ;;		wreg
  1570 ;; Tracked objects:
  1571 ;;		On entry : 0/0
  1572 ;;		On exit  : 0/0
  1573 ;;		Unchanged: 0/0
  1574 ;; Data sizes:     COMMON   BANK0   BANK1
  1575 ;;      Params:         0       2       0
  1576 ;;      Locals:         0       0       0
  1577 ;;      Temps:          0       0       0
  1578 ;;      Totals:         0       2       0
  1579 ;;Total ram usage:        2 bytes
  1580 ;; Hardware stack levels used:    1
  1581 ;; Hardware stack levels required when called:    4
  1582 ;; This function calls:
  1583 ;;		Nothing
  1584 ;; This function is called by:
  1585 ;;		_TMR1_Initialize
  1586 ;;		_main
  1587 ;; This function uses a non-reentrant model
  1588 ;;
  1589                           
  1590                           
  1591                           ;psect for function _TMR1_SetInterruptHandler
  1592  00FB                     _TMR1_SetInterruptHandler:
  1593  00FB                     l995:	
  1594                           ;incstack = 0
  1595                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  1596                           
  1597                           
  1598                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  1599  00FB  0020               	movlb	0	; select bank0
  1600  00FC  0821               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  1601  00FD  00F6               	movwf	_TMR1_InterruptHandler+1
  1602  00FE  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  1603  00FF  00F5               	movwf	_TMR1_InterruptHandler
  1604  0100                     l111:
  1605  0100  0008               	return
  1606  0101                     __end_of_TMR1_SetInterruptHandler:
  1607                           
  1608                           	psect	text7
  1609  00A6                     __ptext7:	
  1610 ;; *************** function _PIN_MANAGER_Initialize *****************
  1611 ;; Defined at:
  1612 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;		None
  1615 ;; Auto vars:     Size  Location     Type
  1616 ;;		None
  1617 ;; Return value:  Size  Location     Type
  1618 ;;                  1    wreg      void 
  1619 ;; Registers used:
  1620 ;;		wreg, status,2
  1621 ;; Tracked objects:
  1622 ;;		On entry : 0/0
  1623 ;;		On exit  : 0/0
  1624 ;;		Unchanged: 0/0
  1625 ;; Data sizes:     COMMON   BANK0   BANK1
  1626 ;;      Params:         0       0       0
  1627 ;;      Locals:         0       0       0
  1628 ;;      Temps:          0       0       0
  1629 ;;      Totals:         0       0       0
  1630 ;;Total ram usage:        0 bytes
  1631 ;; Hardware stack levels used:    1
  1632 ;; Hardware stack levels required when called:    4
  1633 ;; This function calls:
  1634 ;;		Nothing
  1635 ;; This function is called by:
  1636 ;;		_SYSTEM_Initialize
  1637 ;; This function uses a non-reentrant model
  1638 ;;
  1639                           
  1640                           
  1641                           ;psect for function _PIN_MANAGER_Initialize
  1642  00A6                     _PIN_MANAGER_Initialize:
  1643  00A6                     l749:	
  1644                           ;incstack = 0
  1645                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1646                           
  1647                           
  1648                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1649  00A6  0022               	movlb	2	; select bank2
  1650  00A7  018C               	clrf	12	;volatile
  1651  00A8                     l751:
  1652                           
  1653                           ;mcc_generated_files/pin_manager.c: 65:     TRISA = 0x39;
  1654  00A8  3039               	movlw	57
  1655  00A9  0021               	movlb	1	; select bank1
  1656  00AA  008C               	movwf	12	;volatile
  1657  00AB                     l753:
  1658                           
  1659                           ;mcc_generated_files/pin_manager.c: 70:     ANSELA = 0x07;
  1660  00AB  3007               	movlw	7
  1661  00AC  0023               	movlb	3	; select bank3
  1662  00AD  008C               	movwf	12	;volatile
  1663                           
  1664                           ;mcc_generated_files/pin_manager.c: 75:     WPUA = 0x00;
  1665  00AE  0024               	movlb	4	; select bank4
  1666  00AF  018C               	clrf	12	;volatile
  1667  00B0                     l755:
  1668                           
  1669                           ;mcc_generated_files/pin_manager.c: 76:     OPTION_REGbits.nWPUEN = 1;
  1670  00B0  0021               	movlb	1	; select bank1
  1671  00B1  1795               	bsf	21,7	;volatile
  1672                           
  1673                           ;mcc_generated_files/pin_manager.c: 81:     ODCONA = 0x00;
  1674  00B2  0025               	movlb	5	; select bank5
  1675  00B3  018C               	clrf	12	;volatile
  1676  00B4                     l757:
  1677                           
  1678                           ;mcc_generated_files/pin_manager.c: 86:     SLRCONA = 0x37;
  1679  00B4  3037               	movlw	55
  1680  00B5  0026               	movlb	6	; select bank6
  1681  00B6  008C               	movwf	12	;volatile
  1682  00B7                     l759:
  1683                           
  1684                           ;mcc_generated_files/pin_manager.c: 91:     INLVLA = 0x3F;
  1685  00B7  303F               	movlw	63
  1686  00B8  0027               	movlb	7	; select bank7
  1687  00B9  008C               	movwf	12	;volatile
  1688                           
  1689                           ;mcc_generated_files/pin_manager.c: 96:     APFCON = 0x00;
  1690  00BA  0022               	movlb	2	; select bank2
  1691  00BB  019D               	clrf	29	;volatile
  1692  00BC                     l46:
  1693  00BC  0008               	return
  1694  00BD                     __end_of_PIN_MANAGER_Initialize:
  1695                           
  1696                           	psect	text8
  1697  00F4                     __ptext8:	
  1698 ;; *************** function _OSCILLATOR_Initialize *****************
  1699 ;; Defined at:
  1700 ;;		line 59 in file "mcc_generated_files/mcc.c"
  1701 ;; Parameters:    Size  Location     Type
  1702 ;;		None
  1703 ;; Auto vars:     Size  Location     Type
  1704 ;;		None
  1705 ;; Return value:  Size  Location     Type
  1706 ;;                  1    wreg      void 
  1707 ;; Registers used:
  1708 ;;		wreg, status,2
  1709 ;; Tracked objects:
  1710 ;;		On entry : 0/0
  1711 ;;		On exit  : 0/0
  1712 ;;		Unchanged: 0/0
  1713 ;; Data sizes:     COMMON   BANK0   BANK1
  1714 ;;      Params:         0       0       0
  1715 ;;      Locals:         0       0       0
  1716 ;;      Temps:          0       0       0
  1717 ;;      Totals:         0       0       0
  1718 ;;Total ram usage:        0 bytes
  1719 ;; Hardware stack levels used:    1
  1720 ;; Hardware stack levels required when called:    4
  1721 ;; This function calls:
  1722 ;;		Nothing
  1723 ;; This function is called by:
  1724 ;;		_SYSTEM_Initialize
  1725 ;; This function uses a non-reentrant model
  1726 ;;
  1727                           
  1728                           
  1729                           ;psect for function _OSCILLATOR_Initialize
  1730  00F4                     _OSCILLATOR_Initialize:
  1731  00F4                     l761:	
  1732                           ;incstack = 0
  1733                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1734                           
  1735                           
  1736                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x02;
  1737  00F4  3002               	movlw	2
  1738  00F5  0021               	movlb	1	; select bank1
  1739  00F6  0099               	movwf	25	;volatile
  1740  00F7                     l763:
  1741                           
  1742                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
  1743  00F7  0198               	clrf	24	;volatile
  1744  00F8                     l765:
  1745                           
  1746                           ;mcc_generated_files/mcc.c: 66:     BORCON = 0x00;
  1747  00F8  0022               	movlb	2	; select bank2
  1748  00F9  0196               	clrf	22	;volatile
  1749  00FA                     l22:
  1750  00FA  0008               	return
  1751  00FB                     __end_of_OSCILLATOR_Initialize:
  1752                           
  1753                           	psect	intentry
  1754  0004                     __pintentry:	
  1755 ;; *************** function _INTERRUPT_InterruptManager *****************
  1756 ;; Defined at:
  1757 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;		None
  1760 ;; Auto vars:     Size  Location     Type
  1761 ;;		None
  1762 ;; Return value:  Size  Location     Type
  1763 ;;                  1    wreg      void 
  1764 ;; Registers used:
  1765 ;;		wreg, status,2, status,0, pclath, cstack
  1766 ;; Tracked objects:
  1767 ;;		On entry : 0/0
  1768 ;;		On exit  : 0/0
  1769 ;;		Unchanged: 0/0
  1770 ;; Data sizes:     COMMON   BANK0   BANK1
  1771 ;;      Params:         0       0       0
  1772 ;;      Locals:         0       0       0
  1773 ;;      Temps:          0       0       0
  1774 ;;      Totals:         0       0       0
  1775 ;;Total ram usage:        0 bytes
  1776 ;; Hardware stack levels used:    1
  1777 ;; Hardware stack levels required when called:    3
  1778 ;; This function calls:
  1779 ;;		_TMR1_ISR
  1780 ;; This function is called by:
  1781 ;;		Interrupt level 1
  1782 ;; This function uses a non-reentrant model
  1783 ;;
  1784                           
  1785  0004                     _INTERRUPT_InterruptManager:
  1786                           
  1787                           ;incstack = 0
  1788  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1789                           
  1790                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  1791  0005  3180               	pagesel	$
  1792  0006                     i1l939:
  1793                           
  1794                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  1795  0006  1F0B               	btfss	11,6	;volatile
  1796  0007  2809               	goto	u10_21
  1797  0008  280A               	goto	u10_20
  1798  0009                     u10_21:
  1799  0009  2817               	goto	i1l131
  1800  000A                     u10_20:
  1801  000A                     i1l941:
  1802                           
  1803                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  1804  000A  0021               	movlb	1	; select bank1
  1805  000B  1C11               	btfss	17,0	;volatile
  1806  000C  280E               	goto	u11_21
  1807  000D  280F               	goto	u11_20
  1808  000E                     u11_21:
  1809  000E  2817               	goto	i1l131
  1810  000F                     u11_20:
  1811  000F                     i1l943:
  1812  000F  0020               	movlb	0	; select bank0
  1813  0010  1C11               	btfss	17,0	;volatile
  1814  0011  2813               	goto	u12_21
  1815  0012  2814               	goto	u12_20
  1816  0013                     u12_21:
  1817  0013  2817               	goto	i1l131
  1818  0014                     u12_20:
  1819  0014                     i1l945:
  1820                           
  1821                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR1_ISR();
  1822  0014  3180  20DB  3180   	fcall	_TMR1_ISR
  1823  0017                     i1l131:	
  1824                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  1825                           
  1826  0017  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1827  0018  0009               	retfie
  1828  0019                     __end_of_INTERRUPT_InterruptManager:
  1829                           
  1830                           	psect	text10
  1831  00DB                     __ptext10:	
  1832 ;; *************** function _TMR1_ISR *****************
  1833 ;; Defined at:
  1834 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  1835 ;; Parameters:    Size  Location     Type
  1836 ;;		None
  1837 ;; Auto vars:     Size  Location     Type
  1838 ;;		None
  1839 ;; Return value:  Size  Location     Type
  1840 ;;                  1    wreg      void 
  1841 ;; Registers used:
  1842 ;;		wreg, status,2, status,0, pclath, cstack
  1843 ;; Tracked objects:
  1844 ;;		On entry : 0/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMMON   BANK0   BANK1
  1848 ;;      Params:         0       0       0
  1849 ;;      Locals:         0       0       0
  1850 ;;      Temps:          0       0       0
  1851 ;;      Totals:         0       0       0
  1852 ;;Total ram usage:        0 bytes
  1853 ;; Hardware stack levels used:    1
  1854 ;; Hardware stack levels required when called:    2
  1855 ;; This function calls:
  1856 ;;		_TMR1_CallBack
  1857 ;;		_TMR1_WriteTimer
  1858 ;; This function is called by:
  1859 ;;		_INTERRUPT_InterruptManager
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           
  1863                           
  1864                           ;psect for function _TMR1_ISR
  1865  00DB                     _TMR1_ISR:
  1866  00DB                     i1l933:	
  1867                           ;incstack = 0
  1868                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  1869                           
  1870                           
  1871                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  1872  00DB  0020               	movlb	0	; select bank0
  1873  00DC  1011               	bcf	17,0	;volatile
  1874  00DD                     i1l935:
  1875                           
  1876                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  1877  00DD  0878               	movf	_timer1ReloadVal+1,w	;volatile
  1878  00DE  00FA               	movwf	TMR1_WriteTimer@timerVal+1
  1879  00DF  0877               	movf	_timer1ReloadVal,w	;volatile
  1880  00E0  00F9               	movwf	TMR1_WriteTimer@timerVal
  1881  00E1  3180  20BD  3180   	fcall	_TMR1_WriteTimer
  1882                           
  1883                           ;mcc_generated_files/tmr1.c: 166:     TMR1_CallBack();
  1884  00E4  3180  20E8  3180   	fcall	_TMR1_CallBack
  1885  00E7                     i1l104:
  1886  00E7  0008               	return
  1887  00E8                     __end_of_TMR1_ISR:
  1888                           
  1889                           	psect	text11
  1890  00BD                     __ptext11:	
  1891 ;; *************** function _TMR1_WriteTimer *****************
  1892 ;; Defined at:
  1893 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;  timerVal        2    0[COMMON] unsigned short 
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;		None
  1898 ;; Return value:  Size  Location     Type
  1899 ;;                  1    wreg      void 
  1900 ;; Registers used:
  1901 ;;		wreg, status,2
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMMON   BANK0   BANK1
  1907 ;;      Params:         2       0       0
  1908 ;;      Locals:         0       0       0
  1909 ;;      Temps:          0       0       0
  1910 ;;      Totals:         2       0       0
  1911 ;;Total ram usage:        2 bytes
  1912 ;; Hardware stack levels used:    1
  1913 ;; This function calls:
  1914 ;;		Nothing
  1915 ;; This function is called by:
  1916 ;;		_TMR1_ISR
  1917 ;;		_TMR1_Reload
  1918 ;; This function uses a non-reentrant model
  1919 ;;
  1920                           
  1921                           
  1922                           ;psect for function _TMR1_WriteTimer
  1923  00BD                     _TMR1_WriteTimer:
  1924  00BD                     i1l917:	
  1925                           ;incstack = 0
  1926                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  1927                           
  1928                           
  1929                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  1930  00BD  0020               	movlb	0	; select bank0
  1931  00BE  1D18               	btfss	24,2	;volatile
  1932  00BF  28C1               	goto	u9_21
  1933  00C0  28C2               	goto	u9_20
  1934  00C1                     u9_21:
  1935  00C1  28C9               	goto	i1l927
  1936  00C2                     u9_20:
  1937  00C2                     i1l919:
  1938                           
  1939                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  1940  00C2  1018               	bcf	24,0	;volatile
  1941  00C3                     i1l921:
  1942                           
  1943                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (timerVal >> 8);
  1944  00C3  087A               	movf	TMR1_WriteTimer@timerVal+1,w
  1945  00C4  0097               	movwf	23	;volatile
  1946  00C5                     i1l923:
  1947                           
  1948                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = timerVal;
  1949  00C5  0879               	movf	TMR1_WriteTimer@timerVal,w
  1950  00C6  0096               	movwf	22	;volatile
  1951  00C7                     i1l925:
  1952                           
  1953                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  1954  00C7  1418               	bsf	24,0	;volatile
  1955                           
  1956                           ;mcc_generated_files/tmr1.c: 133:     }
  1957  00C8  28CD               	goto	i1l92
  1958  00C9                     i1l927:
  1959                           
  1960                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (timerVal >> 8);
  1961  00C9  087A               	movf	TMR1_WriteTimer@timerVal+1,w
  1962  00CA  0097               	movwf	23	;volatile
  1963  00CB                     i1l929:
  1964                           
  1965                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = timerVal;
  1966  00CB  0879               	movf	TMR1_WriteTimer@timerVal,w
  1967  00CC  0096               	movwf	22	;volatile
  1968  00CD                     i1l92:
  1969  00CD  0008               	return
  1970  00CE                     __end_of_TMR1_WriteTimer:
  1971                           
  1972                           	psect	text12
  1973  00E8                     __ptext12:	
  1974 ;; *************** function _TMR1_CallBack *****************
  1975 ;; Defined at:
  1976 ;;		line 169 in file "mcc_generated_files/tmr1.c"
  1977 ;; Parameters:    Size  Location     Type
  1978 ;;		None
  1979 ;; Auto vars:     Size  Location     Type
  1980 ;;		None
  1981 ;; Return value:  Size  Location     Type
  1982 ;;                  1    wreg      void 
  1983 ;; Registers used:
  1984 ;;		wreg, status,2, status,0, pclath, cstack
  1985 ;; Tracked objects:
  1986 ;;		On entry : 0/0
  1987 ;;		On exit  : 0/0
  1988 ;;		Unchanged: 0/0
  1989 ;; Data sizes:     COMMON   BANK0   BANK1
  1990 ;;      Params:         0       0       0
  1991 ;;      Locals:         0       0       0
  1992 ;;      Temps:          0       0       0
  1993 ;;      Totals:         0       0       0
  1994 ;;Total ram usage:        0 bytes
  1995 ;; Hardware stack levels used:    1
  1996 ;; Hardware stack levels required when called:    1
  1997 ;; This function calls:
  1998 ;;		Absolute function
  1999 ;;		_TMR1_DefaultInterruptHandler
  2000 ;;		_secondsTick
  2001 ;; This function is called by:
  2002 ;;		_TMR1_ISR
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006                           
  2007                           ;psect for function _TMR1_CallBack
  2008  00E8                     _TMR1_CallBack:
  2009  00E8                     i1l799:	
  2010                           ;incstack = 0
  2011                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
  2012                           
  2013                           
  2014                           ;mcc_generated_files/tmr1.c: 172:     if(TMR1_InterruptHandler)
  2015  00E8  0875               	movf	_TMR1_InterruptHandler,w
  2016  00E9  0476               	iorwf	_TMR1_InterruptHandler+1,w
  2017  00EA  1903               	btfsc	3,2
  2018  00EB  28ED               	goto	u2_21
  2019  00EC  28EE               	goto	u2_20
  2020  00ED                     u2_21:
  2021  00ED  28F3               	goto	i1l108
  2022  00EE                     u2_20:
  2023  00EE                     i1l801:
  2024                           
  2025                           ;mcc_generated_files/tmr1.c: 173:     {;mcc_generated_files/tmr1.c: 174:         TMR1_In
      +                          terruptHandler();
  2026  00EE  0876               	movf	_TMR1_InterruptHandler+1,w
  2027  00EF  008A               	movwf	10
  2028  00F0  0875               	movf	_TMR1_InterruptHandler,w
  2029  00F1  000A               	callw
  2030  00F2  3180               	pagesel	$
  2031  00F3                     i1l108:
  2032  00F3  0008               	return
  2033  00F4                     __end_of_TMR1_CallBack:
  2034                           
  2035                           	psect	text13
  2036  010D                     __ptext13:	
  2037 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  2038 ;; Defined at:
  2039 ;;		line 182 in file "mcc_generated_files/tmr1.c"
  2040 ;; Parameters:    Size  Location     Type
  2041 ;;		None
  2042 ;; Auto vars:     Size  Location     Type
  2043 ;;		None
  2044 ;; Return value:  Size  Location     Type
  2045 ;;                  1    wreg      void 
  2046 ;; Registers used:
  2047 ;;		None
  2048 ;; Tracked objects:
  2049 ;;		On entry : 0/0
  2050 ;;		On exit  : 0/0
  2051 ;;		Unchanged: 0/0
  2052 ;; Data sizes:     COMMON   BANK0   BANK1
  2053 ;;      Params:         0       0       0
  2054 ;;      Locals:         0       0       0
  2055 ;;      Temps:          0       0       0
  2056 ;;      Totals:         0       0       0
  2057 ;;Total ram usage:        0 bytes
  2058 ;; Hardware stack levels used:    1
  2059 ;; This function calls:
  2060 ;;		Nothing
  2061 ;; This function is called by:
  2062 ;;		_TMR1_Initialize
  2063 ;;		_TMR1_CallBack
  2064 ;; This function uses a non-reentrant model
  2065 ;;
  2066                           
  2067                           
  2068                           ;psect for function _TMR1_DefaultInterruptHandler
  2069  010D                     _TMR1_DefaultInterruptHandler:
  2070  010D                     i1l114:	
  2071                           ;incstack = 0
  2072                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  2073                           
  2074  010D  0008               	return
  2075  010E                     __end_of_TMR1_DefaultInterruptHandler:
  2076                           
  2077                           	psect	text14
  2078  0101                     __ptext14:	
  2079 ;; *************** function _secondsTick *****************
  2080 ;; Defined at:
  2081 ;;		line 197 in file "main.c"
  2082 ;; Parameters:    Size  Location     Type
  2083 ;;		None
  2084 ;; Auto vars:     Size  Location     Type
  2085 ;;		None
  2086 ;; Return value:  Size  Location     Type
  2087 ;;                  1    wreg      void 
  2088 ;; Registers used:
  2089 ;;		wreg
  2090 ;; Tracked objects:
  2091 ;;		On entry : 0/0
  2092 ;;		On exit  : 0/0
  2093 ;;		Unchanged: 0/0
  2094 ;; Data sizes:     COMMON   BANK0   BANK1
  2095 ;;      Params:         0       0       0
  2096 ;;      Locals:         0       0       0
  2097 ;;      Temps:          0       0       0
  2098 ;;      Totals:         0       0       0
  2099 ;;Total ram usage:        0 bytes
  2100 ;; Hardware stack levels used:    1
  2101 ;; This function calls:
  2102 ;;		Nothing
  2103 ;; This function is called by:
  2104 ;;		_main
  2105 ;;		_TMR1_CallBack
  2106 ;; This function uses a non-reentrant model
  2107 ;;
  2108                           
  2109                           
  2110                           ;psect for function _secondsTick
  2111  0101                     _secondsTick:
  2112  0101                     i1l747:	
  2113                           ;incstack = 0
  2114                           ; Regs used in _secondsTick: [wreg]
  2115                           
  2116                           
  2117                           ;main.c: 199:     currentSecondsTick++;
  2118  0101  3001               	movlw	1
  2119  0102  07F2               	addwf	_currentSecondsTick,f	;volatile
  2120  0103  3000               	movlw	0
  2121  0104  3DF3               	addwfc	_currentSecondsTick+1,f	;volatile
  2122  0105                     i1l219:
  2123  0105  0008               	return
  2124  0106                     __end_of_secondsTick:
  2125  007E                     btemp	set	126	;btemp
  2126  007E                     int$flags	set	126
  2127  007E                     wtemp0	set	126
  2128                           
  2129                           	psect	config
  2130                           
  2131                           ;Config register CONFIG1 @ 0x8007
  2132                           ;	
  2133                           ;	FOSC = INTOSC, INTOSC oscillator; I/O function on CLKIN pin
  2134                           ;	Watchdog Timer Enable
  2135                           ;	WDTE = OFF, WDT disabled
  2136                           ;	Power-up Timer Enable
  2137                           ;	PWRTE = OFF, PWRT disabled
  2138                           ;	MCLR Pin Function Select
  2139                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2140                           ;	Flash Program Memory Code Protection
  2141                           ;	CP = OFF, Program memory code protection is disabled
  2142                           ;	Brown-out Reset Enable
  2143                           ;	BOREN = ON, Brown-out Reset enabled
  2144                           ;	Clock Out Enable
  2145                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2146  8007                     	org	32775
  2147  8007  3FE4               	dw	16356
  2148                           
  2149                           ;Config register CONFIG2 @ 0x8008
  2150                           ;	Flash Memory Self-Write Protection
  2151                           ;	WRT = OFF, Write protection off
  2152                           ;	PLL Enable
  2153                           ;	PLLEN = OFF, 4x PLL disabled
  2154                           ;	Stack Overflow/Underflow Reset Enable
  2155                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2156                           ;	Brown-out Reset Voltage Selection
  2157                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2158                           ;	Low Power Brown-out Reset enable bit
  2159                           ;	LPBOREN = OFF, LPBOR is disabled
  2160                           ;	Low-Voltage Programming Enable
  2161                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  2162  8008                     	org	32776
  2163  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3      12
    BANK0            80      2       2
    BANK1            32      0       0

Pointer List with Targets:

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> secondsTick(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> secondsTick(), Absolute function(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_setState

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->_TMR1_SetInterruptHandler
    _main->_setState
    _TMR1_Initialize->_TMR1_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     488
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
                           _setState
 ---------------------------------------------------------------------------------
 (1) _setState                                             3     3      0      66
                                              2 COMMON     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     211
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0     240
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     240
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                        _secondsTick *
 ---------------------------------------------------------------------------------
 (7) _secondsTick                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize
   _TMR1_SetInterruptHandler
   _TMR1_StartTimer
   _setState

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _secondsTick *
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      3       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       E       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2       2       6        2.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0       E       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Aug 13 07:06:05 2020

                                      l22 00FA                                        l25 0109  
                                      l19 00DA                                        l46 00BC  
                                      l81 010C                                        l78 00A5  
                                     l111 0100                                       l210 003A  
                                     l203 0034                                       l213 0042  
                                     l205 0036                                       l215 0044  
                                     l208 0038                                       l160 007C  
                                     l162 0081                                       l163 007F  
                                     l166 0086                                       l169 0089  
                                     l194 0062                                       l197 002A  
                                     l199 002C                                       l805 010A  
                                     l751 00A8                                       l761 00F4  
                                     l753 00AB                                       l763 00F7  
                                     l755 00B0                                       l765 00F8  
                                     l757 00B4                                       l749 00A6  
                                     l759 00B7                                       l767 0106  
                                     l995 00FB                                       l997 008D  
                                     l999 008F                                       u150 0029  
                                     u151 0028                                       u160 007C  
                                     u161 007B                                       u170 0086  
                                     u171 0085                           _timer1ReloadVal 0077  
                                    l1001 0091                                      l1011 00A2  
                                    l1003 0093                                      l1005 0094  
                                    l1013 00CE                                      l1021 003B  
                                    l1007 0098                                      l1015 0023  
                                    l1009 009A                                      l1025 0046  
                                    l1041 0073                                      l1033 0063  
                                    l1027 005D                                      l1019 002D  
                                    l1043 0077                                      l1035 0066  
                                    l1037 0067                                      l1039 0070  
                                    l1081 004F                                      _LATA 010C  
                                    i1l92 00CD                                      _WPUA 020C  
                                    u2_20 00EE                                      u2_21 00ED  
                                    u9_20 00C2                                      u9_21 00C1  
                                    _main 0063                                      btemp 007E  
                                    start 0019                ??_TMR1_SetInterruptHandler 007B  
          __size_of_OSCILLATOR_Initialize 0007             __end_of_OSCILLATOR_Initialize 00FB  
                                   ?_main 0079                           _TMR1_StartTimer 010A  
                                   _T1CON 0018                                     i1l104 00E7  
                                   i1l114 010D                                     i1l131 0017  
                                   i1l108 00F3                                     i1l219 0105  
                                   i1l801 00EE                                     i1l921 00C3  
                                   i1l747 0101                                     i1l923 00C5  
                                   i1l925 00C7                                     i1l917 00BD  
                                   i1l933 00DB                                     i1l941 000A  
                                   i1l919 00C2                                     i1l927 00C9  
                                   i1l935 00DD                                     i1l943 000F  
                                   i1l929 00CB                                     i1l945 0014  
                                   i1l939 0006                                     i1l799 00E8  
                                   u10_20 000A                                     u10_21 0009  
                                   u11_20 000F                                     u11_21 000E  
                                   u12_20 0014                                     u12_21 0013  
                                   _TMR1H 0017                                     _TMR1L 0016  
                                   _TRISA 008C                          __end_of_TMR1_ISR 00E8  
                          _WDT_Initialize 0106                   __end_of_TMR1_Initialize 00A6  
                                   pclath 000A                                     status 0003  
                                   wtemp0 007E                           _TMR1_WriteTimer 00BD  
                         __initialization 001A                              __end_of_main 008D  
             ?_INTERRUPT_InterruptManager 0079                                    ??_main 007C  
                            ?_secondsTick 0079                    __end_of_WDT_Initialize 010A  
                                  _APFCON 011D                                    _ANSELA 018C  
                                  _BORCON 0116                                    _T1GCON 0019  
                 TMR1_WriteTimer@timerVal 0079                                    _ODCONA 028C  
                                  _INLVLA 038C                                    _OSCCON 0099  
                                  _WDTCON 0097      __end_of_TMR1_DefaultInterruptHandler 010E  
   __size_of_TMR1_DefaultInterruptHandler 0001              _TMR1_DefaultInterruptHandler 010D  
                 __end_of_TMR1_StartTimer 010D                          __end_of_setState 0063  
                         ?_WDT_Initialize 0079  TMR1_SetInterruptHandler@InterruptHandler 0020  
                 __end_of_TMR1_WriteTimer 00CE                     __end_of_TMR1_CallBack 00F4  
                        ?_TMR1_Initialize 0079                         _SYSTEM_Initialize 00CE  
                 __end_of__initialization 001F                        ?_SYSTEM_Initialize 0079  
                          __pcstackCOMMON 0079                       ??_SYSTEM_Initialize 007B  
                               ?_TMR1_ISR 0079             ?_TMR1_DefaultInterruptHandler 0079  
                          _OPTION_REGbits 0095                 __end_of_SYSTEM_Initialize 00DB  
                              __pnvCOMMON 0075                                __pmaintext 0063  
                        ?_TMR1_StartTimer 0079                                ??_TMR1_ISR 007B  
                              __pintentry 0004                                   _OSCTUNE 0098  
                                 _SLRCONA 030C                      __size_of_secondsTick 0005  
                        ?_TMR1_WriteTimer 0079                                 ?_setState 0079  
                                 __ptext1 0022                                   __ptext2 010A  
                                 __ptext3 00CE                                   __ptext4 0106  
                                 __ptext5 008D                                   __ptext6 00FB  
                                 __ptext7 00A6                                   __ptext8 00F4  
          ??_TMR1_DefaultInterruptHandler 0079                                 _T1CONbits 0018  
                   _OSCILLATOR_Initialize 00F4         __size_of_TMR1_SetInterruptHandler 0006  
                ??_PIN_MANAGER_Initialize 007B                 ?_TMR1_SetInterruptHandler 0020  
              __size_of_SYSTEM_Initialize 000D                      end_of_initialization 001F  
                              ??_setState 0020                          ??_WDT_Initialize 007B  
                               _PORTAbits 000C                         __size_of_TMR1_ISR 000D  
                  ?_OSCILLATOR_Initialize 0079                       start_initialization 001A  
         __size_of_PIN_MANAGER_Initialize 0017                  __size_of_TMR1_Initialize 0019  
                  __size_of_TMR1_CallBack 000C                               __pbssCOMMON 0070  
                               ___latbits 0000                             __pcstackBANK0 0020  
                        setState@newState 007B                              _currentState 0074  
                  _PIN_MANAGER_Initialize 00A6          __end_of_TMR1_SetInterruptHandler 0101  
                       __size_of_setState 0041              ??_INTERRUPT_InterruptManager 007B  
                __size_of_TMR1_StartTimer 0003                             ??_secondsTick 0079  
                           _TMR1_CallBack 00E8                                  _LATAbits 010C  
                                _PIE1bits 0091                  __size_of_TMR1_WriteTimer 0011  
     __size_of_INTERRUPT_InterruptManager 0015                                  _PIR1bits 0011  
                                _TMR1_ISR 00DB                         ??_TMR1_Initialize 007B  
                      _currentSecondsTick 0072                       __end_of_secondsTick 0106  
                          ?_TMR1_CallBack 0079                   ??_OSCILLATOR_Initialize 007B  
                _TMR1_SetInterruptHandler 00FB                     _TMR1_InterruptHandler 0075  
                                __ptext10 00DB                                  __ptext11 00BD  
                                __ptext12 00E8                                  __ptext13 010D  
                              _T1GCONbits 0019                                  __ptext14 0101  
                       ??_TMR1_StartTimer 007B                             __size_of_main 002A  
                                _setState 0022                       _demandedSecondsTick 0070  
                                int$flags 007E        __end_of_INTERRUPT_InterruptManager 0019  
              _INTERRUPT_InterruptManager 0004                         ??_TMR1_WriteTimer 007B  
                              _INTCONbits 000B                               _secondsTick 0101  
                         ??_TMR1_CallBack 0079                   __size_of_WDT_Initialize 0004  
                                intlevel1 0000                   ?_PIN_MANAGER_Initialize 0079  
          __end_of_PIN_MANAGER_Initialize 00BD                           _TMR1_Initialize 008D  
