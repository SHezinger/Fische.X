

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Aug 13 10:29:50 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	12F1571
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.20
    28                           ; Generated 09/04/2020 GMT
    29                           ; 
    30                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC12F1571 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  008C                     	;# 
    87  0091                     	;# 
    88  0092                     	;# 
    89  0093                     	;# 
    90  0095                     	;# 
    91  0096                     	;# 
    92  0097                     	;# 
    93  0098                     	;# 
    94  0099                     	;# 
    95  009A                     	;# 
    96  009B                     	;# 
    97  009B                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  0111                     	;# 
   104  0112                     	;# 
   105  0115                     	;# 
   106  0116                     	;# 
   107  0117                     	;# 
   108  0118                     	;# 
   109  0119                     	;# 
   110  011D                     	;# 
   111  011D                     	;# 
   112  018C                     	;# 
   113  0191                     	;# 
   114  0191                     	;# 
   115  0192                     	;# 
   116  0193                     	;# 
   117  0193                     	;# 
   118  0194                     	;# 
   119  0195                     	;# 
   120  0196                     	;# 
   121  0197                     	;# 
   122  020C                     	;# 
   123  028C                     	;# 
   124  030C                     	;# 
   125  038C                     	;# 
   126  0391                     	;# 
   127  0392                     	;# 
   128  0393                     	;# 
   129  0691                     	;# 
   130  0692                     	;# 
   131  0693                     	;# 
   132  0694                     	;# 
   133  0695                     	;# 
   134  0D8E                     	;# 
   135  0D8F                     	;# 
   136  0D90                     	;# 
   137  0D91                     	;# 
   138  0D91                     	;# 
   139  0D92                     	;# 
   140  0D93                     	;# 
   141  0D93                     	;# 
   142  0D94                     	;# 
   143  0D95                     	;# 
   144  0D95                     	;# 
   145  0D96                     	;# 
   146  0D97                     	;# 
   147  0D97                     	;# 
   148  0D98                     	;# 
   149  0D99                     	;# 
   150  0D99                     	;# 
   151  0D9A                     	;# 
   152  0D9B                     	;# 
   153  0D9C                     	;# 
   154  0D9C                     	;# 
   155  0D9D                     	;# 
   156  0D9D                     	;# 
   157  0D9E                     	;# 
   158  0D9F                     	;# 
   159  0DA0                     	;# 
   160  0DA1                     	;# 
   161  0DA1                     	;# 
   162  0DA2                     	;# 
   163  0DA3                     	;# 
   164  0DA3                     	;# 
   165  0DA4                     	;# 
   166  0DA5                     	;# 
   167  0DA5                     	;# 
   168  0DA6                     	;# 
   169  0DA7                     	;# 
   170  0DA7                     	;# 
   171  0DA8                     	;# 
   172  0DA9                     	;# 
   173  0DA9                     	;# 
   174  0DAA                     	;# 
   175  0DAB                     	;# 
   176  0DAC                     	;# 
   177  0DAC                     	;# 
   178  0DAD                     	;# 
   179  0DAD                     	;# 
   180  0DAE                     	;# 
   181  0DAF                     	;# 
   182  0DB0                     	;# 
   183  0DB1                     	;# 
   184  0DB1                     	;# 
   185  0DB2                     	;# 
   186  0DB3                     	;# 
   187  0DB3                     	;# 
   188  0DB4                     	;# 
   189  0DB5                     	;# 
   190  0DB5                     	;# 
   191  0DB6                     	;# 
   192  0DB7                     	;# 
   193  0DB7                     	;# 
   194  0DB8                     	;# 
   195  0DB9                     	;# 
   196  0DB9                     	;# 
   197  0DBA                     	;# 
   198  0DBB                     	;# 
   199  0DBC                     	;# 
   200  0DBC                     	;# 
   201  0DBD                     	;# 
   202  0DBD                     	;# 
   203  0DBE                     	;# 
   204  0DBF                     	;# 
   205  0DC0                     	;# 
   206  0FE4                     	;# 
   207  0FE5                     	;# 
   208  0FE6                     	;# 
   209  0FE7                     	;# 
   210  0FE8                     	;# 
   211  0FE8                     	;# 
   212  0FE9                     	;# 
   213  0FEA                     	;# 
   214  0FEA                     	;# 
   215  0FEB                     	;# 
   216  0FED                     	;# 
   217  0FEE                     	;# 
   218  0FEE                     	;# 
   219  0FEF                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  0011                     	;# 
   234  0012                     	;# 
   235  0013                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  008C                     	;# 
   246  0091                     	;# 
   247  0092                     	;# 
   248  0093                     	;# 
   249  0095                     	;# 
   250  0096                     	;# 
   251  0097                     	;# 
   252  0098                     	;# 
   253  0099                     	;# 
   254  009A                     	;# 
   255  009B                     	;# 
   256  009B                     	;# 
   257  009C                     	;# 
   258  009D                     	;# 
   259  009E                     	;# 
   260  009F                     	;# 
   261  010C                     	;# 
   262  0111                     	;# 
   263  0112                     	;# 
   264  0115                     	;# 
   265  0116                     	;# 
   266  0117                     	;# 
   267  0118                     	;# 
   268  0119                     	;# 
   269  011D                     	;# 
   270  011D                     	;# 
   271  018C                     	;# 
   272  0191                     	;# 
   273  0191                     	;# 
   274  0192                     	;# 
   275  0193                     	;# 
   276  0193                     	;# 
   277  0194                     	;# 
   278  0195                     	;# 
   279  0196                     	;# 
   280  0197                     	;# 
   281  020C                     	;# 
   282  028C                     	;# 
   283  030C                     	;# 
   284  038C                     	;# 
   285  0391                     	;# 
   286  0392                     	;# 
   287  0393                     	;# 
   288  0691                     	;# 
   289  0692                     	;# 
   290  0693                     	;# 
   291  0694                     	;# 
   292  0695                     	;# 
   293  0D8E                     	;# 
   294  0D8F                     	;# 
   295  0D90                     	;# 
   296  0D91                     	;# 
   297  0D91                     	;# 
   298  0D92                     	;# 
   299  0D93                     	;# 
   300  0D93                     	;# 
   301  0D94                     	;# 
   302  0D95                     	;# 
   303  0D95                     	;# 
   304  0D96                     	;# 
   305  0D97                     	;# 
   306  0D97                     	;# 
   307  0D98                     	;# 
   308  0D99                     	;# 
   309  0D99                     	;# 
   310  0D9A                     	;# 
   311  0D9B                     	;# 
   312  0D9C                     	;# 
   313  0D9C                     	;# 
   314  0D9D                     	;# 
   315  0D9D                     	;# 
   316  0D9E                     	;# 
   317  0D9F                     	;# 
   318  0DA0                     	;# 
   319  0DA1                     	;# 
   320  0DA1                     	;# 
   321  0DA2                     	;# 
   322  0DA3                     	;# 
   323  0DA3                     	;# 
   324  0DA4                     	;# 
   325  0DA5                     	;# 
   326  0DA5                     	;# 
   327  0DA6                     	;# 
   328  0DA7                     	;# 
   329  0DA7                     	;# 
   330  0DA8                     	;# 
   331  0DA9                     	;# 
   332  0DA9                     	;# 
   333  0DAA                     	;# 
   334  0DAB                     	;# 
   335  0DAC                     	;# 
   336  0DAC                     	;# 
   337  0DAD                     	;# 
   338  0DAD                     	;# 
   339  0DAE                     	;# 
   340  0DAF                     	;# 
   341  0DB0                     	;# 
   342  0DB1                     	;# 
   343  0DB1                     	;# 
   344  0DB2                     	;# 
   345  0DB3                     	;# 
   346  0DB3                     	;# 
   347  0DB4                     	;# 
   348  0DB5                     	;# 
   349  0DB5                     	;# 
   350  0DB6                     	;# 
   351  0DB7                     	;# 
   352  0DB7                     	;# 
   353  0DB8                     	;# 
   354  0DB9                     	;# 
   355  0DB9                     	;# 
   356  0DBA                     	;# 
   357  0DBB                     	;# 
   358  0DBC                     	;# 
   359  0DBC                     	;# 
   360  0DBD                     	;# 
   361  0DBD                     	;# 
   362  0DBE                     	;# 
   363  0DBF                     	;# 
   364  0DC0                     	;# 
   365  0FE4                     	;# 
   366  0FE5                     	;# 
   367  0FE6                     	;# 
   368  0FE7                     	;# 
   369  0FE8                     	;# 
   370  0FE8                     	;# 
   371  0FE9                     	;# 
   372  0FEA                     	;# 
   373  0FEA                     	;# 
   374  0FEB                     	;# 
   375  0FED                     	;# 
   376  0FEE                     	;# 
   377  0FEE                     	;# 
   378  0FEF                     	;# 
   379  0000                     	;# 
   380  0001                     	;# 
   381  0002                     	;# 
   382  0003                     	;# 
   383  0004                     	;# 
   384  0005                     	;# 
   385  0006                     	;# 
   386  0007                     	;# 
   387  0008                     	;# 
   388  0009                     	;# 
   389  000A                     	;# 
   390  000B                     	;# 
   391  000C                     	;# 
   392  0011                     	;# 
   393  0012                     	;# 
   394  0013                     	;# 
   395  0015                     	;# 
   396  0016                     	;# 
   397  0016                     	;# 
   398  0017                     	;# 
   399  0018                     	;# 
   400  0019                     	;# 
   401  001A                     	;# 
   402  001B                     	;# 
   403  001C                     	;# 
   404  008C                     	;# 
   405  0091                     	;# 
   406  0092                     	;# 
   407  0093                     	;# 
   408  0095                     	;# 
   409  0096                     	;# 
   410  0097                     	;# 
   411  0098                     	;# 
   412  0099                     	;# 
   413  009A                     	;# 
   414  009B                     	;# 
   415  009B                     	;# 
   416  009C                     	;# 
   417  009D                     	;# 
   418  009E                     	;# 
   419  009F                     	;# 
   420  010C                     	;# 
   421  0111                     	;# 
   422  0112                     	;# 
   423  0115                     	;# 
   424  0116                     	;# 
   425  0117                     	;# 
   426  0118                     	;# 
   427  0119                     	;# 
   428  011D                     	;# 
   429  011D                     	;# 
   430  018C                     	;# 
   431  0191                     	;# 
   432  0191                     	;# 
   433  0192                     	;# 
   434  0193                     	;# 
   435  0193                     	;# 
   436  0194                     	;# 
   437  0195                     	;# 
   438  0196                     	;# 
   439  0197                     	;# 
   440  020C                     	;# 
   441  028C                     	;# 
   442  030C                     	;# 
   443  038C                     	;# 
   444  0391                     	;# 
   445  0392                     	;# 
   446  0393                     	;# 
   447  0691                     	;# 
   448  0692                     	;# 
   449  0693                     	;# 
   450  0694                     	;# 
   451  0695                     	;# 
   452  0D8E                     	;# 
   453  0D8F                     	;# 
   454  0D90                     	;# 
   455  0D91                     	;# 
   456  0D91                     	;# 
   457  0D92                     	;# 
   458  0D93                     	;# 
   459  0D93                     	;# 
   460  0D94                     	;# 
   461  0D95                     	;# 
   462  0D95                     	;# 
   463  0D96                     	;# 
   464  0D97                     	;# 
   465  0D97                     	;# 
   466  0D98                     	;# 
   467  0D99                     	;# 
   468  0D99                     	;# 
   469  0D9A                     	;# 
   470  0D9B                     	;# 
   471  0D9C                     	;# 
   472  0D9C                     	;# 
   473  0D9D                     	;# 
   474  0D9D                     	;# 
   475  0D9E                     	;# 
   476  0D9F                     	;# 
   477  0DA0                     	;# 
   478  0DA1                     	;# 
   479  0DA1                     	;# 
   480  0DA2                     	;# 
   481  0DA3                     	;# 
   482  0DA3                     	;# 
   483  0DA4                     	;# 
   484  0DA5                     	;# 
   485  0DA5                     	;# 
   486  0DA6                     	;# 
   487  0DA7                     	;# 
   488  0DA7                     	;# 
   489  0DA8                     	;# 
   490  0DA9                     	;# 
   491  0DA9                     	;# 
   492  0DAA                     	;# 
   493  0DAB                     	;# 
   494  0DAC                     	;# 
   495  0DAC                     	;# 
   496  0DAD                     	;# 
   497  0DAD                     	;# 
   498  0DAE                     	;# 
   499  0DAF                     	;# 
   500  0DB0                     	;# 
   501  0DB1                     	;# 
   502  0DB1                     	;# 
   503  0DB2                     	;# 
   504  0DB3                     	;# 
   505  0DB3                     	;# 
   506  0DB4                     	;# 
   507  0DB5                     	;# 
   508  0DB5                     	;# 
   509  0DB6                     	;# 
   510  0DB7                     	;# 
   511  0DB7                     	;# 
   512  0DB8                     	;# 
   513  0DB9                     	;# 
   514  0DB9                     	;# 
   515  0DBA                     	;# 
   516  0DBB                     	;# 
   517  0DBC                     	;# 
   518  0DBC                     	;# 
   519  0DBD                     	;# 
   520  0DBD                     	;# 
   521  0DBE                     	;# 
   522  0DBF                     	;# 
   523  0DC0                     	;# 
   524  0FE4                     	;# 
   525  0FE5                     	;# 
   526  0FE6                     	;# 
   527  0FE7                     	;# 
   528  0FE8                     	;# 
   529  0FE8                     	;# 
   530  0FE9                     	;# 
   531  0FEA                     	;# 
   532  0FEA                     	;# 
   533  0FEB                     	;# 
   534  0FED                     	;# 
   535  0FEE                     	;# 
   536  0FEE                     	;# 
   537  0FEF                     	;# 
   538  0000                     	;# 
   539  0001                     	;# 
   540  0002                     	;# 
   541  0003                     	;# 
   542  0004                     	;# 
   543  0005                     	;# 
   544  0006                     	;# 
   545  0007                     	;# 
   546  0008                     	;# 
   547  0009                     	;# 
   548  000A                     	;# 
   549  000B                     	;# 
   550  000C                     	;# 
   551  0011                     	;# 
   552  0012                     	;# 
   553  0013                     	;# 
   554  0015                     	;# 
   555  0016                     	;# 
   556  0016                     	;# 
   557  0017                     	;# 
   558  0018                     	;# 
   559  0019                     	;# 
   560  001A                     	;# 
   561  001B                     	;# 
   562  001C                     	;# 
   563  008C                     	;# 
   564  0091                     	;# 
   565  0092                     	;# 
   566  0093                     	;# 
   567  0095                     	;# 
   568  0096                     	;# 
   569  0097                     	;# 
   570  0098                     	;# 
   571  0099                     	;# 
   572  009A                     	;# 
   573  009B                     	;# 
   574  009B                     	;# 
   575  009C                     	;# 
   576  009D                     	;# 
   577  009E                     	;# 
   578  009F                     	;# 
   579  010C                     	;# 
   580  0111                     	;# 
   581  0112                     	;# 
   582  0115                     	;# 
   583  0116                     	;# 
   584  0117                     	;# 
   585  0118                     	;# 
   586  0119                     	;# 
   587  011D                     	;# 
   588  011D                     	;# 
   589  018C                     	;# 
   590  0191                     	;# 
   591  0191                     	;# 
   592  0192                     	;# 
   593  0193                     	;# 
   594  0193                     	;# 
   595  0194                     	;# 
   596  0195                     	;# 
   597  0196                     	;# 
   598  0197                     	;# 
   599  020C                     	;# 
   600  028C                     	;# 
   601  030C                     	;# 
   602  038C                     	;# 
   603  0391                     	;# 
   604  0392                     	;# 
   605  0393                     	;# 
   606  0691                     	;# 
   607  0692                     	;# 
   608  0693                     	;# 
   609  0694                     	;# 
   610  0695                     	;# 
   611  0D8E                     	;# 
   612  0D8F                     	;# 
   613  0D90                     	;# 
   614  0D91                     	;# 
   615  0D91                     	;# 
   616  0D92                     	;# 
   617  0D93                     	;# 
   618  0D93                     	;# 
   619  0D94                     	;# 
   620  0D95                     	;# 
   621  0D95                     	;# 
   622  0D96                     	;# 
   623  0D97                     	;# 
   624  0D97                     	;# 
   625  0D98                     	;# 
   626  0D99                     	;# 
   627  0D99                     	;# 
   628  0D9A                     	;# 
   629  0D9B                     	;# 
   630  0D9C                     	;# 
   631  0D9C                     	;# 
   632  0D9D                     	;# 
   633  0D9D                     	;# 
   634  0D9E                     	;# 
   635  0D9F                     	;# 
   636  0DA0                     	;# 
   637  0DA1                     	;# 
   638  0DA1                     	;# 
   639  0DA2                     	;# 
   640  0DA3                     	;# 
   641  0DA3                     	;# 
   642  0DA4                     	;# 
   643  0DA5                     	;# 
   644  0DA5                     	;# 
   645  0DA6                     	;# 
   646  0DA7                     	;# 
   647  0DA7                     	;# 
   648  0DA8                     	;# 
   649  0DA9                     	;# 
   650  0DA9                     	;# 
   651  0DAA                     	;# 
   652  0DAB                     	;# 
   653  0DAC                     	;# 
   654  0DAC                     	;# 
   655  0DAD                     	;# 
   656  0DAD                     	;# 
   657  0DAE                     	;# 
   658  0DAF                     	;# 
   659  0DB0                     	;# 
   660  0DB1                     	;# 
   661  0DB1                     	;# 
   662  0DB2                     	;# 
   663  0DB3                     	;# 
   664  0DB3                     	;# 
   665  0DB4                     	;# 
   666  0DB5                     	;# 
   667  0DB5                     	;# 
   668  0DB6                     	;# 
   669  0DB7                     	;# 
   670  0DB7                     	;# 
   671  0DB8                     	;# 
   672  0DB9                     	;# 
   673  0DB9                     	;# 
   674  0DBA                     	;# 
   675  0DBB                     	;# 
   676  0DBC                     	;# 
   677  0DBC                     	;# 
   678  0DBD                     	;# 
   679  0DBD                     	;# 
   680  0DBE                     	;# 
   681  0DBF                     	;# 
   682  0DC0                     	;# 
   683  0FE4                     	;# 
   684  0FE5                     	;# 
   685  0FE6                     	;# 
   686  0FE7                     	;# 
   687  0FE8                     	;# 
   688  0FE8                     	;# 
   689  0FE9                     	;# 
   690  0FEA                     	;# 
   691  0FEA                     	;# 
   692  0FEB                     	;# 
   693  0FED                     	;# 
   694  0FEE                     	;# 
   695  0FEE                     	;# 
   696  0FEF                     	;# 
   697  0000                     	;# 
   698  0001                     	;# 
   699  0002                     	;# 
   700  0003                     	;# 
   701  0004                     	;# 
   702  0005                     	;# 
   703  0006                     	;# 
   704  0007                     	;# 
   705  0008                     	;# 
   706  0009                     	;# 
   707  000A                     	;# 
   708  000B                     	;# 
   709  000C                     	;# 
   710  0011                     	;# 
   711  0012                     	;# 
   712  0013                     	;# 
   713  0015                     	;# 
   714  0016                     	;# 
   715  0016                     	;# 
   716  0017                     	;# 
   717  0018                     	;# 
   718  0019                     	;# 
   719  001A                     	;# 
   720  001B                     	;# 
   721  001C                     	;# 
   722  008C                     	;# 
   723  0091                     	;# 
   724  0092                     	;# 
   725  0093                     	;# 
   726  0095                     	;# 
   727  0096                     	;# 
   728  0097                     	;# 
   729  0098                     	;# 
   730  0099                     	;# 
   731  009A                     	;# 
   732  009B                     	;# 
   733  009B                     	;# 
   734  009C                     	;# 
   735  009D                     	;# 
   736  009E                     	;# 
   737  009F                     	;# 
   738  010C                     	;# 
   739  0111                     	;# 
   740  0112                     	;# 
   741  0115                     	;# 
   742  0116                     	;# 
   743  0117                     	;# 
   744  0118                     	;# 
   745  0119                     	;# 
   746  011D                     	;# 
   747  011D                     	;# 
   748  018C                     	;# 
   749  0191                     	;# 
   750  0191                     	;# 
   751  0192                     	;# 
   752  0193                     	;# 
   753  0193                     	;# 
   754  0194                     	;# 
   755  0195                     	;# 
   756  0196                     	;# 
   757  0197                     	;# 
   758  020C                     	;# 
   759  028C                     	;# 
   760  030C                     	;# 
   761  038C                     	;# 
   762  0391                     	;# 
   763  0392                     	;# 
   764  0393                     	;# 
   765  0691                     	;# 
   766  0692                     	;# 
   767  0693                     	;# 
   768  0694                     	;# 
   769  0695                     	;# 
   770  0D8E                     	;# 
   771  0D8F                     	;# 
   772  0D90                     	;# 
   773  0D91                     	;# 
   774  0D91                     	;# 
   775  0D92                     	;# 
   776  0D93                     	;# 
   777  0D93                     	;# 
   778  0D94                     	;# 
   779  0D95                     	;# 
   780  0D95                     	;# 
   781  0D96                     	;# 
   782  0D97                     	;# 
   783  0D97                     	;# 
   784  0D98                     	;# 
   785  0D99                     	;# 
   786  0D99                     	;# 
   787  0D9A                     	;# 
   788  0D9B                     	;# 
   789  0D9C                     	;# 
   790  0D9C                     	;# 
   791  0D9D                     	;# 
   792  0D9D                     	;# 
   793  0D9E                     	;# 
   794  0D9F                     	;# 
   795  0DA0                     	;# 
   796  0DA1                     	;# 
   797  0DA1                     	;# 
   798  0DA2                     	;# 
   799  0DA3                     	;# 
   800  0DA3                     	;# 
   801  0DA4                     	;# 
   802  0DA5                     	;# 
   803  0DA5                     	;# 
   804  0DA6                     	;# 
   805  0DA7                     	;# 
   806  0DA7                     	;# 
   807  0DA8                     	;# 
   808  0DA9                     	;# 
   809  0DA9                     	;# 
   810  0DAA                     	;# 
   811  0DAB                     	;# 
   812  0DAC                     	;# 
   813  0DAC                     	;# 
   814  0DAD                     	;# 
   815  0DAD                     	;# 
   816  0DAE                     	;# 
   817  0DAF                     	;# 
   818  0DB0                     	;# 
   819  0DB1                     	;# 
   820  0DB1                     	;# 
   821  0DB2                     	;# 
   822  0DB3                     	;# 
   823  0DB3                     	;# 
   824  0DB4                     	;# 
   825  0DB5                     	;# 
   826  0DB5                     	;# 
   827  0DB6                     	;# 
   828  0DB7                     	;# 
   829  0DB7                     	;# 
   830  0DB8                     	;# 
   831  0DB9                     	;# 
   832  0DB9                     	;# 
   833  0DBA                     	;# 
   834  0DBB                     	;# 
   835  0DBC                     	;# 
   836  0DBC                     	;# 
   837  0DBD                     	;# 
   838  0DBD                     	;# 
   839  0DBE                     	;# 
   840  0DBF                     	;# 
   841  0DC0                     	;# 
   842  0FE4                     	;# 
   843  0FE5                     	;# 
   844  0FE6                     	;# 
   845  0FE7                     	;# 
   846  0FE8                     	;# 
   847  0FE8                     	;# 
   848  0FE9                     	;# 
   849  0FEA                     	;# 
   850  0FEA                     	;# 
   851  0FEB                     	;# 
   852  0FED                     	;# 
   853  0FEE                     	;# 
   854  0FEE                     	;# 
   855  0FEF                     	;# 
   856                           
   857                           	psect	nvCOMMON
   858  0075                     __pnvCOMMON:
   859  0075                     _TMR1_InterruptHandler:
   860  0075                     	ds	2
   861  0077                     _timer1ReloadVal:
   862  0077                     	ds	2
   863  000C                     _PORTAbits	set	12
   864  000B                     _INTCONbits	set	11
   865  0019                     _T1GCONbits	set	25
   866  0018                     _T1CONbits	set	24
   867  0018                     _T1CON	set	24
   868  0011                     _PIR1bits	set	17
   869  0016                     _TMR1L	set	22
   870  0017                     _TMR1H	set	23
   871  0019                     _T1GCON	set	25
   872  0091                     _PIE1bits	set	145
   873  0095                     _OPTION_REGbits	set	149
   874  008C                     _TRISA	set	140
   875  0097                     _WDTCON	set	151
   876  0098                     _OSCTUNE	set	152
   877  0099                     _OSCCON	set	153
   878  010C                     _LATAbits	set	268
   879  011D                     _APFCON	set	285
   880  010C                     _LATA	set	268
   881  0116                     _BORCON	set	278
   882  018C                     _ANSELA	set	396
   883  020C                     _WPUA	set	524
   884  028C                     _ODCONA	set	652
   885  030C                     _SLRCONA	set	780
   886  038C                     _INLVLA	set	908
   887                           
   888                           	psect	cinit
   889  001A                     start_initialization:	
   890                           ; #config settings
   891                           
   892  001A                     __initialization:
   893                           
   894                           ; Clear objects allocated to COMMON
   895  001A  01F0               	clrf	__pbssCOMMON& (0+127)
   896  001B  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   897  001C  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   898  001D  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   899  001E  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   900  001F                     end_of_initialization:	
   901                           ;End of C runtime variable initialization code
   902                           
   903  001F                     __end_of__initialization:
   904  001F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   905  0020  0020               	movlb	0
   906  0021  2863               	ljmp	_main	;jump to C main() function
   907                           
   908                           	psect	bssCOMMON
   909  0070                     __pbssCOMMON:
   910  0070                     _demandedSecondsTick:
   911  0070                     	ds	2
   912  0072                     _currentSecondsTick:
   913  0072                     	ds	2
   914  0074                     _currentState:
   915  0074                     	ds	1
   916                           
   917                           	psect	cstackCOMMON
   918  0079                     __pcstackCOMMON:
   919  0079                     ?_PIN_MANAGER_Initialize:
   920  0079                     ?_OSCILLATOR_Initialize:	
   921                           ; 1 bytes @ 0x0
   922                           
   923  0079                     ?_WDT_Initialize:	
   924                           ; 1 bytes @ 0x0
   925                           
   926  0079                     ?_TMR1_Initialize:	
   927                           ; 1 bytes @ 0x0
   928                           
   929  0079                     ?_TMR1_DefaultInterruptHandler:	
   930                           ; 1 bytes @ 0x0
   931                           
   932  0079                     ??_TMR1_DefaultInterruptHandler:	
   933                           ; 1 bytes @ 0x0
   934                           
   935  0079                     ?_TMR1_CallBack:	
   936                           ; 1 bytes @ 0x0
   937                           
   938  0079                     ??_TMR1_CallBack:	
   939                           ; 1 bytes @ 0x0
   940                           
   941  0079                     ?_secondsTick:	
   942                           ; 1 bytes @ 0x0
   943                           
   944  0079                     ??_secondsTick:	
   945                           ; 1 bytes @ 0x0
   946                           
   947  0079                     ?_setState:	
   948                           ; 1 bytes @ 0x0
   949                           
   950  0079                     ?_SYSTEM_Initialize:	
   951                           ; 1 bytes @ 0x0
   952                           
   953  0079                     ?_TMR1_StartTimer:	
   954                           ; 1 bytes @ 0x0
   955                           
   956  0079                     ?_TMR1_WriteTimer:	
   957                           ; 1 bytes @ 0x0
   958                           
   959  0079                     ?_TMR1_ISR:	
   960                           ; 1 bytes @ 0x0
   961                           
   962  0079                     ?_INTERRUPT_InterruptManager:	
   963                           ; 1 bytes @ 0x0
   964                           
   965  0079                     ?_main:	
   966                           ; 1 bytes @ 0x0
   967                           
   968  0079                     TMR1_WriteTimer@timerVal:	
   969                           ; 1 bytes @ 0x0
   970                           
   971                           
   972                           ; 2 bytes @ 0x0
   973  0079                     	ds	2
   974  007B                     ??_PIN_MANAGER_Initialize:
   975  007B                     ??_OSCILLATOR_Initialize:	
   976                           ; 1 bytes @ 0x2
   977                           
   978  007B                     ??_WDT_Initialize:	
   979                           ; 1 bytes @ 0x2
   980                           
   981  007B                     ??_TMR1_Initialize:	
   982                           ; 1 bytes @ 0x2
   983                           
   984  007B                     ??_TMR1_SetInterruptHandler:	
   985                           ; 1 bytes @ 0x2
   986                           
   987  007B                     ??_SYSTEM_Initialize:	
   988                           ; 1 bytes @ 0x2
   989                           
   990  007B                     ??_TMR1_StartTimer:	
   991                           ; 1 bytes @ 0x2
   992                           
   993  007B                     ??_TMR1_WriteTimer:	
   994                           ; 1 bytes @ 0x2
   995                           
   996  007B                     ??_TMR1_ISR:	
   997                           ; 1 bytes @ 0x2
   998                           
   999  007B                     ??_INTERRUPT_InterruptManager:	
  1000                           ; 1 bytes @ 0x2
  1001                           
  1002  007B                     setState@newState:	
  1003                           ; 1 bytes @ 0x2
  1004                           
  1005                           
  1006                           ; 1 bytes @ 0x2
  1007  007B                     	ds	1
  1008  007C                     ??_main:
  1009                           
  1010                           	psect	cstackBANK0
  1011  0020                     __pcstackBANK0:	
  1012                           ; 1 bytes @ 0x3
  1013                           
  1014  0020                     ?_TMR1_SetInterruptHandler:
  1015  0020                     ??_setState:	
  1016                           ; 1 bytes @ 0x0
  1017                           
  1018  0020                     TMR1_SetInterruptHandler@InterruptHandler:	
  1019                           ; 1 bytes @ 0x0
  1020                           
  1021                           
  1022                           ; 2 bytes @ 0x0
  1023  0020                     	ds	2
  1024                           
  1025                           	psect	maintext
  1026  0063                     __pmaintext:	
  1027 ;;
  1028 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1029 ;;
  1030 ;; *************** function _main *****************
  1031 ;; Defined at:
  1032 ;;		line 68 in file "main.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;		None
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;		None
  1037 ;; Return value:  Size  Location     Type
  1038 ;;                  1    wreg      void 
  1039 ;; Registers used:
  1040 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1041 ;; Tracked objects:
  1042 ;;		On entry : B1F/0
  1043 ;;		On exit  : 0/0
  1044 ;;		Unchanged: 0/0
  1045 ;; Data sizes:     COMMON   BANK0   BANK1
  1046 ;;      Params:         0       0       0
  1047 ;;      Locals:         0       0       0
  1048 ;;      Temps:          0       0       0
  1049 ;;      Totals:         0       0       0
  1050 ;;Total ram usage:        0 bytes
  1051 ;; Hardware stack levels required when called:    7
  1052 ;; This function calls:
  1053 ;;		_SYSTEM_Initialize
  1054 ;;		_TMR1_SetInterruptHandler
  1055 ;;		_TMR1_StartTimer
  1056 ;;		_setState
  1057 ;; This function is called by:
  1058 ;;		Startup code after reset
  1059 ;; This function uses a non-reentrant model
  1060 ;;
  1061                           
  1062                           
  1063                           ;psect for function _main
  1064  0063                     _main:
  1065  0063                     l1035:	
  1066                           ;incstack = 0
  1067                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1068                           
  1069                           
  1070                           ;main.c: 71:     SYSTEM_Initialize();
  1071  0063  3180  20D3  3180   	fcall	_SYSTEM_Initialize
  1072  0066                     l1037:
  1073                           
  1074                           ;main.c: 77:     (INTCONbits.GIE = 1);
  1075  0066  178B               	bsf	11,7	;volatile
  1076  0067                     l1039:
  1077                           
  1078                           ;main.c: 80:     (INTCONbits.PEIE = 1);
  1079  0067  170B               	bsf	11,6	;volatile
  1080                           
  1081                           ;main.c: 89:     TMR1_SetInterruptHandler(secondsTick);
  1082  0068  30C4               	movlw	low _secondsTick
  1083  0069  0020               	movlb	0	; select bank0
  1084  006A  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  1085  006B  3000               	movlw	high _secondsTick
  1086  006C  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  1087  006D  3181  2100  3180   	fcall	_TMR1_SetInterruptHandler
  1088  0070                     l1041:
  1089                           
  1090                           ;main.c: 91:     TMR1_StartTimer();
  1091  0070  3181  210A  3180   	fcall	_TMR1_StartTimer
  1092  0073                     l1043:
  1093                           
  1094                           ;main.c: 93:     setState(STATE_WAIT_TIME);
  1095  0073  3001               	movlw	1
  1096  0074  3180  2022  3180   	fcall	_setState
  1097  0077                     l1045:
  1098                           
  1099                           ;main.c: 96:     {;main.c: 97:         if(PORTAbits.RA4)
  1100  0077  0020               	movlb	0	; select bank0
  1101  0078  1E0C               	btfss	12,4	;volatile
  1102  0079  287B               	goto	u151
  1103  007A  287C               	goto	u150
  1104  007B                     u151:
  1105  007B  287F               	goto	l163
  1106  007C                     u150:
  1107  007C                     l160:	
  1108                           ;main.c: 98:         {;main.c: 99:             do { LATAbits.LATA2 = 1; } while(0);
  1109                           
  1110  007C  0022               	movlb	2	; select bank2
  1111  007D  150C               	bsf	12,2	;volatile
  1112  007E  2877               	goto	l1045
  1113  007F                     l163:	
  1114                           ;main.c: 102:         {;main.c: 103:             do { LATAbits.LATA2 = 0; } while(0);
  1115                           
  1116  007F  0022               	movlb	2	; select bank2
  1117  0080  110C               	bcf	12,2	;volatile
  1118  0081  2877               	goto	l1045
  1119  0082  2819               	ljmp	start
  1120  0083                     __end_of_main:
  1121                           
  1122                           	psect	text1
  1123  0022                     __ptext1:	
  1124 ;; *************** function _setState *****************
  1125 ;; Defined at:
  1126 ;;		line 153 in file "main.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;  newState        1    wreg     enum E2970
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;  newState        1    2[COMMON] enum E2970
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  1    wreg      void 
  1133 ;; Registers used:
  1134 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMMON   BANK0   BANK1
  1140 ;;      Params:         0       0       0
  1141 ;;      Locals:         1       0       0
  1142 ;;      Temps:          0       2       0
  1143 ;;      Totals:         1       2       0
  1144 ;;Total ram usage:        3 bytes
  1145 ;; Hardware stack levels used:    1
  1146 ;; Hardware stack levels required when called:    4
  1147 ;; This function calls:
  1148 ;;		Nothing
  1149 ;; This function is called by:
  1150 ;;		_main
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           
  1154                           
  1155                           ;psect for function _setState
  1156  0022                     _setState:
  1157                           
  1158                           ;incstack = 0
  1159                           ; Regs used in _setState: [wreg-fsr0h+status,2+status,0]
  1160                           ;setState@newState stored from wreg
  1161  0022  00FB               	movwf	setState@newState
  1162  0023                     l1017:
  1163                           
  1164                           ;main.c: 153: void setState(states_t newState);main.c: 154: {;main.c: 155:     if(newSta
      +                          te == currentState)
  1165  0023  087B               	movf	setState@newState,w
  1166  0024  0674               	xorwf	_currentState,w
  1167  0025  1D03               	skipz
  1168  0026  2828               	goto	u141
  1169  0027  2829               	goto	u140
  1170  0028                     u141:
  1171  0028  2846               	goto	l1027
  1172  0029                     u140:
  1173  0029  2862               	goto	l188
  1174  002A                     l191:	
  1175                           ;main.c: 162:             do { LATAbits.LATA1 = 0; } while(0);
  1176                           
  1177  002A  0022               	movlb	2	; select bank2
  1178  002B  108C               	bcf	12,1	;volatile
  1179  002C                     l193:	
  1180                           ;main.c: 163:             do { LATAbits.LATA2 = 0; } while(0);
  1181                           
  1182  002C  110C               	bcf	12,2	;volatile
  1183  002D                     l1021:
  1184                           
  1185                           ;main.c: 164:             demandedSecondsTick = currentSecondsTick + 1;
  1186  002D  0872               	movf	_currentSecondsTick,w	;volatile
  1187  002E  3E01               	addlw	1
  1188  002F  00F0               	movwf	_demandedSecondsTick
  1189  0030  3000               	movlw	0
  1190  0031  3D73               	addwfc	_currentSecondsTick+1,w	;volatile
  1191  0032  00F1               	movwf	_demandedSecondsTick+1
  1192                           
  1193                           ;main.c: 165:             break;
  1194  0033  285D               	goto	l1029
  1195  0034                     l197:	
  1196                           ;main.c: 168:             do { LATAbits.LATA1 = 1; } while(0);
  1197                           
  1198  0034  0022               	movlb	2	; select bank2
  1199  0035  148C               	bsf	12,1	;volatile
  1200  0036                     l199:	
  1201                           ;main.c: 169:             do { LATAbits.LATA2 = 0; } while(0);
  1202                           
  1203  0036  110C               	bcf	12,2	;volatile
  1204  0037  285D               	goto	l1029
  1205  0038                     l202:	
  1206                           ;main.c: 173:             do { LATAbits.LATA1 = 0; } while(0);
  1207                           
  1208  0038  0022               	movlb	2	; select bank2
  1209  0039  108C               	bcf	12,1	;volatile
  1210  003A                     l204:	
  1211                           ;main.c: 174:             do { LATAbits.LATA2 = 1; } while(0);
  1212                           
  1213  003A  150C               	bsf	12,2	;volatile
  1214  003B                     l1023:
  1215                           
  1216                           ;main.c: 175:             demandedSecondsTick = currentSecondsTick + 30;
  1217  003B  0872               	movf	_currentSecondsTick,w	;volatile
  1218  003C  3E1E               	addlw	30
  1219  003D  00F0               	movwf	_demandedSecondsTick
  1220  003E  3000               	movlw	0
  1221  003F  3D73               	addwfc	_currentSecondsTick+1,w	;volatile
  1222  0040  00F1               	movwf	_demandedSecondsTick+1
  1223                           
  1224                           ;main.c: 176:             break;
  1225  0041  285D               	goto	l1029
  1226  0042                     l207:	
  1227                           ;main.c: 179:             do { LATAbits.LATA1 = 0; } while(0);
  1228                           
  1229  0042  0022               	movlb	2	; select bank2
  1230  0043  108C               	bcf	12,1	;volatile
  1231  0044                     l209:	
  1232                           ;main.c: 180:             do { LATAbits.LATA2 = 0; } while(0);
  1233                           
  1234  0044  110C               	bcf	12,2	;volatile
  1235  0045  285D               	goto	l1029
  1236  0046                     l1027:
  1237  0046  087B               	movf	setState@newState,w
  1238  0047  0020               	movlb	0	; select bank0
  1239  0048  00A0               	movwf	??_setState
  1240  0049  01A1               	clrf	??_setState+1
  1241                           
  1242                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1243                           ; Switch size 1, requested type "simple"
  1244                           ; Number of cases is 1, Range of values is 0 to 0
  1245                           ; switch strategies available:
  1246                           ; Name         Instructions Cycles
  1247                           ; simple_byte            4     3 (average)
  1248                           ; direct_byte            8     6 (fixed)
  1249                           ; jumptable            260     6 (fixed)
  1250                           ;	Chosen strategy is simple_byte
  1251  004A  0821               	movf	??_setState+1,w
  1252  004B  3A00               	xorlw	0	; case 0
  1253  004C  1903               	skipnz
  1254  004D  284F               	goto	l1083
  1255  004E  285D               	goto	l1029
  1256  004F                     l1083:
  1257                           
  1258                           ; Switch size 1, requested type "simple"
  1259                           ; Number of cases is 4, Range of values is 1 to 4
  1260                           ; switch strategies available:
  1261                           ; Name         Instructions Cycles
  1262                           ; simple_byte           13     7 (average)
  1263                           ; direct_byte           17     9 (fixed)
  1264                           ; jumptable            263     9 (fixed)
  1265                           ;	Chosen strategy is simple_byte
  1266  004F  0820               	movf	??_setState,w
  1267  0050  3A01               	xorlw	1	; case 1
  1268  0051  1903               	skipnz
  1269  0052  282A               	goto	l191
  1270  0053  3A03               	xorlw	3	; case 2
  1271  0054  1903               	skipnz
  1272  0055  2834               	goto	l197
  1273  0056  3A01               	xorlw	1	; case 3
  1274  0057  1903               	skipnz
  1275  0058  2838               	goto	l202
  1276  0059  3A07               	xorlw	7	; case 4
  1277  005A  1903               	skipnz
  1278  005B  2842               	goto	l207
  1279  005C  285D               	goto	l1029
  1280  005D                     l1029:
  1281                           
  1282                           ;main.c: 184:     currentState = newState;
  1283  005D  087B               	movf	setState@newState,w
  1284  005E  0020               	movlb	0	; select bank0
  1285  005F  00A0               	movwf	??_setState
  1286  0060  0820               	movf	??_setState,w
  1287  0061  00F4               	movwf	_currentState
  1288  0062                     l188:
  1289  0062  0008               	return
  1290  0063                     __end_of_setState:
  1291                           
  1292                           	psect	text2
  1293  010A                     __ptext2:	
  1294 ;; *************** function _TMR1_StartTimer *****************
  1295 ;; Defined at:
  1296 ;;		line 93 in file "mcc_generated_files/tmr1.c"
  1297 ;; Parameters:    Size  Location     Type
  1298 ;;		None
  1299 ;; Auto vars:     Size  Location     Type
  1300 ;;		None
  1301 ;; Return value:  Size  Location     Type
  1302 ;;                  1    wreg      void 
  1303 ;; Registers used:
  1304 ;;		None
  1305 ;; Tracked objects:
  1306 ;;		On entry : 0/0
  1307 ;;		On exit  : 0/0
  1308 ;;		Unchanged: 0/0
  1309 ;; Data sizes:     COMMON   BANK0   BANK1
  1310 ;;      Params:         0       0       0
  1311 ;;      Locals:         0       0       0
  1312 ;;      Temps:          0       0       0
  1313 ;;      Totals:         0       0       0
  1314 ;;Total ram usage:        0 bytes
  1315 ;; Hardware stack levels used:    1
  1316 ;; Hardware stack levels required when called:    4
  1317 ;; This function calls:
  1318 ;;		Nothing
  1319 ;; This function is called by:
  1320 ;;		_main
  1321 ;; This function uses a non-reentrant model
  1322 ;;
  1323                           
  1324                           
  1325                           ;psect for function _TMR1_StartTimer
  1326  010A                     _TMR1_StartTimer:
  1327  010A                     l807:	
  1328                           ;incstack = 0
  1329                           ; Regs used in _TMR1_StartTimer: []
  1330                           
  1331                           
  1332                           ;mcc_generated_files/tmr1.c: 96:     T1CONbits.TMR1ON = 1;
  1333  010A  0020               	movlb	0	; select bank0
  1334  010B  1418               	bsf	24,0	;volatile
  1335  010C                     l81:
  1336  010C  0008               	return
  1337  010D                     __end_of_TMR1_StartTimer:
  1338                           
  1339                           	psect	text3
  1340  00D3                     __ptext3:	
  1341 ;; *************** function _SYSTEM_Initialize *****************
  1342 ;; Defined at:
  1343 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1344 ;; Parameters:    Size  Location     Type
  1345 ;;		None
  1346 ;; Auto vars:     Size  Location     Type
  1347 ;;		None
  1348 ;; Return value:  Size  Location     Type
  1349 ;;                  1    wreg      void 
  1350 ;; Registers used:
  1351 ;;		wreg, status,2, status,0, pclath, cstack
  1352 ;; Tracked objects:
  1353 ;;		On entry : 0/0
  1354 ;;		On exit  : 0/0
  1355 ;;		Unchanged: 0/0
  1356 ;; Data sizes:     COMMON   BANK0   BANK1
  1357 ;;      Params:         0       0       0
  1358 ;;      Locals:         0       0       0
  1359 ;;      Temps:          0       0       0
  1360 ;;      Totals:         0       0       0
  1361 ;;Total ram usage:        0 bytes
  1362 ;; Hardware stack levels used:    1
  1363 ;; Hardware stack levels required when called:    6
  1364 ;; This function calls:
  1365 ;;		_OSCILLATOR_Initialize
  1366 ;;		_PIN_MANAGER_Initialize
  1367 ;;		_TMR1_Initialize
  1368 ;;		_WDT_Initialize
  1369 ;; This function is called by:
  1370 ;;		_main
  1371 ;; This function uses a non-reentrant model
  1372 ;;
  1373                           
  1374                           
  1375                           ;psect for function _SYSTEM_Initialize
  1376  00D3                     _SYSTEM_Initialize:
  1377  00D3                     l1015:	
  1378                           ;incstack = 0
  1379                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1380                           
  1381                           
  1382                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1383  00D3  3180  209C  3180   	fcall	_PIN_MANAGER_Initialize
  1384                           
  1385                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1386  00D6  3180  20F9  3180   	fcall	_OSCILLATOR_Initialize
  1387                           
  1388                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  1389  00D9  3181  2106  3180   	fcall	_WDT_Initialize
  1390                           
  1391                           ;mcc_generated_files/mcc.c: 56:     TMR1_Initialize();
  1392  00DC  3180  2083  3180   	fcall	_TMR1_Initialize
  1393  00DF                     l19:
  1394  00DF  0008               	return
  1395  00E0                     __end_of_SYSTEM_Initialize:
  1396                           
  1397                           	psect	text4
  1398  0106                     __ptext4:	
  1399 ;; *************** function _WDT_Initialize *****************
  1400 ;; Defined at:
  1401 ;;		line 69 in file "mcc_generated_files/mcc.c"
  1402 ;; Parameters:    Size  Location     Type
  1403 ;;		None
  1404 ;; Auto vars:     Size  Location     Type
  1405 ;;		None
  1406 ;; Return value:  Size  Location     Type
  1407 ;;                  1    wreg      void 
  1408 ;; Registers used:
  1409 ;;		wreg
  1410 ;; Tracked objects:
  1411 ;;		On entry : 0/0
  1412 ;;		On exit  : 0/0
  1413 ;;		Unchanged: 0/0
  1414 ;; Data sizes:     COMMON   BANK0   BANK1
  1415 ;;      Params:         0       0       0
  1416 ;;      Locals:         0       0       0
  1417 ;;      Temps:          0       0       0
  1418 ;;      Totals:         0       0       0
  1419 ;;Total ram usage:        0 bytes
  1420 ;; Hardware stack levels used:    1
  1421 ;; Hardware stack levels required when called:    4
  1422 ;; This function calls:
  1423 ;;		Nothing
  1424 ;; This function is called by:
  1425 ;;		_SYSTEM_Initialize
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429                           
  1430                           ;psect for function _WDT_Initialize
  1431  0106                     _WDT_Initialize:
  1432  0106                     l769:	
  1433                           ;incstack = 0
  1434                           ; Regs used in _WDT_Initialize: [wreg]
  1435                           
  1436                           
  1437                           ;mcc_generated_files/mcc.c: 72:     WDTCON = 0x16;
  1438  0106  3016               	movlw	22
  1439  0107  0021               	movlb	1	; select bank1
  1440  0108  0097               	movwf	23	;volatile
  1441  0109                     l25:
  1442  0109  0008               	return
  1443  010A                     __end_of_WDT_Initialize:
  1444                           
  1445                           	psect	text5
  1446  0083                     __ptext5:	
  1447 ;; *************** function _TMR1_Initialize *****************
  1448 ;; Defined at:
  1449 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  1450 ;; Parameters:    Size  Location     Type
  1451 ;;		None
  1452 ;; Auto vars:     Size  Location     Type
  1453 ;;		None
  1454 ;; Return value:  Size  Location     Type
  1455 ;;                  1    wreg      void 
  1456 ;; Registers used:
  1457 ;;		wreg, status,2, status,0, pclath, cstack
  1458 ;; Tracked objects:
  1459 ;;		On entry : 0/0
  1460 ;;		On exit  : 0/0
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMMON   BANK0   BANK1
  1463 ;;      Params:         0       0       0
  1464 ;;      Locals:         0       0       0
  1465 ;;      Temps:          0       0       0
  1466 ;;      Totals:         0       0       0
  1467 ;;Total ram usage:        0 bytes
  1468 ;; Hardware stack levels used:    1
  1469 ;; Hardware stack levels required when called:    5
  1470 ;; This function calls:
  1471 ;;		_TMR1_SetInterruptHandler
  1472 ;; This function is called by:
  1473 ;;		_SYSTEM_Initialize
  1474 ;; This function uses a non-reentrant model
  1475 ;;
  1476                           
  1477                           
  1478                           ;psect for function _TMR1_Initialize
  1479  0083                     _TMR1_Initialize:
  1480  0083                     l999:	
  1481                           ;incstack = 0
  1482                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1483                           
  1484                           
  1485                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  1486  0083  0020               	movlb	0	; select bank0
  1487  0084  0199               	clrf	25	;volatile
  1488  0085                     l1001:
  1489                           
  1490                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x86;
  1491  0085  3086               	movlw	134
  1492  0086  0097               	movwf	23	;volatile
  1493  0087                     l1003:
  1494                           
  1495                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xE8;
  1496  0087  30E8               	movlw	232
  1497  0088  0096               	movwf	22	;volatile
  1498  0089                     l1005:
  1499                           
  1500                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  1501  0089  1011               	bcf	17,0	;volatile
  1502  008A                     l1007:
  1503                           
  1504                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  1505  008A  0817               	movf	23,w	;volatile
  1506  008B  00F8               	movwf	_timer1ReloadVal+1	;volatile
  1507  008C  0816               	movf	22,w	;volatile
  1508  008D  00F7               	movwf	_timer1ReloadVal	;volatile
  1509  008E                     l1009:
  1510                           
  1511                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  1512  008E  0021               	movlb	1	; select bank1
  1513  008F  1411               	bsf	17,0	;volatile
  1514  0090                     l1011:
  1515                           
  1516                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  1517  0090  300D               	movlw	low _TMR1_DefaultInterruptHandler
  1518  0091  0020               	movlb	0	; select bank0
  1519  0092  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  1520  0093  3001               	movlw	high _TMR1_DefaultInterruptHandler
  1521  0094  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  1522  0095  3181  2100  3180   	fcall	_TMR1_SetInterruptHandler
  1523  0098                     l1013:
  1524                           
  1525                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x41;
  1526  0098  3041               	movlw	65
  1527  0099  0020               	movlb	0	; select bank0
  1528  009A  0098               	movwf	24	;volatile
  1529  009B                     l78:
  1530  009B  0008               	return
  1531  009C                     __end_of_TMR1_Initialize:
  1532                           
  1533                           	psect	text6
  1534  0100                     __ptext6:	
  1535 ;; *************** function _TMR1_SetInterruptHandler *****************
  1536 ;; Defined at:
  1537 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  1538 ;; Parameters:    Size  Location     Type
  1539 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  1540 ;;		 -> secondsTick(1), TMR1_DefaultInterruptHandler(1), 
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;		None
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  1    wreg      void 
  1545 ;; Registers used:
  1546 ;;		wreg
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMMON   BANK0   BANK1
  1552 ;;      Params:         0       2       0
  1553 ;;      Locals:         0       0       0
  1554 ;;      Temps:          0       0       0
  1555 ;;      Totals:         0       2       0
  1556 ;;Total ram usage:        2 bytes
  1557 ;; Hardware stack levels used:    1
  1558 ;; Hardware stack levels required when called:    4
  1559 ;; This function calls:
  1560 ;;		Nothing
  1561 ;; This function is called by:
  1562 ;;		_TMR1_Initialize
  1563 ;;		_main
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           
  1568                           ;psect for function _TMR1_SetInterruptHandler
  1569  0100                     _TMR1_SetInterruptHandler:
  1570  0100                     l997:	
  1571                           ;incstack = 0
  1572                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  1573                           
  1574                           
  1575                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  1576  0100  0020               	movlb	0	; select bank0
  1577  0101  0821               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  1578  0102  00F6               	movwf	_TMR1_InterruptHandler+1
  1579  0103  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  1580  0104  00F5               	movwf	_TMR1_InterruptHandler
  1581  0105                     l111:
  1582  0105  0008               	return
  1583  0106                     __end_of_TMR1_SetInterruptHandler:
  1584                           
  1585                           	psect	text7
  1586  009C                     __ptext7:	
  1587 ;; *************** function _PIN_MANAGER_Initialize *****************
  1588 ;; Defined at:
  1589 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1590 ;; Parameters:    Size  Location     Type
  1591 ;;		None
  1592 ;; Auto vars:     Size  Location     Type
  1593 ;;		None
  1594 ;; Return value:  Size  Location     Type
  1595 ;;                  1    wreg      void 
  1596 ;; Registers used:
  1597 ;;		wreg, status,2
  1598 ;; Tracked objects:
  1599 ;;		On entry : 0/0
  1600 ;;		On exit  : 0/0
  1601 ;;		Unchanged: 0/0
  1602 ;; Data sizes:     COMMON   BANK0   BANK1
  1603 ;;      Params:         0       0       0
  1604 ;;      Locals:         0       0       0
  1605 ;;      Temps:          0       0       0
  1606 ;;      Totals:         0       0       0
  1607 ;;Total ram usage:        0 bytes
  1608 ;; Hardware stack levels used:    1
  1609 ;; Hardware stack levels required when called:    4
  1610 ;; This function calls:
  1611 ;;		Nothing
  1612 ;; This function is called by:
  1613 ;;		_SYSTEM_Initialize
  1614 ;; This function uses a non-reentrant model
  1615 ;;
  1616                           
  1617                           
  1618                           ;psect for function _PIN_MANAGER_Initialize
  1619  009C                     _PIN_MANAGER_Initialize:
  1620  009C                     l751:	
  1621                           ;incstack = 0
  1622                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1623                           
  1624                           
  1625                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1626  009C  0022               	movlb	2	; select bank2
  1627  009D  018C               	clrf	12	;volatile
  1628  009E                     l753:
  1629                           
  1630                           ;mcc_generated_files/pin_manager.c: 65:     TRISA = 0x39;
  1631  009E  3039               	movlw	57
  1632  009F  0021               	movlb	1	; select bank1
  1633  00A0  008C               	movwf	12	;volatile
  1634  00A1                     l755:
  1635                           
  1636                           ;mcc_generated_files/pin_manager.c: 70:     ANSELA = 0x07;
  1637  00A1  3007               	movlw	7
  1638  00A2  0023               	movlb	3	; select bank3
  1639  00A3  008C               	movwf	12	;volatile
  1640                           
  1641                           ;mcc_generated_files/pin_manager.c: 75:     WPUA = 0x00;
  1642  00A4  0024               	movlb	4	; select bank4
  1643  00A5  018C               	clrf	12	;volatile
  1644  00A6                     l757:
  1645                           
  1646                           ;mcc_generated_files/pin_manager.c: 76:     OPTION_REGbits.nWPUEN = 1;
  1647  00A6  0021               	movlb	1	; select bank1
  1648  00A7  1795               	bsf	21,7	;volatile
  1649                           
  1650                           ;mcc_generated_files/pin_manager.c: 81:     ODCONA = 0x00;
  1651  00A8  0025               	movlb	5	; select bank5
  1652  00A9  018C               	clrf	12	;volatile
  1653  00AA                     l759:
  1654                           
  1655                           ;mcc_generated_files/pin_manager.c: 86:     SLRCONA = 0x37;
  1656  00AA  3037               	movlw	55
  1657  00AB  0026               	movlb	6	; select bank6
  1658  00AC  008C               	movwf	12	;volatile
  1659  00AD                     l761:
  1660                           
  1661                           ;mcc_generated_files/pin_manager.c: 91:     INLVLA = 0x3F;
  1662  00AD  303F               	movlw	63
  1663  00AE  0027               	movlb	7	; select bank7
  1664  00AF  008C               	movwf	12	;volatile
  1665                           
  1666                           ;mcc_generated_files/pin_manager.c: 96:     APFCON = 0x00;
  1667  00B0  0022               	movlb	2	; select bank2
  1668  00B1  019D               	clrf	29	;volatile
  1669  00B2                     l46:
  1670  00B2  0008               	return
  1671  00B3                     __end_of_PIN_MANAGER_Initialize:
  1672                           
  1673                           	psect	text8
  1674  00F9                     __ptext8:	
  1675 ;; *************** function _OSCILLATOR_Initialize *****************
  1676 ;; Defined at:
  1677 ;;		line 59 in file "mcc_generated_files/mcc.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;		None
  1680 ;; Auto vars:     Size  Location     Type
  1681 ;;		None
  1682 ;; Return value:  Size  Location     Type
  1683 ;;                  1    wreg      void 
  1684 ;; Registers used:
  1685 ;;		wreg, status,2
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMMON   BANK0   BANK1
  1691 ;;      Params:         0       0       0
  1692 ;;      Locals:         0       0       0
  1693 ;;      Temps:          0       0       0
  1694 ;;      Totals:         0       0       0
  1695 ;;Total ram usage:        0 bytes
  1696 ;; Hardware stack levels used:    1
  1697 ;; Hardware stack levels required when called:    4
  1698 ;; This function calls:
  1699 ;;		Nothing
  1700 ;; This function is called by:
  1701 ;;		_SYSTEM_Initialize
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704                           
  1705                           
  1706                           ;psect for function _OSCILLATOR_Initialize
  1707  00F9                     _OSCILLATOR_Initialize:
  1708  00F9                     l763:	
  1709                           ;incstack = 0
  1710                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1711                           
  1712                           
  1713                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x02;
  1714  00F9  3002               	movlw	2
  1715  00FA  0021               	movlb	1	; select bank1
  1716  00FB  0099               	movwf	25	;volatile
  1717  00FC                     l765:
  1718                           
  1719                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
  1720  00FC  0198               	clrf	24	;volatile
  1721  00FD                     l767:
  1722                           
  1723                           ;mcc_generated_files/mcc.c: 66:     BORCON = 0x00;
  1724  00FD  0022               	movlb	2	; select bank2
  1725  00FE  0196               	clrf	22	;volatile
  1726  00FF                     l22:
  1727  00FF  0008               	return
  1728  0100                     __end_of_OSCILLATOR_Initialize:
  1729                           
  1730                           	psect	intentry
  1731  0004                     __pintentry:	
  1732 ;; *************** function _INTERRUPT_InterruptManager *****************
  1733 ;; Defined at:
  1734 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1735 ;; Parameters:    Size  Location     Type
  1736 ;;		None
  1737 ;; Auto vars:     Size  Location     Type
  1738 ;;		None
  1739 ;; Return value:  Size  Location     Type
  1740 ;;                  1    wreg      void 
  1741 ;; Registers used:
  1742 ;;		wreg, status,2, status,0, pclath, cstack
  1743 ;; Tracked objects:
  1744 ;;		On entry : 0/0
  1745 ;;		On exit  : 0/0
  1746 ;;		Unchanged: 0/0
  1747 ;; Data sizes:     COMMON   BANK0   BANK1
  1748 ;;      Params:         0       0       0
  1749 ;;      Locals:         0       0       0
  1750 ;;      Temps:          0       0       0
  1751 ;;      Totals:         0       0       0
  1752 ;;Total ram usage:        0 bytes
  1753 ;; Hardware stack levels used:    1
  1754 ;; Hardware stack levels required when called:    3
  1755 ;; This function calls:
  1756 ;;		_TMR1_ISR
  1757 ;; This function is called by:
  1758 ;;		Interrupt level 1
  1759 ;; This function uses a non-reentrant model
  1760 ;;
  1761                           
  1762  0004                     _INTERRUPT_InterruptManager:
  1763                           
  1764                           ;incstack = 0
  1765  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1766                           
  1767                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  1768  0005  3180               	pagesel	$
  1769  0006                     i1l941:
  1770                           
  1771                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  1772  0006  1F0B               	btfss	11,6	;volatile
  1773  0007  2809               	goto	u10_21
  1774  0008  280A               	goto	u10_20
  1775  0009                     u10_21:
  1776  0009  2817               	goto	i1l131
  1777  000A                     u10_20:
  1778  000A                     i1l943:
  1779                           
  1780                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  1781  000A  0021               	movlb	1	; select bank1
  1782  000B  1C11               	btfss	17,0	;volatile
  1783  000C  280E               	goto	u11_21
  1784  000D  280F               	goto	u11_20
  1785  000E                     u11_21:
  1786  000E  2817               	goto	i1l131
  1787  000F                     u11_20:
  1788  000F                     i1l945:
  1789  000F  0020               	movlb	0	; select bank0
  1790  0010  1C11               	btfss	17,0	;volatile
  1791  0011  2813               	goto	u12_21
  1792  0012  2814               	goto	u12_20
  1793  0013                     u12_21:
  1794  0013  2817               	goto	i1l131
  1795  0014                     u12_20:
  1796  0014                     i1l947:
  1797                           
  1798                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR1_ISR();
  1799  0014  3180  20E0  3180   	fcall	_TMR1_ISR
  1800  0017                     i1l131:	
  1801                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  1802                           
  1803  0017  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1804  0018  0009               	retfie
  1805  0019                     __end_of_INTERRUPT_InterruptManager:
  1806                           
  1807                           	psect	text10
  1808  00E0                     __ptext10:	
  1809 ;; *************** function _TMR1_ISR *****************
  1810 ;; Defined at:
  1811 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  1812 ;; Parameters:    Size  Location     Type
  1813 ;;		None
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;		None
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  1    wreg      void 
  1818 ;; Registers used:
  1819 ;;		wreg, status,2, status,0, pclath, cstack
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMMON   BANK0   BANK1
  1825 ;;      Params:         0       0       0
  1826 ;;      Locals:         0       0       0
  1827 ;;      Temps:          0       0       0
  1828 ;;      Totals:         0       0       0
  1829 ;;Total ram usage:        0 bytes
  1830 ;; Hardware stack levels used:    1
  1831 ;; Hardware stack levels required when called:    2
  1832 ;; This function calls:
  1833 ;;		_TMR1_CallBack
  1834 ;;		_TMR1_WriteTimer
  1835 ;; This function is called by:
  1836 ;;		_INTERRUPT_InterruptManager
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840                           
  1841                           ;psect for function _TMR1_ISR
  1842  00E0                     _TMR1_ISR:
  1843  00E0                     i1l935:	
  1844                           ;incstack = 0
  1845                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  1846                           
  1847                           
  1848                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  1849  00E0  0020               	movlb	0	; select bank0
  1850  00E1  1011               	bcf	17,0	;volatile
  1851  00E2                     i1l937:
  1852                           
  1853                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  1854  00E2  0878               	movf	_timer1ReloadVal+1,w	;volatile
  1855  00E3  00FA               	movwf	TMR1_WriteTimer@timerVal+1
  1856  00E4  0877               	movf	_timer1ReloadVal,w	;volatile
  1857  00E5  00F9               	movwf	TMR1_WriteTimer@timerVal
  1858  00E6  3180  20B3  3180   	fcall	_TMR1_WriteTimer
  1859                           
  1860                           ;mcc_generated_files/tmr1.c: 166:     TMR1_CallBack();
  1861  00E9  3180  20ED  3180   	fcall	_TMR1_CallBack
  1862  00EC                     i1l104:
  1863  00EC  0008               	return
  1864  00ED                     __end_of_TMR1_ISR:
  1865                           
  1866                           	psect	text11
  1867  00B3                     __ptext11:	
  1868 ;; *************** function _TMR1_WriteTimer *****************
  1869 ;; Defined at:
  1870 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;  timerVal        2    0[COMMON] unsigned short 
  1873 ;; Auto vars:     Size  Location     Type
  1874 ;;		None
  1875 ;; Return value:  Size  Location     Type
  1876 ;;                  1    wreg      void 
  1877 ;; Registers used:
  1878 ;;		wreg, status,2
  1879 ;; Tracked objects:
  1880 ;;		On entry : 0/0
  1881 ;;		On exit  : 0/0
  1882 ;;		Unchanged: 0/0
  1883 ;; Data sizes:     COMMON   BANK0   BANK1
  1884 ;;      Params:         2       0       0
  1885 ;;      Locals:         0       0       0
  1886 ;;      Temps:          0       0       0
  1887 ;;      Totals:         2       0       0
  1888 ;;Total ram usage:        2 bytes
  1889 ;; Hardware stack levels used:    1
  1890 ;; This function calls:
  1891 ;;		Nothing
  1892 ;; This function is called by:
  1893 ;;		_TMR1_ISR
  1894 ;;		_TMR1_Reload
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897                           
  1898                           
  1899                           ;psect for function _TMR1_WriteTimer
  1900  00B3                     _TMR1_WriteTimer:
  1901  00B3                     i1l919:	
  1902                           ;incstack = 0
  1903                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  1904                           
  1905                           
  1906                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  1907  00B3  0020               	movlb	0	; select bank0
  1908  00B4  1D18               	btfss	24,2	;volatile
  1909  00B5  28B7               	goto	u9_21
  1910  00B6  28B8               	goto	u9_20
  1911  00B7                     u9_21:
  1912  00B7  28BF               	goto	i1l929
  1913  00B8                     u9_20:
  1914  00B8                     i1l921:
  1915                           
  1916                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  1917  00B8  1018               	bcf	24,0	;volatile
  1918  00B9                     i1l923:
  1919                           
  1920                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (timerVal >> 8);
  1921  00B9  087A               	movf	TMR1_WriteTimer@timerVal+1,w
  1922  00BA  0097               	movwf	23	;volatile
  1923  00BB                     i1l925:
  1924                           
  1925                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = timerVal;
  1926  00BB  0879               	movf	TMR1_WriteTimer@timerVal,w
  1927  00BC  0096               	movwf	22	;volatile
  1928  00BD                     i1l927:
  1929                           
  1930                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  1931  00BD  1418               	bsf	24,0	;volatile
  1932                           
  1933                           ;mcc_generated_files/tmr1.c: 133:     }
  1934  00BE  28C3               	goto	i1l92
  1935  00BF                     i1l929:
  1936                           
  1937                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (timerVal >> 8);
  1938  00BF  087A               	movf	TMR1_WriteTimer@timerVal+1,w
  1939  00C0  0097               	movwf	23	;volatile
  1940  00C1                     i1l931:
  1941                           
  1942                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = timerVal;
  1943  00C1  0879               	movf	TMR1_WriteTimer@timerVal,w
  1944  00C2  0096               	movwf	22	;volatile
  1945  00C3                     i1l92:
  1946  00C3  0008               	return
  1947  00C4                     __end_of_TMR1_WriteTimer:
  1948                           
  1949                           	psect	text12
  1950  00ED                     __ptext12:	
  1951 ;; *************** function _TMR1_CallBack *****************
  1952 ;; Defined at:
  1953 ;;		line 169 in file "mcc_generated_files/tmr1.c"
  1954 ;; Parameters:    Size  Location     Type
  1955 ;;		None
  1956 ;; Auto vars:     Size  Location     Type
  1957 ;;		None
  1958 ;; Return value:  Size  Location     Type
  1959 ;;                  1    wreg      void 
  1960 ;; Registers used:
  1961 ;;		wreg, status,2, status,0, pclath, cstack
  1962 ;; Tracked objects:
  1963 ;;		On entry : 0/0
  1964 ;;		On exit  : 0/0
  1965 ;;		Unchanged: 0/0
  1966 ;; Data sizes:     COMMON   BANK0   BANK1
  1967 ;;      Params:         0       0       0
  1968 ;;      Locals:         0       0       0
  1969 ;;      Temps:          0       0       0
  1970 ;;      Totals:         0       0       0
  1971 ;;Total ram usage:        0 bytes
  1972 ;; Hardware stack levels used:    1
  1973 ;; Hardware stack levels required when called:    1
  1974 ;; This function calls:
  1975 ;;		Absolute function
  1976 ;;		_TMR1_DefaultInterruptHandler
  1977 ;;		_secondsTick
  1978 ;; This function is called by:
  1979 ;;		_TMR1_ISR
  1980 ;; This function uses a non-reentrant model
  1981 ;;
  1982                           
  1983                           
  1984                           ;psect for function _TMR1_CallBack
  1985  00ED                     _TMR1_CallBack:
  1986  00ED                     i1l801:	
  1987                           ;incstack = 0
  1988                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
  1989                           
  1990                           
  1991                           ;mcc_generated_files/tmr1.c: 172:     if(TMR1_InterruptHandler)
  1992  00ED  0875               	movf	_TMR1_InterruptHandler,w
  1993  00EE  0476               	iorwf	_TMR1_InterruptHandler+1,w
  1994  00EF  1903               	btfsc	3,2
  1995  00F0  28F2               	goto	u3_21
  1996  00F1  28F3               	goto	u3_20
  1997  00F2                     u3_21:
  1998  00F2  28F8               	goto	i1l108
  1999  00F3                     u3_20:
  2000  00F3                     i1l803:
  2001                           
  2002                           ;mcc_generated_files/tmr1.c: 173:     {;mcc_generated_files/tmr1.c: 174:         TMR1_In
      +                          terruptHandler();
  2003  00F3  0876               	movf	_TMR1_InterruptHandler+1,w
  2004  00F4  008A               	movwf	10
  2005  00F5  0875               	movf	_TMR1_InterruptHandler,w
  2006  00F6  000A               	callw
  2007  00F7  3180               	pagesel	$
  2008  00F8                     i1l108:
  2009  00F8  0008               	return
  2010  00F9                     __end_of_TMR1_CallBack:
  2011                           
  2012                           	psect	text13
  2013  010D                     __ptext13:	
  2014 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  2015 ;; Defined at:
  2016 ;;		line 182 in file "mcc_generated_files/tmr1.c"
  2017 ;; Parameters:    Size  Location     Type
  2018 ;;		None
  2019 ;; Auto vars:     Size  Location     Type
  2020 ;;		None
  2021 ;; Return value:  Size  Location     Type
  2022 ;;                  1    wreg      void 
  2023 ;; Registers used:
  2024 ;;		None
  2025 ;; Tracked objects:
  2026 ;;		On entry : 0/0
  2027 ;;		On exit  : 0/0
  2028 ;;		Unchanged: 0/0
  2029 ;; Data sizes:     COMMON   BANK0   BANK1
  2030 ;;      Params:         0       0       0
  2031 ;;      Locals:         0       0       0
  2032 ;;      Temps:          0       0       0
  2033 ;;      Totals:         0       0       0
  2034 ;;Total ram usage:        0 bytes
  2035 ;; Hardware stack levels used:    1
  2036 ;; This function calls:
  2037 ;;		Nothing
  2038 ;; This function is called by:
  2039 ;;		_TMR1_Initialize
  2040 ;;		_TMR1_CallBack
  2041 ;; This function uses a non-reentrant model
  2042 ;;
  2043                           
  2044                           
  2045                           ;psect for function _TMR1_DefaultInterruptHandler
  2046  010D                     _TMR1_DefaultInterruptHandler:
  2047  010D                     i1l114:	
  2048                           ;incstack = 0
  2049                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  2050                           
  2051  010D  0008               	return
  2052  010E                     __end_of_TMR1_DefaultInterruptHandler:
  2053                           
  2054                           	psect	text14
  2055  00C4                     __ptext14:	
  2056 ;; *************** function _secondsTick *****************
  2057 ;; Defined at:
  2058 ;;		line 190 in file "main.c"
  2059 ;; Parameters:    Size  Location     Type
  2060 ;;		None
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;		None
  2063 ;; Return value:  Size  Location     Type
  2064 ;;                  1    wreg      void 
  2065 ;; Registers used:
  2066 ;;		wreg
  2067 ;; Tracked objects:
  2068 ;;		On entry : 0/0
  2069 ;;		On exit  : 0/0
  2070 ;;		Unchanged: 0/0
  2071 ;; Data sizes:     COMMON   BANK0   BANK1
  2072 ;;      Params:         0       0       0
  2073 ;;      Locals:         0       0       0
  2074 ;;      Temps:          0       0       0
  2075 ;;      Totals:         0       0       0
  2076 ;;Total ram usage:        0 bytes
  2077 ;; Hardware stack levels used:    1
  2078 ;; This function calls:
  2079 ;;		Nothing
  2080 ;; This function is called by:
  2081 ;;		_main
  2082 ;;		_TMR1_CallBack
  2083 ;; This function uses a non-reentrant model
  2084 ;;
  2085                           
  2086                           
  2087                           ;psect for function _secondsTick
  2088  00C4                     _secondsTick:
  2089  00C4                     i1l747:	
  2090                           ;incstack = 0
  2091                           ; Regs used in _secondsTick: [wreg]
  2092                           
  2093                           
  2094                           ;main.c: 192:     currentSecondsTick++;
  2095  00C4  3001               	movlw	1
  2096  00C5  07F2               	addwf	_currentSecondsTick,f	;volatile
  2097  00C6  3000               	movlw	0
  2098  00C7  3DF3               	addwfc	_currentSecondsTick+1,f	;volatile
  2099  00C8                     i1l749:
  2100                           
  2101                           ;main.c: 195:     if(PORTAbits.RA5)
  2102  00C8  0020               	movlb	0	; select bank0
  2103  00C9  1E8C               	btfss	12,5	;volatile
  2104  00CA  28CC               	goto	u1_21
  2105  00CB  28CD               	goto	u1_20
  2106  00CC                     u1_21:
  2107  00CC  28D0               	goto	i1l217
  2108  00CD                     u1_20:
  2109  00CD                     i1l214:	
  2110                           ;main.c: 196:     {;main.c: 197:         do { LATAbits.LATA1 = 1; } while(0);
  2111                           
  2112  00CD  0022               	movlb	2	; select bank2
  2113  00CE  148C               	bsf	12,1	;volatile
  2114  00CF  28D2               	goto	i1l219
  2115  00D0                     i1l217:	
  2116                           ;main.c: 200:     {;main.c: 201:         do { LATAbits.LATA1 = 0; } while(0);
  2117                           
  2118  00D0  0022               	movlb	2	; select bank2
  2119  00D1  108C               	bcf	12,1	;volatile
  2120  00D2                     i1l219:
  2121  00D2  0008               	return
  2122  00D3                     __end_of_secondsTick:
  2123  007E                     btemp	set	126	;btemp
  2124  007E                     int$flags	set	126
  2125  007E                     wtemp0	set	126
  2126                           
  2127                           	psect	config
  2128                           
  2129                           ;Config register CONFIG1 @ 0x8007
  2130                           ;	
  2131                           ;	FOSC = INTOSC, INTOSC oscillator; I/O function on CLKIN pin
  2132                           ;	Watchdog Timer Enable
  2133                           ;	WDTE = OFF, WDT disabled
  2134                           ;	Power-up Timer Enable
  2135                           ;	PWRTE = OFF, PWRT disabled
  2136                           ;	MCLR Pin Function Select
  2137                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2138                           ;	Flash Program Memory Code Protection
  2139                           ;	CP = OFF, Program memory code protection is disabled
  2140                           ;	Brown-out Reset Enable
  2141                           ;	BOREN = ON, Brown-out Reset enabled
  2142                           ;	Clock Out Enable
  2143                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2144  8007                     	org	32775
  2145  8007  3FE4               	dw	16356
  2146                           
  2147                           ;Config register CONFIG2 @ 0x8008
  2148                           ;	Flash Memory Self-Write Protection
  2149                           ;	WRT = OFF, Write protection off
  2150                           ;	PLL Enable
  2151                           ;	PLLEN = OFF, 4x PLL disabled
  2152                           ;	Stack Overflow/Underflow Reset Enable
  2153                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2154                           ;	Brown-out Reset Voltage Selection
  2155                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2156                           ;	Low Power Brown-out Reset enable bit
  2157                           ;	LPBOREN = OFF, LPBOR is disabled
  2158                           ;	Low-Voltage Programming Enable
  2159                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  2160  8008                     	org	32776
  2161  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3      12
    BANK0            80      2       2
    BANK1            32      0       0

Pointer List with Targets:

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> secondsTick(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> secondsTick(), Absolute function(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_setState

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->_TMR1_SetInterruptHandler
    _main->_setState
    _TMR1_Initialize->_TMR1_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     488
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
                           _setState
 ---------------------------------------------------------------------------------
 (1) _setState                                             3     3      0      66
                                              2 COMMON     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     211
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0     240
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     240
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                        _secondsTick *
 ---------------------------------------------------------------------------------
 (7) _secondsTick                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize
   _TMR1_SetInterruptHandler
   _TMR1_StartTimer
   _setState

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _secondsTick *
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      3       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       E       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2       2       6        2.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0       E       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Aug 13 10:29:50 2020

                                      l22 00FF                                        l25 0109  
                                      l19 00DF                                        l46 00B2  
                                      l81 010C                                        l78 009B  
                                     l111 0105                                       l202 0038  
                                     l204 003A                                       l207 0042  
                                     l160 007C                                       l209 0044  
                                     l163 007F                                       l191 002A  
                                     l193 002C                                       l188 0062  
                                     l197 0034                                       l199 0036  
                                     l751 009C                                       l807 010A  
                                     l761 00AD                                       l753 009E  
                                     l763 00F9                                       l755 00A1  
                                     l765 00FC                                       l757 00A6  
                                     l767 00FD                                       l759 00AA  
                                     l769 0106                                       l997 0100  
                                     l999 0083                                       u140 0029  
                                     u141 0028                                       u150 007C  
                                     u151 007B                           _timer1ReloadVal 0077  
                                    l1001 0085                                      l1011 0090  
                                    l1003 0087                                      l1013 0098  
                                    l1005 0089                                      l1021 002D  
                                    l1007 008A                                      l1015 00D3  
                                    l1023 003B                                      l1009 008E  
                                    l1017 0023                                      l1041 0070  
                                    l1027 0046                                      l1043 0073  
                                    l1035 0063                                      l1029 005D  
                                    l1045 0077                                      l1037 0066  
                                    l1039 0067                                      l1083 004F  
                                    _LATA 010C                                      i1l92 00C3  
                                    _WPUA 020C                                      u1_20 00CD  
                                    u1_21 00CC                                      u3_20 00F3  
                                    u3_21 00F2                                      u9_20 00B8  
                                    u9_21 00B7                                      _main 0063  
                                    btemp 007E                                      start 0019  
              ??_TMR1_SetInterruptHandler 007B            __size_of_OSCILLATOR_Initialize 0007  
           __end_of_OSCILLATOR_Initialize 0100                                     ?_main 0079  
                         _TMR1_StartTimer 010A                                     _T1CON 0018  
                                   i1l104 00EC                                     i1l114 010D  
                                   i1l131 0017                                     i1l108 00F8  
                                   i1l214 00CD                                     i1l217 00D0  
                                   i1l219 00D2                                     i1l801 00ED  
                                   i1l803 00F3                                     i1l921 00B8  
                                   i1l747 00C4                                     i1l931 00C1  
                                   i1l923 00B9                                     i1l749 00C8  
                                   i1l925 00BB                                     i1l941 0006  
                                   i1l927 00BD                                     i1l919 00B3  
                                   i1l935 00E0                                     i1l943 000A  
                                   i1l929 00BF                                     i1l937 00E2  
                                   i1l945 000F                                     i1l947 0014  
                                   u10_20 000A                                     u10_21 0009  
                                   u11_20 000F                                     u11_21 000E  
                                   u12_20 0014                                     u12_21 0013  
                                   _TMR1H 0017                                     _TMR1L 0016  
                                   _TRISA 008C                          __end_of_TMR1_ISR 00ED  
                          _WDT_Initialize 0106                   __end_of_TMR1_Initialize 009C  
                                   pclath 000A                                     status 0003  
                                   wtemp0 007E                           _TMR1_WriteTimer 00B3  
                         __initialization 001A                              __end_of_main 0083  
             ?_INTERRUPT_InterruptManager 0079                                    ??_main 007C  
                            ?_secondsTick 0079                    __end_of_WDT_Initialize 010A  
                                  _APFCON 011D                                    _ANSELA 018C  
                                  _BORCON 0116                                    _T1GCON 0019  
                 TMR1_WriteTimer@timerVal 0079                                    _ODCONA 028C  
                                  _INLVLA 038C                                    _OSCCON 0099  
                                  _WDTCON 0097      __end_of_TMR1_DefaultInterruptHandler 010E  
   __size_of_TMR1_DefaultInterruptHandler 0001              _TMR1_DefaultInterruptHandler 010D  
                 __end_of_TMR1_StartTimer 010D                          __end_of_setState 0063  
                         ?_WDT_Initialize 0079  TMR1_SetInterruptHandler@InterruptHandler 0020  
                 __end_of_TMR1_WriteTimer 00C4                     __end_of_TMR1_CallBack 00F9  
                        ?_TMR1_Initialize 0079                         _SYSTEM_Initialize 00D3  
                 __end_of__initialization 001F                        ?_SYSTEM_Initialize 0079  
                          __pcstackCOMMON 0079                       ??_SYSTEM_Initialize 007B  
                               ?_TMR1_ISR 0079             ?_TMR1_DefaultInterruptHandler 0079  
                          _OPTION_REGbits 0095                 __end_of_SYSTEM_Initialize 00E0  
                              __pnvCOMMON 0075                                __pmaintext 0063  
                        ?_TMR1_StartTimer 0079                                ??_TMR1_ISR 007B  
                              __pintentry 0004                                   _OSCTUNE 0098  
                                 _SLRCONA 030C                      __size_of_secondsTick 000F  
                        ?_TMR1_WriteTimer 0079                                 ?_setState 0079  
                                 __ptext1 0022                                   __ptext2 010A  
                                 __ptext3 00D3                                   __ptext4 0106  
                                 __ptext5 0083                                   __ptext6 0100  
                                 __ptext7 009C                                   __ptext8 00F9  
          ??_TMR1_DefaultInterruptHandler 0079                                 _T1CONbits 0018  
                   _OSCILLATOR_Initialize 00F9         __size_of_TMR1_SetInterruptHandler 0006  
                ??_PIN_MANAGER_Initialize 007B                 ?_TMR1_SetInterruptHandler 0020  
              __size_of_SYSTEM_Initialize 000D                      end_of_initialization 001F  
                              ??_setState 0020                          ??_WDT_Initialize 007B  
                               _PORTAbits 000C                         __size_of_TMR1_ISR 000D  
                  ?_OSCILLATOR_Initialize 0079                       start_initialization 001A  
         __size_of_PIN_MANAGER_Initialize 0017                  __size_of_TMR1_Initialize 0019  
                  __size_of_TMR1_CallBack 000C                               __pbssCOMMON 0070  
                               ___latbits 0000                             __pcstackBANK0 0020  
                        setState@newState 007B                              _currentState 0074  
                  _PIN_MANAGER_Initialize 009C          __end_of_TMR1_SetInterruptHandler 0106  
                       __size_of_setState 0041              ??_INTERRUPT_InterruptManager 007B  
                __size_of_TMR1_StartTimer 0003                             ??_secondsTick 0079  
                           _TMR1_CallBack 00ED                                  _LATAbits 010C  
                                _PIE1bits 0091                  __size_of_TMR1_WriteTimer 0011  
     __size_of_INTERRUPT_InterruptManager 0015                                  _PIR1bits 0011  
                                _TMR1_ISR 00E0                         ??_TMR1_Initialize 007B  
                      _currentSecondsTick 0072                       __end_of_secondsTick 00D3  
                          ?_TMR1_CallBack 0079                   ??_OSCILLATOR_Initialize 007B  
                _TMR1_SetInterruptHandler 0100                     _TMR1_InterruptHandler 0075  
                                __ptext10 00E0                                  __ptext11 00B3  
                                __ptext12 00ED                                  __ptext13 010D  
                              _T1GCONbits 0019                                  __ptext14 00C4  
                       ??_TMR1_StartTimer 007B                             __size_of_main 0020  
                                _setState 0022                       _demandedSecondsTick 0070  
                                int$flags 007E        __end_of_INTERRUPT_InterruptManager 0019  
              _INTERRUPT_InterruptManager 0004                         ??_TMR1_WriteTimer 007B  
                              _INTCONbits 000B                               _secondsTick 00C4  
                         ??_TMR1_CallBack 0079                   __size_of_WDT_Initialize 0004  
                                intlevel1 0000                   ?_PIN_MANAGER_Initialize 0079  
          __end_of_PIN_MANAGER_Initialize 00B3                           _TMR1_Initialize 0083  
