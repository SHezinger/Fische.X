

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Aug 11 22:21:04 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	12F1571
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.10
    28                           ; Generated 31/07/2019 GMT
    29                           ; 
    30                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC12F1571 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  008C                     	;# 
    87  0091                     	;# 
    88  0092                     	;# 
    89  0093                     	;# 
    90  0095                     	;# 
    91  0096                     	;# 
    92  0097                     	;# 
    93  0098                     	;# 
    94  0099                     	;# 
    95  009A                     	;# 
    96  009B                     	;# 
    97  009B                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  0111                     	;# 
   104  0112                     	;# 
   105  0115                     	;# 
   106  0116                     	;# 
   107  0117                     	;# 
   108  0118                     	;# 
   109  0119                     	;# 
   110  011D                     	;# 
   111  011D                     	;# 
   112  018C                     	;# 
   113  0191                     	;# 
   114  0191                     	;# 
   115  0192                     	;# 
   116  0193                     	;# 
   117  0193                     	;# 
   118  0194                     	;# 
   119  0195                     	;# 
   120  0196                     	;# 
   121  0197                     	;# 
   122  020C                     	;# 
   123  028C                     	;# 
   124  030C                     	;# 
   125  038C                     	;# 
   126  0391                     	;# 
   127  0392                     	;# 
   128  0393                     	;# 
   129  0691                     	;# 
   130  0692                     	;# 
   131  0693                     	;# 
   132  0694                     	;# 
   133  0695                     	;# 
   134  0D8E                     	;# 
   135  0D8F                     	;# 
   136  0D90                     	;# 
   137  0D91                     	;# 
   138  0D91                     	;# 
   139  0D92                     	;# 
   140  0D93                     	;# 
   141  0D93                     	;# 
   142  0D94                     	;# 
   143  0D95                     	;# 
   144  0D95                     	;# 
   145  0D96                     	;# 
   146  0D97                     	;# 
   147  0D97                     	;# 
   148  0D98                     	;# 
   149  0D99                     	;# 
   150  0D99                     	;# 
   151  0D9A                     	;# 
   152  0D9B                     	;# 
   153  0D9C                     	;# 
   154  0D9C                     	;# 
   155  0D9D                     	;# 
   156  0D9D                     	;# 
   157  0D9E                     	;# 
   158  0D9F                     	;# 
   159  0DA0                     	;# 
   160  0DA1                     	;# 
   161  0DA1                     	;# 
   162  0DA2                     	;# 
   163  0DA3                     	;# 
   164  0DA3                     	;# 
   165  0DA4                     	;# 
   166  0DA5                     	;# 
   167  0DA5                     	;# 
   168  0DA6                     	;# 
   169  0DA7                     	;# 
   170  0DA7                     	;# 
   171  0DA8                     	;# 
   172  0DA9                     	;# 
   173  0DA9                     	;# 
   174  0DAA                     	;# 
   175  0DAB                     	;# 
   176  0DAC                     	;# 
   177  0DAC                     	;# 
   178  0DAD                     	;# 
   179  0DAD                     	;# 
   180  0DAE                     	;# 
   181  0DAF                     	;# 
   182  0DB0                     	;# 
   183  0DB1                     	;# 
   184  0DB1                     	;# 
   185  0DB2                     	;# 
   186  0DB3                     	;# 
   187  0DB3                     	;# 
   188  0DB4                     	;# 
   189  0DB5                     	;# 
   190  0DB5                     	;# 
   191  0DB6                     	;# 
   192  0DB7                     	;# 
   193  0DB7                     	;# 
   194  0DB8                     	;# 
   195  0DB9                     	;# 
   196  0DB9                     	;# 
   197  0DBA                     	;# 
   198  0DBB                     	;# 
   199  0DBC                     	;# 
   200  0DBC                     	;# 
   201  0DBD                     	;# 
   202  0DBD                     	;# 
   203  0DBE                     	;# 
   204  0DBF                     	;# 
   205  0DC0                     	;# 
   206  0FE4                     	;# 
   207  0FE5                     	;# 
   208  0FE6                     	;# 
   209  0FE7                     	;# 
   210  0FE8                     	;# 
   211  0FE8                     	;# 
   212  0FE9                     	;# 
   213  0FEA                     	;# 
   214  0FEA                     	;# 
   215  0FEB                     	;# 
   216  0FED                     	;# 
   217  0FEE                     	;# 
   218  0FEE                     	;# 
   219  0FEF                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  0011                     	;# 
   234  0012                     	;# 
   235  0013                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  008C                     	;# 
   246  0091                     	;# 
   247  0092                     	;# 
   248  0093                     	;# 
   249  0095                     	;# 
   250  0096                     	;# 
   251  0097                     	;# 
   252  0098                     	;# 
   253  0099                     	;# 
   254  009A                     	;# 
   255  009B                     	;# 
   256  009B                     	;# 
   257  009C                     	;# 
   258  009D                     	;# 
   259  009E                     	;# 
   260  009F                     	;# 
   261  010C                     	;# 
   262  0111                     	;# 
   263  0112                     	;# 
   264  0115                     	;# 
   265  0116                     	;# 
   266  0117                     	;# 
   267  0118                     	;# 
   268  0119                     	;# 
   269  011D                     	;# 
   270  011D                     	;# 
   271  018C                     	;# 
   272  0191                     	;# 
   273  0191                     	;# 
   274  0192                     	;# 
   275  0193                     	;# 
   276  0193                     	;# 
   277  0194                     	;# 
   278  0195                     	;# 
   279  0196                     	;# 
   280  0197                     	;# 
   281  020C                     	;# 
   282  028C                     	;# 
   283  030C                     	;# 
   284  038C                     	;# 
   285  0391                     	;# 
   286  0392                     	;# 
   287  0393                     	;# 
   288  0691                     	;# 
   289  0692                     	;# 
   290  0693                     	;# 
   291  0694                     	;# 
   292  0695                     	;# 
   293  0D8E                     	;# 
   294  0D8F                     	;# 
   295  0D90                     	;# 
   296  0D91                     	;# 
   297  0D91                     	;# 
   298  0D92                     	;# 
   299  0D93                     	;# 
   300  0D93                     	;# 
   301  0D94                     	;# 
   302  0D95                     	;# 
   303  0D95                     	;# 
   304  0D96                     	;# 
   305  0D97                     	;# 
   306  0D97                     	;# 
   307  0D98                     	;# 
   308  0D99                     	;# 
   309  0D99                     	;# 
   310  0D9A                     	;# 
   311  0D9B                     	;# 
   312  0D9C                     	;# 
   313  0D9C                     	;# 
   314  0D9D                     	;# 
   315  0D9D                     	;# 
   316  0D9E                     	;# 
   317  0D9F                     	;# 
   318  0DA0                     	;# 
   319  0DA1                     	;# 
   320  0DA1                     	;# 
   321  0DA2                     	;# 
   322  0DA3                     	;# 
   323  0DA3                     	;# 
   324  0DA4                     	;# 
   325  0DA5                     	;# 
   326  0DA5                     	;# 
   327  0DA6                     	;# 
   328  0DA7                     	;# 
   329  0DA7                     	;# 
   330  0DA8                     	;# 
   331  0DA9                     	;# 
   332  0DA9                     	;# 
   333  0DAA                     	;# 
   334  0DAB                     	;# 
   335  0DAC                     	;# 
   336  0DAC                     	;# 
   337  0DAD                     	;# 
   338  0DAD                     	;# 
   339  0DAE                     	;# 
   340  0DAF                     	;# 
   341  0DB0                     	;# 
   342  0DB1                     	;# 
   343  0DB1                     	;# 
   344  0DB2                     	;# 
   345  0DB3                     	;# 
   346  0DB3                     	;# 
   347  0DB4                     	;# 
   348  0DB5                     	;# 
   349  0DB5                     	;# 
   350  0DB6                     	;# 
   351  0DB7                     	;# 
   352  0DB7                     	;# 
   353  0DB8                     	;# 
   354  0DB9                     	;# 
   355  0DB9                     	;# 
   356  0DBA                     	;# 
   357  0DBB                     	;# 
   358  0DBC                     	;# 
   359  0DBC                     	;# 
   360  0DBD                     	;# 
   361  0DBD                     	;# 
   362  0DBE                     	;# 
   363  0DBF                     	;# 
   364  0DC0                     	;# 
   365  0FE4                     	;# 
   366  0FE5                     	;# 
   367  0FE6                     	;# 
   368  0FE7                     	;# 
   369  0FE8                     	;# 
   370  0FE8                     	;# 
   371  0FE9                     	;# 
   372  0FEA                     	;# 
   373  0FEA                     	;# 
   374  0FEB                     	;# 
   375  0FED                     	;# 
   376  0FEE                     	;# 
   377  0FEE                     	;# 
   378  0FEF                     	;# 
   379  0000                     	;# 
   380  0001                     	;# 
   381  0002                     	;# 
   382  0003                     	;# 
   383  0004                     	;# 
   384  0005                     	;# 
   385  0006                     	;# 
   386  0007                     	;# 
   387  0008                     	;# 
   388  0009                     	;# 
   389  000A                     	;# 
   390  000B                     	;# 
   391  000C                     	;# 
   392  0011                     	;# 
   393  0012                     	;# 
   394  0013                     	;# 
   395  0015                     	;# 
   396  0016                     	;# 
   397  0016                     	;# 
   398  0017                     	;# 
   399  0018                     	;# 
   400  0019                     	;# 
   401  001A                     	;# 
   402  001B                     	;# 
   403  001C                     	;# 
   404  008C                     	;# 
   405  0091                     	;# 
   406  0092                     	;# 
   407  0093                     	;# 
   408  0095                     	;# 
   409  0096                     	;# 
   410  0097                     	;# 
   411  0098                     	;# 
   412  0099                     	;# 
   413  009A                     	;# 
   414  009B                     	;# 
   415  009B                     	;# 
   416  009C                     	;# 
   417  009D                     	;# 
   418  009E                     	;# 
   419  009F                     	;# 
   420  010C                     	;# 
   421  0111                     	;# 
   422  0112                     	;# 
   423  0115                     	;# 
   424  0116                     	;# 
   425  0117                     	;# 
   426  0118                     	;# 
   427  0119                     	;# 
   428  011D                     	;# 
   429  011D                     	;# 
   430  018C                     	;# 
   431  0191                     	;# 
   432  0191                     	;# 
   433  0192                     	;# 
   434  0193                     	;# 
   435  0193                     	;# 
   436  0194                     	;# 
   437  0195                     	;# 
   438  0196                     	;# 
   439  0197                     	;# 
   440  020C                     	;# 
   441  028C                     	;# 
   442  030C                     	;# 
   443  038C                     	;# 
   444  0391                     	;# 
   445  0392                     	;# 
   446  0393                     	;# 
   447  0691                     	;# 
   448  0692                     	;# 
   449  0693                     	;# 
   450  0694                     	;# 
   451  0695                     	;# 
   452  0D8E                     	;# 
   453  0D8F                     	;# 
   454  0D90                     	;# 
   455  0D91                     	;# 
   456  0D91                     	;# 
   457  0D92                     	;# 
   458  0D93                     	;# 
   459  0D93                     	;# 
   460  0D94                     	;# 
   461  0D95                     	;# 
   462  0D95                     	;# 
   463  0D96                     	;# 
   464  0D97                     	;# 
   465  0D97                     	;# 
   466  0D98                     	;# 
   467  0D99                     	;# 
   468  0D99                     	;# 
   469  0D9A                     	;# 
   470  0D9B                     	;# 
   471  0D9C                     	;# 
   472  0D9C                     	;# 
   473  0D9D                     	;# 
   474  0D9D                     	;# 
   475  0D9E                     	;# 
   476  0D9F                     	;# 
   477  0DA0                     	;# 
   478  0DA1                     	;# 
   479  0DA1                     	;# 
   480  0DA2                     	;# 
   481  0DA3                     	;# 
   482  0DA3                     	;# 
   483  0DA4                     	;# 
   484  0DA5                     	;# 
   485  0DA5                     	;# 
   486  0DA6                     	;# 
   487  0DA7                     	;# 
   488  0DA7                     	;# 
   489  0DA8                     	;# 
   490  0DA9                     	;# 
   491  0DA9                     	;# 
   492  0DAA                     	;# 
   493  0DAB                     	;# 
   494  0DAC                     	;# 
   495  0DAC                     	;# 
   496  0DAD                     	;# 
   497  0DAD                     	;# 
   498  0DAE                     	;# 
   499  0DAF                     	;# 
   500  0DB0                     	;# 
   501  0DB1                     	;# 
   502  0DB1                     	;# 
   503  0DB2                     	;# 
   504  0DB3                     	;# 
   505  0DB3                     	;# 
   506  0DB4                     	;# 
   507  0DB5                     	;# 
   508  0DB5                     	;# 
   509  0DB6                     	;# 
   510  0DB7                     	;# 
   511  0DB7                     	;# 
   512  0DB8                     	;# 
   513  0DB9                     	;# 
   514  0DB9                     	;# 
   515  0DBA                     	;# 
   516  0DBB                     	;# 
   517  0DBC                     	;# 
   518  0DBC                     	;# 
   519  0DBD                     	;# 
   520  0DBD                     	;# 
   521  0DBE                     	;# 
   522  0DBF                     	;# 
   523  0DC0                     	;# 
   524  0FE4                     	;# 
   525  0FE5                     	;# 
   526  0FE6                     	;# 
   527  0FE7                     	;# 
   528  0FE8                     	;# 
   529  0FE8                     	;# 
   530  0FE9                     	;# 
   531  0FEA                     	;# 
   532  0FEA                     	;# 
   533  0FEB                     	;# 
   534  0FED                     	;# 
   535  0FEE                     	;# 
   536  0FEE                     	;# 
   537  0FEF                     	;# 
   538  0000                     	;# 
   539  0001                     	;# 
   540  0002                     	;# 
   541  0003                     	;# 
   542  0004                     	;# 
   543  0005                     	;# 
   544  0006                     	;# 
   545  0007                     	;# 
   546  0008                     	;# 
   547  0009                     	;# 
   548  000A                     	;# 
   549  000B                     	;# 
   550  000C                     	;# 
   551  0011                     	;# 
   552  0012                     	;# 
   553  0013                     	;# 
   554  0015                     	;# 
   555  0016                     	;# 
   556  0016                     	;# 
   557  0017                     	;# 
   558  0018                     	;# 
   559  0019                     	;# 
   560  001A                     	;# 
   561  001B                     	;# 
   562  001C                     	;# 
   563  008C                     	;# 
   564  0091                     	;# 
   565  0092                     	;# 
   566  0093                     	;# 
   567  0095                     	;# 
   568  0096                     	;# 
   569  0097                     	;# 
   570  0098                     	;# 
   571  0099                     	;# 
   572  009A                     	;# 
   573  009B                     	;# 
   574  009B                     	;# 
   575  009C                     	;# 
   576  009D                     	;# 
   577  009E                     	;# 
   578  009F                     	;# 
   579  010C                     	;# 
   580  0111                     	;# 
   581  0112                     	;# 
   582  0115                     	;# 
   583  0116                     	;# 
   584  0117                     	;# 
   585  0118                     	;# 
   586  0119                     	;# 
   587  011D                     	;# 
   588  011D                     	;# 
   589  018C                     	;# 
   590  0191                     	;# 
   591  0191                     	;# 
   592  0192                     	;# 
   593  0193                     	;# 
   594  0193                     	;# 
   595  0194                     	;# 
   596  0195                     	;# 
   597  0196                     	;# 
   598  0197                     	;# 
   599  020C                     	;# 
   600  028C                     	;# 
   601  030C                     	;# 
   602  038C                     	;# 
   603  0391                     	;# 
   604  0392                     	;# 
   605  0393                     	;# 
   606  0691                     	;# 
   607  0692                     	;# 
   608  0693                     	;# 
   609  0694                     	;# 
   610  0695                     	;# 
   611  0D8E                     	;# 
   612  0D8F                     	;# 
   613  0D90                     	;# 
   614  0D91                     	;# 
   615  0D91                     	;# 
   616  0D92                     	;# 
   617  0D93                     	;# 
   618  0D93                     	;# 
   619  0D94                     	;# 
   620  0D95                     	;# 
   621  0D95                     	;# 
   622  0D96                     	;# 
   623  0D97                     	;# 
   624  0D97                     	;# 
   625  0D98                     	;# 
   626  0D99                     	;# 
   627  0D99                     	;# 
   628  0D9A                     	;# 
   629  0D9B                     	;# 
   630  0D9C                     	;# 
   631  0D9C                     	;# 
   632  0D9D                     	;# 
   633  0D9D                     	;# 
   634  0D9E                     	;# 
   635  0D9F                     	;# 
   636  0DA0                     	;# 
   637  0DA1                     	;# 
   638  0DA1                     	;# 
   639  0DA2                     	;# 
   640  0DA3                     	;# 
   641  0DA3                     	;# 
   642  0DA4                     	;# 
   643  0DA5                     	;# 
   644  0DA5                     	;# 
   645  0DA6                     	;# 
   646  0DA7                     	;# 
   647  0DA7                     	;# 
   648  0DA8                     	;# 
   649  0DA9                     	;# 
   650  0DA9                     	;# 
   651  0DAA                     	;# 
   652  0DAB                     	;# 
   653  0DAC                     	;# 
   654  0DAC                     	;# 
   655  0DAD                     	;# 
   656  0DAD                     	;# 
   657  0DAE                     	;# 
   658  0DAF                     	;# 
   659  0DB0                     	;# 
   660  0DB1                     	;# 
   661  0DB1                     	;# 
   662  0DB2                     	;# 
   663  0DB3                     	;# 
   664  0DB3                     	;# 
   665  0DB4                     	;# 
   666  0DB5                     	;# 
   667  0DB5                     	;# 
   668  0DB6                     	;# 
   669  0DB7                     	;# 
   670  0DB7                     	;# 
   671  0DB8                     	;# 
   672  0DB9                     	;# 
   673  0DB9                     	;# 
   674  0DBA                     	;# 
   675  0DBB                     	;# 
   676  0DBC                     	;# 
   677  0DBC                     	;# 
   678  0DBD                     	;# 
   679  0DBD                     	;# 
   680  0DBE                     	;# 
   681  0DBF                     	;# 
   682  0DC0                     	;# 
   683  0FE4                     	;# 
   684  0FE5                     	;# 
   685  0FE6                     	;# 
   686  0FE7                     	;# 
   687  0FE8                     	;# 
   688  0FE8                     	;# 
   689  0FE9                     	;# 
   690  0FEA                     	;# 
   691  0FEA                     	;# 
   692  0FEB                     	;# 
   693  0FED                     	;# 
   694  0FEE                     	;# 
   695  0FEE                     	;# 
   696  0FEF                     	;# 
   697  0000                     	;# 
   698  0001                     	;# 
   699  0002                     	;# 
   700  0003                     	;# 
   701  0004                     	;# 
   702  0005                     	;# 
   703  0006                     	;# 
   704  0007                     	;# 
   705  0008                     	;# 
   706  0009                     	;# 
   707  000A                     	;# 
   708  000B                     	;# 
   709  000C                     	;# 
   710  0011                     	;# 
   711  0012                     	;# 
   712  0013                     	;# 
   713  0015                     	;# 
   714  0016                     	;# 
   715  0016                     	;# 
   716  0017                     	;# 
   717  0018                     	;# 
   718  0019                     	;# 
   719  001A                     	;# 
   720  001B                     	;# 
   721  001C                     	;# 
   722  008C                     	;# 
   723  0091                     	;# 
   724  0092                     	;# 
   725  0093                     	;# 
   726  0095                     	;# 
   727  0096                     	;# 
   728  0097                     	;# 
   729  0098                     	;# 
   730  0099                     	;# 
   731  009A                     	;# 
   732  009B                     	;# 
   733  009B                     	;# 
   734  009C                     	;# 
   735  009D                     	;# 
   736  009E                     	;# 
   737  009F                     	;# 
   738  010C                     	;# 
   739  0111                     	;# 
   740  0112                     	;# 
   741  0115                     	;# 
   742  0116                     	;# 
   743  0117                     	;# 
   744  0118                     	;# 
   745  0119                     	;# 
   746  011D                     	;# 
   747  011D                     	;# 
   748  018C                     	;# 
   749  0191                     	;# 
   750  0191                     	;# 
   751  0192                     	;# 
   752  0193                     	;# 
   753  0193                     	;# 
   754  0194                     	;# 
   755  0195                     	;# 
   756  0196                     	;# 
   757  0197                     	;# 
   758  020C                     	;# 
   759  028C                     	;# 
   760  030C                     	;# 
   761  038C                     	;# 
   762  0391                     	;# 
   763  0392                     	;# 
   764  0393                     	;# 
   765  0691                     	;# 
   766  0692                     	;# 
   767  0693                     	;# 
   768  0694                     	;# 
   769  0695                     	;# 
   770  0D8E                     	;# 
   771  0D8F                     	;# 
   772  0D90                     	;# 
   773  0D91                     	;# 
   774  0D91                     	;# 
   775  0D92                     	;# 
   776  0D93                     	;# 
   777  0D93                     	;# 
   778  0D94                     	;# 
   779  0D95                     	;# 
   780  0D95                     	;# 
   781  0D96                     	;# 
   782  0D97                     	;# 
   783  0D97                     	;# 
   784  0D98                     	;# 
   785  0D99                     	;# 
   786  0D99                     	;# 
   787  0D9A                     	;# 
   788  0D9B                     	;# 
   789  0D9C                     	;# 
   790  0D9C                     	;# 
   791  0D9D                     	;# 
   792  0D9D                     	;# 
   793  0D9E                     	;# 
   794  0D9F                     	;# 
   795  0DA0                     	;# 
   796  0DA1                     	;# 
   797  0DA1                     	;# 
   798  0DA2                     	;# 
   799  0DA3                     	;# 
   800  0DA3                     	;# 
   801  0DA4                     	;# 
   802  0DA5                     	;# 
   803  0DA5                     	;# 
   804  0DA6                     	;# 
   805  0DA7                     	;# 
   806  0DA7                     	;# 
   807  0DA8                     	;# 
   808  0DA9                     	;# 
   809  0DA9                     	;# 
   810  0DAA                     	;# 
   811  0DAB                     	;# 
   812  0DAC                     	;# 
   813  0DAC                     	;# 
   814  0DAD                     	;# 
   815  0DAD                     	;# 
   816  0DAE                     	;# 
   817  0DAF                     	;# 
   818  0DB0                     	;# 
   819  0DB1                     	;# 
   820  0DB1                     	;# 
   821  0DB2                     	;# 
   822  0DB3                     	;# 
   823  0DB3                     	;# 
   824  0DB4                     	;# 
   825  0DB5                     	;# 
   826  0DB5                     	;# 
   827  0DB6                     	;# 
   828  0DB7                     	;# 
   829  0DB7                     	;# 
   830  0DB8                     	;# 
   831  0DB9                     	;# 
   832  0DB9                     	;# 
   833  0DBA                     	;# 
   834  0DBB                     	;# 
   835  0DBC                     	;# 
   836  0DBC                     	;# 
   837  0DBD                     	;# 
   838  0DBD                     	;# 
   839  0DBE                     	;# 
   840  0DBF                     	;# 
   841  0DC0                     	;# 
   842  0FE4                     	;# 
   843  0FE5                     	;# 
   844  0FE6                     	;# 
   845  0FE7                     	;# 
   846  0FE8                     	;# 
   847  0FE8                     	;# 
   848  0FE9                     	;# 
   849  0FEA                     	;# 
   850  0FEA                     	;# 
   851  0FEB                     	;# 
   852  0FED                     	;# 
   853  0FEE                     	;# 
   854  0FEE                     	;# 
   855  0FEF                     	;# 
   856                           
   857                           	psect	nvCOMMON
   858  007A                     __pnvCOMMON:	
   859  007A                     _timer1ReloadVal:	
   860  007A                     	ds	2
   861                           
   862                           	psect	nvBANK0
   863  0020                     __pnvBANK0:	
   864  0020                     _TMR1_InterruptHandler:	
   865  0020                     	ds	2
   866  000C                     _PORTAbits	set	12
   867  000B                     _INTCONbits	set	11
   868  0019                     _T1GCONbits	set	25
   869  0018                     _T1CONbits	set	24
   870  0018                     _T1CON	set	24
   871  0011                     _PIR1bits	set	17
   872  0016                     _TMR1L	set	22
   873  0017                     _TMR1H	set	23
   874  0019                     _T1GCON	set	25
   875  0091                     _PIE1bits	set	145
   876  0095                     _OPTION_REGbits	set	149
   877  008C                     _TRISA	set	140
   878  0097                     _WDTCON	set	151
   879  0098                     _OSCTUNE	set	152
   880  0099                     _OSCCON	set	153
   881  010C                     _LATAbits	set	268
   882  011D                     _APFCON	set	285
   883  010C                     _LATA	set	268
   884  0116                     _BORCON	set	278
   885  018C                     _ANSELA	set	396
   886  020C                     _WPUA	set	524
   887  028C                     _ODCONA	set	652
   888  030C                     _SLRCONA	set	780
   889  038C                     _INLVLA	set	908
   890                           
   891                           ; #config settings
   892  0000                     
   893                           	psect	cinit
   894  001A                     start_initialization:	
   895  001A                     __initialization:	
   896                           
   897                           ; Clear objects allocated to COMMON
   898  001A  01F0               	clrf	__pbssCOMMON& (0+127)
   899  001B  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   900  001C  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   901  001D  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   902  001E  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   903  001F                     end_of_initialization:	
   904                           ;End of C runtime variable initialization code
   905                           
   906  001F                     __end_of__initialization:	
   907  001F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   908  0020  0020               	movlb	0
   909  0021  2822               	ljmp	_main	;jump to C main() function
   910                           
   911                           	psect	bssCOMMON
   912  0070                     __pbssCOMMON:	
   913  0070                     _demandedSecondsTick:	
   914  0070                     	ds	2
   915  0072                     _currentSecondsTick:	
   916  0072                     	ds	2
   917  0074                     _currentState:	
   918  0074                     	ds	1
   919                           
   920                           	psect	cstackCOMMON
   921  0075                     __pcstackCOMMON:	
   922  0075                     ?_PIN_MANAGER_Initialize:	
   923  0075                     ?_OSCILLATOR_Initialize:	
   924                           ; 1 bytes @ 0x0
   925                           
   926  0075                     ?_WDT_Initialize:	
   927                           ; 1 bytes @ 0x0
   928                           
   929  0075                     ?_TMR1_Initialize:	
   930                           ; 1 bytes @ 0x0
   931                           
   932  0075                     ?_TMR1_DefaultInterruptHandler:	
   933                           ; 1 bytes @ 0x0
   934                           
   935  0075                     ??_TMR1_DefaultInterruptHandler:	
   936                           ; 1 bytes @ 0x0
   937                           
   938  0075                     ?_TMR1_CallBack:	
   939                           ; 1 bytes @ 0x0
   940                           
   941  0075                     ??_TMR1_CallBack:	
   942                           ; 1 bytes @ 0x0
   943                           
   944  0075                     ?_secondsTick:	
   945                           ; 1 bytes @ 0x0
   946                           
   947  0075                     ??_secondsTick:	
   948                           ; 1 bytes @ 0x0
   949                           
   950  0075                     ?_setState:	
   951                           ; 1 bytes @ 0x0
   952                           
   953  0075                     ?_SYSTEM_Initialize:	
   954                           ; 1 bytes @ 0x0
   955                           
   956  0075                     ?_TMR1_StartTimer:	
   957                           ; 1 bytes @ 0x0
   958                           
   959  0075                     ?_TMR1_WriteTimer:	
   960                           ; 1 bytes @ 0x0
   961                           
   962  0075                     ?_TMR1_ISR:	
   963                           ; 1 bytes @ 0x0
   964                           
   965  0075                     ?_INTERRUPT_InterruptManager:	
   966                           ; 1 bytes @ 0x0
   967                           
   968  0075                     ?_main:	
   969                           ; 1 bytes @ 0x0
   970                           
   971  0075                     TMR1_WriteTimer@timerVal:	
   972                           ; 1 bytes @ 0x0
   973                           
   974                           
   975                           ; 2 bytes @ 0x0
   976  0075                     	ds	2
   977  0077                     ??_PIN_MANAGER_Initialize:	
   978  0077                     ??_OSCILLATOR_Initialize:	
   979                           ; 1 bytes @ 0x2
   980                           
   981  0077                     ??_WDT_Initialize:	
   982                           ; 1 bytes @ 0x2
   983                           
   984  0077                     ?_TMR1_SetInterruptHandler:	
   985                           ; 1 bytes @ 0x2
   986                           
   987  0077                     ??_setState:	
   988                           ; 1 bytes @ 0x2
   989                           
   990  0077                     ??_TMR1_StartTimer:	
   991                           ; 1 bytes @ 0x2
   992                           
   993  0077                     ??_TMR1_WriteTimer:	
   994                           ; 1 bytes @ 0x2
   995                           
   996  0077                     ??_TMR1_ISR:	
   997                           ; 1 bytes @ 0x2
   998                           
   999  0077                     ??_INTERRUPT_InterruptManager:	
  1000                           ; 1 bytes @ 0x2
  1001                           
  1002  0077                     TMR1_SetInterruptHandler@InterruptHandler:	
  1003                           ; 1 bytes @ 0x2
  1004                           
  1005                           
  1006                           ; 2 bytes @ 0x2
  1007  0077                     	ds	2
  1008  0079                     ??_TMR1_Initialize:	
  1009  0079                     ??_TMR1_SetInterruptHandler:	
  1010                           ; 1 bytes @ 0x4
  1011                           
  1012  0079                     ??_SYSTEM_Initialize:	
  1013                           ; 1 bytes @ 0x4
  1014                           
  1015  0079                     setState@newState:	
  1016                           ; 1 bytes @ 0x4
  1017                           
  1018                           
  1019                           ; 1 bytes @ 0x4
  1020  0079                     	ds	1
  1021                           
  1022                           	psect	cstackBANK0
  1023  0022                     __pcstackBANK0:	
  1024  0022                     ??_main:	
  1025                           
  1026                           ; 1 bytes @ 0x0
  1027  0022                     	ds	2
  1028                           
  1029                           	psect	maintext
  1030  0022                     __pmaintext:	
  1031 ;;
  1032 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1033 ;;
  1034 ;; *************** function _main *****************
  1035 ;; Defined at:
  1036 ;;		line 68 in file "main.c"
  1037 ;; Parameters:    Size  Location     Type
  1038 ;;		None
  1039 ;; Auto vars:     Size  Location     Type
  1040 ;;		None
  1041 ;; Return value:  Size  Location     Type
  1042 ;;                  1    wreg      void 
  1043 ;; Registers used:
  1044 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1045 ;; Tracked objects:
  1046 ;;		On entry : B1F/0
  1047 ;;		On exit  : 0/0
  1048 ;;		Unchanged: 0/0
  1049 ;; Data sizes:     COMMON   BANK0   BANK1
  1050 ;;      Params:         0       0       0
  1051 ;;      Locals:         0       0       0
  1052 ;;      Temps:          0       2       0
  1053 ;;      Totals:         0       2       0
  1054 ;;Total ram usage:        2 bytes
  1055 ;; Hardware stack levels required when called:    7
  1056 ;; This function calls:
  1057 ;;		_SYSTEM_Initialize
  1058 ;;		_TMR1_SetInterruptHandler
  1059 ;;		_TMR1_StartTimer
  1060 ;;		_setState
  1061 ;; This function is called by:
  1062 ;;		Startup code after reset
  1063 ;; This function uses a non-reentrant model
  1064 ;;
  1065                           
  1066                           
  1067                           ;psect for function _main
  1068  0022                     _main:	
  1069  0022                     l1036:	
  1070                           ;incstack = 0
  1071                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1072                           
  1073                           
  1074                           ;main.c: 71:     SYSTEM_Initialize();
  1075  0022  3181  2117  3180   	fcall	_SYSTEM_Initialize
  1076  0025                     l1038:	
  1077                           
  1078                           ;main.c: 77:     (INTCONbits.GIE = 1);
  1079  0025  178B               	bsf	11,7	;volatile
  1080  0026                     l1040:	
  1081                           
  1082                           ;main.c: 80:     (INTCONbits.PEIE = 1);
  1083  0026  170B               	bsf	11,6	;volatile
  1084                           
  1085                           ;main.c: 89:     TMR1_SetInterruptHandler(secondsTick);
  1086  0027  3006               	movlw	low _secondsTick
  1087  0028  00F7               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  1088  0029  3001               	movlw	high _secondsTick
  1089  002A  00F8               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  1090  002B  3181  2145  3180   	fcall	_TMR1_SetInterruptHandler
  1091  002E                     l1042:	
  1092                           
  1093                           ;main.c: 91:     TMR1_StartTimer();
  1094  002E  3181  214F  3180   	fcall	_TMR1_StartTimer
  1095  0031                     l1044:	
  1096                           
  1097                           ;main.c: 93:     setState(STATE_WAIT_TIME);
  1098  0031  3001               	movlw	1
  1099  0032  3180  2087  3180   	fcall	_setState
  1100  0035  2862               	goto	l1058
  1101  0036                     l160:	
  1102                           ;main.c: 99:         {;main.c: 100:             case STATE_WAIT_TIME:
  1103                           
  1104                           
  1105                           ;main.c: 102:                 if(PORTAbits.RA5 && (currentSecondsTick >= demandedSeconds
      +                          Tick))
  1106  0036  1E8C               	btfss	12,5	;volatile
  1107  0037  2839               	goto	u281
  1108  0038  283A               	goto	u280
  1109  0039                     u281:	
  1110  0039  2879               	goto	l1060
  1111  003A                     u280:	
  1112  003A                     l1046:	
  1113  003A  0871               	movf	_demandedSecondsTick+1,w
  1114  003B  0273               	subwf	_currentSecondsTick+1,w
  1115  003C  1D03               	skipz
  1116  003D  2840               	goto	u295
  1117  003E  0870               	movf	_demandedSecondsTick,w
  1118  003F  0272               	subwf	_currentSecondsTick,w
  1119  0040                     u295:	
  1120  0040  1C03               	skipc
  1121  0041  2843               	goto	u291
  1122  0042  2844               	goto	u290
  1123  0043                     u291:	
  1124  0043  2879               	goto	l1060
  1125  0044                     u290:	
  1126  0044                     l1048:	
  1127                           
  1128                           ;main.c: 103:                 {;main.c: 104:                     setState(STATE_OPEN_VAL
      +                          VE);
  1129  0044  3002               	movlw	2
  1130  0045  3180  2087  3180   	fcall	_setState
  1131  0048  2879               	goto	l1060
  1132  0049                     l163:	
  1133                           ;main.c: 108:             case STATE_OPEN_VALVE:
  1134                           
  1135                           
  1136                           ;main.c: 109:                 if(PORTAbits.RA4)
  1137  0049  1E0C               	btfss	12,4	;volatile
  1138  004A  284C               	goto	u301
  1139  004B  284D               	goto	u300
  1140  004C                     u301:	
  1141  004C  2879               	goto	l1060
  1142  004D                     u300:	
  1143  004D                     l1050:	
  1144                           
  1145                           ;main.c: 110:                 {;main.c: 111:                     setState(STATE_CLOSE_VA
      +                          LVE);
  1146  004D  3003               	movlw	3
  1147  004E  3180  2087  3180   	fcall	_setState
  1148  0051  2879               	goto	l1060
  1149  0052                     l1052:	
  1150                           
  1151                           ;main.c: 117:                 if(currentSecondsTick >= demandedSecondsTick)
  1152  0052  0871               	movf	_demandedSecondsTick+1,w
  1153  0053  0273               	subwf	_currentSecondsTick+1,w
  1154  0054  1D03               	skipz
  1155  0055  2858               	goto	u315
  1156  0056  0870               	movf	_demandedSecondsTick,w
  1157  0057  0272               	subwf	_currentSecondsTick,w
  1158  0058                     u315:	
  1159  0058  1C03               	skipc
  1160  0059  285B               	goto	u311
  1161  005A  285C               	goto	u310
  1162  005B                     u311:	
  1163  005B  2879               	goto	l1060
  1164  005C                     u310:	
  1165  005C                     l1054:	
  1166                           
  1167                           ;main.c: 118:                 {;main.c: 119:                     setState(STATE_END);
  1168  005C  3004               	movlw	4
  1169  005D  3180  2087  3180   	fcall	_setState
  1170  0060  2879               	goto	l1060
  1171  0061                     l168:	
  1172                           ;main.c: 124:                 while(1);
  1173                           
  1174  0061  2861               	goto	l168
  1175  0062                     l1058:	
  1176  0062  0874               	movf	_currentState,w
  1177  0063  0020               	movlb	0	; select bank0
  1178  0064  00A2               	movwf	??_main
  1179  0065  01A3               	clrf	??_main+1
  1180                           
  1181                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1182                           ; Switch size 1, requested type "simple"
  1183                           ; Number of cases is 1, Range of values is 0 to 0
  1184                           ; switch strategies available:
  1185                           ; Name         Instructions Cycles
  1186                           ; simple_byte            4     3 (average)
  1187                           ; direct_byte            8     6 (fixed)
  1188                           ; jumptable            260     6 (fixed)
  1189                           ;	Chosen strategy is simple_byte
  1190  0066  0823               	movf	??_main+1,w
  1191  0067  3A00               	xorlw	0	; case 0
  1192  0068  1903               	skipnz
  1193  0069  286B               	goto	l1118
  1194  006A  2879               	goto	l1060
  1195  006B                     l1118:	
  1196                           
  1197                           ; Switch size 1, requested type "simple"
  1198                           ; Number of cases is 4, Range of values is 1 to 4
  1199                           ; switch strategies available:
  1200                           ; Name         Instructions Cycles
  1201                           ; simple_byte           13     7 (average)
  1202                           ; direct_byte           17     9 (fixed)
  1203                           ; jumptable            263     9 (fixed)
  1204                           ;	Chosen strategy is simple_byte
  1205  006B  0822               	movf	??_main,w
  1206  006C  3A01               	xorlw	1	; case 1
  1207  006D  1903               	skipnz
  1208  006E  2836               	goto	l160
  1209  006F  3A03               	xorlw	3	; case 2
  1210  0070  1903               	skipnz
  1211  0071  2849               	goto	l163
  1212  0072  3A01               	xorlw	1	; case 3
  1213  0073  1903               	skipnz
  1214  0074  2852               	goto	l1052
  1215  0075  3A07               	xorlw	7	; case 4
  1216  0076  1903               	skipnz
  1217  0077  2861               	goto	l168
  1218  0078  2879               	goto	l1060
  1219  0079                     l1060:	
  1220  0079  1003               	clrc
  1221  007A  0022               	movlb	2	; select bank2
  1222  007B  1C8C               	btfss	12,1	;volatile
  1223  007C  1403               	setc
  1224  007D  1803               	btfsc	3,0
  1225  007E  2880               	goto	u321
  1226  007F  2883               	goto	u320
  1227  0080                     u321:	
  1228  0080  0022               	movlb	2	; select bank2
  1229  0081  148C               	bsf	12,1	;volatile
  1230  0082  2885               	goto	u334
  1231  0083                     u320:	
  1232  0083  0022               	movlb	2	; select bank2
  1233  0084  108C               	bcf	12,1	;volatile
  1234  0085                     u334:	
  1235  0085  2862               	goto	l1058
  1236  0086  2819               	ljmp	start
  1237  0087                     __end_of_main:	
  1238                           
  1239                           	psect	text1
  1240  0087                     __ptext1:	
  1241 ;; *************** function _setState *****************
  1242 ;; Defined at:
  1243 ;;		line 137 in file "main.c"
  1244 ;; Parameters:    Size  Location     Type
  1245 ;;  newState        1    wreg     enum E2970
  1246 ;; Auto vars:     Size  Location     Type
  1247 ;;  newState        1    4[COMMON] enum E2970
  1248 ;; Return value:  Size  Location     Type
  1249 ;;                  1    wreg      void 
  1250 ;; Registers used:
  1251 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1252 ;; Tracked objects:
  1253 ;;		On entry : 0/0
  1254 ;;		On exit  : 0/0
  1255 ;;		Unchanged: 0/0
  1256 ;; Data sizes:     COMMON   BANK0   BANK1
  1257 ;;      Params:         0       0       0
  1258 ;;      Locals:         1       0       0
  1259 ;;      Temps:          2       0       0
  1260 ;;      Totals:         3       0       0
  1261 ;;Total ram usage:        3 bytes
  1262 ;; Hardware stack levels used:    1
  1263 ;; Hardware stack levels required when called:    4
  1264 ;; This function calls:
  1265 ;;		Nothing
  1266 ;; This function is called by:
  1267 ;;		_main
  1268 ;; This function uses a non-reentrant model
  1269 ;;
  1270                           
  1271                           
  1272                           ;psect for function _setState
  1273  0087                     _setState:	
  1274                           
  1275                           ;incstack = 0
  1276                           ; Regs used in _setState: [wreg-fsr0h+status,2+status,0]
  1277                           ;setState@newState stored from wreg
  1278  0087  00F9               	movwf	setState@newState
  1279  0088                     l800:	
  1280                           
  1281                           ;main.c: 137: void setState(states_t newState);main.c: 138: {;main.c: 139:     if(newSta
      +                          te == currentState)
  1282  0088  0879               	movf	setState@newState,w
  1283  0089  0674               	xorwf	_currentState,w
  1284  008A  1D03               	skipz
  1285  008B  288D               	goto	u51
  1286  008C  288E               	goto	u50
  1287  008D                     u51:	
  1288  008D  28AB               	goto	l810
  1289  008E                     u50:	
  1290  008E  28C5               	goto	l179
  1291  008F                     l182:	
  1292                           ;main.c: 146:             do { LATAbits.LATA1 = 0; } while(0);
  1293                           
  1294  008F  0022               	movlb	2	; select bank2
  1295  0090  108C               	bcf	12,1	;volatile
  1296  0091                     l184:	
  1297                           ;main.c: 147:             do { LATAbits.LATA2 = 0; } while(0);
  1298                           
  1299  0091  110C               	bcf	12,2	;volatile
  1300  0092                     l804:	
  1301                           
  1302                           ;main.c: 148:             demandedSecondsTick = currentSecondsTick + 1;
  1303  0092  0872               	movf	_currentSecondsTick,w
  1304  0093  3E01               	addlw	1
  1305  0094  00F0               	movwf	_demandedSecondsTick
  1306  0095  3000               	movlw	0
  1307  0096  3D73               	addwfc	_currentSecondsTick+1,w
  1308  0097  00F1               	movwf	_demandedSecondsTick+1
  1309                           
  1310                           ;main.c: 149:             break;
  1311  0098  28C1               	goto	l812
  1312  0099                     l188:	
  1313                           ;main.c: 152:             do { LATAbits.LATA1 = 1; } while(0);
  1314                           
  1315  0099  0022               	movlb	2	; select bank2
  1316  009A  148C               	bsf	12,1	;volatile
  1317  009B                     l190:	
  1318                           ;main.c: 153:             do { LATAbits.LATA2 = 0; } while(0);
  1319                           
  1320  009B  110C               	bcf	12,2	;volatile
  1321  009C  28C1               	goto	l812
  1322  009D                     l193:	
  1323                           ;main.c: 157:             do { LATAbits.LATA1 = 0; } while(0);
  1324                           
  1325  009D  0022               	movlb	2	; select bank2
  1326  009E  108C               	bcf	12,1	;volatile
  1327  009F                     l195:	
  1328                           ;main.c: 158:             do { LATAbits.LATA2 = 1; } while(0);
  1329                           
  1330  009F  150C               	bsf	12,2	;volatile
  1331  00A0                     l806:	
  1332                           
  1333                           ;main.c: 159:             demandedSecondsTick = currentSecondsTick + 30;
  1334  00A0  0872               	movf	_currentSecondsTick,w
  1335  00A1  3E1E               	addlw	30
  1336  00A2  00F0               	movwf	_demandedSecondsTick
  1337  00A3  3000               	movlw	0
  1338  00A4  3D73               	addwfc	_currentSecondsTick+1,w
  1339  00A5  00F1               	movwf	_demandedSecondsTick+1
  1340                           
  1341                           ;main.c: 160:             break;
  1342  00A6  28C1               	goto	l812
  1343  00A7                     l198:	
  1344                           ;main.c: 163:             do { LATAbits.LATA1 = 0; } while(0);
  1345                           
  1346  00A7  0022               	movlb	2	; select bank2
  1347  00A8  108C               	bcf	12,1	;volatile
  1348  00A9                     l200:	
  1349                           ;main.c: 164:             do { LATAbits.LATA2 = 0; } while(0);
  1350                           
  1351  00A9  110C               	bcf	12,2	;volatile
  1352  00AA  28C1               	goto	l812
  1353  00AB                     l810:	
  1354  00AB  0879               	movf	setState@newState,w
  1355  00AC  00F7               	movwf	??_setState
  1356  00AD  01F8               	clrf	??_setState+1
  1357                           
  1358                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1359                           ; Switch size 1, requested type "simple"
  1360                           ; Number of cases is 1, Range of values is 0 to 0
  1361                           ; switch strategies available:
  1362                           ; Name         Instructions Cycles
  1363                           ; simple_byte            4     3 (average)
  1364                           ; direct_byte            8     6 (fixed)
  1365                           ; jumptable            260     6 (fixed)
  1366                           ;	Chosen strategy is simple_byte
  1367  00AE  0878               	movf	??_setState+1,w
  1368  00AF  3A00               	xorlw	0	; case 0
  1369  00B0  1903               	skipnz
  1370  00B1  28B3               	goto	l1120
  1371  00B2  28C1               	goto	l812
  1372  00B3                     l1120:	
  1373                           
  1374                           ; Switch size 1, requested type "simple"
  1375                           ; Number of cases is 4, Range of values is 1 to 4
  1376                           ; switch strategies available:
  1377                           ; Name         Instructions Cycles
  1378                           ; simple_byte           13     7 (average)
  1379                           ; direct_byte           17     9 (fixed)
  1380                           ; jumptable            263     9 (fixed)
  1381                           ;	Chosen strategy is simple_byte
  1382  00B3  0877               	movf	??_setState,w
  1383  00B4  3A01               	xorlw	1	; case 1
  1384  00B5  1903               	skipnz
  1385  00B6  288F               	goto	l182
  1386  00B7  3A03               	xorlw	3	; case 2
  1387  00B8  1903               	skipnz
  1388  00B9  2899               	goto	l188
  1389  00BA  3A01               	xorlw	1	; case 3
  1390  00BB  1903               	skipnz
  1391  00BC  289D               	goto	l193
  1392  00BD  3A07               	xorlw	7	; case 4
  1393  00BE  1903               	skipnz
  1394  00BF  28A7               	goto	l198
  1395  00C0  28C1               	goto	l812
  1396  00C1                     l812:	
  1397                           
  1398                           ;main.c: 168:     currentState = newState;
  1399  00C1  0879               	movf	setState@newState,w
  1400  00C2  00F7               	movwf	??_setState
  1401  00C3  0877               	movf	??_setState,w
  1402  00C4  00F4               	movwf	_currentState
  1403  00C5                     l179:	
  1404  00C5  0008               	return
  1405  00C6                     __end_of_setState:	
  1406                           
  1407                           	psect	text2
  1408  014F                     __ptext2:	
  1409 ;; *************** function _TMR1_StartTimer *****************
  1410 ;; Defined at:
  1411 ;;		line 93 in file "mcc_generated_files/tmr1.c"
  1412 ;; Parameters:    Size  Location     Type
  1413 ;;		None
  1414 ;; Auto vars:     Size  Location     Type
  1415 ;;		None
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  1    wreg      void 
  1418 ;; Registers used:
  1419 ;;		None
  1420 ;; Tracked objects:
  1421 ;;		On entry : 0/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMMON   BANK0   BANK1
  1425 ;;      Params:         0       0       0
  1426 ;;      Locals:         0       0       0
  1427 ;;      Temps:          0       0       0
  1428 ;;      Totals:         0       0       0
  1429 ;;Total ram usage:        0 bytes
  1430 ;; Hardware stack levels used:    1
  1431 ;; Hardware stack levels required when called:    4
  1432 ;; This function calls:
  1433 ;;		Nothing
  1434 ;; This function is called by:
  1435 ;;		_main
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           
  1440                           ;psect for function _TMR1_StartTimer
  1441  014F                     _TMR1_StartTimer:	
  1442  014F                     l794:	
  1443                           ;incstack = 0
  1444                           ; Regs used in _TMR1_StartTimer: []
  1445                           
  1446                           
  1447                           ;mcc_generated_files/tmr1.c: 96:     T1CONbits.TMR1ON = 1;
  1448  014F  0020               	movlb	0	; select bank0
  1449  0150  1418               	bsf	24,0	;volatile
  1450  0151                     l81:	
  1451  0151  0008               	return
  1452  0152                     __end_of_TMR1_StartTimer:	
  1453                           
  1454                           	psect	text3
  1455  0117                     __ptext3:	
  1456 ;; *************** function _SYSTEM_Initialize *****************
  1457 ;; Defined at:
  1458 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;		None
  1461 ;; Auto vars:     Size  Location     Type
  1462 ;;		None
  1463 ;; Return value:  Size  Location     Type
  1464 ;;                  1    wreg      void 
  1465 ;; Registers used:
  1466 ;;		wreg, status,2, status,0, pclath, cstack
  1467 ;; Tracked objects:
  1468 ;;		On entry : 0/0
  1469 ;;		On exit  : 0/0
  1470 ;;		Unchanged: 0/0
  1471 ;; Data sizes:     COMMON   BANK0   BANK1
  1472 ;;      Params:         0       0       0
  1473 ;;      Locals:         0       0       0
  1474 ;;      Temps:          0       0       0
  1475 ;;      Totals:         0       0       0
  1476 ;;Total ram usage:        0 bytes
  1477 ;; Hardware stack levels used:    1
  1478 ;; Hardware stack levels required when called:    6
  1479 ;; This function calls:
  1480 ;;		_OSCILLATOR_Initialize
  1481 ;;		_PIN_MANAGER_Initialize
  1482 ;;		_TMR1_Initialize
  1483 ;;		_WDT_Initialize
  1484 ;; This function is called by:
  1485 ;;		_main
  1486 ;; This function uses a non-reentrant model
  1487 ;;
  1488                           
  1489                           
  1490                           ;psect for function _SYSTEM_Initialize
  1491  0117                     _SYSTEM_Initialize:	
  1492  0117                     l950:	
  1493                           ;incstack = 0
  1494                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1495                           
  1496                           
  1497                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1498  0117  3180  20DE  3181   	fcall	_PIN_MANAGER_Initialize
  1499                           
  1500                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1501  011A  3181  213E  3181   	fcall	_OSCILLATOR_Initialize
  1502                           
  1503                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  1504  011D  3181  214B  3181   	fcall	_WDT_Initialize
  1505                           
  1506                           ;mcc_generated_files/mcc.c: 56:     TMR1_Initialize();
  1507  0120  3180  20C6  3181   	fcall	_TMR1_Initialize
  1508  0123                     l19:	
  1509  0123  0008               	return
  1510  0124                     __end_of_SYSTEM_Initialize:	
  1511                           
  1512                           	psect	text4
  1513  014B                     __ptext4:	
  1514 ;; *************** function _WDT_Initialize *****************
  1515 ;; Defined at:
  1516 ;;		line 69 in file "mcc_generated_files/mcc.c"
  1517 ;; Parameters:    Size  Location     Type
  1518 ;;		None
  1519 ;; Auto vars:     Size  Location     Type
  1520 ;;		None
  1521 ;; Return value:  Size  Location     Type
  1522 ;;                  1    wreg      void 
  1523 ;; Registers used:
  1524 ;;		wreg
  1525 ;; Tracked objects:
  1526 ;;		On entry : 0/0
  1527 ;;		On exit  : 0/0
  1528 ;;		Unchanged: 0/0
  1529 ;; Data sizes:     COMMON   BANK0   BANK1
  1530 ;;      Params:         0       0       0
  1531 ;;      Locals:         0       0       0
  1532 ;;      Temps:          0       0       0
  1533 ;;      Totals:         0       0       0
  1534 ;;Total ram usage:        0 bytes
  1535 ;; Hardware stack levels used:    1
  1536 ;; Hardware stack levels required when called:    4
  1537 ;; This function calls:
  1538 ;;		Nothing
  1539 ;; This function is called by:
  1540 ;;		_SYSTEM_Initialize
  1541 ;; This function uses a non-reentrant model
  1542 ;;
  1543                           
  1544                           
  1545                           ;psect for function _WDT_Initialize
  1546  014B                     _WDT_Initialize:	
  1547  014B                     l756:	
  1548                           ;incstack = 0
  1549                           ; Regs used in _WDT_Initialize: [wreg]
  1550                           
  1551                           
  1552                           ;mcc_generated_files/mcc.c: 72:     WDTCON = 0x16;
  1553  014B  3016               	movlw	22
  1554  014C  0021               	movlb	1	; select bank1
  1555  014D  0097               	movwf	23	;volatile
  1556  014E                     l25:	
  1557  014E  0008               	return
  1558  014F                     __end_of_WDT_Initialize:	
  1559                           
  1560                           	psect	text5
  1561  00C6                     __ptext5:	
  1562 ;; *************** function _TMR1_Initialize *****************
  1563 ;; Defined at:
  1564 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  1565 ;; Parameters:    Size  Location     Type
  1566 ;;		None
  1567 ;; Auto vars:     Size  Location     Type
  1568 ;;		None
  1569 ;; Return value:  Size  Location     Type
  1570 ;;                  1    wreg      void 
  1571 ;; Registers used:
  1572 ;;		wreg, status,2, status,0, pclath, cstack
  1573 ;; Tracked objects:
  1574 ;;		On entry : 0/0
  1575 ;;		On exit  : 0/0
  1576 ;;		Unchanged: 0/0
  1577 ;; Data sizes:     COMMON   BANK0   BANK1
  1578 ;;      Params:         0       0       0
  1579 ;;      Locals:         0       0       0
  1580 ;;      Temps:          0       0       0
  1581 ;;      Totals:         0       0       0
  1582 ;;Total ram usage:        0 bytes
  1583 ;; Hardware stack levels used:    1
  1584 ;; Hardware stack levels required when called:    5
  1585 ;; This function calls:
  1586 ;;		_TMR1_SetInterruptHandler
  1587 ;; This function is called by:
  1588 ;;		_SYSTEM_Initialize
  1589 ;; This function uses a non-reentrant model
  1590 ;;
  1591                           
  1592                           
  1593                           ;psect for function _TMR1_Initialize
  1594  00C6                     _TMR1_Initialize:	
  1595  00C6                     l916:	
  1596                           ;incstack = 0
  1597                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1598                           
  1599                           
  1600                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  1601  00C6  0020               	movlb	0	; select bank0
  1602  00C7  0199               	clrf	25	;volatile
  1603  00C8                     l918:	
  1604                           
  1605                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x86;
  1606  00C8  3086               	movlw	134
  1607  00C9  0097               	movwf	23	;volatile
  1608  00CA                     l920:	
  1609                           
  1610                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xE8;
  1611  00CA  30E8               	movlw	232
  1612  00CB  0096               	movwf	22	;volatile
  1613  00CC                     l922:	
  1614                           
  1615                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  1616  00CC  1011               	bcf	17,0	;volatile
  1617  00CD                     l924:	
  1618                           
  1619                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  1620  00CD  0817               	movf	23,w	;volatile
  1621  00CE  00FB               	movwf	_timer1ReloadVal+1	;volatile
  1622  00CF  0816               	movf	22,w	;volatile
  1623  00D0  00FA               	movwf	_timer1ReloadVal	;volatile
  1624  00D1                     l926:	
  1625                           
  1626                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  1627  00D1  0021               	movlb	1	; select bank1
  1628  00D2  1411               	bsf	17,0	;volatile
  1629  00D3                     l928:	
  1630                           
  1631                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  1632  00D3  3052               	movlw	low _TMR1_DefaultInterruptHandler
  1633  00D4  00F7               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  1634  00D5  3001               	movlw	high _TMR1_DefaultInterruptHandler
  1635  00D6  00F8               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  1636  00D7  3181  2145  3180   	fcall	_TMR1_SetInterruptHandler
  1637  00DA                     l930:	
  1638                           
  1639                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0xC1;
  1640  00DA  30C1               	movlw	193
  1641  00DB  0020               	movlb	0	; select bank0
  1642  00DC  0098               	movwf	24	;volatile
  1643  00DD                     l78:	
  1644  00DD  0008               	return
  1645  00DE                     __end_of_TMR1_Initialize:	
  1646                           
  1647                           	psect	text6
  1648  0145                     __ptext6:	
  1649 ;; *************** function _TMR1_SetInterruptHandler *****************
  1650 ;; Defined at:
  1651 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  1652 ;; Parameters:    Size  Location     Type
  1653 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  1654 ;;		 -> secondsTick(1), TMR1_DefaultInterruptHandler(1), 
  1655 ;; Auto vars:     Size  Location     Type
  1656 ;;		None
  1657 ;; Return value:  Size  Location     Type
  1658 ;;                  1    wreg      void 
  1659 ;; Registers used:
  1660 ;;		wreg
  1661 ;; Tracked objects:
  1662 ;;		On entry : 0/0
  1663 ;;		On exit  : 0/0
  1664 ;;		Unchanged: 0/0
  1665 ;; Data sizes:     COMMON   BANK0   BANK1
  1666 ;;      Params:         2       0       0
  1667 ;;      Locals:         0       0       0
  1668 ;;      Temps:          0       0       0
  1669 ;;      Totals:         2       0       0
  1670 ;;Total ram usage:        2 bytes
  1671 ;; Hardware stack levels used:    1
  1672 ;; Hardware stack levels required when called:    4
  1673 ;; This function calls:
  1674 ;;		Nothing
  1675 ;; This function is called by:
  1676 ;;		_TMR1_Initialize
  1677 ;;		_main
  1678 ;; This function uses a non-reentrant model
  1679 ;;
  1680                           
  1681                           
  1682                           ;psect for function _TMR1_SetInterruptHandler
  1683  0145                     _TMR1_SetInterruptHandler:	
  1684  0145                     l910:	
  1685                           ;incstack = 0
  1686                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  1687                           
  1688                           
  1689                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  1690  0145  0878               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  1691  0146  0020               	movlb	0	; select bank0
  1692  0147  00A1               	movwf	_TMR1_InterruptHandler+1
  1693  0148  0877               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  1694  0149  00A0               	movwf	_TMR1_InterruptHandler
  1695  014A                     l111:	
  1696  014A  0008               	return
  1697  014B                     __end_of_TMR1_SetInterruptHandler:	
  1698                           
  1699                           	psect	text7
  1700  00DE                     __ptext7:	
  1701 ;; *************** function _PIN_MANAGER_Initialize *****************
  1702 ;; Defined at:
  1703 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1704 ;; Parameters:    Size  Location     Type
  1705 ;;		None
  1706 ;; Auto vars:     Size  Location     Type
  1707 ;;		None
  1708 ;; Return value:  Size  Location     Type
  1709 ;;                  1    wreg      void 
  1710 ;; Registers used:
  1711 ;;		wreg, status,2
  1712 ;; Tracked objects:
  1713 ;;		On entry : 0/0
  1714 ;;		On exit  : 0/0
  1715 ;;		Unchanged: 0/0
  1716 ;; Data sizes:     COMMON   BANK0   BANK1
  1717 ;;      Params:         0       0       0
  1718 ;;      Locals:         0       0       0
  1719 ;;      Temps:          0       0       0
  1720 ;;      Totals:         0       0       0
  1721 ;;Total ram usage:        0 bytes
  1722 ;; Hardware stack levels used:    1
  1723 ;; Hardware stack levels required when called:    4
  1724 ;; This function calls:
  1725 ;;		Nothing
  1726 ;; This function is called by:
  1727 ;;		_SYSTEM_Initialize
  1728 ;; This function uses a non-reentrant model
  1729 ;;
  1730                           
  1731                           
  1732                           ;psect for function _PIN_MANAGER_Initialize
  1733  00DE                     _PIN_MANAGER_Initialize:	
  1734  00DE                     l738:	
  1735                           ;incstack = 0
  1736                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1737                           
  1738                           
  1739                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1740  00DE  0022               	movlb	2	; select bank2
  1741  00DF  018C               	clrf	12	;volatile
  1742  00E0                     l740:	
  1743                           
  1744                           ;mcc_generated_files/pin_manager.c: 65:     TRISA = 0x39;
  1745  00E0  3039               	movlw	57
  1746  00E1  0021               	movlb	1	; select bank1
  1747  00E2  008C               	movwf	12	;volatile
  1748  00E3                     l742:	
  1749                           
  1750                           ;mcc_generated_files/pin_manager.c: 70:     ANSELA = 0x07;
  1751  00E3  3007               	movlw	7
  1752  00E4  0023               	movlb	3	; select bank3
  1753  00E5  008C               	movwf	12	;volatile
  1754                           
  1755                           ;mcc_generated_files/pin_manager.c: 75:     WPUA = 0x00;
  1756  00E6  0024               	movlb	4	; select bank4
  1757  00E7  018C               	clrf	12	;volatile
  1758  00E8                     l744:	
  1759                           
  1760                           ;mcc_generated_files/pin_manager.c: 76:     OPTION_REGbits.nWPUEN = 1;
  1761  00E8  0021               	movlb	1	; select bank1
  1762  00E9  1795               	bsf	21,7	;volatile
  1763                           
  1764                           ;mcc_generated_files/pin_manager.c: 81:     ODCONA = 0x00;
  1765  00EA  0025               	movlb	5	; select bank5
  1766  00EB  018C               	clrf	12	;volatile
  1767  00EC                     l746:	
  1768                           
  1769                           ;mcc_generated_files/pin_manager.c: 86:     SLRCONA = 0x37;
  1770  00EC  3037               	movlw	55
  1771  00ED  0026               	movlb	6	; select bank6
  1772  00EE  008C               	movwf	12	;volatile
  1773  00EF                     l748:	
  1774                           
  1775                           ;mcc_generated_files/pin_manager.c: 91:     INLVLA = 0x3F;
  1776  00EF  303F               	movlw	63
  1777  00F0  0027               	movlb	7	; select bank7
  1778  00F1  008C               	movwf	12	;volatile
  1779                           
  1780                           ;mcc_generated_files/pin_manager.c: 96:     APFCON = 0x00;
  1781  00F2  0022               	movlb	2	; select bank2
  1782  00F3  019D               	clrf	29	;volatile
  1783  00F4                     l46:	
  1784  00F4  0008               	return
  1785  00F5                     __end_of_PIN_MANAGER_Initialize:	
  1786                           
  1787                           	psect	text8
  1788  013E                     __ptext8:	
  1789 ;; *************** function _OSCILLATOR_Initialize *****************
  1790 ;; Defined at:
  1791 ;;		line 59 in file "mcc_generated_files/mcc.c"
  1792 ;; Parameters:    Size  Location     Type
  1793 ;;		None
  1794 ;; Auto vars:     Size  Location     Type
  1795 ;;		None
  1796 ;; Return value:  Size  Location     Type
  1797 ;;                  1    wreg      void 
  1798 ;; Registers used:
  1799 ;;		wreg, status,2
  1800 ;; Tracked objects:
  1801 ;;		On entry : 0/0
  1802 ;;		On exit  : 0/0
  1803 ;;		Unchanged: 0/0
  1804 ;; Data sizes:     COMMON   BANK0   BANK1
  1805 ;;      Params:         0       0       0
  1806 ;;      Locals:         0       0       0
  1807 ;;      Temps:          0       0       0
  1808 ;;      Totals:         0       0       0
  1809 ;;Total ram usage:        0 bytes
  1810 ;; Hardware stack levels used:    1
  1811 ;; Hardware stack levels required when called:    4
  1812 ;; This function calls:
  1813 ;;		Nothing
  1814 ;; This function is called by:
  1815 ;;		_SYSTEM_Initialize
  1816 ;; This function uses a non-reentrant model
  1817 ;;
  1818                           
  1819                           
  1820                           ;psect for function _OSCILLATOR_Initialize
  1821  013E                     _OSCILLATOR_Initialize:	
  1822  013E                     l750:	
  1823                           ;incstack = 0
  1824                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1825                           
  1826                           
  1827                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x02;
  1828  013E  3002               	movlw	2
  1829  013F  0021               	movlb	1	; select bank1
  1830  0140  0099               	movwf	25	;volatile
  1831  0141                     l752:	
  1832                           
  1833                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
  1834  0141  0198               	clrf	24	;volatile
  1835  0142                     l754:	
  1836                           
  1837                           ;mcc_generated_files/mcc.c: 66:     BORCON = 0x00;
  1838  0142  0022               	movlb	2	; select bank2
  1839  0143  0196               	clrf	22	;volatile
  1840  0144                     l22:	
  1841  0144  0008               	return
  1842  0145                     __end_of_OSCILLATOR_Initialize:	
  1843                           
  1844                           	psect	intentry
  1845  0004                     __pintentry:	
  1846 ;; *************** function _INTERRUPT_InterruptManager *****************
  1847 ;; Defined at:
  1848 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1849 ;; Parameters:    Size  Location     Type
  1850 ;;		None
  1851 ;; Auto vars:     Size  Location     Type
  1852 ;;		None
  1853 ;; Return value:  Size  Location     Type
  1854 ;;                  1    wreg      void 
  1855 ;; Registers used:
  1856 ;;		wreg, status,2, status,0, pclath, cstack
  1857 ;; Tracked objects:
  1858 ;;		On entry : 0/0
  1859 ;;		On exit  : 0/0
  1860 ;;		Unchanged: 0/0
  1861 ;; Data sizes:     COMMON   BANK0   BANK1
  1862 ;;      Params:         0       0       0
  1863 ;;      Locals:         0       0       0
  1864 ;;      Temps:          0       0       0
  1865 ;;      Totals:         0       0       0
  1866 ;;Total ram usage:        0 bytes
  1867 ;; Hardware stack levels used:    1
  1868 ;; Hardware stack levels required when called:    3
  1869 ;; This function calls:
  1870 ;;		_TMR1_ISR
  1871 ;; This function is called by:
  1872 ;;		Interrupt level 1
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876  0004                     _INTERRUPT_InterruptManager:	
  1877                           
  1878                           ;incstack = 0
  1879  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1880                           
  1881                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  1882  0005  3180               	pagesel	$
  1883  0006                     i1l958:	
  1884                           
  1885                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  1886  0006  1F0B               	btfss	11,6	;volatile
  1887  0007  2809               	goto	u19_21
  1888  0008  280A               	goto	u19_20
  1889  0009                     u19_21:	
  1890  0009  2817               	goto	i1l131
  1891  000A                     u19_20:	
  1892  000A                     i1l960:	
  1893                           
  1894                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  1895  000A  0021               	movlb	1	; select bank1
  1896  000B  1C11               	btfss	17,0	;volatile
  1897  000C  280E               	goto	u20_21
  1898  000D  280F               	goto	u20_20
  1899  000E                     u20_21:	
  1900  000E  2817               	goto	i1l131
  1901  000F                     u20_20:	
  1902  000F                     i1l962:	
  1903  000F  0020               	movlb	0	; select bank0
  1904  0010  1C11               	btfss	17,0	;volatile
  1905  0011  2813               	goto	u21_21
  1906  0012  2814               	goto	u21_20
  1907  0013                     u21_21:	
  1908  0013  2817               	goto	i1l131
  1909  0014                     u21_20:	
  1910  0014                     i1l964:	
  1911                           
  1912                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR1_ISR();
  1913  0014  3181  2124  3180   	fcall	_TMR1_ISR
  1914  0017                     i1l131:	
  1915                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  1916                           
  1917  0017  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1918  0018  0009               	retfie
  1919  0019                     __end_of_INTERRUPT_InterruptManager:	
  1920                           
  1921                           	psect	text10
  1922  0124                     __ptext10:	
  1923 ;; *************** function _TMR1_ISR *****************
  1924 ;; Defined at:
  1925 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  1926 ;; Parameters:    Size  Location     Type
  1927 ;;		None
  1928 ;; Auto vars:     Size  Location     Type
  1929 ;;		None
  1930 ;; Return value:  Size  Location     Type
  1931 ;;                  1    wreg      void 
  1932 ;; Registers used:
  1933 ;;		wreg, status,2, status,0, pclath, cstack
  1934 ;; Tracked objects:
  1935 ;;		On entry : 0/0
  1936 ;;		On exit  : 0/0
  1937 ;;		Unchanged: 0/0
  1938 ;; Data sizes:     COMMON   BANK0   BANK1
  1939 ;;      Params:         0       0       0
  1940 ;;      Locals:         0       0       0
  1941 ;;      Temps:          0       0       0
  1942 ;;      Totals:         0       0       0
  1943 ;;Total ram usage:        0 bytes
  1944 ;; Hardware stack levels used:    1
  1945 ;; Hardware stack levels required when called:    2
  1946 ;; This function calls:
  1947 ;;		_TMR1_CallBack
  1948 ;;		_TMR1_WriteTimer
  1949 ;; This function is called by:
  1950 ;;		_INTERRUPT_InterruptManager
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954                           
  1955                           ;psect for function _TMR1_ISR
  1956  0124                     _TMR1_ISR:	
  1957  0124                     i1l952:	
  1958                           ;incstack = 0
  1959                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  1960                           
  1961                           
  1962                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  1963  0124  0020               	movlb	0	; select bank0
  1964  0125  1011               	bcf	17,0	;volatile
  1965  0126                     i1l954:	
  1966                           
  1967                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  1968  0126  087B               	movf	_timer1ReloadVal+1,w	;volatile
  1969  0127  00F6               	movwf	TMR1_WriteTimer@timerVal+1
  1970  0128  087A               	movf	_timer1ReloadVal,w	;volatile
  1971  0129  00F5               	movwf	TMR1_WriteTimer@timerVal
  1972  012A  3180  20F5  3181   	fcall	_TMR1_WriteTimer
  1973                           
  1974                           ;mcc_generated_files/tmr1.c: 166:     TMR1_CallBack();
  1975  012D  3181  2131  3181   	fcall	_TMR1_CallBack
  1976  0130                     i1l104:	
  1977  0130  0008               	return
  1978  0131                     __end_of_TMR1_ISR:	
  1979                           
  1980                           	psect	text11
  1981  00F5                     __ptext11:	
  1982 ;; *************** function _TMR1_WriteTimer *****************
  1983 ;; Defined at:
  1984 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;  timerVal        2    0[COMMON] unsigned short 
  1987 ;; Auto vars:     Size  Location     Type
  1988 ;;		None
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  1    wreg      void 
  1991 ;; Registers used:
  1992 ;;		wreg, status,2
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMMON   BANK0   BANK1
  1998 ;;      Params:         2       0       0
  1999 ;;      Locals:         0       0       0
  2000 ;;      Temps:          0       0       0
  2001 ;;      Totals:         2       0       0
  2002 ;;Total ram usage:        2 bytes
  2003 ;; Hardware stack levels used:    1
  2004 ;; This function calls:
  2005 ;;		Nothing
  2006 ;; This function is called by:
  2007 ;;		_TMR1_ISR
  2008 ;;		_TMR1_Reload
  2009 ;; This function uses a non-reentrant model
  2010 ;;
  2011                           
  2012                           
  2013                           ;psect for function _TMR1_WriteTimer
  2014  00F5                     _TMR1_WriteTimer:	
  2015  00F5                     i1l932:	
  2016                           ;incstack = 0
  2017                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  2018                           
  2019                           
  2020                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  2021  00F5  0020               	movlb	0	; select bank0
  2022  00F6  1D18               	btfss	24,2	;volatile
  2023  00F7  28F9               	goto	u17_21
  2024  00F8  28FA               	goto	u17_20
  2025  00F9                     u17_21:	
  2026  00F9  2901               	goto	i1l942
  2027  00FA                     u17_20:	
  2028  00FA                     i1l934:	
  2029                           
  2030                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  2031  00FA  1018               	bcf	24,0	;volatile
  2032  00FB                     i1l936:	
  2033                           
  2034                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (timerVal >> 8);
  2035  00FB  0876               	movf	TMR1_WriteTimer@timerVal+1,w
  2036  00FC  0097               	movwf	23	;volatile
  2037  00FD                     i1l938:	
  2038                           
  2039                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = timerVal;
  2040  00FD  0875               	movf	TMR1_WriteTimer@timerVal,w
  2041  00FE  0096               	movwf	22	;volatile
  2042  00FF                     i1l940:	
  2043                           
  2044                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  2045  00FF  1418               	bsf	24,0	;volatile
  2046                           
  2047                           ;mcc_generated_files/tmr1.c: 133:     }
  2048  0100  2905               	goto	i1l92
  2049  0101                     i1l942:	
  2050                           
  2051                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (timerVal >> 8);
  2052  0101  0876               	movf	TMR1_WriteTimer@timerVal+1,w
  2053  0102  0097               	movwf	23	;volatile
  2054  0103                     i1l944:	
  2055                           
  2056                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = timerVal;
  2057  0103  0875               	movf	TMR1_WriteTimer@timerVal,w
  2058  0104  0096               	movwf	22	;volatile
  2059  0105                     i1l92:	
  2060  0105  0008               	return
  2061  0106                     __end_of_TMR1_WriteTimer:	
  2062                           
  2063                           	psect	text12
  2064  0131                     __ptext12:	
  2065 ;; *************** function _TMR1_CallBack *****************
  2066 ;; Defined at:
  2067 ;;		line 169 in file "mcc_generated_files/tmr1.c"
  2068 ;; Parameters:    Size  Location     Type
  2069 ;;		None
  2070 ;; Auto vars:     Size  Location     Type
  2071 ;;		None
  2072 ;; Return value:  Size  Location     Type
  2073 ;;                  1    wreg      void 
  2074 ;; Registers used:
  2075 ;;		wreg, status,2, status,0, pclath, cstack
  2076 ;; Tracked objects:
  2077 ;;		On entry : 0/0
  2078 ;;		On exit  : 0/0
  2079 ;;		Unchanged: 0/0
  2080 ;; Data sizes:     COMMON   BANK0   BANK1
  2081 ;;      Params:         0       0       0
  2082 ;;      Locals:         0       0       0
  2083 ;;      Temps:          0       0       0
  2084 ;;      Totals:         0       0       0
  2085 ;;Total ram usage:        0 bytes
  2086 ;; Hardware stack levels used:    1
  2087 ;; Hardware stack levels required when called:    1
  2088 ;; This function calls:
  2089 ;;		Absolute function
  2090 ;;		_TMR1_DefaultInterruptHandler
  2091 ;;		_secondsTick
  2092 ;; This function is called by:
  2093 ;;		_TMR1_ISR
  2094 ;; This function uses a non-reentrant model
  2095 ;;
  2096                           
  2097                           
  2098                           ;psect for function _TMR1_CallBack
  2099  0131                     _TMR1_CallBack:	
  2100  0131                     i1l946:	
  2101                           ;incstack = 0
  2102                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
  2103                           
  2104                           
  2105                           ;mcc_generated_files/tmr1.c: 172:     if(TMR1_InterruptHandler)
  2106  0131  0020               	movlb	0	; select bank0
  2107  0132  0820               	movf	_TMR1_InterruptHandler,w
  2108  0133  0421               	iorwf	_TMR1_InterruptHandler+1,w
  2109  0134  1903               	btfsc	3,2
  2110  0135  2937               	goto	u18_21
  2111  0136  2938               	goto	u18_20
  2112  0137                     u18_21:	
  2113  0137  293D               	goto	i1l108
  2114  0138                     u18_20:	
  2115  0138                     i1l948:	
  2116                           
  2117                           ;mcc_generated_files/tmr1.c: 173:     {;mcc_generated_files/tmr1.c: 174:         TMR1_In
      +                          terruptHandler();
  2118  0138  0821               	movf	_TMR1_InterruptHandler+1,w
  2119  0139  008A               	movwf	10
  2120  013A  0820               	movf	_TMR1_InterruptHandler,w
  2121  013B  000A               	callw
  2122  013C  3181               	pagesel	$
  2123  013D                     i1l108:	
  2124  013D  0008               	return
  2125  013E                     __end_of_TMR1_CallBack:	
  2126                           
  2127                           	psect	text13
  2128  0152                     __ptext13:	
  2129 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  2130 ;; Defined at:
  2131 ;;		line 182 in file "mcc_generated_files/tmr1.c"
  2132 ;; Parameters:    Size  Location     Type
  2133 ;;		None
  2134 ;; Auto vars:     Size  Location     Type
  2135 ;;		None
  2136 ;; Return value:  Size  Location     Type
  2137 ;;                  1    wreg      void 
  2138 ;; Registers used:
  2139 ;;		None
  2140 ;; Tracked objects:
  2141 ;;		On entry : 0/0
  2142 ;;		On exit  : 0/0
  2143 ;;		Unchanged: 0/0
  2144 ;; Data sizes:     COMMON   BANK0   BANK1
  2145 ;;      Params:         0       0       0
  2146 ;;      Locals:         0       0       0
  2147 ;;      Temps:          0       0       0
  2148 ;;      Totals:         0       0       0
  2149 ;;Total ram usage:        0 bytes
  2150 ;; Hardware stack levels used:    1
  2151 ;; This function calls:
  2152 ;;		Nothing
  2153 ;; This function is called by:
  2154 ;;		_TMR1_Initialize
  2155 ;;		_TMR1_CallBack
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159                           
  2160                           ;psect for function _TMR1_DefaultInterruptHandler
  2161  0152                     _TMR1_DefaultInterruptHandler:	
  2162  0152                     i1l114:	
  2163                           ;incstack = 0
  2164                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  2165                           
  2166  0152  0008               	return
  2167  0153                     __end_of_TMR1_DefaultInterruptHandler:	
  2168                           
  2169                           	psect	text14
  2170  0106                     __ptext14:	
  2171 ;; *************** function _secondsTick *****************
  2172 ;; Defined at:
  2173 ;;		line 174 in file "main.c"
  2174 ;; Parameters:    Size  Location     Type
  2175 ;;		None
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;		None
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  1    wreg      void 
  2180 ;; Registers used:
  2181 ;;		wreg, status,0
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMMON   BANK0   BANK1
  2187 ;;      Params:         0       0       0
  2188 ;;      Locals:         0       0       0
  2189 ;;      Temps:          0       0       0
  2190 ;;      Totals:         0       0       0
  2191 ;;Total ram usage:        0 bytes
  2192 ;; Hardware stack levels used:    1
  2193 ;; This function calls:
  2194 ;;		Nothing
  2195 ;; This function is called by:
  2196 ;;		_main
  2197 ;;		_TMR1_CallBack
  2198 ;; This function uses a non-reentrant model
  2199 ;;
  2200                           
  2201                           
  2202                           ;psect for function _secondsTick
  2203  0106                     _secondsTick:	
  2204  0106                     i1l912:	
  2205                           ;incstack = 0
  2206                           ; Regs used in _secondsTick: [wreg+status,0]
  2207                           
  2208                           
  2209                           ;main.c: 176:     currentSecondsTick++;
  2210  0106  3001               	movlw	1
  2211  0107  07F2               	addwf	_currentSecondsTick,f
  2212  0108  3000               	movlw	0
  2213  0109  3DF3               	addwfc	_currentSecondsTick+1,f
  2214  010A                     i1l914:	
  2215  010A  1003               	clrc
  2216  010B  0022               	movlb	2	; select bank2
  2217  010C  1D0C               	btfss	12,2	;volatile
  2218  010D  1403               	setc
  2219  010E  1803               	btfsc	3,0
  2220  010F  2911               	goto	u15_21
  2221  0110  2914               	goto	u15_20
  2222  0111                     u15_21:	
  2223  0111  0022               	movlb	2	; select bank2
  2224  0112  150C               	bsf	12,2	;volatile
  2225  0113  2916               	goto	u16_24
  2226  0114                     u15_20:	
  2227  0114  0022               	movlb	2	; select bank2
  2228  0115  110C               	bcf	12,2	;volatile
  2229  0116                     u16_24:	
  2230  0116                     i1l206:	
  2231  0116  0008               	return
  2232  0117                     __end_of_secondsTick:	
  2233  007E                     btemp	set	126	;btemp
  2234  007E                     int$flags	set	126
  2235  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      12
    BANK0            80      2       4
    BANK1            32      0       0

Pointer List with Targets:

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> secondsTick(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> secondsTick(), Absolute function(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_setState
    _TMR1_Initialize->_TMR1_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     393
                                              0 BANK0      2     2      0
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
                           _setState
 ---------------------------------------------------------------------------------
 (1) _setState                                             3     3      0      45
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0     240
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     240
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                        _secondsTick *
 ---------------------------------------------------------------------------------
 (7) _secondsTick                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize
   _TMR1_SetInterruptHandler
   _TMR1_StartTimer
   _setState

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _secondsTick *
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      10       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2       4       6        5.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      10       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Aug 11 22:21:04 2020

                             __CFG_CP$OFF 0000                                        l22 0144  
                                      l25 014E                                        l19 0123  
                                      l46 00F4                                        l81 0151  
                                      l78 00DD                                        u50 008E  
                                      u51 008D                               __CFG_LVP$ON 0000  
                                     l111 014A                                       l200 00A9  
                                     l160 0036                                       l163 0049  
                                     l190 009B                                       l182 008F  
                                     l184 0091                                       l168 0061  
                                     l193 009D                                       l195 009F  
                                     l179 00C5                                       l188 0099  
                                     l198 00A7                                       l800 0088  
                                     l810 00AB                                       l740 00E0  
                                     l812 00C1                                       l804 0092  
                                     l750 013E                                       l742 00E3  
                                     l910 0145                                       l806 00A0  
                                     l752 0141                                       l744 00E8  
                                     l920 00CA                                       l754 0142  
                                     l746 00EC                                       l738 00DE  
                                     l930 00DA                                       l922 00CC  
                                     l748 00EF                                       l924 00CD  
                                     l916 00C6                                       l756 014B  
                                     l926 00D1                                       l918 00C8  
                                     l950 0117                                       l928 00D3  
                                     l794 014F                                       u300 004D  
                                     u301 004C                                       u310 005C  
                                     u311 005B                                       u320 0083  
                                     u321 0080                                       u315 0058  
                                     u334 0085                                       u280 003A  
                                     u281 0039                                       u290 0044  
                                     u291 0043                                       u295 0040  
                         _timer1ReloadVal 007A                              __CFG_BORV$LO 0000  
                                    l1120 00B3                                      l1040 0026  
                                    l1050 004D                                      l1042 002E  
                                    l1052 0052                                      l1060 0079  
                                    l1044 0031                                      l1036 0022  
                                    l1118 006B                                      l1054 005C  
                                    l1046 003A                                      l1038 0025  
                                    l1048 0044                                      l1058 0062  
                                    _LATA 010C                                      i1l92 0105  
                                    _WPUA 020C                              __CFG_WRT$OFF 0000  
                                    _main 0022                                      btemp 007E  
                           __CFG_BOREN$ON 0000                                      start 0019  
              ??_TMR1_SetInterruptHandler 0079                             __CFG_MCLRE$ON 0000  
          __size_of_OSCILLATOR_Initialize 0007             __end_of_OSCILLATOR_Initialize 0145  
                                   ?_main 0075                             __CFG_WDTE$OFF 0000  
                         _TMR1_StartTimer 014F                                     _T1CON 0018  
                                   i1l104 0130                                     i1l114 0152  
                                   i1l131 0017                                     i1l108 013D  
                                   i1l206 0116                                     i1l912 0106  
                                   i1l914 010A                                     i1l940 00FF  
                                   i1l932 00F5                                     i1l934 00FA  
                                   i1l942 0101                                     i1l944 0103  
                                   i1l936 00FB                                     i1l952 0124  
                                   i1l960 000A                                     i1l946 0131  
                                   i1l938 00FD                                     i1l954 0126  
                                   i1l962 000F                                     i1l948 0138  
                                   i1l964 0014                                     i1l958 0006  
                                   u20_20 000F                                     u20_21 000E  
                                   u21_20 0014                                     u21_21 0013  
                                   u15_20 0114                                     u15_21 0111  
                                   u16_24 0116                                     u17_20 00FA  
                                   u17_21 00F9                                     _TMR1H 0017  
                                   _TMR1L 0016                                     u18_20 0138  
                                   u18_21 0137                                     u19_20 000A  
                                   u19_21 0009                                     _TRISA 008C  
                        __end_of_TMR1_ISR 0131                            _WDT_Initialize 014B  
                 __end_of_TMR1_Initialize 00DE                                     pclath 000A  
                                   status 0003                                     wtemp0 007E  
                         _TMR1_WriteTimer 00F5                           __initialization 001A  
                            __end_of_main 0087               ?_INTERRUPT_InterruptManager 0075  
                                  ??_main 0022                            __CFG_PLLEN$OFF 0000  
                            ?_secondsTick 0075                    __end_of_WDT_Initialize 014F  
                                  _APFCON 011D                                    _ANSELA 018C  
                                  _BORCON 0116                                    _T1GCON 0019  
                 TMR1_WriteTimer@timerVal 0075                                    _ODCONA 028C  
                                  _INLVLA 038C                                    _OSCCON 0099  
                                  _WDTCON 0097                            __CFG_PWRTE$OFF 0000  
    __end_of_TMR1_DefaultInterruptHandler 0153     __size_of_TMR1_DefaultInterruptHandler 0001  
            _TMR1_DefaultInterruptHandler 0152                   __end_of_TMR1_StartTimer 0152  
                          __CFG_STVREN$ON 0000                          __end_of_setState 00C6  
                         ?_WDT_Initialize 0075  TMR1_SetInterruptHandler@InterruptHandler 0077  
                 __end_of_TMR1_WriteTimer 0106                     __end_of_TMR1_CallBack 013E  
                        ?_TMR1_Initialize 0075                         _SYSTEM_Initialize 0117  
                 __end_of__initialization 001F                        ?_SYSTEM_Initialize 0075  
                          __pcstackCOMMON 0075                       ??_SYSTEM_Initialize 0079  
                               ?_TMR1_ISR 0075             ?_TMR1_DefaultInterruptHandler 0075  
                          _OPTION_REGbits 0095                 __end_of_SYSTEM_Initialize 0124  
                              __pnvCOMMON 007A                                __pmaintext 0022  
                        ?_TMR1_StartTimer 0075                                ??_TMR1_ISR 0077  
                              __pintentry 0004                                   _OSCTUNE 0098  
                                 _SLRCONA 030C                      __size_of_secondsTick 0011  
                        ?_TMR1_WriteTimer 0075                                 ?_setState 0075  
                                 __ptext1 0087                                   __ptext2 014F  
                                 __ptext3 0117                                   __ptext4 014B  
                                 __ptext5 00C6                                   __ptext6 0145  
                                 __ptext7 00DE                                   __ptext8 013E  
          ??_TMR1_DefaultInterruptHandler 0075                                 _T1CONbits 0018  
                   _OSCILLATOR_Initialize 013E         __size_of_TMR1_SetInterruptHandler 0006  
                ??_PIN_MANAGER_Initialize 0077                 ?_TMR1_SetInterruptHandler 0077  
              __size_of_SYSTEM_Initialize 000D                      end_of_initialization 001F  
                              ??_setState 0077                          ??_WDT_Initialize 0077  
                               _PORTAbits 000C                          __CFG_FOSC$INTOSC 0000  
                       __size_of_TMR1_ISR 000D                    ?_OSCILLATOR_Initialize 0075  
                     start_initialization 001A           __size_of_PIN_MANAGER_Initialize 0017  
                        __CFG_LPBOREN$OFF 0000                  __size_of_TMR1_Initialize 0018  
                  __size_of_TMR1_CallBack 000D                               __pbssCOMMON 0070  
                               ___latbits 0000                             __pcstackBANK0 0022  
                        setState@newState 0079                              _currentState 0074  
                               __pnvBANK0 0020                    _PIN_MANAGER_Initialize 00DE  
        __end_of_TMR1_SetInterruptHandler 014B                         __size_of_setState 003F  
            ??_INTERRUPT_InterruptManager 0077                  __size_of_TMR1_StartTimer 0003  
                           ??_secondsTick 0075                             _TMR1_CallBack 0131  
                                _LATAbits 010C                                  _PIE1bits 0091  
                __size_of_TMR1_WriteTimer 0011       __size_of_INTERRUPT_InterruptManager 0015  
                                _PIR1bits 0011                                  _TMR1_ISR 0124  
                       ??_TMR1_Initialize 0079                        _currentSecondsTick 0072  
                     __end_of_secondsTick 0117                            ?_TMR1_CallBack 0075  
                 ??_OSCILLATOR_Initialize 0077                  _TMR1_SetInterruptHandler 0145  
                   _TMR1_InterruptHandler 0020                                  __ptext10 0124  
                                __ptext11 00F5                                  __ptext12 0131  
                                __ptext13 0152                                _T1GCONbits 0019  
                                __ptext14 0106                         ??_TMR1_StartTimer 0077  
                           __size_of_main 0065                                  _setState 0087  
                     _demandedSecondsTick 0070                                  int$flags 007E  
      __end_of_INTERRUPT_InterruptManager 0019                _INTERRUPT_InterruptManager 0004  
                       ??_TMR1_WriteTimer 0077                                _INTCONbits 000B  
                             _secondsTick 0106                           ??_TMR1_CallBack 0075  
                 __size_of_WDT_Initialize 0004                                  intlevel1 0000  
                 ?_PIN_MANAGER_Initialize 0075                         __CFG_CLKOUTEN$OFF 0000  
          __end_of_PIN_MANAGER_Initialize 00F5                           _TMR1_Initialize 00C6  
