

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Aug 11 23:15:13 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	12F1571
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.10
    28                           ; Generated 31/07/2019 GMT
    29                           ; 
    30                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC12F1571 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  008C                     	;# 
    87  0091                     	;# 
    88  0092                     	;# 
    89  0093                     	;# 
    90  0095                     	;# 
    91  0096                     	;# 
    92  0097                     	;# 
    93  0098                     	;# 
    94  0099                     	;# 
    95  009A                     	;# 
    96  009B                     	;# 
    97  009B                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  0111                     	;# 
   104  0112                     	;# 
   105  0115                     	;# 
   106  0116                     	;# 
   107  0117                     	;# 
   108  0118                     	;# 
   109  0119                     	;# 
   110  011D                     	;# 
   111  011D                     	;# 
   112  018C                     	;# 
   113  0191                     	;# 
   114  0191                     	;# 
   115  0192                     	;# 
   116  0193                     	;# 
   117  0193                     	;# 
   118  0194                     	;# 
   119  0195                     	;# 
   120  0196                     	;# 
   121  0197                     	;# 
   122  020C                     	;# 
   123  028C                     	;# 
   124  030C                     	;# 
   125  038C                     	;# 
   126  0391                     	;# 
   127  0392                     	;# 
   128  0393                     	;# 
   129  0691                     	;# 
   130  0692                     	;# 
   131  0693                     	;# 
   132  0694                     	;# 
   133  0695                     	;# 
   134  0D8E                     	;# 
   135  0D8F                     	;# 
   136  0D90                     	;# 
   137  0D91                     	;# 
   138  0D91                     	;# 
   139  0D92                     	;# 
   140  0D93                     	;# 
   141  0D93                     	;# 
   142  0D94                     	;# 
   143  0D95                     	;# 
   144  0D95                     	;# 
   145  0D96                     	;# 
   146  0D97                     	;# 
   147  0D97                     	;# 
   148  0D98                     	;# 
   149  0D99                     	;# 
   150  0D99                     	;# 
   151  0D9A                     	;# 
   152  0D9B                     	;# 
   153  0D9C                     	;# 
   154  0D9C                     	;# 
   155  0D9D                     	;# 
   156  0D9D                     	;# 
   157  0D9E                     	;# 
   158  0D9F                     	;# 
   159  0DA0                     	;# 
   160  0DA1                     	;# 
   161  0DA1                     	;# 
   162  0DA2                     	;# 
   163  0DA3                     	;# 
   164  0DA3                     	;# 
   165  0DA4                     	;# 
   166  0DA5                     	;# 
   167  0DA5                     	;# 
   168  0DA6                     	;# 
   169  0DA7                     	;# 
   170  0DA7                     	;# 
   171  0DA8                     	;# 
   172  0DA9                     	;# 
   173  0DA9                     	;# 
   174  0DAA                     	;# 
   175  0DAB                     	;# 
   176  0DAC                     	;# 
   177  0DAC                     	;# 
   178  0DAD                     	;# 
   179  0DAD                     	;# 
   180  0DAE                     	;# 
   181  0DAF                     	;# 
   182  0DB0                     	;# 
   183  0DB1                     	;# 
   184  0DB1                     	;# 
   185  0DB2                     	;# 
   186  0DB3                     	;# 
   187  0DB3                     	;# 
   188  0DB4                     	;# 
   189  0DB5                     	;# 
   190  0DB5                     	;# 
   191  0DB6                     	;# 
   192  0DB7                     	;# 
   193  0DB7                     	;# 
   194  0DB8                     	;# 
   195  0DB9                     	;# 
   196  0DB9                     	;# 
   197  0DBA                     	;# 
   198  0DBB                     	;# 
   199  0DBC                     	;# 
   200  0DBC                     	;# 
   201  0DBD                     	;# 
   202  0DBD                     	;# 
   203  0DBE                     	;# 
   204  0DBF                     	;# 
   205  0DC0                     	;# 
   206  0FE4                     	;# 
   207  0FE5                     	;# 
   208  0FE6                     	;# 
   209  0FE7                     	;# 
   210  0FE8                     	;# 
   211  0FE8                     	;# 
   212  0FE9                     	;# 
   213  0FEA                     	;# 
   214  0FEA                     	;# 
   215  0FEB                     	;# 
   216  0FED                     	;# 
   217  0FEE                     	;# 
   218  0FEE                     	;# 
   219  0FEF                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  0011                     	;# 
   234  0012                     	;# 
   235  0013                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  008C                     	;# 
   246  0091                     	;# 
   247  0092                     	;# 
   248  0093                     	;# 
   249  0095                     	;# 
   250  0096                     	;# 
   251  0097                     	;# 
   252  0098                     	;# 
   253  0099                     	;# 
   254  009A                     	;# 
   255  009B                     	;# 
   256  009B                     	;# 
   257  009C                     	;# 
   258  009D                     	;# 
   259  009E                     	;# 
   260  009F                     	;# 
   261  010C                     	;# 
   262  0111                     	;# 
   263  0112                     	;# 
   264  0115                     	;# 
   265  0116                     	;# 
   266  0117                     	;# 
   267  0118                     	;# 
   268  0119                     	;# 
   269  011D                     	;# 
   270  011D                     	;# 
   271  018C                     	;# 
   272  0191                     	;# 
   273  0191                     	;# 
   274  0192                     	;# 
   275  0193                     	;# 
   276  0193                     	;# 
   277  0194                     	;# 
   278  0195                     	;# 
   279  0196                     	;# 
   280  0197                     	;# 
   281  020C                     	;# 
   282  028C                     	;# 
   283  030C                     	;# 
   284  038C                     	;# 
   285  0391                     	;# 
   286  0392                     	;# 
   287  0393                     	;# 
   288  0691                     	;# 
   289  0692                     	;# 
   290  0693                     	;# 
   291  0694                     	;# 
   292  0695                     	;# 
   293  0D8E                     	;# 
   294  0D8F                     	;# 
   295  0D90                     	;# 
   296  0D91                     	;# 
   297  0D91                     	;# 
   298  0D92                     	;# 
   299  0D93                     	;# 
   300  0D93                     	;# 
   301  0D94                     	;# 
   302  0D95                     	;# 
   303  0D95                     	;# 
   304  0D96                     	;# 
   305  0D97                     	;# 
   306  0D97                     	;# 
   307  0D98                     	;# 
   308  0D99                     	;# 
   309  0D99                     	;# 
   310  0D9A                     	;# 
   311  0D9B                     	;# 
   312  0D9C                     	;# 
   313  0D9C                     	;# 
   314  0D9D                     	;# 
   315  0D9D                     	;# 
   316  0D9E                     	;# 
   317  0D9F                     	;# 
   318  0DA0                     	;# 
   319  0DA1                     	;# 
   320  0DA1                     	;# 
   321  0DA2                     	;# 
   322  0DA3                     	;# 
   323  0DA3                     	;# 
   324  0DA4                     	;# 
   325  0DA5                     	;# 
   326  0DA5                     	;# 
   327  0DA6                     	;# 
   328  0DA7                     	;# 
   329  0DA7                     	;# 
   330  0DA8                     	;# 
   331  0DA9                     	;# 
   332  0DA9                     	;# 
   333  0DAA                     	;# 
   334  0DAB                     	;# 
   335  0DAC                     	;# 
   336  0DAC                     	;# 
   337  0DAD                     	;# 
   338  0DAD                     	;# 
   339  0DAE                     	;# 
   340  0DAF                     	;# 
   341  0DB0                     	;# 
   342  0DB1                     	;# 
   343  0DB1                     	;# 
   344  0DB2                     	;# 
   345  0DB3                     	;# 
   346  0DB3                     	;# 
   347  0DB4                     	;# 
   348  0DB5                     	;# 
   349  0DB5                     	;# 
   350  0DB6                     	;# 
   351  0DB7                     	;# 
   352  0DB7                     	;# 
   353  0DB8                     	;# 
   354  0DB9                     	;# 
   355  0DB9                     	;# 
   356  0DBA                     	;# 
   357  0DBB                     	;# 
   358  0DBC                     	;# 
   359  0DBC                     	;# 
   360  0DBD                     	;# 
   361  0DBD                     	;# 
   362  0DBE                     	;# 
   363  0DBF                     	;# 
   364  0DC0                     	;# 
   365  0FE4                     	;# 
   366  0FE5                     	;# 
   367  0FE6                     	;# 
   368  0FE7                     	;# 
   369  0FE8                     	;# 
   370  0FE8                     	;# 
   371  0FE9                     	;# 
   372  0FEA                     	;# 
   373  0FEA                     	;# 
   374  0FEB                     	;# 
   375  0FED                     	;# 
   376  0FEE                     	;# 
   377  0FEE                     	;# 
   378  0FEF                     	;# 
   379  0000                     	;# 
   380  0001                     	;# 
   381  0002                     	;# 
   382  0003                     	;# 
   383  0004                     	;# 
   384  0005                     	;# 
   385  0006                     	;# 
   386  0007                     	;# 
   387  0008                     	;# 
   388  0009                     	;# 
   389  000A                     	;# 
   390  000B                     	;# 
   391  000C                     	;# 
   392  0011                     	;# 
   393  0012                     	;# 
   394  0013                     	;# 
   395  0015                     	;# 
   396  0016                     	;# 
   397  0016                     	;# 
   398  0017                     	;# 
   399  0018                     	;# 
   400  0019                     	;# 
   401  001A                     	;# 
   402  001B                     	;# 
   403  001C                     	;# 
   404  008C                     	;# 
   405  0091                     	;# 
   406  0092                     	;# 
   407  0093                     	;# 
   408  0095                     	;# 
   409  0096                     	;# 
   410  0097                     	;# 
   411  0098                     	;# 
   412  0099                     	;# 
   413  009A                     	;# 
   414  009B                     	;# 
   415  009B                     	;# 
   416  009C                     	;# 
   417  009D                     	;# 
   418  009E                     	;# 
   419  009F                     	;# 
   420  010C                     	;# 
   421  0111                     	;# 
   422  0112                     	;# 
   423  0115                     	;# 
   424  0116                     	;# 
   425  0117                     	;# 
   426  0118                     	;# 
   427  0119                     	;# 
   428  011D                     	;# 
   429  011D                     	;# 
   430  018C                     	;# 
   431  0191                     	;# 
   432  0191                     	;# 
   433  0192                     	;# 
   434  0193                     	;# 
   435  0193                     	;# 
   436  0194                     	;# 
   437  0195                     	;# 
   438  0196                     	;# 
   439  0197                     	;# 
   440  020C                     	;# 
   441  028C                     	;# 
   442  030C                     	;# 
   443  038C                     	;# 
   444  0391                     	;# 
   445  0392                     	;# 
   446  0393                     	;# 
   447  0691                     	;# 
   448  0692                     	;# 
   449  0693                     	;# 
   450  0694                     	;# 
   451  0695                     	;# 
   452  0D8E                     	;# 
   453  0D8F                     	;# 
   454  0D90                     	;# 
   455  0D91                     	;# 
   456  0D91                     	;# 
   457  0D92                     	;# 
   458  0D93                     	;# 
   459  0D93                     	;# 
   460  0D94                     	;# 
   461  0D95                     	;# 
   462  0D95                     	;# 
   463  0D96                     	;# 
   464  0D97                     	;# 
   465  0D97                     	;# 
   466  0D98                     	;# 
   467  0D99                     	;# 
   468  0D99                     	;# 
   469  0D9A                     	;# 
   470  0D9B                     	;# 
   471  0D9C                     	;# 
   472  0D9C                     	;# 
   473  0D9D                     	;# 
   474  0D9D                     	;# 
   475  0D9E                     	;# 
   476  0D9F                     	;# 
   477  0DA0                     	;# 
   478  0DA1                     	;# 
   479  0DA1                     	;# 
   480  0DA2                     	;# 
   481  0DA3                     	;# 
   482  0DA3                     	;# 
   483  0DA4                     	;# 
   484  0DA5                     	;# 
   485  0DA5                     	;# 
   486  0DA6                     	;# 
   487  0DA7                     	;# 
   488  0DA7                     	;# 
   489  0DA8                     	;# 
   490  0DA9                     	;# 
   491  0DA9                     	;# 
   492  0DAA                     	;# 
   493  0DAB                     	;# 
   494  0DAC                     	;# 
   495  0DAC                     	;# 
   496  0DAD                     	;# 
   497  0DAD                     	;# 
   498  0DAE                     	;# 
   499  0DAF                     	;# 
   500  0DB0                     	;# 
   501  0DB1                     	;# 
   502  0DB1                     	;# 
   503  0DB2                     	;# 
   504  0DB3                     	;# 
   505  0DB3                     	;# 
   506  0DB4                     	;# 
   507  0DB5                     	;# 
   508  0DB5                     	;# 
   509  0DB6                     	;# 
   510  0DB7                     	;# 
   511  0DB7                     	;# 
   512  0DB8                     	;# 
   513  0DB9                     	;# 
   514  0DB9                     	;# 
   515  0DBA                     	;# 
   516  0DBB                     	;# 
   517  0DBC                     	;# 
   518  0DBC                     	;# 
   519  0DBD                     	;# 
   520  0DBD                     	;# 
   521  0DBE                     	;# 
   522  0DBF                     	;# 
   523  0DC0                     	;# 
   524  0FE4                     	;# 
   525  0FE5                     	;# 
   526  0FE6                     	;# 
   527  0FE7                     	;# 
   528  0FE8                     	;# 
   529  0FE8                     	;# 
   530  0FE9                     	;# 
   531  0FEA                     	;# 
   532  0FEA                     	;# 
   533  0FEB                     	;# 
   534  0FED                     	;# 
   535  0FEE                     	;# 
   536  0FEE                     	;# 
   537  0FEF                     	;# 
   538  0000                     	;# 
   539  0001                     	;# 
   540  0002                     	;# 
   541  0003                     	;# 
   542  0004                     	;# 
   543  0005                     	;# 
   544  0006                     	;# 
   545  0007                     	;# 
   546  0008                     	;# 
   547  0009                     	;# 
   548  000A                     	;# 
   549  000B                     	;# 
   550  000C                     	;# 
   551  0011                     	;# 
   552  0012                     	;# 
   553  0013                     	;# 
   554  0015                     	;# 
   555  0016                     	;# 
   556  0016                     	;# 
   557  0017                     	;# 
   558  0018                     	;# 
   559  0019                     	;# 
   560  001A                     	;# 
   561  001B                     	;# 
   562  001C                     	;# 
   563  008C                     	;# 
   564  0091                     	;# 
   565  0092                     	;# 
   566  0093                     	;# 
   567  0095                     	;# 
   568  0096                     	;# 
   569  0097                     	;# 
   570  0098                     	;# 
   571  0099                     	;# 
   572  009A                     	;# 
   573  009B                     	;# 
   574  009B                     	;# 
   575  009C                     	;# 
   576  009D                     	;# 
   577  009E                     	;# 
   578  009F                     	;# 
   579  010C                     	;# 
   580  0111                     	;# 
   581  0112                     	;# 
   582  0115                     	;# 
   583  0116                     	;# 
   584  0117                     	;# 
   585  0118                     	;# 
   586  0119                     	;# 
   587  011D                     	;# 
   588  011D                     	;# 
   589  018C                     	;# 
   590  0191                     	;# 
   591  0191                     	;# 
   592  0192                     	;# 
   593  0193                     	;# 
   594  0193                     	;# 
   595  0194                     	;# 
   596  0195                     	;# 
   597  0196                     	;# 
   598  0197                     	;# 
   599  020C                     	;# 
   600  028C                     	;# 
   601  030C                     	;# 
   602  038C                     	;# 
   603  0391                     	;# 
   604  0392                     	;# 
   605  0393                     	;# 
   606  0691                     	;# 
   607  0692                     	;# 
   608  0693                     	;# 
   609  0694                     	;# 
   610  0695                     	;# 
   611  0D8E                     	;# 
   612  0D8F                     	;# 
   613  0D90                     	;# 
   614  0D91                     	;# 
   615  0D91                     	;# 
   616  0D92                     	;# 
   617  0D93                     	;# 
   618  0D93                     	;# 
   619  0D94                     	;# 
   620  0D95                     	;# 
   621  0D95                     	;# 
   622  0D96                     	;# 
   623  0D97                     	;# 
   624  0D97                     	;# 
   625  0D98                     	;# 
   626  0D99                     	;# 
   627  0D99                     	;# 
   628  0D9A                     	;# 
   629  0D9B                     	;# 
   630  0D9C                     	;# 
   631  0D9C                     	;# 
   632  0D9D                     	;# 
   633  0D9D                     	;# 
   634  0D9E                     	;# 
   635  0D9F                     	;# 
   636  0DA0                     	;# 
   637  0DA1                     	;# 
   638  0DA1                     	;# 
   639  0DA2                     	;# 
   640  0DA3                     	;# 
   641  0DA3                     	;# 
   642  0DA4                     	;# 
   643  0DA5                     	;# 
   644  0DA5                     	;# 
   645  0DA6                     	;# 
   646  0DA7                     	;# 
   647  0DA7                     	;# 
   648  0DA8                     	;# 
   649  0DA9                     	;# 
   650  0DA9                     	;# 
   651  0DAA                     	;# 
   652  0DAB                     	;# 
   653  0DAC                     	;# 
   654  0DAC                     	;# 
   655  0DAD                     	;# 
   656  0DAD                     	;# 
   657  0DAE                     	;# 
   658  0DAF                     	;# 
   659  0DB0                     	;# 
   660  0DB1                     	;# 
   661  0DB1                     	;# 
   662  0DB2                     	;# 
   663  0DB3                     	;# 
   664  0DB3                     	;# 
   665  0DB4                     	;# 
   666  0DB5                     	;# 
   667  0DB5                     	;# 
   668  0DB6                     	;# 
   669  0DB7                     	;# 
   670  0DB7                     	;# 
   671  0DB8                     	;# 
   672  0DB9                     	;# 
   673  0DB9                     	;# 
   674  0DBA                     	;# 
   675  0DBB                     	;# 
   676  0DBC                     	;# 
   677  0DBC                     	;# 
   678  0DBD                     	;# 
   679  0DBD                     	;# 
   680  0DBE                     	;# 
   681  0DBF                     	;# 
   682  0DC0                     	;# 
   683  0FE4                     	;# 
   684  0FE5                     	;# 
   685  0FE6                     	;# 
   686  0FE7                     	;# 
   687  0FE8                     	;# 
   688  0FE8                     	;# 
   689  0FE9                     	;# 
   690  0FEA                     	;# 
   691  0FEA                     	;# 
   692  0FEB                     	;# 
   693  0FED                     	;# 
   694  0FEE                     	;# 
   695  0FEE                     	;# 
   696  0FEF                     	;# 
   697  0000                     	;# 
   698  0001                     	;# 
   699  0002                     	;# 
   700  0003                     	;# 
   701  0004                     	;# 
   702  0005                     	;# 
   703  0006                     	;# 
   704  0007                     	;# 
   705  0008                     	;# 
   706  0009                     	;# 
   707  000A                     	;# 
   708  000B                     	;# 
   709  000C                     	;# 
   710  0011                     	;# 
   711  0012                     	;# 
   712  0013                     	;# 
   713  0015                     	;# 
   714  0016                     	;# 
   715  0016                     	;# 
   716  0017                     	;# 
   717  0018                     	;# 
   718  0019                     	;# 
   719  001A                     	;# 
   720  001B                     	;# 
   721  001C                     	;# 
   722  008C                     	;# 
   723  0091                     	;# 
   724  0092                     	;# 
   725  0093                     	;# 
   726  0095                     	;# 
   727  0096                     	;# 
   728  0097                     	;# 
   729  0098                     	;# 
   730  0099                     	;# 
   731  009A                     	;# 
   732  009B                     	;# 
   733  009B                     	;# 
   734  009C                     	;# 
   735  009D                     	;# 
   736  009E                     	;# 
   737  009F                     	;# 
   738  010C                     	;# 
   739  0111                     	;# 
   740  0112                     	;# 
   741  0115                     	;# 
   742  0116                     	;# 
   743  0117                     	;# 
   744  0118                     	;# 
   745  0119                     	;# 
   746  011D                     	;# 
   747  011D                     	;# 
   748  018C                     	;# 
   749  0191                     	;# 
   750  0191                     	;# 
   751  0192                     	;# 
   752  0193                     	;# 
   753  0193                     	;# 
   754  0194                     	;# 
   755  0195                     	;# 
   756  0196                     	;# 
   757  0197                     	;# 
   758  020C                     	;# 
   759  028C                     	;# 
   760  030C                     	;# 
   761  038C                     	;# 
   762  0391                     	;# 
   763  0392                     	;# 
   764  0393                     	;# 
   765  0691                     	;# 
   766  0692                     	;# 
   767  0693                     	;# 
   768  0694                     	;# 
   769  0695                     	;# 
   770  0D8E                     	;# 
   771  0D8F                     	;# 
   772  0D90                     	;# 
   773  0D91                     	;# 
   774  0D91                     	;# 
   775  0D92                     	;# 
   776  0D93                     	;# 
   777  0D93                     	;# 
   778  0D94                     	;# 
   779  0D95                     	;# 
   780  0D95                     	;# 
   781  0D96                     	;# 
   782  0D97                     	;# 
   783  0D97                     	;# 
   784  0D98                     	;# 
   785  0D99                     	;# 
   786  0D99                     	;# 
   787  0D9A                     	;# 
   788  0D9B                     	;# 
   789  0D9C                     	;# 
   790  0D9C                     	;# 
   791  0D9D                     	;# 
   792  0D9D                     	;# 
   793  0D9E                     	;# 
   794  0D9F                     	;# 
   795  0DA0                     	;# 
   796  0DA1                     	;# 
   797  0DA1                     	;# 
   798  0DA2                     	;# 
   799  0DA3                     	;# 
   800  0DA3                     	;# 
   801  0DA4                     	;# 
   802  0DA5                     	;# 
   803  0DA5                     	;# 
   804  0DA6                     	;# 
   805  0DA7                     	;# 
   806  0DA7                     	;# 
   807  0DA8                     	;# 
   808  0DA9                     	;# 
   809  0DA9                     	;# 
   810  0DAA                     	;# 
   811  0DAB                     	;# 
   812  0DAC                     	;# 
   813  0DAC                     	;# 
   814  0DAD                     	;# 
   815  0DAD                     	;# 
   816  0DAE                     	;# 
   817  0DAF                     	;# 
   818  0DB0                     	;# 
   819  0DB1                     	;# 
   820  0DB1                     	;# 
   821  0DB2                     	;# 
   822  0DB3                     	;# 
   823  0DB3                     	;# 
   824  0DB4                     	;# 
   825  0DB5                     	;# 
   826  0DB5                     	;# 
   827  0DB6                     	;# 
   828  0DB7                     	;# 
   829  0DB7                     	;# 
   830  0DB8                     	;# 
   831  0DB9                     	;# 
   832  0DB9                     	;# 
   833  0DBA                     	;# 
   834  0DBB                     	;# 
   835  0DBC                     	;# 
   836  0DBC                     	;# 
   837  0DBD                     	;# 
   838  0DBD                     	;# 
   839  0DBE                     	;# 
   840  0DBF                     	;# 
   841  0DC0                     	;# 
   842  0FE4                     	;# 
   843  0FE5                     	;# 
   844  0FE6                     	;# 
   845  0FE7                     	;# 
   846  0FE8                     	;# 
   847  0FE8                     	;# 
   848  0FE9                     	;# 
   849  0FEA                     	;# 
   850  0FEA                     	;# 
   851  0FEB                     	;# 
   852  0FED                     	;# 
   853  0FEE                     	;# 
   854  0FEE                     	;# 
   855  0FEF                     	;# 
   856                           
   857                           	psect	nvCOMMON
   858  007A                     __pnvCOMMON:	
   859  007A                     _timer1ReloadVal:	
   860  007A                     	ds	2
   861                           
   862                           	psect	nvBANK0
   863  0020                     __pnvBANK0:	
   864  0020                     _TMR1_InterruptHandler:	
   865  0020                     	ds	2
   866  000C                     _PORTAbits	set	12
   867  000B                     _INTCONbits	set	11
   868  0019                     _T1GCONbits	set	25
   869  0018                     _T1CONbits	set	24
   870  0018                     _T1CON	set	24
   871  0011                     _PIR1bits	set	17
   872  0016                     _TMR1L	set	22
   873  0017                     _TMR1H	set	23
   874  0019                     _T1GCON	set	25
   875  0091                     _PIE1bits	set	145
   876  0095                     _OPTION_REGbits	set	149
   877  008C                     _TRISA	set	140
   878  0097                     _WDTCON	set	151
   879  0098                     _OSCTUNE	set	152
   880  0099                     _OSCCON	set	153
   881  010C                     _LATAbits	set	268
   882  011D                     _APFCON	set	285
   883  010C                     _LATA	set	268
   884  0116                     _BORCON	set	278
   885  018C                     _ANSELA	set	396
   886  020C                     _WPUA	set	524
   887  028C                     _ODCONA	set	652
   888  030C                     _SLRCONA	set	780
   889  038C                     _INLVLA	set	908
   890                           
   891                           ; #config settings
   892  0000                     
   893                           	psect	cinit
   894  001A                     start_initialization:	
   895  001A                     __initialization:	
   896                           
   897                           ; Clear objects allocated to COMMON
   898  001A  01F0               	clrf	__pbssCOMMON& (0+127)
   899  001B  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   900  001C  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   901  001D  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   902  001E  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   903  001F                     end_of_initialization:	
   904                           ;End of C runtime variable initialization code
   905                           
   906  001F                     __end_of__initialization:	
   907  001F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   908  0020  0020               	movlb	0
   909  0021  2822               	ljmp	_main	;jump to C main() function
   910                           
   911                           	psect	bssCOMMON
   912  0070                     __pbssCOMMON:	
   913  0070                     _demandedSecondsTick:	
   914  0070                     	ds	2
   915  0072                     _currentSecondsTick:	
   916  0072                     	ds	2
   917  0074                     _currentState:	
   918  0074                     	ds	1
   919                           
   920                           	psect	cstackCOMMON
   921  0075                     __pcstackCOMMON:	
   922  0075                     ?_PIN_MANAGER_Initialize:	
   923  0075                     ?_OSCILLATOR_Initialize:	
   924                           ; 1 bytes @ 0x0
   925                           
   926  0075                     ?_WDT_Initialize:	
   927                           ; 1 bytes @ 0x0
   928                           
   929  0075                     ?_TMR1_Initialize:	
   930                           ; 1 bytes @ 0x0
   931                           
   932  0075                     ?_TMR1_DefaultInterruptHandler:	
   933                           ; 1 bytes @ 0x0
   934                           
   935  0075                     ??_TMR1_DefaultInterruptHandler:	
   936                           ; 1 bytes @ 0x0
   937                           
   938  0075                     ?_TMR1_CallBack:	
   939                           ; 1 bytes @ 0x0
   940                           
   941  0075                     ??_TMR1_CallBack:	
   942                           ; 1 bytes @ 0x0
   943                           
   944  0075                     ?_secondsTick:	
   945                           ; 1 bytes @ 0x0
   946                           
   947  0075                     ??_secondsTick:	
   948                           ; 1 bytes @ 0x0
   949                           
   950  0075                     ?_setState:	
   951                           ; 1 bytes @ 0x0
   952                           
   953  0075                     ?_SYSTEM_Initialize:	
   954                           ; 1 bytes @ 0x0
   955                           
   956  0075                     ?_TMR1_StartTimer:	
   957                           ; 1 bytes @ 0x0
   958                           
   959  0075                     ?_TMR1_WriteTimer:	
   960                           ; 1 bytes @ 0x0
   961                           
   962  0075                     ?_TMR1_ISR:	
   963                           ; 1 bytes @ 0x0
   964                           
   965  0075                     ?_INTERRUPT_InterruptManager:	
   966                           ; 1 bytes @ 0x0
   967                           
   968  0075                     ?_main:	
   969                           ; 1 bytes @ 0x0
   970                           
   971  0075                     TMR1_WriteTimer@timerVal:	
   972                           ; 1 bytes @ 0x0
   973                           
   974                           
   975                           ; 2 bytes @ 0x0
   976  0075                     	ds	2
   977  0077                     ??_PIN_MANAGER_Initialize:	
   978  0077                     ??_OSCILLATOR_Initialize:	
   979                           ; 1 bytes @ 0x2
   980                           
   981  0077                     ??_WDT_Initialize:	
   982                           ; 1 bytes @ 0x2
   983                           
   984  0077                     ?_TMR1_SetInterruptHandler:	
   985                           ; 1 bytes @ 0x2
   986                           
   987  0077                     ??_setState:	
   988                           ; 1 bytes @ 0x2
   989                           
   990  0077                     ??_TMR1_StartTimer:	
   991                           ; 1 bytes @ 0x2
   992                           
   993  0077                     ??_TMR1_WriteTimer:	
   994                           ; 1 bytes @ 0x2
   995                           
   996  0077                     ??_TMR1_ISR:	
   997                           ; 1 bytes @ 0x2
   998                           
   999  0077                     ??_INTERRUPT_InterruptManager:	
  1000                           ; 1 bytes @ 0x2
  1001                           
  1002  0077                     TMR1_SetInterruptHandler@InterruptHandler:	
  1003                           ; 1 bytes @ 0x2
  1004                           
  1005                           
  1006                           ; 2 bytes @ 0x2
  1007  0077                     	ds	2
  1008  0079                     ??_TMR1_Initialize:	
  1009  0079                     ??_TMR1_SetInterruptHandler:	
  1010                           ; 1 bytes @ 0x4
  1011                           
  1012  0079                     ??_SYSTEM_Initialize:	
  1013                           ; 1 bytes @ 0x4
  1014                           
  1015  0079                     setState@newState:	
  1016                           ; 1 bytes @ 0x4
  1017                           
  1018                           
  1019                           ; 1 bytes @ 0x4
  1020  0079                     	ds	1
  1021                           
  1022                           	psect	cstackBANK0
  1023  0022                     __pcstackBANK0:	
  1024  0022                     ??_main:	
  1025                           
  1026                           ; 1 bytes @ 0x0
  1027  0022                     	ds	2
  1028                           
  1029                           	psect	maintext
  1030  0022                     __pmaintext:	
  1031 ;;
  1032 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1033 ;;
  1034 ;; *************** function _main *****************
  1035 ;; Defined at:
  1036 ;;		line 68 in file "main.c"
  1037 ;; Parameters:    Size  Location     Type
  1038 ;;		None
  1039 ;; Auto vars:     Size  Location     Type
  1040 ;;		None
  1041 ;; Return value:  Size  Location     Type
  1042 ;;                  1    wreg      void 
  1043 ;; Registers used:
  1044 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1045 ;; Tracked objects:
  1046 ;;		On entry : B1F/0
  1047 ;;		On exit  : 0/0
  1048 ;;		Unchanged: 0/0
  1049 ;; Data sizes:     COMMON   BANK0   BANK1
  1050 ;;      Params:         0       0       0
  1051 ;;      Locals:         0       0       0
  1052 ;;      Temps:          0       2       0
  1053 ;;      Totals:         0       2       0
  1054 ;;Total ram usage:        2 bytes
  1055 ;; Hardware stack levels required when called:    7
  1056 ;; This function calls:
  1057 ;;		_SYSTEM_Initialize
  1058 ;;		_TMR1_SetInterruptHandler
  1059 ;;		_TMR1_StartTimer
  1060 ;;		_setState
  1061 ;; This function is called by:
  1062 ;;		Startup code after reset
  1063 ;; This function uses a non-reentrant model
  1064 ;;
  1065                           
  1066                           
  1067                           ;psect for function _main
  1068  0022                     _main:	
  1069  0022                     l1024:	
  1070                           ;incstack = 0
  1071                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1072                           
  1073                           
  1074                           ;main.c: 71:     SYSTEM_Initialize();
  1075  0022  3180  20F9  3180   	fcall	_SYSTEM_Initialize
  1076  0025                     l1026:	
  1077                           
  1078                           ;main.c: 77:     (INTCONbits.GIE = 1);
  1079  0025  178B               	bsf	11,7	;volatile
  1080  0026                     l1028:	
  1081                           
  1082                           ;main.c: 80:     (INTCONbits.PEIE = 1);
  1083  0026  170B               	bsf	11,6	;volatile
  1084                           
  1085                           ;main.c: 89:     TMR1_SetInterruptHandler(secondsTick);
  1086  0027  302D               	movlw	low _secondsTick
  1087  0028  00F7               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  1088  0029  3001               	movlw	high _secondsTick
  1089  002A  00F8               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  1090  002B  3181  2127  3180   	fcall	_TMR1_SetInterruptHandler
  1091  002E                     l1030:	
  1092                           
  1093                           ;main.c: 91:     TMR1_StartTimer();
  1094  002E  3181  2136  3180   	fcall	_TMR1_StartTimer
  1095  0031                     l1032:	
  1096                           
  1097                           ;main.c: 93:     setState(STATE_WAIT_TIME);
  1098  0031  3001               	movlw	1
  1099  0032  3180  207A  3180   	fcall	_setState
  1100  0035  2862               	goto	l1046
  1101  0036                     l160:	
  1102                           ;main.c: 100:         {;main.c: 101:             case STATE_WAIT_TIME:
  1103                           
  1104                           
  1105                           ;main.c: 103:                 if(PORTAbits.RA5 && (currentSecondsTick >= demandedSeconds
      +                          Tick))
  1106  0036  1E8C               	btfss	12,5	;volatile
  1107  0037  2839               	goto	u201
  1108  0038  283A               	goto	u200
  1109  0039                     u201:	
  1110  0039  2862               	goto	l159
  1111  003A                     u200:	
  1112  003A                     l1034:	
  1113  003A  0871               	movf	_demandedSecondsTick+1,w
  1114  003B  0273               	subwf	_currentSecondsTick+1,w	;volatile
  1115  003C  1D03               	skipz
  1116  003D  2840               	goto	u215
  1117  003E  0870               	movf	_demandedSecondsTick,w
  1118  003F  0272               	subwf	_currentSecondsTick,w	;volatile
  1119  0040                     u215:	
  1120  0040  1C03               	skipc
  1121  0041  2843               	goto	u211
  1122  0042  2844               	goto	u210
  1123  0043                     u211:	
  1124  0043  2862               	goto	l159
  1125  0044                     u210:	
  1126  0044                     l1036:	
  1127                           
  1128                           ;main.c: 104:                 {;main.c: 105:                     setState(STATE_OPEN_VAL
      +                          VE);
  1129  0044  3002               	movlw	2
  1130  0045  3180  207A  3180   	fcall	_setState
  1131  0048  2862               	goto	l1046
  1132  0049                     l163:	
  1133                           ;main.c: 109:             case STATE_OPEN_VALVE:
  1134                           
  1135                           
  1136                           ;main.c: 110:                 if(PORTAbits.RA4)
  1137  0049  1E0C               	btfss	12,4	;volatile
  1138  004A  284C               	goto	u221
  1139  004B  284D               	goto	u220
  1140  004C                     u221:	
  1141  004C  2862               	goto	l159
  1142  004D                     u220:	
  1143  004D                     l1038:	
  1144                           
  1145                           ;main.c: 111:                 {;main.c: 112:                     setState(STATE_CLOSE_VA
      +                          LVE);
  1146  004D  3003               	movlw	3
  1147  004E  3180  207A  3180   	fcall	_setState
  1148  0051  2862               	goto	l1046
  1149  0052                     l1040:	
  1150                           
  1151                           ;main.c: 118:                 if(currentSecondsTick >= demandedSecondsTick)
  1152  0052  0871               	movf	_demandedSecondsTick+1,w
  1153  0053  0273               	subwf	_currentSecondsTick+1,w	;volatile
  1154  0054  1D03               	skipz
  1155  0055  2858               	goto	u235
  1156  0056  0870               	movf	_demandedSecondsTick,w
  1157  0057  0272               	subwf	_currentSecondsTick,w	;volatile
  1158  0058                     u235:	
  1159  0058  1C03               	skipc
  1160  0059  285B               	goto	u231
  1161  005A  285C               	goto	u230
  1162  005B                     u231:	
  1163  005B  2862               	goto	l159
  1164  005C                     u230:	
  1165  005C                     l1042:	
  1166                           
  1167                           ;main.c: 119:                 {;main.c: 120:                     setState(STATE_END);
  1168  005C  3004               	movlw	4
  1169  005D  3180  207A  3180   	fcall	_setState
  1170  0060  2862               	goto	l1046
  1171  0061                     l168:	
  1172                           ;main.c: 125:                 while(1);
  1173                           
  1174  0061  2861               	goto	l168
  1175  0062                     l159:	
  1176  0062                     l1046:	
  1177  0062  0874               	movf	_currentState,w
  1178  0063  0020               	movlb	0	; select bank0
  1179  0064  00A2               	movwf	??_main
  1180  0065  01A3               	clrf	??_main+1
  1181                           
  1182                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1183                           ; Switch size 1, requested type "simple"
  1184                           ; Number of cases is 1, Range of values is 0 to 0
  1185                           ; switch strategies available:
  1186                           ; Name         Instructions Cycles
  1187                           ; simple_byte            4     3 (average)
  1188                           ; direct_byte            8     6 (fixed)
  1189                           ; jumptable            260     6 (fixed)
  1190                           ;	Chosen strategy is simple_byte
  1191  0066  0823               	movf	??_main+1,w
  1192  0067  3A00               	xorlw	0	; case 0
  1193  0068  1903               	skipnz
  1194  0069  286B               	goto	l1104
  1195  006A  2862               	goto	l1046
  1196  006B                     l1104:	
  1197                           
  1198                           ; Switch size 1, requested type "simple"
  1199                           ; Number of cases is 4, Range of values is 1 to 4
  1200                           ; switch strategies available:
  1201                           ; Name         Instructions Cycles
  1202                           ; simple_byte           13     7 (average)
  1203                           ; direct_byte           17     9 (fixed)
  1204                           ; jumptable            263     9 (fixed)
  1205                           ;	Chosen strategy is simple_byte
  1206  006B  0822               	movf	??_main,w
  1207  006C  3A01               	xorlw	1	; case 1
  1208  006D  1903               	skipnz
  1209  006E  2836               	goto	l160
  1210  006F  3A03               	xorlw	3	; case 2
  1211  0070  1903               	skipnz
  1212  0071  2849               	goto	l163
  1213  0072  3A01               	xorlw	1	; case 3
  1214  0073  1903               	skipnz
  1215  0074  2852               	goto	l1040
  1216  0075  3A07               	xorlw	7	; case 4
  1217  0076  1903               	skipnz
  1218  0077  2861               	goto	l168
  1219  0078  2862               	goto	l1046
  1220  0079  2819               	ljmp	start
  1221  007A                     __end_of_main:	
  1222                           
  1223                           	psect	text1
  1224  007A                     __ptext1:	
  1225 ;; *************** function _setState *****************
  1226 ;; Defined at:
  1227 ;;		line 138 in file "main.c"
  1228 ;; Parameters:    Size  Location     Type
  1229 ;;  newState        1    wreg     enum E2970
  1230 ;; Auto vars:     Size  Location     Type
  1231 ;;  newState        1    4[COMMON] enum E2970
  1232 ;; Return value:  Size  Location     Type
  1233 ;;                  1    wreg      void 
  1234 ;; Registers used:
  1235 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1236 ;; Tracked objects:
  1237 ;;		On entry : 0/0
  1238 ;;		On exit  : 0/0
  1239 ;;		Unchanged: 0/0
  1240 ;; Data sizes:     COMMON   BANK0   BANK1
  1241 ;;      Params:         0       0       0
  1242 ;;      Locals:         1       0       0
  1243 ;;      Temps:          2       0       0
  1244 ;;      Totals:         3       0       0
  1245 ;;Total ram usage:        3 bytes
  1246 ;; Hardware stack levels used:    1
  1247 ;; Hardware stack levels required when called:    4
  1248 ;; This function calls:
  1249 ;;		Nothing
  1250 ;; This function is called by:
  1251 ;;		_main
  1252 ;; This function uses a non-reentrant model
  1253 ;;
  1254                           
  1255                           
  1256                           ;psect for function _setState
  1257  007A                     _setState:	
  1258                           
  1259                           ;incstack = 0
  1260                           ; Regs used in _setState: [wreg-fsr0h+status,2+status,0]
  1261                           ;setState@newState stored from wreg
  1262  007A  00F9               	movwf	setState@newState
  1263  007B                     l794:	
  1264                           
  1265                           ;main.c: 138: void setState(states_t newState);main.c: 139: {;main.c: 140:     if(newSta
      +                          te == currentState)
  1266  007B  0879               	movf	setState@newState,w
  1267  007C  0674               	xorwf	_currentState,w
  1268  007D  1D03               	skipz
  1269  007E  2880               	goto	u31
  1270  007F  2881               	goto	u30
  1271  0080                     u31:	
  1272  0080  289E               	goto	l804
  1273  0081                     u30:	
  1274  0081  28B8               	goto	l177
  1275  0082                     l180:	
  1276                           ;main.c: 147:             do { LATAbits.LATA1 = 0; } while(0);
  1277                           
  1278  0082  0022               	movlb	2	; select bank2
  1279  0083  108C               	bcf	12,1	;volatile
  1280  0084                     l182:	
  1281                           ;main.c: 148:             do { LATAbits.LATA2 = 0; } while(0);
  1282                           
  1283  0084  110C               	bcf	12,2	;volatile
  1284  0085                     l798:	
  1285                           
  1286                           ;main.c: 149:             demandedSecondsTick = currentSecondsTick + 1;
  1287  0085  0872               	movf	_currentSecondsTick,w	;volatile
  1288  0086  3E01               	addlw	1
  1289  0087  00F0               	movwf	_demandedSecondsTick
  1290  0088  3000               	movlw	0
  1291  0089  3D73               	addwfc	_currentSecondsTick+1,w	;volatile
  1292  008A  00F1               	movwf	_demandedSecondsTick+1
  1293                           
  1294                           ;main.c: 150:             break;
  1295  008B  28B4               	goto	l806
  1296  008C                     l186:	
  1297                           ;main.c: 153:             do { LATAbits.LATA1 = 1; } while(0);
  1298                           
  1299  008C  0022               	movlb	2	; select bank2
  1300  008D  148C               	bsf	12,1	;volatile
  1301  008E                     l188:	
  1302                           ;main.c: 154:             do { LATAbits.LATA2 = 0; } while(0);
  1303                           
  1304  008E  110C               	bcf	12,2	;volatile
  1305  008F  28B4               	goto	l806
  1306  0090                     l191:	
  1307                           ;main.c: 158:             do { LATAbits.LATA1 = 0; } while(0);
  1308                           
  1309  0090  0022               	movlb	2	; select bank2
  1310  0091  108C               	bcf	12,1	;volatile
  1311  0092                     l193:	
  1312                           ;main.c: 159:             do { LATAbits.LATA2 = 1; } while(0);
  1313                           
  1314  0092  150C               	bsf	12,2	;volatile
  1315  0093                     l800:	
  1316                           
  1317                           ;main.c: 160:             demandedSecondsTick = currentSecondsTick + 30;
  1318  0093  0872               	movf	_currentSecondsTick,w	;volatile
  1319  0094  3E1E               	addlw	30
  1320  0095  00F0               	movwf	_demandedSecondsTick
  1321  0096  3000               	movlw	0
  1322  0097  3D73               	addwfc	_currentSecondsTick+1,w	;volatile
  1323  0098  00F1               	movwf	_demandedSecondsTick+1
  1324                           
  1325                           ;main.c: 161:             break;
  1326  0099  28B4               	goto	l806
  1327  009A                     l196:	
  1328                           ;main.c: 164:             do { LATAbits.LATA1 = 0; } while(0);
  1329                           
  1330  009A  0022               	movlb	2	; select bank2
  1331  009B  108C               	bcf	12,1	;volatile
  1332  009C                     l198:	
  1333                           ;main.c: 165:             do { LATAbits.LATA2 = 0; } while(0);
  1334                           
  1335  009C  110C               	bcf	12,2	;volatile
  1336  009D  28B4               	goto	l806
  1337  009E                     l804:	
  1338  009E  0879               	movf	setState@newState,w
  1339  009F  00F7               	movwf	??_setState
  1340  00A0  01F8               	clrf	??_setState+1
  1341                           
  1342                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1343                           ; Switch size 1, requested type "simple"
  1344                           ; Number of cases is 1, Range of values is 0 to 0
  1345                           ; switch strategies available:
  1346                           ; Name         Instructions Cycles
  1347                           ; simple_byte            4     3 (average)
  1348                           ; direct_byte            8     6 (fixed)
  1349                           ; jumptable            260     6 (fixed)
  1350                           ;	Chosen strategy is simple_byte
  1351  00A1  0878               	movf	??_setState+1,w
  1352  00A2  3A00               	xorlw	0	; case 0
  1353  00A3  1903               	skipnz
  1354  00A4  28A6               	goto	l1106
  1355  00A5  28B4               	goto	l806
  1356  00A6                     l1106:	
  1357                           
  1358                           ; Switch size 1, requested type "simple"
  1359                           ; Number of cases is 4, Range of values is 1 to 4
  1360                           ; switch strategies available:
  1361                           ; Name         Instructions Cycles
  1362                           ; simple_byte           13     7 (average)
  1363                           ; direct_byte           17     9 (fixed)
  1364                           ; jumptable            263     9 (fixed)
  1365                           ;	Chosen strategy is simple_byte
  1366  00A6  0877               	movf	??_setState,w
  1367  00A7  3A01               	xorlw	1	; case 1
  1368  00A8  1903               	skipnz
  1369  00A9  2882               	goto	l180
  1370  00AA  3A03               	xorlw	3	; case 2
  1371  00AB  1903               	skipnz
  1372  00AC  288C               	goto	l186
  1373  00AD  3A01               	xorlw	1	; case 3
  1374  00AE  1903               	skipnz
  1375  00AF  2890               	goto	l191
  1376  00B0  3A07               	xorlw	7	; case 4
  1377  00B1  1903               	skipnz
  1378  00B2  289A               	goto	l196
  1379  00B3  28B4               	goto	l806
  1380  00B4                     l806:	
  1381                           
  1382                           ;main.c: 169:     currentState = newState;
  1383  00B4  0879               	movf	setState@newState,w
  1384  00B5  00F7               	movwf	??_setState
  1385  00B6  0877               	movf	??_setState,w
  1386  00B7  00F4               	movwf	_currentState
  1387  00B8                     l177:	
  1388  00B8  0008               	return
  1389  00B9                     __end_of_setState:	
  1390                           
  1391                           	psect	text2
  1392  0136                     __ptext2:	
  1393 ;; *************** function _TMR1_StartTimer *****************
  1394 ;; Defined at:
  1395 ;;		line 93 in file "mcc_generated_files/tmr1.c"
  1396 ;; Parameters:    Size  Location     Type
  1397 ;;		None
  1398 ;; Auto vars:     Size  Location     Type
  1399 ;;		None
  1400 ;; Return value:  Size  Location     Type
  1401 ;;                  1    wreg      void 
  1402 ;; Registers used:
  1403 ;;		None
  1404 ;; Tracked objects:
  1405 ;;		On entry : 0/0
  1406 ;;		On exit  : 0/0
  1407 ;;		Unchanged: 0/0
  1408 ;; Data sizes:     COMMON   BANK0   BANK1
  1409 ;;      Params:         0       0       0
  1410 ;;      Locals:         0       0       0
  1411 ;;      Temps:          0       0       0
  1412 ;;      Totals:         0       0       0
  1413 ;;Total ram usage:        0 bytes
  1414 ;; Hardware stack levels used:    1
  1415 ;; Hardware stack levels required when called:    4
  1416 ;; This function calls:
  1417 ;;		Nothing
  1418 ;; This function is called by:
  1419 ;;		_main
  1420 ;; This function uses a non-reentrant model
  1421 ;;
  1422                           
  1423                           
  1424                           ;psect for function _TMR1_StartTimer
  1425  0136                     _TMR1_StartTimer:	
  1426  0136                     l788:	
  1427                           ;incstack = 0
  1428                           ; Regs used in _TMR1_StartTimer: []
  1429                           
  1430                           
  1431                           ;mcc_generated_files/tmr1.c: 96:     T1CONbits.TMR1ON = 1;
  1432  0136  0020               	movlb	0	; select bank0
  1433  0137  1418               	bsf	24,0	;volatile
  1434  0138                     l81:	
  1435  0138  0008               	return
  1436  0139                     __end_of_TMR1_StartTimer:	
  1437                           
  1438                           	psect	text3
  1439  00F9                     __ptext3:	
  1440 ;; *************** function _SYSTEM_Initialize *****************
  1441 ;; Defined at:
  1442 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1443 ;; Parameters:    Size  Location     Type
  1444 ;;		None
  1445 ;; Auto vars:     Size  Location     Type
  1446 ;;		None
  1447 ;; Return value:  Size  Location     Type
  1448 ;;                  1    wreg      void 
  1449 ;; Registers used:
  1450 ;;		wreg, status,2, status,0, pclath, cstack
  1451 ;; Tracked objects:
  1452 ;;		On entry : 0/0
  1453 ;;		On exit  : 0/0
  1454 ;;		Unchanged: 0/0
  1455 ;; Data sizes:     COMMON   BANK0   BANK1
  1456 ;;      Params:         0       0       0
  1457 ;;      Locals:         0       0       0
  1458 ;;      Temps:          0       0       0
  1459 ;;      Totals:         0       0       0
  1460 ;;Total ram usage:        0 bytes
  1461 ;; Hardware stack levels used:    1
  1462 ;; Hardware stack levels required when called:    6
  1463 ;; This function calls:
  1464 ;;		_OSCILLATOR_Initialize
  1465 ;;		_PIN_MANAGER_Initialize
  1466 ;;		_TMR1_Initialize
  1467 ;;		_WDT_Initialize
  1468 ;; This function is called by:
  1469 ;;		_main
  1470 ;; This function uses a non-reentrant model
  1471 ;;
  1472                           
  1473                           
  1474                           ;psect for function _SYSTEM_Initialize
  1475  00F9                     _SYSTEM_Initialize:	
  1476  00F9                     l940:	
  1477                           ;incstack = 0
  1478                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1479                           
  1480                           
  1481                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1482  00F9  3180  20D1  3180   	fcall	_PIN_MANAGER_Initialize
  1483                           
  1484                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1485  00FC  3181  2120  3180   	fcall	_OSCILLATOR_Initialize
  1486                           
  1487                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  1488  00FF  3181  2132  3180   	fcall	_WDT_Initialize
  1489                           
  1490                           ;mcc_generated_files/mcc.c: 56:     TMR1_Initialize();
  1491  0102  3180  20B9  3180   	fcall	_TMR1_Initialize
  1492  0105                     l19:	
  1493  0105  0008               	return
  1494  0106                     __end_of_SYSTEM_Initialize:	
  1495                           
  1496                           	psect	text4
  1497  0132                     __ptext4:	
  1498 ;; *************** function _WDT_Initialize *****************
  1499 ;; Defined at:
  1500 ;;		line 69 in file "mcc_generated_files/mcc.c"
  1501 ;; Parameters:    Size  Location     Type
  1502 ;;		None
  1503 ;; Auto vars:     Size  Location     Type
  1504 ;;		None
  1505 ;; Return value:  Size  Location     Type
  1506 ;;                  1    wreg      void 
  1507 ;; Registers used:
  1508 ;;		wreg
  1509 ;; Tracked objects:
  1510 ;;		On entry : 0/0
  1511 ;;		On exit  : 0/0
  1512 ;;		Unchanged: 0/0
  1513 ;; Data sizes:     COMMON   BANK0   BANK1
  1514 ;;      Params:         0       0       0
  1515 ;;      Locals:         0       0       0
  1516 ;;      Temps:          0       0       0
  1517 ;;      Totals:         0       0       0
  1518 ;;Total ram usage:        0 bytes
  1519 ;; Hardware stack levels used:    1
  1520 ;; Hardware stack levels required when called:    4
  1521 ;; This function calls:
  1522 ;;		Nothing
  1523 ;; This function is called by:
  1524 ;;		_SYSTEM_Initialize
  1525 ;; This function uses a non-reentrant model
  1526 ;;
  1527                           
  1528                           
  1529                           ;psect for function _WDT_Initialize
  1530  0132                     _WDT_Initialize:	
  1531  0132                     l750:	
  1532                           ;incstack = 0
  1533                           ; Regs used in _WDT_Initialize: [wreg]
  1534                           
  1535                           
  1536                           ;mcc_generated_files/mcc.c: 72:     WDTCON = 0x16;
  1537  0132  3016               	movlw	22
  1538  0133  0021               	movlb	1	; select bank1
  1539  0134  0097               	movwf	23	;volatile
  1540  0135                     l25:	
  1541  0135  0008               	return
  1542  0136                     __end_of_WDT_Initialize:	
  1543                           
  1544                           	psect	text5
  1545  00B9                     __ptext5:	
  1546 ;; *************** function _TMR1_Initialize *****************
  1547 ;; Defined at:
  1548 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  1549 ;; Parameters:    Size  Location     Type
  1550 ;;		None
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;		None
  1553 ;; Return value:  Size  Location     Type
  1554 ;;                  1    wreg      void 
  1555 ;; Registers used:
  1556 ;;		wreg, status,2, status,0, pclath, cstack
  1557 ;; Tracked objects:
  1558 ;;		On entry : 0/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMMON   BANK0   BANK1
  1562 ;;      Params:         0       0       0
  1563 ;;      Locals:         0       0       0
  1564 ;;      Temps:          0       0       0
  1565 ;;      Totals:         0       0       0
  1566 ;;Total ram usage:        0 bytes
  1567 ;; Hardware stack levels used:    1
  1568 ;; Hardware stack levels required when called:    5
  1569 ;; This function calls:
  1570 ;;		_TMR1_SetInterruptHandler
  1571 ;; This function is called by:
  1572 ;;		_SYSTEM_Initialize
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           
  1577                           ;psect for function _TMR1_Initialize
  1578  00B9                     _TMR1_Initialize:	
  1579  00B9                     l906:	
  1580                           ;incstack = 0
  1581                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1582                           
  1583                           
  1584                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  1585  00B9  0020               	movlb	0	; select bank0
  1586  00BA  0199               	clrf	25	;volatile
  1587  00BB                     l908:	
  1588                           
  1589                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x86;
  1590  00BB  3086               	movlw	134
  1591  00BC  0097               	movwf	23	;volatile
  1592  00BD                     l910:	
  1593                           
  1594                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xE8;
  1595  00BD  30E8               	movlw	232
  1596  00BE  0096               	movwf	22	;volatile
  1597  00BF                     l912:	
  1598                           
  1599                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  1600  00BF  1011               	bcf	17,0	;volatile
  1601  00C0                     l914:	
  1602                           
  1603                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  1604  00C0  0817               	movf	23,w	;volatile
  1605  00C1  00FB               	movwf	_timer1ReloadVal+1	;volatile
  1606  00C2  0816               	movf	22,w	;volatile
  1607  00C3  00FA               	movwf	_timer1ReloadVal	;volatile
  1608  00C4                     l916:	
  1609                           
  1610                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  1611  00C4  0021               	movlb	1	; select bank1
  1612  00C5  1411               	bsf	17,0	;volatile
  1613  00C6                     l918:	
  1614                           
  1615                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  1616  00C6  3039               	movlw	low _TMR1_DefaultInterruptHandler
  1617  00C7  00F7               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  1618  00C8  3001               	movlw	high _TMR1_DefaultInterruptHandler
  1619  00C9  00F8               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  1620  00CA  3181  2127  3180   	fcall	_TMR1_SetInterruptHandler
  1621  00CD                     l920:	
  1622                           
  1623                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0xC1;
  1624  00CD  30C1               	movlw	193
  1625  00CE  0020               	movlb	0	; select bank0
  1626  00CF  0098               	movwf	24	;volatile
  1627  00D0                     l78:	
  1628  00D0  0008               	return
  1629  00D1                     __end_of_TMR1_Initialize:	
  1630                           
  1631                           	psect	text6
  1632  0127                     __ptext6:	
  1633 ;; *************** function _TMR1_SetInterruptHandler *****************
  1634 ;; Defined at:
  1635 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  1636 ;; Parameters:    Size  Location     Type
  1637 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  1638 ;;		 -> secondsTick(1), TMR1_DefaultInterruptHandler(1), 
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;		None
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  1    wreg      void 
  1643 ;; Registers used:
  1644 ;;		wreg
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMMON   BANK0   BANK1
  1650 ;;      Params:         2       0       0
  1651 ;;      Locals:         0       0       0
  1652 ;;      Temps:          0       0       0
  1653 ;;      Totals:         2       0       0
  1654 ;;Total ram usage:        2 bytes
  1655 ;; Hardware stack levels used:    1
  1656 ;; Hardware stack levels required when called:    4
  1657 ;; This function calls:
  1658 ;;		Nothing
  1659 ;; This function is called by:
  1660 ;;		_TMR1_Initialize
  1661 ;;		_main
  1662 ;; This function uses a non-reentrant model
  1663 ;;
  1664                           
  1665                           
  1666                           ;psect for function _TMR1_SetInterruptHandler
  1667  0127                     _TMR1_SetInterruptHandler:	
  1668  0127                     l902:	
  1669                           ;incstack = 0
  1670                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  1671                           
  1672                           
  1673                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  1674  0127  0878               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  1675  0128  0020               	movlb	0	; select bank0
  1676  0129  00A1               	movwf	_TMR1_InterruptHandler+1
  1677  012A  0877               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  1678  012B  00A0               	movwf	_TMR1_InterruptHandler
  1679  012C                     l111:	
  1680  012C  0008               	return
  1681  012D                     __end_of_TMR1_SetInterruptHandler:	
  1682                           
  1683                           	psect	text7
  1684  00D1                     __ptext7:	
  1685 ;; *************** function _PIN_MANAGER_Initialize *****************
  1686 ;; Defined at:
  1687 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;		None
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;		None
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  1    wreg      void 
  1694 ;; Registers used:
  1695 ;;		wreg, status,2
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMMON   BANK0   BANK1
  1701 ;;      Params:         0       0       0
  1702 ;;      Locals:         0       0       0
  1703 ;;      Temps:          0       0       0
  1704 ;;      Totals:         0       0       0
  1705 ;;Total ram usage:        0 bytes
  1706 ;; Hardware stack levels used:    1
  1707 ;; Hardware stack levels required when called:    4
  1708 ;; This function calls:
  1709 ;;		Nothing
  1710 ;; This function is called by:
  1711 ;;		_SYSTEM_Initialize
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714                           
  1715                           
  1716                           ;psect for function _PIN_MANAGER_Initialize
  1717  00D1                     _PIN_MANAGER_Initialize:	
  1718  00D1                     l732:	
  1719                           ;incstack = 0
  1720                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1721                           
  1722                           
  1723                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1724  00D1  0022               	movlb	2	; select bank2
  1725  00D2  018C               	clrf	12	;volatile
  1726  00D3                     l734:	
  1727                           
  1728                           ;mcc_generated_files/pin_manager.c: 65:     TRISA = 0x39;
  1729  00D3  3039               	movlw	57
  1730  00D4  0021               	movlb	1	; select bank1
  1731  00D5  008C               	movwf	12	;volatile
  1732  00D6                     l736:	
  1733                           
  1734                           ;mcc_generated_files/pin_manager.c: 70:     ANSELA = 0x07;
  1735  00D6  3007               	movlw	7
  1736  00D7  0023               	movlb	3	; select bank3
  1737  00D8  008C               	movwf	12	;volatile
  1738                           
  1739                           ;mcc_generated_files/pin_manager.c: 75:     WPUA = 0x00;
  1740  00D9  0024               	movlb	4	; select bank4
  1741  00DA  018C               	clrf	12	;volatile
  1742  00DB                     l738:	
  1743                           
  1744                           ;mcc_generated_files/pin_manager.c: 76:     OPTION_REGbits.nWPUEN = 1;
  1745  00DB  0021               	movlb	1	; select bank1
  1746  00DC  1795               	bsf	21,7	;volatile
  1747                           
  1748                           ;mcc_generated_files/pin_manager.c: 81:     ODCONA = 0x00;
  1749  00DD  0025               	movlb	5	; select bank5
  1750  00DE  018C               	clrf	12	;volatile
  1751  00DF                     l740:	
  1752                           
  1753                           ;mcc_generated_files/pin_manager.c: 86:     SLRCONA = 0x37;
  1754  00DF  3037               	movlw	55
  1755  00E0  0026               	movlb	6	; select bank6
  1756  00E1  008C               	movwf	12	;volatile
  1757  00E2                     l742:	
  1758                           
  1759                           ;mcc_generated_files/pin_manager.c: 91:     INLVLA = 0x3F;
  1760  00E2  303F               	movlw	63
  1761  00E3  0027               	movlb	7	; select bank7
  1762  00E4  008C               	movwf	12	;volatile
  1763                           
  1764                           ;mcc_generated_files/pin_manager.c: 96:     APFCON = 0x00;
  1765  00E5  0022               	movlb	2	; select bank2
  1766  00E6  019D               	clrf	29	;volatile
  1767  00E7                     l46:	
  1768  00E7  0008               	return
  1769  00E8                     __end_of_PIN_MANAGER_Initialize:	
  1770                           
  1771                           	psect	text8
  1772  0120                     __ptext8:	
  1773 ;; *************** function _OSCILLATOR_Initialize *****************
  1774 ;; Defined at:
  1775 ;;		line 59 in file "mcc_generated_files/mcc.c"
  1776 ;; Parameters:    Size  Location     Type
  1777 ;;		None
  1778 ;; Auto vars:     Size  Location     Type
  1779 ;;		None
  1780 ;; Return value:  Size  Location     Type
  1781 ;;                  1    wreg      void 
  1782 ;; Registers used:
  1783 ;;		wreg, status,2
  1784 ;; Tracked objects:
  1785 ;;		On entry : 0/0
  1786 ;;		On exit  : 0/0
  1787 ;;		Unchanged: 0/0
  1788 ;; Data sizes:     COMMON   BANK0   BANK1
  1789 ;;      Params:         0       0       0
  1790 ;;      Locals:         0       0       0
  1791 ;;      Temps:          0       0       0
  1792 ;;      Totals:         0       0       0
  1793 ;;Total ram usage:        0 bytes
  1794 ;; Hardware stack levels used:    1
  1795 ;; Hardware stack levels required when called:    4
  1796 ;; This function calls:
  1797 ;;		Nothing
  1798 ;; This function is called by:
  1799 ;;		_SYSTEM_Initialize
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           
  1803                           
  1804                           ;psect for function _OSCILLATOR_Initialize
  1805  0120                     _OSCILLATOR_Initialize:	
  1806  0120                     l744:	
  1807                           ;incstack = 0
  1808                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1809                           
  1810                           
  1811                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x02;
  1812  0120  3002               	movlw	2
  1813  0121  0021               	movlb	1	; select bank1
  1814  0122  0099               	movwf	25	;volatile
  1815  0123                     l746:	
  1816                           
  1817                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
  1818  0123  0198               	clrf	24	;volatile
  1819  0124                     l748:	
  1820                           
  1821                           ;mcc_generated_files/mcc.c: 66:     BORCON = 0x00;
  1822  0124  0022               	movlb	2	; select bank2
  1823  0125  0196               	clrf	22	;volatile
  1824  0126                     l22:	
  1825  0126  0008               	return
  1826  0127                     __end_of_OSCILLATOR_Initialize:	
  1827                           
  1828                           	psect	intentry
  1829  0004                     __pintentry:	
  1830 ;; *************** function _INTERRUPT_InterruptManager *****************
  1831 ;; Defined at:
  1832 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1833 ;; Parameters:    Size  Location     Type
  1834 ;;		None
  1835 ;; Auto vars:     Size  Location     Type
  1836 ;;		None
  1837 ;; Return value:  Size  Location     Type
  1838 ;;                  1    wreg      void 
  1839 ;; Registers used:
  1840 ;;		wreg, status,2, status,0, pclath, cstack
  1841 ;; Tracked objects:
  1842 ;;		On entry : 0/0
  1843 ;;		On exit  : 0/0
  1844 ;;		Unchanged: 0/0
  1845 ;; Data sizes:     COMMON   BANK0   BANK1
  1846 ;;      Params:         0       0       0
  1847 ;;      Locals:         0       0       0
  1848 ;;      Temps:          0       0       0
  1849 ;;      Totals:         0       0       0
  1850 ;;Total ram usage:        0 bytes
  1851 ;; Hardware stack levels used:    1
  1852 ;; Hardware stack levels required when called:    3
  1853 ;; This function calls:
  1854 ;;		_TMR1_ISR
  1855 ;; This function is called by:
  1856 ;;		Interrupt level 1
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860  0004                     _INTERRUPT_InterruptManager:	
  1861                           
  1862                           ;incstack = 0
  1863  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1864                           
  1865                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  1866  0005  3180               	pagesel	$
  1867  0006                     i1l948:	
  1868                           
  1869                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  1870  0006  1F0B               	btfss	11,6	;volatile
  1871  0007  2809               	goto	u13_21
  1872  0008  280A               	goto	u13_20
  1873  0009                     u13_21:	
  1874  0009  2817               	goto	i1l131
  1875  000A                     u13_20:	
  1876  000A                     i1l950:	
  1877                           
  1878                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  1879  000A  0021               	movlb	1	; select bank1
  1880  000B  1C11               	btfss	17,0	;volatile
  1881  000C  280E               	goto	u14_21
  1882  000D  280F               	goto	u14_20
  1883  000E                     u14_21:	
  1884  000E  2817               	goto	i1l131
  1885  000F                     u14_20:	
  1886  000F                     i1l952:	
  1887  000F  0020               	movlb	0	; select bank0
  1888  0010  1C11               	btfss	17,0	;volatile
  1889  0011  2813               	goto	u15_21
  1890  0012  2814               	goto	u15_20
  1891  0013                     u15_21:	
  1892  0013  2817               	goto	i1l131
  1893  0014                     u15_20:	
  1894  0014                     i1l954:	
  1895                           
  1896                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR1_ISR();
  1897  0014  3181  2106  3180   	fcall	_TMR1_ISR
  1898  0017                     i1l131:	
  1899                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  1900                           
  1901  0017  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1902  0018  0009               	retfie
  1903  0019                     __end_of_INTERRUPT_InterruptManager:	
  1904                           
  1905                           	psect	text10
  1906  0106                     __ptext10:	
  1907 ;; *************** function _TMR1_ISR *****************
  1908 ;; Defined at:
  1909 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  1910 ;; Parameters:    Size  Location     Type
  1911 ;;		None
  1912 ;; Auto vars:     Size  Location     Type
  1913 ;;		None
  1914 ;; Return value:  Size  Location     Type
  1915 ;;                  1    wreg      void 
  1916 ;; Registers used:
  1917 ;;		wreg, status,2, status,0, pclath, cstack
  1918 ;; Tracked objects:
  1919 ;;		On entry : 0/0
  1920 ;;		On exit  : 0/0
  1921 ;;		Unchanged: 0/0
  1922 ;; Data sizes:     COMMON   BANK0   BANK1
  1923 ;;      Params:         0       0       0
  1924 ;;      Locals:         0       0       0
  1925 ;;      Temps:          0       0       0
  1926 ;;      Totals:         0       0       0
  1927 ;;Total ram usage:        0 bytes
  1928 ;; Hardware stack levels used:    1
  1929 ;; Hardware stack levels required when called:    2
  1930 ;; This function calls:
  1931 ;;		_TMR1_CallBack
  1932 ;;		_TMR1_WriteTimer
  1933 ;; This function is called by:
  1934 ;;		_INTERRUPT_InterruptManager
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938                           
  1939                           ;psect for function _TMR1_ISR
  1940  0106                     _TMR1_ISR:	
  1941  0106                     i1l942:	
  1942                           ;incstack = 0
  1943                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  1944                           
  1945                           
  1946                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  1947  0106  0020               	movlb	0	; select bank0
  1948  0107  1011               	bcf	17,0	;volatile
  1949  0108                     i1l944:	
  1950                           
  1951                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  1952  0108  087B               	movf	_timer1ReloadVal+1,w	;volatile
  1953  0109  00F6               	movwf	TMR1_WriteTimer@timerVal+1
  1954  010A  087A               	movf	_timer1ReloadVal,w	;volatile
  1955  010B  00F5               	movwf	TMR1_WriteTimer@timerVal
  1956  010C  3180  20E8  3181   	fcall	_TMR1_WriteTimer
  1957                           
  1958                           ;mcc_generated_files/tmr1.c: 166:     TMR1_CallBack();
  1959  010F  3181  2113  3181   	fcall	_TMR1_CallBack
  1960  0112                     i1l104:	
  1961  0112  0008               	return
  1962  0113                     __end_of_TMR1_ISR:	
  1963                           
  1964                           	psect	text11
  1965  00E8                     __ptext11:	
  1966 ;; *************** function _TMR1_WriteTimer *****************
  1967 ;; Defined at:
  1968 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;  timerVal        2    0[COMMON] unsigned short 
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;		None
  1973 ;; Return value:  Size  Location     Type
  1974 ;;                  1    wreg      void 
  1975 ;; Registers used:
  1976 ;;		wreg, status,2
  1977 ;; Tracked objects:
  1978 ;;		On entry : 0/0
  1979 ;;		On exit  : 0/0
  1980 ;;		Unchanged: 0/0
  1981 ;; Data sizes:     COMMON   BANK0   BANK1
  1982 ;;      Params:         2       0       0
  1983 ;;      Locals:         0       0       0
  1984 ;;      Temps:          0       0       0
  1985 ;;      Totals:         2       0       0
  1986 ;;Total ram usage:        2 bytes
  1987 ;; Hardware stack levels used:    1
  1988 ;; This function calls:
  1989 ;;		Nothing
  1990 ;; This function is called by:
  1991 ;;		_TMR1_ISR
  1992 ;;		_TMR1_Reload
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996                           
  1997                           ;psect for function _TMR1_WriteTimer
  1998  00E8                     _TMR1_WriteTimer:	
  1999  00E8                     i1l922:	
  2000                           ;incstack = 0
  2001                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  2002                           
  2003                           
  2004                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  2005  00E8  0020               	movlb	0	; select bank0
  2006  00E9  1D18               	btfss	24,2	;volatile
  2007  00EA  28EC               	goto	u11_21
  2008  00EB  28ED               	goto	u11_20
  2009  00EC                     u11_21:	
  2010  00EC  28F4               	goto	i1l932
  2011  00ED                     u11_20:	
  2012  00ED                     i1l924:	
  2013                           
  2014                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  2015  00ED  1018               	bcf	24,0	;volatile
  2016  00EE                     i1l926:	
  2017                           
  2018                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (timerVal >> 8);
  2019  00EE  0876               	movf	TMR1_WriteTimer@timerVal+1,w
  2020  00EF  0097               	movwf	23	;volatile
  2021  00F0                     i1l928:	
  2022                           
  2023                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = timerVal;
  2024  00F0  0875               	movf	TMR1_WriteTimer@timerVal,w
  2025  00F1  0096               	movwf	22	;volatile
  2026  00F2                     i1l930:	
  2027                           
  2028                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  2029  00F2  1418               	bsf	24,0	;volatile
  2030                           
  2031                           ;mcc_generated_files/tmr1.c: 133:     }
  2032  00F3  28F8               	goto	i1l92
  2033  00F4                     i1l932:	
  2034                           
  2035                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (timerVal >> 8);
  2036  00F4  0876               	movf	TMR1_WriteTimer@timerVal+1,w
  2037  00F5  0097               	movwf	23	;volatile
  2038  00F6                     i1l934:	
  2039                           
  2040                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = timerVal;
  2041  00F6  0875               	movf	TMR1_WriteTimer@timerVal,w
  2042  00F7  0096               	movwf	22	;volatile
  2043  00F8                     i1l92:	
  2044  00F8  0008               	return
  2045  00F9                     __end_of_TMR1_WriteTimer:	
  2046                           
  2047                           	psect	text12
  2048  0113                     __ptext12:	
  2049 ;; *************** function _TMR1_CallBack *****************
  2050 ;; Defined at:
  2051 ;;		line 169 in file "mcc_generated_files/tmr1.c"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;		None
  2054 ;; Auto vars:     Size  Location     Type
  2055 ;;		None
  2056 ;; Return value:  Size  Location     Type
  2057 ;;                  1    wreg      void 
  2058 ;; Registers used:
  2059 ;;		wreg, status,2, status,0, pclath, cstack
  2060 ;; Tracked objects:
  2061 ;;		On entry : 0/0
  2062 ;;		On exit  : 0/0
  2063 ;;		Unchanged: 0/0
  2064 ;; Data sizes:     COMMON   BANK0   BANK1
  2065 ;;      Params:         0       0       0
  2066 ;;      Locals:         0       0       0
  2067 ;;      Temps:          0       0       0
  2068 ;;      Totals:         0       0       0
  2069 ;;Total ram usage:        0 bytes
  2070 ;; Hardware stack levels used:    1
  2071 ;; Hardware stack levels required when called:    1
  2072 ;; This function calls:
  2073 ;;		Absolute function
  2074 ;;		_TMR1_DefaultInterruptHandler
  2075 ;;		_secondsTick
  2076 ;; This function is called by:
  2077 ;;		_TMR1_ISR
  2078 ;; This function uses a non-reentrant model
  2079 ;;
  2080                           
  2081                           
  2082                           ;psect for function _TMR1_CallBack
  2083  0113                     _TMR1_CallBack:	
  2084  0113                     i1l936:	
  2085                           ;incstack = 0
  2086                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
  2087                           
  2088                           
  2089                           ;mcc_generated_files/tmr1.c: 172:     if(TMR1_InterruptHandler)
  2090  0113  0020               	movlb	0	; select bank0
  2091  0114  0820               	movf	_TMR1_InterruptHandler,w
  2092  0115  0421               	iorwf	_TMR1_InterruptHandler+1,w
  2093  0116  1903               	btfsc	3,2
  2094  0117  2919               	goto	u12_21
  2095  0118  291A               	goto	u12_20
  2096  0119                     u12_21:	
  2097  0119  291F               	goto	i1l108
  2098  011A                     u12_20:	
  2099  011A                     i1l938:	
  2100                           
  2101                           ;mcc_generated_files/tmr1.c: 173:     {;mcc_generated_files/tmr1.c: 174:         TMR1_In
      +                          terruptHandler();
  2102  011A  0821               	movf	_TMR1_InterruptHandler+1,w
  2103  011B  008A               	movwf	10
  2104  011C  0820               	movf	_TMR1_InterruptHandler,w
  2105  011D  000A               	callw
  2106  011E  3181               	pagesel	$
  2107  011F                     i1l108:	
  2108  011F  0008               	return
  2109  0120                     __end_of_TMR1_CallBack:	
  2110                           
  2111                           	psect	text13
  2112  0139                     __ptext13:	
  2113 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  2114 ;; Defined at:
  2115 ;;		line 182 in file "mcc_generated_files/tmr1.c"
  2116 ;; Parameters:    Size  Location     Type
  2117 ;;		None
  2118 ;; Auto vars:     Size  Location     Type
  2119 ;;		None
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  1    wreg      void 
  2122 ;; Registers used:
  2123 ;;		None
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMMON   BANK0   BANK1
  2129 ;;      Params:         0       0       0
  2130 ;;      Locals:         0       0       0
  2131 ;;      Temps:          0       0       0
  2132 ;;      Totals:         0       0       0
  2133 ;;Total ram usage:        0 bytes
  2134 ;; Hardware stack levels used:    1
  2135 ;; This function calls:
  2136 ;;		Nothing
  2137 ;; This function is called by:
  2138 ;;		_TMR1_Initialize
  2139 ;;		_TMR1_CallBack
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143                           
  2144                           ;psect for function _TMR1_DefaultInterruptHandler
  2145  0139                     _TMR1_DefaultInterruptHandler:	
  2146  0139                     i1l114:	
  2147                           ;incstack = 0
  2148                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  2149                           
  2150  0139  0008               	return
  2151  013A                     __end_of_TMR1_DefaultInterruptHandler:	
  2152                           
  2153                           	psect	text14
  2154  012D                     __ptext14:	
  2155 ;; *************** function _secondsTick *****************
  2156 ;; Defined at:
  2157 ;;		line 173 in file "main.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;		None
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;		None
  2162 ;; Return value:  Size  Location     Type
  2163 ;;                  1    wreg      void 
  2164 ;; Registers used:
  2165 ;;		wreg
  2166 ;; Tracked objects:
  2167 ;;		On entry : 0/0
  2168 ;;		On exit  : 0/0
  2169 ;;		Unchanged: 0/0
  2170 ;; Data sizes:     COMMON   BANK0   BANK1
  2171 ;;      Params:         0       0       0
  2172 ;;      Locals:         0       0       0
  2173 ;;      Temps:          0       0       0
  2174 ;;      Totals:         0       0       0
  2175 ;;Total ram usage:        0 bytes
  2176 ;; Hardware stack levels used:    1
  2177 ;; This function calls:
  2178 ;;		Nothing
  2179 ;; This function is called by:
  2180 ;;		_main
  2181 ;;		_TMR1_CallBack
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           
  2185                           
  2186                           ;psect for function _secondsTick
  2187  012D                     _secondsTick:	
  2188  012D                     i1l904:	
  2189                           ;incstack = 0
  2190                           ; Regs used in _secondsTick: [wreg]
  2191                           
  2192                           
  2193                           ;main.c: 175:     currentSecondsTick++;
  2194  012D  3001               	movlw	1
  2195  012E  07F2               	addwf	_currentSecondsTick,f	;volatile
  2196  012F  3000               	movlw	0
  2197  0130  3DF3               	addwfc	_currentSecondsTick+1,f	;volatile
  2198  0131                     i1l202:	
  2199  0131  0008               	return
  2200  0132                     __end_of_secondsTick:	
  2201  007E                     btemp	set	126	;btemp
  2202  007E                     int$flags	set	126
  2203  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      12
    BANK0            80      2       4
    BANK1            32      0       0

Pointer List with Targets:

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> secondsTick(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> secondsTick(), Absolute function(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_setState
    _TMR1_Initialize->_TMR1_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     393
                                              0 BANK0      2     2      0
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
                           _setState
 ---------------------------------------------------------------------------------
 (1) _setState                                             3     3      0      45
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0     240
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     240
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                        _secondsTick *
 ---------------------------------------------------------------------------------
 (7) _secondsTick                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize
   _TMR1_SetInterruptHandler
   _TMR1_StartTimer
   _setState

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _secondsTick *
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      10       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2       4       6        5.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      10       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Aug 11 23:15:13 2020

                             __CFG_CP$OFF 0000                                        l22 0126  
                                      l25 0135                                        l19 0105  
                                      l46 00E7                                        l81 0138  
                                      l78 00D0                                        u30 0081  
                                      u31 0080                                       l111 012C  
                                     l160 0036                                       l163 0049  
                                     l180 0082                                       l182 0084  
                                     l191 0090                                       l159 0062  
                                     l168 0061                                       l193 0092  
                                     l177 00B8                                       l186 008C  
                                     l196 009A                                       l188 008E  
                                     l198 009C                                       l800 0093  
                                     l740 00DF                                       l732 00D1  
                                     l804 009E                                       l742 00E2  
                                     l734 00D3                                       l902 0127  
                                     l910 00BD                                       l750 0132  
                                     l806 00B4                                       l744 0120  
                                     l736 00D6                                       l920 00CD  
                                     l912 00BF                                       l746 0123  
                                     l738 00DB                                       l914 00C0  
                                     l906 00B9                                       l748 0124  
                                     l916 00C4                                       l908 00BB  
                                     l940 00F9                                       l918 00C6  
                                     l794 007B                                       l788 0136  
                                     l798 0085                                       u200 003A  
                                     u201 0039                                       u210 0044  
                                     u211 0043                                       u220 004D  
                                     u221 004C                                       u230 005C  
                                     u231 005B                                       u215 0040  
                                     u235 0058                           _timer1ReloadVal 007A  
                            __CFG_BORV$LO 0000                              __CFG_LVP$OFF 0000  
                                    l1030 002E                                      l1104 006B  
                                    l1040 0052                                      l1032 0031  
                                    l1024 0022                                      l1106 00A6  
                                    l1042 005C                                      l1034 003A  
                                    l1026 0025                                      l1036 0044  
                                    l1028 0026                                      l1038 004D  
                                    l1046 0062                                      _LATA 010C  
                                    i1l92 00F8                                      _WPUA 020C  
                            __CFG_WRT$OFF 0000                                      _main 0022  
                                    btemp 007E                             __CFG_BOREN$ON 0000  
                                    start 0019                ??_TMR1_SetInterruptHandler 0079  
                           __CFG_MCLRE$ON 0000            __size_of_OSCILLATOR_Initialize 0007  
           __end_of_OSCILLATOR_Initialize 0127                                     ?_main 0075  
                           __CFG_WDTE$OFF 0000                           _TMR1_StartTimer 0136  
                                   _T1CON 0018                                     i1l104 0112  
                                   i1l202 0131                                     i1l114 0139  
                                   i1l131 0017                                     i1l108 011F  
                                   i1l904 012D                                     i1l930 00F2  
                                   i1l922 00E8                                     i1l924 00ED  
                                   i1l932 00F4                                     i1l934 00F6  
                                   i1l926 00EE                                     i1l942 0106  
                                   i1l950 000A                                     i1l936 0113  
                                   i1l928 00F0                                     i1l944 0108  
                                   i1l952 000F                                     i1l938 011A  
                                   i1l954 0014                                     i1l948 0006  
                                   u11_20 00ED                                     u11_21 00EC  
                                   u12_20 011A                                     u12_21 0119  
                                   u13_20 000A                                     u13_21 0009  
                                   u14_20 000F                                     u14_21 000E  
                                   u15_20 0014                                     u15_21 0013  
                                   _TMR1H 0017                                     _TMR1L 0016  
                                   _TRISA 008C                          __end_of_TMR1_ISR 0113  
                          _WDT_Initialize 0132                   __end_of_TMR1_Initialize 00D1  
                                   pclath 000A                                     status 0003  
                                   wtemp0 007E                           _TMR1_WriteTimer 00E8  
                         __initialization 001A                              __end_of_main 007A  
             ?_INTERRUPT_InterruptManager 0075                                    ??_main 0022  
                          __CFG_PLLEN$OFF 0000                              ?_secondsTick 0075  
                  __end_of_WDT_Initialize 0136                                    _APFCON 011D  
                                  _ANSELA 018C                                    _BORCON 0116  
                                  _T1GCON 0019                   TMR1_WriteTimer@timerVal 0075  
                                  _ODCONA 028C                                    _INLVLA 038C  
                                  _OSCCON 0099                                    _WDTCON 0097  
                          __CFG_PWRTE$OFF 0000      __end_of_TMR1_DefaultInterruptHandler 013A  
   __size_of_TMR1_DefaultInterruptHandler 0001              _TMR1_DefaultInterruptHandler 0139  
                 __end_of_TMR1_StartTimer 0139                            __CFG_STVREN$ON 0000  
                        __end_of_setState 00B9                           ?_WDT_Initialize 0075  
TMR1_SetInterruptHandler@InterruptHandler 0077                   __end_of_TMR1_WriteTimer 00F9  
                   __end_of_TMR1_CallBack 0120                          ?_TMR1_Initialize 0075  
                       _SYSTEM_Initialize 00F9                   __end_of__initialization 001F  
                      ?_SYSTEM_Initialize 0075                            __pcstackCOMMON 0075  
                     ??_SYSTEM_Initialize 0079                                 ?_TMR1_ISR 0075  
           ?_TMR1_DefaultInterruptHandler 0075                            _OPTION_REGbits 0095  
               __end_of_SYSTEM_Initialize 0106                                __pnvCOMMON 007A  
                              __pmaintext 0022                          ?_TMR1_StartTimer 0075  
                              ??_TMR1_ISR 0077                                __pintentry 0004  
                                 _OSCTUNE 0098                                   _SLRCONA 030C  
                    __size_of_secondsTick 0005                          ?_TMR1_WriteTimer 0075  
                               ?_setState 0075                                   __ptext1 007A  
                                 __ptext2 0136                                   __ptext3 00F9  
                                 __ptext4 0132                                   __ptext5 00B9  
                                 __ptext6 0127                                   __ptext7 00D1  
                                 __ptext8 0120            ??_TMR1_DefaultInterruptHandler 0075  
                               _T1CONbits 0018                     _OSCILLATOR_Initialize 0120  
       __size_of_TMR1_SetInterruptHandler 0006                  ??_PIN_MANAGER_Initialize 0077  
               ?_TMR1_SetInterruptHandler 0077                __size_of_SYSTEM_Initialize 000D  
                    end_of_initialization 001F                                ??_setState 0077  
                        ??_WDT_Initialize 0077                                 _PORTAbits 000C  
                        __CFG_FOSC$INTOSC 0000                         __size_of_TMR1_ISR 000D  
                  ?_OSCILLATOR_Initialize 0075                       start_initialization 001A  
         __size_of_PIN_MANAGER_Initialize 0017                          __CFG_LPBOREN$OFF 0000  
                __size_of_TMR1_Initialize 0018                    __size_of_TMR1_CallBack 000D  
                             __pbssCOMMON 0070                                 ___latbits 0000  
                           __pcstackBANK0 0022                          setState@newState 0079  
                            _currentState 0074                                 __pnvBANK0 0020  
                  _PIN_MANAGER_Initialize 00D1          __end_of_TMR1_SetInterruptHandler 012D  
                       __size_of_setState 003F              ??_INTERRUPT_InterruptManager 0077  
                __size_of_TMR1_StartTimer 0003                             ??_secondsTick 0075  
                           _TMR1_CallBack 0113                                  _LATAbits 010C  
                                _PIE1bits 0091                  __size_of_TMR1_WriteTimer 0011  
     __size_of_INTERRUPT_InterruptManager 0015                                  _PIR1bits 0011  
                                _TMR1_ISR 0106                         ??_TMR1_Initialize 0079  
                      _currentSecondsTick 0072                       __end_of_secondsTick 0132  
                          ?_TMR1_CallBack 0075                   ??_OSCILLATOR_Initialize 0077  
                _TMR1_SetInterruptHandler 0127                     _TMR1_InterruptHandler 0020  
                                __ptext10 0106                                  __ptext11 00E8  
                                __ptext12 0113                                  __ptext13 0139  
                              _T1GCONbits 0019                                  __ptext14 012D  
                       ??_TMR1_StartTimer 0077                             __size_of_main 0058  
                                _setState 007A                       _demandedSecondsTick 0070  
                                int$flags 007E        __end_of_INTERRUPT_InterruptManager 0019  
              _INTERRUPT_InterruptManager 0004                         ??_TMR1_WriteTimer 0077  
                              _INTCONbits 000B                               _secondsTick 012D  
                         ??_TMR1_CallBack 0075                   __size_of_WDT_Initialize 0004  
                                intlevel1 0000                   ?_PIN_MANAGER_Initialize 0075  
                       __CFG_CLKOUTEN$OFF 0000            __end_of_PIN_MANAGER_Initialize 00E8  
                         _TMR1_Initialize 00B9  
