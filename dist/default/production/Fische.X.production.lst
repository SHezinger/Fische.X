

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Jan 28 10:23:15 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	12LF1571
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 2.20
    36                           ; Generated 12/02/2020 GMT
    37                           ; 
    38                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC12LF1571 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  008C                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0095                     	;# 
    99  0096                     	;# 
   100  0097                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009A                     	;# 
   104  009B                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  010C                     	;# 
   111  0111                     	;# 
   112  0112                     	;# 
   113  0115                     	;# 
   114  0116                     	;# 
   115  0117                     	;# 
   116  0118                     	;# 
   117  0119                     	;# 
   118  011D                     	;# 
   119  011D                     	;# 
   120  018C                     	;# 
   121  0191                     	;# 
   122  0191                     	;# 
   123  0192                     	;# 
   124  0193                     	;# 
   125  0193                     	;# 
   126  0194                     	;# 
   127  0195                     	;# 
   128  0196                     	;# 
   129  020C                     	;# 
   130  028C                     	;# 
   131  030C                     	;# 
   132  038C                     	;# 
   133  0391                     	;# 
   134  0392                     	;# 
   135  0393                     	;# 
   136  0691                     	;# 
   137  0692                     	;# 
   138  0693                     	;# 
   139  0694                     	;# 
   140  0695                     	;# 
   141  0D8E                     	;# 
   142  0D8F                     	;# 
   143  0D90                     	;# 
   144  0D91                     	;# 
   145  0D91                     	;# 
   146  0D92                     	;# 
   147  0D93                     	;# 
   148  0D93                     	;# 
   149  0D94                     	;# 
   150  0D95                     	;# 
   151  0D95                     	;# 
   152  0D96                     	;# 
   153  0D97                     	;# 
   154  0D97                     	;# 
   155  0D98                     	;# 
   156  0D99                     	;# 
   157  0D99                     	;# 
   158  0D9A                     	;# 
   159  0D9B                     	;# 
   160  0D9C                     	;# 
   161  0D9C                     	;# 
   162  0D9D                     	;# 
   163  0D9D                     	;# 
   164  0D9E                     	;# 
   165  0D9F                     	;# 
   166  0DA0                     	;# 
   167  0DA1                     	;# 
   168  0DA1                     	;# 
   169  0DA2                     	;# 
   170  0DA3                     	;# 
   171  0DA3                     	;# 
   172  0DA4                     	;# 
   173  0DA5                     	;# 
   174  0DA5                     	;# 
   175  0DA6                     	;# 
   176  0DA7                     	;# 
   177  0DA7                     	;# 
   178  0DA8                     	;# 
   179  0DA9                     	;# 
   180  0DA9                     	;# 
   181  0DAA                     	;# 
   182  0DAB                     	;# 
   183  0DAC                     	;# 
   184  0DAC                     	;# 
   185  0DAD                     	;# 
   186  0DAD                     	;# 
   187  0DAE                     	;# 
   188  0DAF                     	;# 
   189  0DB0                     	;# 
   190  0DB1                     	;# 
   191  0DB1                     	;# 
   192  0DB2                     	;# 
   193  0DB3                     	;# 
   194  0DB3                     	;# 
   195  0DB4                     	;# 
   196  0DB5                     	;# 
   197  0DB5                     	;# 
   198  0DB6                     	;# 
   199  0DB7                     	;# 
   200  0DB7                     	;# 
   201  0DB8                     	;# 
   202  0DB9                     	;# 
   203  0DB9                     	;# 
   204  0DBA                     	;# 
   205  0DBB                     	;# 
   206  0DBC                     	;# 
   207  0DBC                     	;# 
   208  0DBD                     	;# 
   209  0DBD                     	;# 
   210  0DBE                     	;# 
   211  0DBF                     	;# 
   212  0DC0                     	;# 
   213  0FE4                     	;# 
   214  0FE5                     	;# 
   215  0FE6                     	;# 
   216  0FE7                     	;# 
   217  0FE8                     	;# 
   218  0FE8                     	;# 
   219  0FE9                     	;# 
   220  0FEA                     	;# 
   221  0FEA                     	;# 
   222  0FEB                     	;# 
   223  0FED                     	;# 
   224  0FEE                     	;# 
   225  0FEE                     	;# 
   226  0FEF                     	;# 
   227  0000                     	;# 
   228  0001                     	;# 
   229  0002                     	;# 
   230  0003                     	;# 
   231  0004                     	;# 
   232  0005                     	;# 
   233  0006                     	;# 
   234  0007                     	;# 
   235  0008                     	;# 
   236  0009                     	;# 
   237  000A                     	;# 
   238  000B                     	;# 
   239  000C                     	;# 
   240  0011                     	;# 
   241  0012                     	;# 
   242  0013                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  008C                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0095                     	;# 
   257  0096                     	;# 
   258  0097                     	;# 
   259  0098                     	;# 
   260  0099                     	;# 
   261  009A                     	;# 
   262  009B                     	;# 
   263  009B                     	;# 
   264  009C                     	;# 
   265  009D                     	;# 
   266  009E                     	;# 
   267  009F                     	;# 
   268  010C                     	;# 
   269  0111                     	;# 
   270  0112                     	;# 
   271  0115                     	;# 
   272  0116                     	;# 
   273  0117                     	;# 
   274  0118                     	;# 
   275  0119                     	;# 
   276  011D                     	;# 
   277  011D                     	;# 
   278  018C                     	;# 
   279  0191                     	;# 
   280  0191                     	;# 
   281  0192                     	;# 
   282  0193                     	;# 
   283  0193                     	;# 
   284  0194                     	;# 
   285  0195                     	;# 
   286  0196                     	;# 
   287  020C                     	;# 
   288  028C                     	;# 
   289  030C                     	;# 
   290  038C                     	;# 
   291  0391                     	;# 
   292  0392                     	;# 
   293  0393                     	;# 
   294  0691                     	;# 
   295  0692                     	;# 
   296  0693                     	;# 
   297  0694                     	;# 
   298  0695                     	;# 
   299  0D8E                     	;# 
   300  0D8F                     	;# 
   301  0D90                     	;# 
   302  0D91                     	;# 
   303  0D91                     	;# 
   304  0D92                     	;# 
   305  0D93                     	;# 
   306  0D93                     	;# 
   307  0D94                     	;# 
   308  0D95                     	;# 
   309  0D95                     	;# 
   310  0D96                     	;# 
   311  0D97                     	;# 
   312  0D97                     	;# 
   313  0D98                     	;# 
   314  0D99                     	;# 
   315  0D99                     	;# 
   316  0D9A                     	;# 
   317  0D9B                     	;# 
   318  0D9C                     	;# 
   319  0D9C                     	;# 
   320  0D9D                     	;# 
   321  0D9D                     	;# 
   322  0D9E                     	;# 
   323  0D9F                     	;# 
   324  0DA0                     	;# 
   325  0DA1                     	;# 
   326  0DA1                     	;# 
   327  0DA2                     	;# 
   328  0DA3                     	;# 
   329  0DA3                     	;# 
   330  0DA4                     	;# 
   331  0DA5                     	;# 
   332  0DA5                     	;# 
   333  0DA6                     	;# 
   334  0DA7                     	;# 
   335  0DA7                     	;# 
   336  0DA8                     	;# 
   337  0DA9                     	;# 
   338  0DA9                     	;# 
   339  0DAA                     	;# 
   340  0DAB                     	;# 
   341  0DAC                     	;# 
   342  0DAC                     	;# 
   343  0DAD                     	;# 
   344  0DAD                     	;# 
   345  0DAE                     	;# 
   346  0DAF                     	;# 
   347  0DB0                     	;# 
   348  0DB1                     	;# 
   349  0DB1                     	;# 
   350  0DB2                     	;# 
   351  0DB3                     	;# 
   352  0DB3                     	;# 
   353  0DB4                     	;# 
   354  0DB5                     	;# 
   355  0DB5                     	;# 
   356  0DB6                     	;# 
   357  0DB7                     	;# 
   358  0DB7                     	;# 
   359  0DB8                     	;# 
   360  0DB9                     	;# 
   361  0DB9                     	;# 
   362  0DBA                     	;# 
   363  0DBB                     	;# 
   364  0DBC                     	;# 
   365  0DBC                     	;# 
   366  0DBD                     	;# 
   367  0DBD                     	;# 
   368  0DBE                     	;# 
   369  0DBF                     	;# 
   370  0DC0                     	;# 
   371  0FE4                     	;# 
   372  0FE5                     	;# 
   373  0FE6                     	;# 
   374  0FE7                     	;# 
   375  0FE8                     	;# 
   376  0FE8                     	;# 
   377  0FE9                     	;# 
   378  0FEA                     	;# 
   379  0FEA                     	;# 
   380  0FEB                     	;# 
   381  0FED                     	;# 
   382  0FEE                     	;# 
   383  0FEE                     	;# 
   384  0FEF                     	;# 
   385  0000                     	;# 
   386  0001                     	;# 
   387  0002                     	;# 
   388  0003                     	;# 
   389  0004                     	;# 
   390  0005                     	;# 
   391  0006                     	;# 
   392  0007                     	;# 
   393  0008                     	;# 
   394  0009                     	;# 
   395  000A                     	;# 
   396  000B                     	;# 
   397  000C                     	;# 
   398  0011                     	;# 
   399  0012                     	;# 
   400  0013                     	;# 
   401  0015                     	;# 
   402  0016                     	;# 
   403  0016                     	;# 
   404  0017                     	;# 
   405  0018                     	;# 
   406  0019                     	;# 
   407  001A                     	;# 
   408  001B                     	;# 
   409  001C                     	;# 
   410  008C                     	;# 
   411  0091                     	;# 
   412  0092                     	;# 
   413  0093                     	;# 
   414  0095                     	;# 
   415  0096                     	;# 
   416  0097                     	;# 
   417  0098                     	;# 
   418  0099                     	;# 
   419  009A                     	;# 
   420  009B                     	;# 
   421  009B                     	;# 
   422  009C                     	;# 
   423  009D                     	;# 
   424  009E                     	;# 
   425  009F                     	;# 
   426  010C                     	;# 
   427  0111                     	;# 
   428  0112                     	;# 
   429  0115                     	;# 
   430  0116                     	;# 
   431  0117                     	;# 
   432  0118                     	;# 
   433  0119                     	;# 
   434  011D                     	;# 
   435  011D                     	;# 
   436  018C                     	;# 
   437  0191                     	;# 
   438  0191                     	;# 
   439  0192                     	;# 
   440  0193                     	;# 
   441  0193                     	;# 
   442  0194                     	;# 
   443  0195                     	;# 
   444  0196                     	;# 
   445  020C                     	;# 
   446  028C                     	;# 
   447  030C                     	;# 
   448  038C                     	;# 
   449  0391                     	;# 
   450  0392                     	;# 
   451  0393                     	;# 
   452  0691                     	;# 
   453  0692                     	;# 
   454  0693                     	;# 
   455  0694                     	;# 
   456  0695                     	;# 
   457  0D8E                     	;# 
   458  0D8F                     	;# 
   459  0D90                     	;# 
   460  0D91                     	;# 
   461  0D91                     	;# 
   462  0D92                     	;# 
   463  0D93                     	;# 
   464  0D93                     	;# 
   465  0D94                     	;# 
   466  0D95                     	;# 
   467  0D95                     	;# 
   468  0D96                     	;# 
   469  0D97                     	;# 
   470  0D97                     	;# 
   471  0D98                     	;# 
   472  0D99                     	;# 
   473  0D99                     	;# 
   474  0D9A                     	;# 
   475  0D9B                     	;# 
   476  0D9C                     	;# 
   477  0D9C                     	;# 
   478  0D9D                     	;# 
   479  0D9D                     	;# 
   480  0D9E                     	;# 
   481  0D9F                     	;# 
   482  0DA0                     	;# 
   483  0DA1                     	;# 
   484  0DA1                     	;# 
   485  0DA2                     	;# 
   486  0DA3                     	;# 
   487  0DA3                     	;# 
   488  0DA4                     	;# 
   489  0DA5                     	;# 
   490  0DA5                     	;# 
   491  0DA6                     	;# 
   492  0DA7                     	;# 
   493  0DA7                     	;# 
   494  0DA8                     	;# 
   495  0DA9                     	;# 
   496  0DA9                     	;# 
   497  0DAA                     	;# 
   498  0DAB                     	;# 
   499  0DAC                     	;# 
   500  0DAC                     	;# 
   501  0DAD                     	;# 
   502  0DAD                     	;# 
   503  0DAE                     	;# 
   504  0DAF                     	;# 
   505  0DB0                     	;# 
   506  0DB1                     	;# 
   507  0DB1                     	;# 
   508  0DB2                     	;# 
   509  0DB3                     	;# 
   510  0DB3                     	;# 
   511  0DB4                     	;# 
   512  0DB5                     	;# 
   513  0DB5                     	;# 
   514  0DB6                     	;# 
   515  0DB7                     	;# 
   516  0DB7                     	;# 
   517  0DB8                     	;# 
   518  0DB9                     	;# 
   519  0DB9                     	;# 
   520  0DBA                     	;# 
   521  0DBB                     	;# 
   522  0DBC                     	;# 
   523  0DBC                     	;# 
   524  0DBD                     	;# 
   525  0DBD                     	;# 
   526  0DBE                     	;# 
   527  0DBF                     	;# 
   528  0DC0                     	;# 
   529  0FE4                     	;# 
   530  0FE5                     	;# 
   531  0FE6                     	;# 
   532  0FE7                     	;# 
   533  0FE8                     	;# 
   534  0FE8                     	;# 
   535  0FE9                     	;# 
   536  0FEA                     	;# 
   537  0FEA                     	;# 
   538  0FEB                     	;# 
   539  0FED                     	;# 
   540  0FEE                     	;# 
   541  0FEE                     	;# 
   542  0FEF                     	;# 
   543  0000                     	;# 
   544  0001                     	;# 
   545  0002                     	;# 
   546  0003                     	;# 
   547  0004                     	;# 
   548  0005                     	;# 
   549  0006                     	;# 
   550  0007                     	;# 
   551  0008                     	;# 
   552  0009                     	;# 
   553  000A                     	;# 
   554  000B                     	;# 
   555  000C                     	;# 
   556  0011                     	;# 
   557  0012                     	;# 
   558  0013                     	;# 
   559  0015                     	;# 
   560  0016                     	;# 
   561  0016                     	;# 
   562  0017                     	;# 
   563  0018                     	;# 
   564  0019                     	;# 
   565  001A                     	;# 
   566  001B                     	;# 
   567  001C                     	;# 
   568  008C                     	;# 
   569  0091                     	;# 
   570  0092                     	;# 
   571  0093                     	;# 
   572  0095                     	;# 
   573  0096                     	;# 
   574  0097                     	;# 
   575  0098                     	;# 
   576  0099                     	;# 
   577  009A                     	;# 
   578  009B                     	;# 
   579  009B                     	;# 
   580  009C                     	;# 
   581  009D                     	;# 
   582  009E                     	;# 
   583  009F                     	;# 
   584  010C                     	;# 
   585  0111                     	;# 
   586  0112                     	;# 
   587  0115                     	;# 
   588  0116                     	;# 
   589  0117                     	;# 
   590  0118                     	;# 
   591  0119                     	;# 
   592  011D                     	;# 
   593  011D                     	;# 
   594  018C                     	;# 
   595  0191                     	;# 
   596  0191                     	;# 
   597  0192                     	;# 
   598  0193                     	;# 
   599  0193                     	;# 
   600  0194                     	;# 
   601  0195                     	;# 
   602  0196                     	;# 
   603  020C                     	;# 
   604  028C                     	;# 
   605  030C                     	;# 
   606  038C                     	;# 
   607  0391                     	;# 
   608  0392                     	;# 
   609  0393                     	;# 
   610  0691                     	;# 
   611  0692                     	;# 
   612  0693                     	;# 
   613  0694                     	;# 
   614  0695                     	;# 
   615  0D8E                     	;# 
   616  0D8F                     	;# 
   617  0D90                     	;# 
   618  0D91                     	;# 
   619  0D91                     	;# 
   620  0D92                     	;# 
   621  0D93                     	;# 
   622  0D93                     	;# 
   623  0D94                     	;# 
   624  0D95                     	;# 
   625  0D95                     	;# 
   626  0D96                     	;# 
   627  0D97                     	;# 
   628  0D97                     	;# 
   629  0D98                     	;# 
   630  0D99                     	;# 
   631  0D99                     	;# 
   632  0D9A                     	;# 
   633  0D9B                     	;# 
   634  0D9C                     	;# 
   635  0D9C                     	;# 
   636  0D9D                     	;# 
   637  0D9D                     	;# 
   638  0D9E                     	;# 
   639  0D9F                     	;# 
   640  0DA0                     	;# 
   641  0DA1                     	;# 
   642  0DA1                     	;# 
   643  0DA2                     	;# 
   644  0DA3                     	;# 
   645  0DA3                     	;# 
   646  0DA4                     	;# 
   647  0DA5                     	;# 
   648  0DA5                     	;# 
   649  0DA6                     	;# 
   650  0DA7                     	;# 
   651  0DA7                     	;# 
   652  0DA8                     	;# 
   653  0DA9                     	;# 
   654  0DA9                     	;# 
   655  0DAA                     	;# 
   656  0DAB                     	;# 
   657  0DAC                     	;# 
   658  0DAC                     	;# 
   659  0DAD                     	;# 
   660  0DAD                     	;# 
   661  0DAE                     	;# 
   662  0DAF                     	;# 
   663  0DB0                     	;# 
   664  0DB1                     	;# 
   665  0DB1                     	;# 
   666  0DB2                     	;# 
   667  0DB3                     	;# 
   668  0DB3                     	;# 
   669  0DB4                     	;# 
   670  0DB5                     	;# 
   671  0DB5                     	;# 
   672  0DB6                     	;# 
   673  0DB7                     	;# 
   674  0DB7                     	;# 
   675  0DB8                     	;# 
   676  0DB9                     	;# 
   677  0DB9                     	;# 
   678  0DBA                     	;# 
   679  0DBB                     	;# 
   680  0DBC                     	;# 
   681  0DBC                     	;# 
   682  0DBD                     	;# 
   683  0DBD                     	;# 
   684  0DBE                     	;# 
   685  0DBF                     	;# 
   686  0DC0                     	;# 
   687  0FE4                     	;# 
   688  0FE5                     	;# 
   689  0FE6                     	;# 
   690  0FE7                     	;# 
   691  0FE8                     	;# 
   692  0FE8                     	;# 
   693  0FE9                     	;# 
   694  0FEA                     	;# 
   695  0FEA                     	;# 
   696  0FEB                     	;# 
   697  0FED                     	;# 
   698  0FEE                     	;# 
   699  0FEE                     	;# 
   700  0FEF                     	;# 
   701  0000                     	;# 
   702  0001                     	;# 
   703  0002                     	;# 
   704  0003                     	;# 
   705  0004                     	;# 
   706  0005                     	;# 
   707  0006                     	;# 
   708  0007                     	;# 
   709  0008                     	;# 
   710  0009                     	;# 
   711  000A                     	;# 
   712  000B                     	;# 
   713  000C                     	;# 
   714  0011                     	;# 
   715  0012                     	;# 
   716  0013                     	;# 
   717  0015                     	;# 
   718  0016                     	;# 
   719  0016                     	;# 
   720  0017                     	;# 
   721  0018                     	;# 
   722  0019                     	;# 
   723  001A                     	;# 
   724  001B                     	;# 
   725  001C                     	;# 
   726  008C                     	;# 
   727  0091                     	;# 
   728  0092                     	;# 
   729  0093                     	;# 
   730  0095                     	;# 
   731  0096                     	;# 
   732  0097                     	;# 
   733  0098                     	;# 
   734  0099                     	;# 
   735  009A                     	;# 
   736  009B                     	;# 
   737  009B                     	;# 
   738  009C                     	;# 
   739  009D                     	;# 
   740  009E                     	;# 
   741  009F                     	;# 
   742  010C                     	;# 
   743  0111                     	;# 
   744  0112                     	;# 
   745  0115                     	;# 
   746  0116                     	;# 
   747  0117                     	;# 
   748  0118                     	;# 
   749  0119                     	;# 
   750  011D                     	;# 
   751  011D                     	;# 
   752  018C                     	;# 
   753  0191                     	;# 
   754  0191                     	;# 
   755  0192                     	;# 
   756  0193                     	;# 
   757  0193                     	;# 
   758  0194                     	;# 
   759  0195                     	;# 
   760  0196                     	;# 
   761  020C                     	;# 
   762  028C                     	;# 
   763  030C                     	;# 
   764  038C                     	;# 
   765  0391                     	;# 
   766  0392                     	;# 
   767  0393                     	;# 
   768  0691                     	;# 
   769  0692                     	;# 
   770  0693                     	;# 
   771  0694                     	;# 
   772  0695                     	;# 
   773  0D8E                     	;# 
   774  0D8F                     	;# 
   775  0D90                     	;# 
   776  0D91                     	;# 
   777  0D91                     	;# 
   778  0D92                     	;# 
   779  0D93                     	;# 
   780  0D93                     	;# 
   781  0D94                     	;# 
   782  0D95                     	;# 
   783  0D95                     	;# 
   784  0D96                     	;# 
   785  0D97                     	;# 
   786  0D97                     	;# 
   787  0D98                     	;# 
   788  0D99                     	;# 
   789  0D99                     	;# 
   790  0D9A                     	;# 
   791  0D9B                     	;# 
   792  0D9C                     	;# 
   793  0D9C                     	;# 
   794  0D9D                     	;# 
   795  0D9D                     	;# 
   796  0D9E                     	;# 
   797  0D9F                     	;# 
   798  0DA0                     	;# 
   799  0DA1                     	;# 
   800  0DA1                     	;# 
   801  0DA2                     	;# 
   802  0DA3                     	;# 
   803  0DA3                     	;# 
   804  0DA4                     	;# 
   805  0DA5                     	;# 
   806  0DA5                     	;# 
   807  0DA6                     	;# 
   808  0DA7                     	;# 
   809  0DA7                     	;# 
   810  0DA8                     	;# 
   811  0DA9                     	;# 
   812  0DA9                     	;# 
   813  0DAA                     	;# 
   814  0DAB                     	;# 
   815  0DAC                     	;# 
   816  0DAC                     	;# 
   817  0DAD                     	;# 
   818  0DAD                     	;# 
   819  0DAE                     	;# 
   820  0DAF                     	;# 
   821  0DB0                     	;# 
   822  0DB1                     	;# 
   823  0DB1                     	;# 
   824  0DB2                     	;# 
   825  0DB3                     	;# 
   826  0DB3                     	;# 
   827  0DB4                     	;# 
   828  0DB5                     	;# 
   829  0DB5                     	;# 
   830  0DB6                     	;# 
   831  0DB7                     	;# 
   832  0DB7                     	;# 
   833  0DB8                     	;# 
   834  0DB9                     	;# 
   835  0DB9                     	;# 
   836  0DBA                     	;# 
   837  0DBB                     	;# 
   838  0DBC                     	;# 
   839  0DBC                     	;# 
   840  0DBD                     	;# 
   841  0DBD                     	;# 
   842  0DBE                     	;# 
   843  0DBF                     	;# 
   844  0DC0                     	;# 
   845  0FE4                     	;# 
   846  0FE5                     	;# 
   847  0FE6                     	;# 
   848  0FE7                     	;# 
   849  0FE8                     	;# 
   850  0FE8                     	;# 
   851  0FE9                     	;# 
   852  0FEA                     	;# 
   853  0FEA                     	;# 
   854  0FEB                     	;# 
   855  0FED                     	;# 
   856  0FEE                     	;# 
   857  0FEE                     	;# 
   858  0FEF                     	;# 
   859  0000                     	;# 
   860  0001                     	;# 
   861  0002                     	;# 
   862  0003                     	;# 
   863  0004                     	;# 
   864  0005                     	;# 
   865  0006                     	;# 
   866  0007                     	;# 
   867  0008                     	;# 
   868  0009                     	;# 
   869  000A                     	;# 
   870  000B                     	;# 
   871  000C                     	;# 
   872  0011                     	;# 
   873  0012                     	;# 
   874  0013                     	;# 
   875  0015                     	;# 
   876  0016                     	;# 
   877  0016                     	;# 
   878  0017                     	;# 
   879  0018                     	;# 
   880  0019                     	;# 
   881  001A                     	;# 
   882  001B                     	;# 
   883  001C                     	;# 
   884  008C                     	;# 
   885  0091                     	;# 
   886  0092                     	;# 
   887  0093                     	;# 
   888  0095                     	;# 
   889  0096                     	;# 
   890  0097                     	;# 
   891  0098                     	;# 
   892  0099                     	;# 
   893  009A                     	;# 
   894  009B                     	;# 
   895  009B                     	;# 
   896  009C                     	;# 
   897  009D                     	;# 
   898  009E                     	;# 
   899  009F                     	;# 
   900  010C                     	;# 
   901  0111                     	;# 
   902  0112                     	;# 
   903  0115                     	;# 
   904  0116                     	;# 
   905  0117                     	;# 
   906  0118                     	;# 
   907  0119                     	;# 
   908  011D                     	;# 
   909  011D                     	;# 
   910  018C                     	;# 
   911  0191                     	;# 
   912  0191                     	;# 
   913  0192                     	;# 
   914  0193                     	;# 
   915  0193                     	;# 
   916  0194                     	;# 
   917  0195                     	;# 
   918  0196                     	;# 
   919  020C                     	;# 
   920  028C                     	;# 
   921  030C                     	;# 
   922  038C                     	;# 
   923  0391                     	;# 
   924  0392                     	;# 
   925  0393                     	;# 
   926  0691                     	;# 
   927  0692                     	;# 
   928  0693                     	;# 
   929  0694                     	;# 
   930  0695                     	;# 
   931  0D8E                     	;# 
   932  0D8F                     	;# 
   933  0D90                     	;# 
   934  0D91                     	;# 
   935  0D91                     	;# 
   936  0D92                     	;# 
   937  0D93                     	;# 
   938  0D93                     	;# 
   939  0D94                     	;# 
   940  0D95                     	;# 
   941  0D95                     	;# 
   942  0D96                     	;# 
   943  0D97                     	;# 
   944  0D97                     	;# 
   945  0D98                     	;# 
   946  0D99                     	;# 
   947  0D99                     	;# 
   948  0D9A                     	;# 
   949  0D9B                     	;# 
   950  0D9C                     	;# 
   951  0D9C                     	;# 
   952  0D9D                     	;# 
   953  0D9D                     	;# 
   954  0D9E                     	;# 
   955  0D9F                     	;# 
   956  0DA0                     	;# 
   957  0DA1                     	;# 
   958  0DA1                     	;# 
   959  0DA2                     	;# 
   960  0DA3                     	;# 
   961  0DA3                     	;# 
   962  0DA4                     	;# 
   963  0DA5                     	;# 
   964  0DA5                     	;# 
   965  0DA6                     	;# 
   966  0DA7                     	;# 
   967  0DA7                     	;# 
   968  0DA8                     	;# 
   969  0DA9                     	;# 
   970  0DA9                     	;# 
   971  0DAA                     	;# 
   972  0DAB                     	;# 
   973  0DAC                     	;# 
   974  0DAC                     	;# 
   975  0DAD                     	;# 
   976  0DAD                     	;# 
   977  0DAE                     	;# 
   978  0DAF                     	;# 
   979  0DB0                     	;# 
   980  0DB1                     	;# 
   981  0DB1                     	;# 
   982  0DB2                     	;# 
   983  0DB3                     	;# 
   984  0DB3                     	;# 
   985  0DB4                     	;# 
   986  0DB5                     	;# 
   987  0DB5                     	;# 
   988  0DB6                     	;# 
   989  0DB7                     	;# 
   990  0DB7                     	;# 
   991  0DB8                     	;# 
   992  0DB9                     	;# 
   993  0DB9                     	;# 
   994  0DBA                     	;# 
   995  0DBB                     	;# 
   996  0DBC                     	;# 
   997  0DBC                     	;# 
   998  0DBD                     	;# 
   999  0DBD                     	;# 
  1000  0DBE                     	;# 
  1001  0DBF                     	;# 
  1002  0DC0                     	;# 
  1003  0FE4                     	;# 
  1004  0FE5                     	;# 
  1005  0FE6                     	;# 
  1006  0FE7                     	;# 
  1007  0FE8                     	;# 
  1008  0FE8                     	;# 
  1009  0FE9                     	;# 
  1010  0FEA                     	;# 
  1011  0FEA                     	;# 
  1012  0FEB                     	;# 
  1013  0FED                     	;# 
  1014  0FEE                     	;# 
  1015  0FEE                     	;# 
  1016  0FEF                     	;# 
  1017                           
  1018                           	psect	nvCOMMON
  1019  007A                     __pnvCOMMON:
  1020  007A                     _timer1ReloadVal:
  1021  007A                     	ds	2
  1022                           
  1023                           	psect	nvBANK0
  1024  0020                     __pnvBANK0:
  1025  0020                     _TMR1_InterruptHandler:
  1026  0020                     	ds	2
  1027  0022                     _IOCAF5_InterruptHandler:
  1028  0022                     	ds	2
  1029  000C                     _PORTAbits	set	12
  1030  0019                     _T1GCONbits	set	25
  1031  0018                     _T1CONbits	set	24
  1032  0018                     _T1CON	set	24
  1033  0011                     _PIR1bits	set	17
  1034  0016                     _TMR1L	set	22
  1035  0017                     _TMR1H	set	23
  1036  0019                     _T1GCON	set	25
  1037  000B                     _INTCONbits	set	11
  1038  009D                     _ADCON0bits	set	157
  1039  009D                     _ADCON0	set	157
  1040  009C                     _ADRESH	set	156
  1041  009B                     _ADRESL	set	155
  1042  009F                     _ADCON2	set	159
  1043  009E                     _ADCON1	set	158
  1044  0091                     _PIE1bits	set	145
  1045  0095                     _OPTION_REGbits	set	149
  1046  008C                     _TRISA	set	140
  1047  0097                     _WDTCON	set	151
  1048  0098                     _OSCTUNE	set	152
  1049  0099                     _OSCCON	set	153
  1050  010C                     _LATAbits	set	268
  1051  011D                     _APFCON	set	285
  1052  010C                     _LATA	set	268
  1053  0116                     _BORCON	set	278
  1054  018C                     _ANSELA	set	396
  1055  020C                     _WPUA	set	524
  1056  028C                     _ODCONA	set	652
  1057  030C                     _SLRCONA	set	780
  1058  0391                     _IOCAPbits	set	913
  1059  0392                     _IOCANbits	set	914
  1060  0393                     _IOCAFbits	set	915
  1061  038C                     _INLVLA	set	908
  1062                           
  1063                           	psect	cinit
  1064  0027                     start_initialization:	
  1065                           ; #config settings
  1066                           
  1067  0027                     __initialization:
  1068                           
  1069                           ; Clear objects allocated to COMMON
  1070  0027  01F0               	clrf	__pbssCOMMON& (0+127)
  1071  0028  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1072  0029  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1073  002A  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1074  002B  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1075                           
  1076                           ; Clear objects allocated to BANK0
  1077  002C  0020               	movlb	0	; select bank0
  1078  002D  01A4               	clrf	__pbssBANK0& (0+127)
  1079  002E  01A5               	clrf	(__pbssBANK0+1)& (0+127)
  1080  002F                     end_of_initialization:	
  1081                           ;End of C runtime variable initialization code
  1082                           
  1083  002F                     __end_of__initialization:
  1084  002F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1085  0030  0020               	movlb	0
  1086  0031  2832               	ljmp	_main	;jump to C main() function
  1087                           
  1088                           	psect	bssCOMMON
  1089  0070                     __pbssCOMMON:
  1090  0070                     _demandedSecondsTick:
  1091  0070                     	ds	2
  1092  0072                     _currentSecondsTick:
  1093  0072                     	ds	2
  1094  0074                     _currentState:
  1095  0074                     	ds	1
  1096                           
  1097                           	psect	bssBANK0
  1098  0024                     __pbssBANK0:
  1099  0024                     _ADC1_InterruptHandler:
  1100  0024                     	ds	2
  1101                           
  1102                           	psect	cstackCOMMON
  1103  0075                     __pcstackCOMMON:
  1104  0075                     ?_PIN_MANAGER_Initialize:
  1105  0075                     ?_OSCILLATOR_Initialize:	
  1106                           ; 1 bytes @ 0x0
  1107                           
  1108  0075                     ?_WDT_Initialize:	
  1109                           ; 1 bytes @ 0x0
  1110                           
  1111  0075                     ?_ADC1_Initialize:	
  1112                           ; 1 bytes @ 0x0
  1113                           
  1114  0075                     ?_TMR1_Initialize:	
  1115                           ; 1 bytes @ 0x0
  1116                           
  1117  0075                     ?_IOCAF5_DefaultInterruptHandler:	
  1118                           ; 1 bytes @ 0x0
  1119                           
  1120  0075                     ??_IOCAF5_DefaultInterruptHandler:	
  1121                           ; 1 bytes @ 0x0
  1122                           
  1123  0075                     ?_IOCAF5_ISR:	
  1124                           ; 1 bytes @ 0x0
  1125                           
  1126  0075                     ??_IOCAF5_ISR:	
  1127                           ; 1 bytes @ 0x0
  1128                           
  1129  0075                     ?_TMR1_DefaultInterruptHandler:	
  1130                           ; 1 bytes @ 0x0
  1131                           
  1132  0075                     ??_TMR1_DefaultInterruptHandler:	
  1133                           ; 1 bytes @ 0x0
  1134                           
  1135  0075                     ?_TMR1_CallBack:	
  1136                           ; 1 bytes @ 0x0
  1137                           
  1138  0075                     ??_TMR1_CallBack:	
  1139                           ; 1 bytes @ 0x0
  1140                           
  1141  0075                     ?_secondsTick:	
  1142                           ; 1 bytes @ 0x0
  1143                           
  1144  0075                     ??_secondsTick:	
  1145                           ; 1 bytes @ 0x0
  1146                           
  1147  0075                     ?_setState:	
  1148                           ; 1 bytes @ 0x0
  1149                           
  1150  0075                     ?_SYSTEM_Initialize:	
  1151                           ; 1 bytes @ 0x0
  1152                           
  1153  0075                     ?_PIN_MANAGER_IOC:	
  1154                           ; 1 bytes @ 0x0
  1155                           
  1156  0075                     ??_PIN_MANAGER_IOC:	
  1157                           ; 1 bytes @ 0x0
  1158                           
  1159  0075                     ?_TMR1_StartTimer:	
  1160                           ; 1 bytes @ 0x0
  1161                           
  1162  0075                     ?_TMR1_StopTimer:	
  1163                           ; 1 bytes @ 0x0
  1164                           
  1165  0075                     ?_TMR1_WriteTimer:	
  1166                           ; 1 bytes @ 0x0
  1167                           
  1168  0075                     ?_TMR1_ISR:	
  1169                           ; 1 bytes @ 0x0
  1170                           
  1171  0075                     ?_INTERRUPT_InterruptManager:	
  1172                           ; 1 bytes @ 0x0
  1173                           
  1174  0075                     ?_main:	
  1175                           ; 1 bytes @ 0x0
  1176                           
  1177  0075                     TMR1_WriteTimer@timerVal:	
  1178                           ; 1 bytes @ 0x0
  1179                           
  1180                           
  1181                           ; 2 bytes @ 0x0
  1182  0075                     	ds	2
  1183  0077                     ??_OSCILLATOR_Initialize:
  1184  0077                     ??_WDT_Initialize:	
  1185                           ; 1 bytes @ 0x2
  1186                           
  1187  0077                     ??_ADC1_Initialize:	
  1188                           ; 1 bytes @ 0x2
  1189                           
  1190  0077                     ?_IOCAF5_SetInterruptHandler:	
  1191                           ; 1 bytes @ 0x2
  1192                           
  1193  0077                     ?_TMR1_SetInterruptHandler:	
  1194                           ; 1 bytes @ 0x2
  1195                           
  1196  0077                     ??_setState:	
  1197                           ; 1 bytes @ 0x2
  1198                           
  1199  0077                     ??_TMR1_StartTimer:	
  1200                           ; 1 bytes @ 0x2
  1201                           
  1202  0077                     ??_TMR1_StopTimer:	
  1203                           ; 1 bytes @ 0x2
  1204                           
  1205  0077                     ??_TMR1_WriteTimer:	
  1206                           ; 1 bytes @ 0x2
  1207                           
  1208  0077                     ??_TMR1_ISR:	
  1209                           ; 1 bytes @ 0x2
  1210                           
  1211  0077                     ??_INTERRUPT_InterruptManager:	
  1212                           ; 1 bytes @ 0x2
  1213                           
  1214  0077                     IOCAF5_SetInterruptHandler@InterruptHandler:	
  1215                           ; 1 bytes @ 0x2
  1216                           
  1217  0077                     TMR1_SetInterruptHandler@InterruptHandler:	
  1218                           ; 2 bytes @ 0x2
  1219                           
  1220                           
  1221                           ; 2 bytes @ 0x2
  1222  0077                     	ds	2
  1223  0079                     ??_PIN_MANAGER_Initialize:
  1224  0079                     ??_TMR1_Initialize:	
  1225                           ; 1 bytes @ 0x4
  1226                           
  1227  0079                     ??_IOCAF5_SetInterruptHandler:	
  1228                           ; 1 bytes @ 0x4
  1229                           
  1230  0079                     ??_TMR1_SetInterruptHandler:	
  1231                           ; 1 bytes @ 0x4
  1232                           
  1233  0079                     ??_SYSTEM_Initialize:	
  1234                           ; 1 bytes @ 0x4
  1235                           
  1236  0079                     setState@newState:	
  1237                           ; 1 bytes @ 0x4
  1238                           
  1239                           
  1240                           ; 1 bytes @ 0x4
  1241  0079                     	ds	1
  1242                           
  1243                           	psect	cstackBANK0
  1244  0026                     __pcstackBANK0:
  1245  0026                     ??_main:
  1246                           
  1247                           ; 1 bytes @ 0x0
  1248  0026                     	ds	2
  1249                           
  1250                           	psect	maintext
  1251  0032                     __pmaintext:	
  1252 ;;
  1253 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1254 ;;
  1255 ;; *************** function _main *****************
  1256 ;; Defined at:
  1257 ;;		line 66 in file "main.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;		None
  1260 ;; Auto vars:     Size  Location     Type
  1261 ;;		None
  1262 ;; Return value:  Size  Location     Type
  1263 ;;                  1    wreg      void 
  1264 ;; Registers used:
  1265 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1266 ;; Tracked objects:
  1267 ;;		On entry : B1F/0
  1268 ;;		On exit  : 0/0
  1269 ;;		Unchanged: 0/0
  1270 ;; Data sizes:     COMMON   BANK0   BANK1
  1271 ;;      Params:         0       0       0
  1272 ;;      Locals:         0       0       0
  1273 ;;      Temps:          0       2       0
  1274 ;;      Totals:         0       2       0
  1275 ;;Total ram usage:        2 bytes
  1276 ;; Hardware stack levels required when called:    7
  1277 ;; This function calls:
  1278 ;;		_SYSTEM_Initialize
  1279 ;;		_TMR1_SetInterruptHandler
  1280 ;;		_TMR1_StartTimer
  1281 ;;		_TMR1_StopTimer
  1282 ;;		_setState
  1283 ;; This function is called by:
  1284 ;;		Startup code after reset
  1285 ;; This function uses a non-reentrant model
  1286 ;;
  1287                           
  1288                           
  1289                           ;psect for function _main
  1290  0032                     _main:
  1291  0032                     l1240:	
  1292                           ;incstack = 0
  1293                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1294                           
  1295                           
  1296                           ;main.c: 69:     SYSTEM_Initialize();
  1297  0032  3181  2151  3180   	fcall	_SYSTEM_Initialize
  1298                           
  1299                           ;main.c: 71:     TMR1_SetInterruptHandler(secondsTick);
  1300  0035  30AD               	movlw	low _secondsTick
  1301  0036  00F7               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  1302  0037  3001               	movlw	high _secondsTick
  1303  0038  00F8               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  1304  0039  3181  21A1  3180   	fcall	_TMR1_SetInterruptHandler
  1305  003C                     l1242:
  1306                           
  1307                           ;main.c: 77:     (INTCONbits.GIE = 1);
  1308  003C  178B               	bsf	11,7	;volatile
  1309  003D                     l1244:
  1310                           
  1311                           ;main.c: 80:     (INTCONbits.PEIE = 1);
  1312  003D  170B               	bsf	11,6	;volatile
  1313  003E                     l1246:
  1314                           
  1315                           ;main.c: 90:     TMR1_StartTimer();
  1316  003E  3181  21B9  3180   	fcall	_TMR1_StartTimer
  1317  0041                     l1248:
  1318                           
  1319                           ;main.c: 92:     setState(STATE_WAIT_TIME);
  1320  0041  3001               	movlw	1
  1321  0042  3180  20B7  3180   	fcall	_setState
  1322  0045  289F               	goto	l1274
  1323  0046                     l235:	
  1324                           ;main.c: 99:         {;main.c: 100:             case STATE_WAIT_TIME:
  1325                           
  1326                           
  1327                           ;main.c: 101:                 if(PORTAbits.RA5)
  1328  0046  1E8C               	btfss	12,5	;volatile
  1329  0047  2849               	goto	u351
  1330  0048  284A               	goto	u350
  1331  0049                     u351:
  1332  0049  2862               	goto	l1256
  1333  004A                     u350:
  1334  004A                     l1250:
  1335                           
  1336                           ;main.c: 102:                 {;main.c: 103:                     if(currentSecondsTick >
      +                          = demandedSecondsTick)
  1337  004A  0871               	movf	_demandedSecondsTick+1,w
  1338  004B  0273               	subwf	_currentSecondsTick+1,w	;volatile
  1339  004C  1D03               	skipz
  1340  004D  2850               	goto	u365
  1341  004E  0870               	movf	_demandedSecondsTick,w
  1342  004F  0272               	subwf	_currentSecondsTick,w	;volatile
  1343  0050                     u365:
  1344  0050  1C03               	skipc
  1345  0051  2853               	goto	u361
  1346  0052  2854               	goto	u360
  1347  0053                     u361:
  1348  0053  2859               	goto	l237
  1349  0054                     u360:
  1350  0054                     l1252:
  1351                           
  1352                           ;main.c: 104:                     {;main.c: 105:                         setState(STATE_
      +                          OPEN_VALVE);
  1353  0054  3002               	movlw	2
  1354  0055  3180  20B7  3180   	fcall	_setState
  1355                           
  1356                           ;main.c: 106:                     }
  1357  0058  289F               	goto	l1274
  1358  0059                     l237:	
  1359                           ;main.c: 107:                     else if(PORTAbits.RA4)
  1360                           
  1361  0059  1E0C               	btfss	12,4	;volatile
  1362  005A  285C               	goto	u371
  1363  005B  285D               	goto	u370
  1364  005C                     u371:
  1365  005C  289F               	goto	l234
  1366  005D                     u370:
  1367  005D                     l1254:
  1368                           
  1369                           ;main.c: 108:                     {;main.c: 109:                         setState(STATE_
      +                          CLOSE_VALVE);
  1370  005D  3003               	movlw	3
  1371  005E  3180  20B7  3180   	fcall	_setState
  1372  0061  289F               	goto	l1274
  1373  0062                     l1256:
  1374                           
  1375                           ;main.c: 113:                 {;main.c: 114:                     setState(STATE_END);
  1376  0062  3004               	movlw	4
  1377  0063  3180  20B7  3180   	fcall	_setState
  1378  0066  289F               	goto	l1274
  1379  0067                     l242:	
  1380                           ;main.c: 118:             case STATE_OPEN_VALVE:
  1381                           
  1382                           
  1383                           ;main.c: 120:                 if(PORTAbits.RA4 || (currentSecondsTick >= demandedSeconds
      +                          Tick))
  1384  0067  1A0C               	btfsc	12,4	;volatile
  1385  0068  286A               	goto	u381
  1386  0069  286B               	goto	u380
  1387  006A                     u381:
  1388  006A  2875               	goto	l1260
  1389  006B                     u380:
  1390  006B                     l1258:
  1391  006B  0871               	movf	_demandedSecondsTick+1,w
  1392  006C  0273               	subwf	_currentSecondsTick+1,w	;volatile
  1393  006D  1D03               	skipz
  1394  006E  2871               	goto	u395
  1395  006F  0870               	movf	_demandedSecondsTick,w
  1396  0070  0272               	subwf	_currentSecondsTick,w	;volatile
  1397  0071                     u395:
  1398  0071  1C03               	skipc
  1399  0072  2874               	goto	u391
  1400  0073  2875               	goto	u390
  1401  0074                     u391:
  1402  0074  289F               	goto	l234
  1403  0075                     u390:
  1404  0075                     l1260:
  1405                           
  1406                           ;main.c: 121:                 {;main.c: 122:                     setState(STATE_CLOSE_VA
      +                          LVE);
  1407  0075  3003               	movlw	3
  1408  0076  3180  20B7  3180   	fcall	_setState
  1409  0079  289F               	goto	l1274
  1410  007A                     l246:	
  1411                           ;main.c: 126:             case STATE_CLOSE_VALVE:
  1412                           
  1413                           
  1414                           ;main.c: 127:                 if(PORTAbits.RA5)
  1415  007A  1E8C               	btfss	12,5	;volatile
  1416  007B  287D               	goto	u401
  1417  007C  287E               	goto	u400
  1418  007D                     u401:
  1419  007D  2883               	goto	l1264
  1420  007E                     u400:
  1421  007E                     l1262:
  1422                           
  1423                           ;main.c: 128:                 {;main.c: 129:                     setState(STATE_OPEN_VAL
      +                          VE);
  1424  007E  3002               	movlw	2
  1425  007F  3180  20B7  3180   	fcall	_setState
  1426                           
  1427                           ;main.c: 130:                 }
  1428  0082  289F               	goto	l1274
  1429  0083                     l1264:
  1430  0083  0871               	movf	_demandedSecondsTick+1,w
  1431  0084  0273               	subwf	_currentSecondsTick+1,w	;volatile
  1432  0085  1D03               	skipz
  1433  0086  2889               	goto	u415
  1434  0087  0870               	movf	_demandedSecondsTick,w
  1435  0088  0272               	subwf	_currentSecondsTick,w	;volatile
  1436  0089                     u415:
  1437  0089  1C03               	skipc
  1438  008A  288C               	goto	u411
  1439  008B  288D               	goto	u410
  1440  008C                     u411:
  1441  008C  289F               	goto	l234
  1442  008D                     u410:
  1443  008D                     l1266:
  1444                           
  1445                           ;main.c: 132:                 {;main.c: 133:                     setState(STATE_END);
  1446  008D  3004               	movlw	4
  1447  008E  3180  20B7  3180   	fcall	_setState
  1448  0091  289F               	goto	l1274
  1449  0092                     l1268:
  1450                           
  1451                           ;main.c: 141:                 TMR1_StopTimer();
  1452  0092  3181  21B6  3180   	fcall	_TMR1_StopTimer
  1453  0095  0063               	sleep	;# 
  1454  0096  0000               	nop	;# 
  1455                           
  1456                           ;main.c: 147:                 TMR1_StartTimer();
  1457  0097  3181  21B9  3180   	fcall	_TMR1_StartTimer
  1458  009A                     l1270:
  1459                           
  1460                           ;main.c: 156:                 setState(STATE_WAIT_TIME);
  1461  009A  3001               	movlw	1
  1462  009B  3180  20B7  3180   	fcall	_setState
  1463                           
  1464                           ;main.c: 157:                 break;
  1465  009E  289F               	goto	l1274
  1466  009F                     l234:
  1467  009F                     l1274:
  1468  009F  0874               	movf	_currentState,w
  1469  00A0  0020               	movlb	0	; select bank0
  1470  00A1  00A6               	movwf	??_main
  1471  00A2  01A7               	clrf	??_main+1
  1472                           
  1473                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1474                           ; Switch size 1, requested type "simple"
  1475                           ; Number of cases is 1, Range of values is 0 to 0
  1476                           ; switch strategies available:
  1477                           ; Name         Instructions Cycles
  1478                           ; simple_byte            4     3 (average)
  1479                           ; direct_byte            8     6 (fixed)
  1480                           ; jumptable            260     6 (fixed)
  1481                           ;	Chosen strategy is simple_byte
  1482  00A3  0827               	movf	??_main+1,w
  1483  00A4  3A00               	xorlw	0	; case 0
  1484  00A5  1903               	skipnz
  1485  00A6  28A8               	goto	l1320
  1486  00A7  289F               	goto	l1274
  1487  00A8                     l1320:
  1488                           
  1489                           ; Switch size 1, requested type "simple"
  1490                           ; Number of cases is 4, Range of values is 1 to 4
  1491                           ; switch strategies available:
  1492                           ; Name         Instructions Cycles
  1493                           ; simple_byte           13     7 (average)
  1494                           ; direct_byte           17     9 (fixed)
  1495                           ; jumptable            263     9 (fixed)
  1496                           ;	Chosen strategy is simple_byte
  1497  00A8  0826               	movf	??_main,w
  1498  00A9  3A01               	xorlw	1	; case 1
  1499  00AA  1903               	skipnz
  1500  00AB  2846               	goto	l235
  1501  00AC  3A03               	xorlw	3	; case 2
  1502  00AD  1903               	skipnz
  1503  00AE  2867               	goto	l242
  1504  00AF  3A01               	xorlw	1	; case 3
  1505  00B0  1903               	skipnz
  1506  00B1  287A               	goto	l246
  1507  00B2  3A07               	xorlw	7	; case 4
  1508  00B3  1903               	skipnz
  1509  00B4  2892               	goto	l1268
  1510  00B5  289F               	goto	l1274
  1511  00B6  2826               	ljmp	start
  1512  00B7                     __end_of_main:
  1513                           
  1514                           	psect	text1
  1515  00B7                     __ptext1:	
  1516 ;; *************** function _setState *****************
  1517 ;; Defined at:
  1518 ;;		line 169 in file "main.c"
  1519 ;; Parameters:    Size  Location     Type
  1520 ;;  newState        1    wreg     enum E2989
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;  newState        1    4[COMMON] enum E2989
  1523 ;; Return value:  Size  Location     Type
  1524 ;;                  1    wreg      void 
  1525 ;; Registers used:
  1526 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1527 ;; Tracked objects:
  1528 ;;		On entry : 0/0
  1529 ;;		On exit  : 0/0
  1530 ;;		Unchanged: 0/0
  1531 ;; Data sizes:     COMMON   BANK0   BANK1
  1532 ;;      Params:         0       0       0
  1533 ;;      Locals:         1       0       0
  1534 ;;      Temps:          2       0       0
  1535 ;;      Totals:         3       0       0
  1536 ;;Total ram usage:        3 bytes
  1537 ;; Hardware stack levels used:    1
  1538 ;; Hardware stack levels required when called:    4
  1539 ;; This function calls:
  1540 ;;		Nothing
  1541 ;; This function is called by:
  1542 ;;		_main
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546                           
  1547                           ;psect for function _setState
  1548  00B7                     _setState:
  1549                           
  1550                           ;incstack = 0
  1551                           ; Regs used in _setState: [wreg-fsr0h+status,2+status,0]
  1552                           ;setState@newState stored from wreg
  1553  00B7  00F9               	movwf	setState@newState
  1554  00B8                     l904:
  1555                           
  1556                           ;main.c: 169: void setState(states_t newState);main.c: 170: {;main.c: 171:     if(newSta
      +                          te == currentState)
  1557  00B8  0879               	movf	setState@newState,w
  1558  00B9  0674               	xorwf	_currentState,w
  1559  00BA  1D03               	skipz
  1560  00BB  28BD               	goto	u51
  1561  00BC  28BE               	goto	u50
  1562  00BD                     u51:
  1563  00BD  28BF               	goto	l908
  1564  00BE                     u50:
  1565  00BE  2904               	goto	l257
  1566  00BF                     l908:
  1567                           
  1568                           ;main.c: 176:     currentSecondsTick = 0;
  1569  00BF  01F2               	clrf	_currentSecondsTick	;volatile
  1570  00C0  01F3               	clrf	_currentSecondsTick+1	;volatile
  1571                           
  1572                           ;main.c: 179:     switch(newState)
  1573  00C1  28EA               	goto	l924
  1574  00C2                     l260:	
  1575                           ;main.c: 182:             do { LATAbits.LATA1 = 0; } while(0);
  1576                           
  1577  00C2  0022               	movlb	2	; select bank2
  1578  00C3  108C               	bcf	12,1	;volatile
  1579  00C4                     l262:	
  1580                           ;main.c: 183:             do { LATAbits.LATA2 = 0; } while(0);
  1581                           
  1582  00C4  110C               	bcf	12,2	;volatile
  1583  00C5                     l910:
  1584                           
  1585                           ;main.c: 184:             currentSecondsTick = 0;
  1586  00C5  01F2               	clrf	_currentSecondsTick	;volatile
  1587  00C6  01F3               	clrf	_currentSecondsTick+1	;volatile
  1588  00C7                     l912:
  1589                           
  1590                           ;main.c: 185:             demandedSecondsTick = currentSecondsTick + 2;
  1591  00C7  0872               	movf	_currentSecondsTick,w	;volatile
  1592  00C8  3E02               	addlw	2
  1593  00C9  00F0               	movwf	_demandedSecondsTick
  1594  00CA  3000               	movlw	0
  1595  00CB  3D73               	addwfc	_currentSecondsTick+1,w	;volatile
  1596  00CC  00F1               	movwf	_demandedSecondsTick+1
  1597                           
  1598                           ;main.c: 186:             break;
  1599  00CD  2900               	goto	l926
  1600  00CE                     l266:	
  1601                           ;main.c: 189:             do { LATAbits.LATA1 = 1; } while(0);
  1602                           
  1603  00CE  0022               	movlb	2	; select bank2
  1604  00CF  148C               	bsf	12,1	;volatile
  1605  00D0                     l268:	
  1606                           ;main.c: 190:             do { LATAbits.LATA2 = 0; } while(0);
  1607                           
  1608  00D0  110C               	bcf	12,2	;volatile
  1609  00D1                     l914:
  1610                           
  1611                           ;main.c: 191:             currentSecondsTick = 0;
  1612  00D1  01F2               	clrf	_currentSecondsTick	;volatile
  1613  00D2  01F3               	clrf	_currentSecondsTick+1	;volatile
  1614  00D3                     l916:
  1615                           
  1616                           ;main.c: 192:             demandedSecondsTick = currentSecondsTick + 1200;
  1617  00D3  0872               	movf	_currentSecondsTick,w	;volatile
  1618  00D4  3EB0               	addlw	176
  1619  00D5  00F0               	movwf	_demandedSecondsTick
  1620  00D6  3004               	movlw	4
  1621  00D7  3D73               	addwfc	_currentSecondsTick+1,w	;volatile
  1622  00D8  00F1               	movwf	_demandedSecondsTick+1
  1623                           
  1624                           ;main.c: 193:             break;
  1625  00D9  2900               	goto	l926
  1626  00DA                     l271:	
  1627                           ;main.c: 196:             do { LATAbits.LATA1 = 0; } while(0);
  1628                           
  1629  00DA  0022               	movlb	2	; select bank2
  1630  00DB  108C               	bcf	12,1	;volatile
  1631  00DC                     l273:	
  1632                           ;main.c: 197:             do { LATAbits.LATA2 = 1; } while(0);
  1633                           
  1634  00DC  150C               	bsf	12,2	;volatile
  1635  00DD                     l918:
  1636                           
  1637                           ;main.c: 198:             currentSecondsTick = 0;
  1638  00DD  01F2               	clrf	_currentSecondsTick	;volatile
  1639  00DE  01F3               	clrf	_currentSecondsTick+1	;volatile
  1640  00DF                     l920:
  1641                           
  1642                           ;main.c: 199:             demandedSecondsTick = currentSecondsTick + 10;
  1643  00DF  0872               	movf	_currentSecondsTick,w	;volatile
  1644  00E0  3E0A               	addlw	10
  1645  00E1  00F0               	movwf	_demandedSecondsTick
  1646  00E2  3000               	movlw	0
  1647  00E3  3D73               	addwfc	_currentSecondsTick+1,w	;volatile
  1648  00E4  00F1               	movwf	_demandedSecondsTick+1
  1649                           
  1650                           ;main.c: 200:             break;
  1651  00E5  2900               	goto	l926
  1652  00E6                     l276:	
  1653                           ;main.c: 203:             do { LATAbits.LATA1 = 0; } while(0);
  1654                           
  1655  00E6  0022               	movlb	2	; select bank2
  1656  00E7  108C               	bcf	12,1	;volatile
  1657  00E8                     l278:	
  1658                           ;main.c: 204:             do { LATAbits.LATA2 = 0; } while(0);
  1659                           
  1660  00E8  110C               	bcf	12,2	;volatile
  1661  00E9  2900               	goto	l926
  1662  00EA                     l924:
  1663  00EA  0879               	movf	setState@newState,w
  1664  00EB  00F7               	movwf	??_setState
  1665  00EC  01F8               	clrf	??_setState+1
  1666                           
  1667                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1668                           ; Switch size 1, requested type "simple"
  1669                           ; Number of cases is 1, Range of values is 0 to 0
  1670                           ; switch strategies available:
  1671                           ; Name         Instructions Cycles
  1672                           ; simple_byte            4     3 (average)
  1673                           ; direct_byte            8     6 (fixed)
  1674                           ; jumptable            260     6 (fixed)
  1675                           ;	Chosen strategy is simple_byte
  1676  00ED  0878               	movf	??_setState+1,w
  1677  00EE  3A00               	xorlw	0	; case 0
  1678  00EF  1903               	skipnz
  1679  00F0  28F2               	goto	l1322
  1680  00F1  2900               	goto	l926
  1681  00F2                     l1322:
  1682                           
  1683                           ; Switch size 1, requested type "simple"
  1684                           ; Number of cases is 4, Range of values is 1 to 4
  1685                           ; switch strategies available:
  1686                           ; Name         Instructions Cycles
  1687                           ; simple_byte           13     7 (average)
  1688                           ; direct_byte           17     9 (fixed)
  1689                           ; jumptable            263     9 (fixed)
  1690                           ;	Chosen strategy is simple_byte
  1691  00F2  0877               	movf	??_setState,w
  1692  00F3  3A01               	xorlw	1	; case 1
  1693  00F4  1903               	skipnz
  1694  00F5  28C2               	goto	l260
  1695  00F6  3A03               	xorlw	3	; case 2
  1696  00F7  1903               	skipnz
  1697  00F8  28CE               	goto	l266
  1698  00F9  3A01               	xorlw	1	; case 3
  1699  00FA  1903               	skipnz
  1700  00FB  28DA               	goto	l271
  1701  00FC  3A07               	xorlw	7	; case 4
  1702  00FD  1903               	skipnz
  1703  00FE  28E6               	goto	l276
  1704  00FF  2900               	goto	l926
  1705  0100                     l926:
  1706                           
  1707                           ;main.c: 208:     currentState = newState;
  1708  0100  0879               	movf	setState@newState,w
  1709  0101  00F7               	movwf	??_setState
  1710  0102  0877               	movf	??_setState,w
  1711  0103  00F4               	movwf	_currentState
  1712  0104                     l257:
  1713  0104  0008               	return
  1714  0105                     __end_of_setState:
  1715                           
  1716                           	psect	text2
  1717  01B6                     __ptext2:	
  1718 ;; *************** function _TMR1_StopTimer *****************
  1719 ;; Defined at:
  1720 ;;		line 99 in file "mcc_generated_files/tmr1.c"
  1721 ;; Parameters:    Size  Location     Type
  1722 ;;		None
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;		None
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  1    wreg      void 
  1727 ;; Registers used:
  1728 ;;		None
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMMON   BANK0   BANK1
  1734 ;;      Params:         0       0       0
  1735 ;;      Locals:         0       0       0
  1736 ;;      Temps:          0       0       0
  1737 ;;      Totals:         0       0       0
  1738 ;;Total ram usage:        0 bytes
  1739 ;; Hardware stack levels used:    1
  1740 ;; Hardware stack levels required when called:    4
  1741 ;; This function calls:
  1742 ;;		Nothing
  1743 ;; This function is called by:
  1744 ;;		_main
  1745 ;; This function uses a non-reentrant model
  1746 ;;
  1747                           
  1748                           
  1749                           ;psect for function _TMR1_StopTimer
  1750  01B6                     _TMR1_StopTimer:
  1751  01B6                     l898:	
  1752                           ;incstack = 0
  1753                           ; Regs used in _TMR1_StopTimer: []
  1754                           
  1755                           
  1756                           ;mcc_generated_files/tmr1.c: 102:     T1CONbits.TMR1ON = 0;
  1757  01B6  0020               	movlb	0	; select bank0
  1758  01B7  1018               	bcf	24,0	;volatile
  1759  01B8                     l113:
  1760  01B8  0008               	return
  1761  01B9                     __end_of_TMR1_StopTimer:
  1762                           
  1763                           	psect	text3
  1764  01B9                     __ptext3:	
  1765 ;; *************** function _TMR1_StartTimer *****************
  1766 ;; Defined at:
  1767 ;;		line 93 in file "mcc_generated_files/tmr1.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;		None
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;		None
  1772 ;; Return value:  Size  Location     Type
  1773 ;;                  1    wreg      void 
  1774 ;; Registers used:
  1775 ;;		None
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMMON   BANK0   BANK1
  1781 ;;      Params:         0       0       0
  1782 ;;      Locals:         0       0       0
  1783 ;;      Temps:          0       0       0
  1784 ;;      Totals:         0       0       0
  1785 ;;Total ram usage:        0 bytes
  1786 ;; Hardware stack levels used:    1
  1787 ;; Hardware stack levels required when called:    4
  1788 ;; This function calls:
  1789 ;;		Nothing
  1790 ;; This function is called by:
  1791 ;;		_main
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           
  1796                           ;psect for function _TMR1_StartTimer
  1797  01B9                     _TMR1_StartTimer:
  1798  01B9                     l896:	
  1799                           ;incstack = 0
  1800                           ; Regs used in _TMR1_StartTimer: []
  1801                           
  1802                           
  1803                           ;mcc_generated_files/tmr1.c: 96:     T1CONbits.TMR1ON = 1;
  1804  01B9  0020               	movlb	0	; select bank0
  1805  01BA  1418               	bsf	24,0	;volatile
  1806  01BB                     l110:
  1807  01BB  0008               	return
  1808  01BC                     __end_of_TMR1_StartTimer:
  1809                           
  1810                           	psect	text4
  1811  0151                     __ptext4:	
  1812 ;; *************** function _SYSTEM_Initialize *****************
  1813 ;; Defined at:
  1814 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1815 ;; Parameters:    Size  Location     Type
  1816 ;;		None
  1817 ;; Auto vars:     Size  Location     Type
  1818 ;;		None
  1819 ;; Return value:  Size  Location     Type
  1820 ;;                  1    wreg      void 
  1821 ;; Registers used:
  1822 ;;		wreg, status,2, status,0, pclath, cstack
  1823 ;; Tracked objects:
  1824 ;;		On entry : 0/0
  1825 ;;		On exit  : 0/0
  1826 ;;		Unchanged: 0/0
  1827 ;; Data sizes:     COMMON   BANK0   BANK1
  1828 ;;      Params:         0       0       0
  1829 ;;      Locals:         0       0       0
  1830 ;;      Temps:          0       0       0
  1831 ;;      Totals:         0       0       0
  1832 ;;Total ram usage:        0 bytes
  1833 ;; Hardware stack levels used:    1
  1834 ;; Hardware stack levels required when called:    6
  1835 ;; This function calls:
  1836 ;;		_ADC1_Initialize
  1837 ;;		_OSCILLATOR_Initialize
  1838 ;;		_PIN_MANAGER_Initialize
  1839 ;;		_TMR1_Initialize
  1840 ;;		_WDT_Initialize
  1841 ;; This function is called by:
  1842 ;;		_main
  1843 ;; This function uses a non-reentrant model
  1844 ;;
  1845                           
  1846                           
  1847                           ;psect for function _SYSTEM_Initialize
  1848  0151                     _SYSTEM_Initialize:
  1849  0151                     l1132:	
  1850                           ;incstack = 0
  1851                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1852                           
  1853                           
  1854                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1855  0151  3181  2105  3181   	fcall	_PIN_MANAGER_Initialize
  1856                           
  1857                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1858  0154  3181  2193  3181   	fcall	_OSCILLATOR_Initialize
  1859                           
  1860                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  1861  0157  3181  21B2  3181   	fcall	_WDT_Initialize
  1862  015A                     l1134:
  1863                           
  1864                           ;mcc_generated_files/mcc.c: 56:     ADC1_Initialize();
  1865  015A  3181  219A  3181   	fcall	_ADC1_Initialize
  1866  015D                     l1136:
  1867                           
  1868                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
  1869  015D  3181  2128  3181   	fcall	_TMR1_Initialize
  1870  0160                     l21:
  1871  0160  0008               	return
  1872  0161                     __end_of_SYSTEM_Initialize:
  1873                           
  1874                           	psect	text5
  1875  01B2                     __ptext5:	
  1876 ;; *************** function _WDT_Initialize *****************
  1877 ;; Defined at:
  1878 ;;		line 70 in file "mcc_generated_files/mcc.c"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;		None
  1881 ;; Auto vars:     Size  Location     Type
  1882 ;;		None
  1883 ;; Return value:  Size  Location     Type
  1884 ;;                  1    wreg      void 
  1885 ;; Registers used:
  1886 ;;		wreg
  1887 ;; Tracked objects:
  1888 ;;		On entry : 0/0
  1889 ;;		On exit  : 0/0
  1890 ;;		Unchanged: 0/0
  1891 ;; Data sizes:     COMMON   BANK0   BANK1
  1892 ;;      Params:         0       0       0
  1893 ;;      Locals:         0       0       0
  1894 ;;      Temps:          0       0       0
  1895 ;;      Totals:         0       0       0
  1896 ;;Total ram usage:        0 bytes
  1897 ;; Hardware stack levels used:    1
  1898 ;; Hardware stack levels required when called:    4
  1899 ;; This function calls:
  1900 ;;		Nothing
  1901 ;; This function is called by:
  1902 ;;		_SYSTEM_Initialize
  1903 ;; This function uses a non-reentrant model
  1904 ;;
  1905                           
  1906                           
  1907                           ;psect for function _WDT_Initialize
  1908  01B2                     _WDT_Initialize:
  1909  01B2                     l842:	
  1910                           ;incstack = 0
  1911                           ; Regs used in _WDT_Initialize: [wreg]
  1912                           
  1913                           
  1914                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x16;
  1915  01B2  3016               	movlw	22
  1916  01B3  0021               	movlb	1	; select bank1
  1917  01B4  0097               	movwf	23	;volatile
  1918  01B5                     l27:
  1919  01B5  0008               	return
  1920  01B6                     __end_of_WDT_Initialize:
  1921                           
  1922                           	psect	text6
  1923  0128                     __ptext6:	
  1924 ;; *************** function _TMR1_Initialize *****************
  1925 ;; Defined at:
  1926 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  1927 ;; Parameters:    Size  Location     Type
  1928 ;;		None
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;		None
  1931 ;; Return value:  Size  Location     Type
  1932 ;;                  1    wreg      void 
  1933 ;; Registers used:
  1934 ;;		wreg, status,2, status,0, pclath, cstack
  1935 ;; Tracked objects:
  1936 ;;		On entry : 0/0
  1937 ;;		On exit  : 0/0
  1938 ;;		Unchanged: 0/0
  1939 ;; Data sizes:     COMMON   BANK0   BANK1
  1940 ;;      Params:         0       0       0
  1941 ;;      Locals:         0       0       0
  1942 ;;      Temps:          0       0       0
  1943 ;;      Totals:         0       0       0
  1944 ;;Total ram usage:        0 bytes
  1945 ;; Hardware stack levels used:    1
  1946 ;; Hardware stack levels required when called:    5
  1947 ;; This function calls:
  1948 ;;		_TMR1_SetInterruptHandler
  1949 ;; This function is called by:
  1950 ;;		_SYSTEM_Initialize
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954                           
  1955                           ;psect for function _TMR1_Initialize
  1956  0128                     _TMR1_Initialize:
  1957  0128                     l1092:	
  1958                           ;incstack = 0
  1959                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1960                           
  1961                           
  1962                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  1963  0128  0020               	movlb	0	; select bank0
  1964  0129  0199               	clrf	25	;volatile
  1965  012A                     l1094:
  1966                           
  1967                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x86;
  1968  012A  3086               	movlw	134
  1969  012B  0097               	movwf	23	;volatile
  1970  012C                     l1096:
  1971                           
  1972                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xE8;
  1973  012C  30E8               	movlw	232
  1974  012D  0096               	movwf	22	;volatile
  1975  012E                     l1098:
  1976                           
  1977                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  1978  012E  1011               	bcf	17,0	;volatile
  1979  012F                     l1100:
  1980                           
  1981                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  1982  012F  0817               	movf	23,w	;volatile
  1983  0130  00FB               	movwf	_timer1ReloadVal+1	;volatile
  1984  0131  0816               	movf	22,w	;volatile
  1985  0132  00FA               	movwf	_timer1ReloadVal	;volatile
  1986  0133                     l1102:
  1987                           
  1988                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  1989  0133  0021               	movlb	1	; select bank1
  1990  0134  1411               	bsf	17,0	;volatile
  1991  0135                     l1104:
  1992                           
  1993                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  1994  0135  30BC               	movlw	low _TMR1_DefaultInterruptHandler
  1995  0136  00F7               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  1996  0137  3001               	movlw	high _TMR1_DefaultInterruptHandler
  1997  0138  00F8               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  1998  0139  3181  21A1  3181   	fcall	_TMR1_SetInterruptHandler
  1999  013C                     l1106:
  2000                           
  2001                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x41;
  2002  013C  3041               	movlw	65
  2003  013D  0020               	movlb	0	; select bank0
  2004  013E  0098               	movwf	24	;volatile
  2005  013F                     l107:
  2006  013F  0008               	return
  2007  0140                     __end_of_TMR1_Initialize:
  2008                           
  2009                           	psect	text7
  2010  01A1                     __ptext7:	
  2011 ;; *************** function _TMR1_SetInterruptHandler *****************
  2012 ;; Defined at:
  2013 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  2016 ;;		 -> secondsTick(1), TMR1_DefaultInterruptHandler(1), 
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;		None
  2019 ;; Return value:  Size  Location     Type
  2020 ;;                  1    wreg      void 
  2021 ;; Registers used:
  2022 ;;		wreg
  2023 ;; Tracked objects:
  2024 ;;		On entry : 0/0
  2025 ;;		On exit  : 0/0
  2026 ;;		Unchanged: 0/0
  2027 ;; Data sizes:     COMMON   BANK0   BANK1
  2028 ;;      Params:         2       0       0
  2029 ;;      Locals:         0       0       0
  2030 ;;      Temps:          0       0       0
  2031 ;;      Totals:         2       0       0
  2032 ;;Total ram usage:        2 bytes
  2033 ;; Hardware stack levels used:    1
  2034 ;; Hardware stack levels required when called:    4
  2035 ;; This function calls:
  2036 ;;		Nothing
  2037 ;; This function is called by:
  2038 ;;		_TMR1_Initialize
  2039 ;;		_main
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           
  2043                           
  2044                           ;psect for function _TMR1_SetInterruptHandler
  2045  01A1                     _TMR1_SetInterruptHandler:
  2046  01A1                     l1066:	
  2047                           ;incstack = 0
  2048                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  2049                           
  2050                           
  2051                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  2052  01A1  0878               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  2053  01A2  0020               	movlb	0	; select bank0
  2054  01A3  00A1               	movwf	_TMR1_InterruptHandler+1
  2055  01A4  0877               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  2056  01A5  00A0               	movwf	_TMR1_InterruptHandler
  2057  01A6                     l140:
  2058  01A6  0008               	return
  2059  01A7                     __end_of_TMR1_SetInterruptHandler:
  2060                           
  2061                           	psect	text8
  2062  0105                     __ptext8:	
  2063 ;; *************** function _PIN_MANAGER_Initialize *****************
  2064 ;; Defined at:
  2065 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  2066 ;; Parameters:    Size  Location     Type
  2067 ;;		None
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;		None
  2070 ;; Return value:  Size  Location     Type
  2071 ;;                  1    wreg      void 
  2072 ;; Registers used:
  2073 ;;		wreg, status,2, status,0, pclath, cstack
  2074 ;; Tracked objects:
  2075 ;;		On entry : 0/0
  2076 ;;		On exit  : 0/0
  2077 ;;		Unchanged: 0/0
  2078 ;; Data sizes:     COMMON   BANK0   BANK1
  2079 ;;      Params:         0       0       0
  2080 ;;      Locals:         0       0       0
  2081 ;;      Temps:          0       0       0
  2082 ;;      Totals:         0       0       0
  2083 ;;Total ram usage:        0 bytes
  2084 ;; Hardware stack levels used:    1
  2085 ;; Hardware stack levels required when called:    5
  2086 ;; This function calls:
  2087 ;;		_IOCAF5_SetInterruptHandler
  2088 ;; This function is called by:
  2089 ;;		_SYSTEM_Initialize
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093                           
  2094                           ;psect for function _PIN_MANAGER_Initialize
  2095  0105                     _PIN_MANAGER_Initialize:
  2096  0105                     l1070:	
  2097                           ;incstack = 0
  2098                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2099                           
  2100                           
  2101                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  2102  0105  0022               	movlb	2	; select bank2
  2103  0106  018C               	clrf	12	;volatile
  2104  0107                     l1072:
  2105                           
  2106                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x39;
  2107  0107  3039               	movlw	57
  2108  0108  0021               	movlb	1	; select bank1
  2109  0109  008C               	movwf	12	;volatile
  2110  010A                     l1074:
  2111                           
  2112                           ;mcc_generated_files/pin_manager.c: 72:     ANSELA = 0x01;
  2113  010A  3001               	movlw	1
  2114  010B  0023               	movlb	3	; select bank3
  2115  010C  008C               	movwf	12	;volatile
  2116                           
  2117                           ;mcc_generated_files/pin_manager.c: 77:     WPUA = 0x00;
  2118  010D  0024               	movlb	4	; select bank4
  2119  010E  018C               	clrf	12	;volatile
  2120  010F                     l1076:
  2121                           
  2122                           ;mcc_generated_files/pin_manager.c: 78:     OPTION_REGbits.nWPUEN = 1;
  2123  010F  0021               	movlb	1	; select bank1
  2124  0110  1795               	bsf	21,7	;volatile
  2125                           
  2126                           ;mcc_generated_files/pin_manager.c: 83:     ODCONA = 0x00;
  2127  0111  0025               	movlb	5	; select bank5
  2128  0112  018C               	clrf	12	;volatile
  2129  0113                     l1078:
  2130                           
  2131                           ;mcc_generated_files/pin_manager.c: 88:     SLRCONA = 0x37;
  2132  0113  3037               	movlw	55
  2133  0114  0026               	movlb	6	; select bank6
  2134  0115  008C               	movwf	12	;volatile
  2135  0116                     l1080:
  2136                           
  2137                           ;mcc_generated_files/pin_manager.c: 93:     INLVLA = 0x3F;
  2138  0116  303F               	movlw	63
  2139  0117  0027               	movlb	7	; select bank7
  2140  0118  008C               	movwf	12	;volatile
  2141                           
  2142                           ;mcc_generated_files/pin_manager.c: 98:     APFCON = 0x00;
  2143  0119  0022               	movlb	2	; select bank2
  2144  011A  019D               	clrf	29	;volatile
  2145  011B                     l1082:
  2146                           
  2147                           ;mcc_generated_files/pin_manager.c: 104:     IOCAFbits.IOCAF5 = 0;
  2148  011B  0027               	movlb	7	; select bank7
  2149  011C  1293               	bcf	19,5	;volatile
  2150  011D                     l1084:
  2151                           
  2152                           ;mcc_generated_files/pin_manager.c: 106:     IOCANbits.IOCAN5 = 0;
  2153  011D  1292               	bcf	18,5	;volatile
  2154  011E                     l1086:
  2155                           
  2156                           ;mcc_generated_files/pin_manager.c: 108:     IOCAPbits.IOCAP5 = 1;
  2157  011E  1691               	bsf	17,5	;volatile
  2158  011F                     l1088:
  2159                           
  2160                           ;mcc_generated_files/pin_manager.c: 113:     IOCAF5_SetInterruptHandler(IOCAF5_DefaultIn
      +                          terruptHandler);
  2161  011F  30BD               	movlw	low _IOCAF5_DefaultInterruptHandler
  2162  0120  00F7               	movwf	IOCAF5_SetInterruptHandler@InterruptHandler
  2163  0121  3001               	movlw	high _IOCAF5_DefaultInterruptHandler
  2164  0122  00F8               	movwf	IOCAF5_SetInterruptHandler@InterruptHandler+1
  2165  0123  3181  21A7  3181   	fcall	_IOCAF5_SetInterruptHandler
  2166  0126                     l1090:
  2167                           
  2168                           ;mcc_generated_files/pin_manager.c: 116:     INTCONbits.IOCIE = 1;
  2169  0126  158B               	bsf	11,3	;volatile
  2170  0127                     l64:
  2171  0127  0008               	return
  2172  0128                     __end_of_PIN_MANAGER_Initialize:
  2173                           
  2174                           	psect	text9
  2175  01A7                     __ptext9:	
  2176 ;; *************** function _IOCAF5_SetInterruptHandler *****************
  2177 ;; Defined at:
  2178 ;;		line 147 in file "mcc_generated_files/pin_manager.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  2181 ;;		 -> IOCAF5_DefaultInterruptHandler(1), 
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;		None
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  1    wreg      void 
  2186 ;; Registers used:
  2187 ;;		wreg
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMMON   BANK0   BANK1
  2193 ;;      Params:         2       0       0
  2194 ;;      Locals:         0       0       0
  2195 ;;      Temps:          0       0       0
  2196 ;;      Totals:         2       0       0
  2197 ;;Total ram usage:        2 bytes
  2198 ;; Hardware stack levels used:    1
  2199 ;; Hardware stack levels required when called:    4
  2200 ;; This function calls:
  2201 ;;		Nothing
  2202 ;; This function is called by:
  2203 ;;		_PIN_MANAGER_Initialize
  2204 ;; This function uses a non-reentrant model
  2205 ;;
  2206                           
  2207                           
  2208                           ;psect for function _IOCAF5_SetInterruptHandler
  2209  01A7                     _IOCAF5_SetInterruptHandler:
  2210  01A7                     l1064:	
  2211                           ;incstack = 0
  2212                           ; Regs used in _IOCAF5_SetInterruptHandler: [wreg]
  2213                           
  2214                           
  2215                           ;mcc_generated_files/pin_manager.c: 148:     IOCAF5_InterruptHandler = InterruptHandler;
  2216  01A7  0878               	movf	IOCAF5_SetInterruptHandler@InterruptHandler+1,w
  2217  01A8  0020               	movlb	0	; select bank0
  2218  01A9  00A3               	movwf	_IOCAF5_InterruptHandler+1
  2219  01AA  0877               	movf	IOCAF5_SetInterruptHandler@InterruptHandler,w
  2220  01AB  00A2               	movwf	_IOCAF5_InterruptHandler
  2221  01AC                     l75:
  2222  01AC  0008               	return
  2223  01AD                     __end_of_IOCAF5_SetInterruptHandler:
  2224                           
  2225                           	psect	text10
  2226  0193                     __ptext10:	
  2227 ;; *************** function _OSCILLATOR_Initialize *****************
  2228 ;; Defined at:
  2229 ;;		line 60 in file "mcc_generated_files/mcc.c"
  2230 ;; Parameters:    Size  Location     Type
  2231 ;;		None
  2232 ;; Auto vars:     Size  Location     Type
  2233 ;;		None
  2234 ;; Return value:  Size  Location     Type
  2235 ;;                  1    wreg      void 
  2236 ;; Registers used:
  2237 ;;		wreg, status,2
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMMON   BANK0   BANK1
  2243 ;;      Params:         0       0       0
  2244 ;;      Locals:         0       0       0
  2245 ;;      Temps:          0       0       0
  2246 ;;      Totals:         0       0       0
  2247 ;;Total ram usage:        0 bytes
  2248 ;; Hardware stack levels used:    1
  2249 ;; Hardware stack levels required when called:    4
  2250 ;; This function calls:
  2251 ;;		Nothing
  2252 ;; This function is called by:
  2253 ;;		_SYSTEM_Initialize
  2254 ;; This function uses a non-reentrant model
  2255 ;;
  2256                           
  2257                           
  2258                           ;psect for function _OSCILLATOR_Initialize
  2259  0193                     _OSCILLATOR_Initialize:
  2260  0193                     l836:	
  2261                           ;incstack = 0
  2262                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2263                           
  2264                           
  2265                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x02;
  2266  0193  3002               	movlw	2
  2267  0194  0021               	movlb	1	; select bank1
  2268  0195  0099               	movwf	25	;volatile
  2269  0196                     l838:
  2270                           
  2271                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  2272  0196  0198               	clrf	24	;volatile
  2273  0197                     l840:
  2274                           
  2275                           ;mcc_generated_files/mcc.c: 67:     BORCON = 0x00;
  2276  0197  0022               	movlb	2	; select bank2
  2277  0198  0196               	clrf	22	;volatile
  2278  0199                     l24:
  2279  0199  0008               	return
  2280  019A                     __end_of_OSCILLATOR_Initialize:
  2281                           
  2282                           	psect	text11
  2283  019A                     __ptext11:	
  2284 ;; *************** function _ADC1_Initialize *****************
  2285 ;; Defined at:
  2286 ;;		line 67 in file "mcc_generated_files/adc1.c"
  2287 ;; Parameters:    Size  Location     Type
  2288 ;;		None
  2289 ;; Auto vars:     Size  Location     Type
  2290 ;;		None
  2291 ;; Return value:  Size  Location     Type
  2292 ;;                  1    wreg      void 
  2293 ;; Registers used:
  2294 ;;		status,2
  2295 ;; Tracked objects:
  2296 ;;		On entry : 0/0
  2297 ;;		On exit  : 0/0
  2298 ;;		Unchanged: 0/0
  2299 ;; Data sizes:     COMMON   BANK0   BANK1
  2300 ;;      Params:         0       0       0
  2301 ;;      Locals:         0       0       0
  2302 ;;      Temps:          0       0       0
  2303 ;;      Totals:         0       0       0
  2304 ;;Total ram usage:        0 bytes
  2305 ;; Hardware stack levels used:    1
  2306 ;; Hardware stack levels required when called:    4
  2307 ;; This function calls:
  2308 ;;		Nothing
  2309 ;; This function is called by:
  2310 ;;		_SYSTEM_Initialize
  2311 ;; This function uses a non-reentrant model
  2312 ;;
  2313                           
  2314                           
  2315                           ;psect for function _ADC1_Initialize
  2316  019A                     _ADC1_Initialize:
  2317  019A                     l844:	
  2318                           ;incstack = 0
  2319                           ; Regs used in _ADC1_Initialize: [status,2]
  2320                           
  2321                           
  2322                           ;mcc_generated_files/adc1.c: 72:     ADCON1 = 0x00;
  2323  019A  0021               	movlb	1	; select bank1
  2324  019B  019E               	clrf	30	;volatile
  2325                           
  2326                           ;mcc_generated_files/adc1.c: 75:     ADCON2 = 0x00;
  2327  019C  019F               	clrf	31	;volatile
  2328                           
  2329                           ;mcc_generated_files/adc1.c: 78:     ADRESL = 0x00;
  2330  019D  019B               	clrf	27	;volatile
  2331                           
  2332                           ;mcc_generated_files/adc1.c: 81:     ADRESH = 0x00;
  2333  019E  019C               	clrf	28	;volatile
  2334                           
  2335                           ;mcc_generated_files/adc1.c: 84:     ADCON0 = 0x00;
  2336  019F  019D               	clrf	29	;volatile
  2337  01A0                     l183:
  2338  01A0  0008               	return
  2339  01A1                     __end_of_ADC1_Initialize:
  2340                           
  2341                           	psect	intentry
  2342  0004                     __pintentry:	
  2343 ;; *************** function _INTERRUPT_InterruptManager *****************
  2344 ;; Defined at:
  2345 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2346 ;; Parameters:    Size  Location     Type
  2347 ;;		None
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;		None
  2350 ;; Return value:  Size  Location     Type
  2351 ;;                  1    wreg      void 
  2352 ;; Registers used:
  2353 ;;		wreg, status,2, status,0, pclath, cstack
  2354 ;; Tracked objects:
  2355 ;;		On entry : 0/0
  2356 ;;		On exit  : 0/0
  2357 ;;		Unchanged: 0/0
  2358 ;; Data sizes:     COMMON   BANK0   BANK1
  2359 ;;      Params:         0       0       0
  2360 ;;      Locals:         0       0       0
  2361 ;;      Temps:          0       0       0
  2362 ;;      Totals:         0       0       0
  2363 ;;Total ram usage:        0 bytes
  2364 ;; Hardware stack levels used:    1
  2365 ;; Hardware stack levels required when called:    3
  2366 ;; This function calls:
  2367 ;;		_PIN_MANAGER_IOC
  2368 ;;		_TMR1_ISR
  2369 ;; This function is called by:
  2370 ;;		Interrupt level 1
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374  0004                     _INTERRUPT_InterruptManager:
  2375                           
  2376                           ;incstack = 0
  2377  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  2378                           
  2379                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  2380  0005  3180               	pagesel	$
  2381  0006                     i1l1148:
  2382                           
  2383                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
  2384  0006  1D8B               	btfss	11,3	;volatile
  2385  0007  2809               	goto	u23_21
  2386  0008  280A               	goto	u23_20
  2387  0009                     u23_21:
  2388  0009  2812               	goto	i1l158
  2389  000A                     u23_20:
  2390  000A                     i1l1150:
  2391  000A  1C0B               	btfss	11,0	;volatile
  2392  000B  280D               	goto	u24_21
  2393  000C  280E               	goto	u24_20
  2394  000D                     u24_21:
  2395  000D  2812               	goto	i1l158
  2396  000E                     u24_20:
  2397  000E                     i1l1152:
  2398                           
  2399                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
  2400  000E  3181  218A  3180   	fcall	_PIN_MANAGER_IOC
  2401                           
  2402                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  2403  0011  2824               	goto	i1l164
  2404  0012                     i1l158:	
  2405                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  2406                           
  2407  0012  1F0B               	btfss	11,6	;volatile
  2408  0013  2815               	goto	u25_21
  2409  0014  2816               	goto	u25_20
  2410  0015                     u25_21:
  2411  0015  2824               	goto	i1l164
  2412  0016                     u25_20:
  2413  0016                     i1l1154:
  2414                           
  2415                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  2416  0016  0021               	movlb	1	; select bank1
  2417  0017  1C11               	btfss	17,0	;volatile
  2418  0018  281A               	goto	u26_21
  2419  0019  281B               	goto	u26_20
  2420  001A                     u26_21:
  2421  001A  2824               	goto	i1l163
  2422  001B                     u26_20:
  2423  001B                     i1l1156:
  2424  001B  0020               	movlb	0	; select bank0
  2425  001C  1C11               	btfss	17,0	;volatile
  2426  001D  281F               	goto	u27_21
  2427  001E  2820               	goto	u27_20
  2428  001F                     u27_21:
  2429  001F  2824               	goto	i1l163
  2430  0020                     u27_20:
  2431  0020                     i1l1158:
  2432                           
  2433                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR1_ISR();
  2434  0020  3181  2170  3180   	fcall	_TMR1_ISR
  2435                           
  2436                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  2437  0023  2824               	goto	i1l164
  2438  0024                     i1l163:	
  2439                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
  2440                           
  2441  0024                     i1l164:
  2442  0024  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2443  0025  0009               	retfie
  2444  0026                     __end_of_INTERRUPT_InterruptManager:
  2445                           
  2446                           	psect	text13
  2447  0170                     __ptext13:	
  2448 ;; *************** function _TMR1_ISR *****************
  2449 ;; Defined at:
  2450 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  2451 ;; Parameters:    Size  Location     Type
  2452 ;;		None
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;		None
  2455 ;; Return value:  Size  Location     Type
  2456 ;;                  1    wreg      void 
  2457 ;; Registers used:
  2458 ;;		wreg, status,2, status,0, pclath, cstack
  2459 ;; Tracked objects:
  2460 ;;		On entry : 0/0
  2461 ;;		On exit  : 0/0
  2462 ;;		Unchanged: 0/0
  2463 ;; Data sizes:     COMMON   BANK0   BANK1
  2464 ;;      Params:         0       0       0
  2465 ;;      Locals:         0       0       0
  2466 ;;      Temps:          0       0       0
  2467 ;;      Totals:         0       0       0
  2468 ;;Total ram usage:        0 bytes
  2469 ;; Hardware stack levels used:    1
  2470 ;; Hardware stack levels required when called:    2
  2471 ;; This function calls:
  2472 ;;		_TMR1_CallBack
  2473 ;;		_TMR1_WriteTimer
  2474 ;; This function is called by:
  2475 ;;		_INTERRUPT_InterruptManager
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479                           
  2480                           ;psect for function _TMR1_ISR
  2481  0170                     _TMR1_ISR:
  2482  0170                     i1l1142:	
  2483                           ;incstack = 0
  2484                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  2485                           
  2486                           
  2487                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  2488  0170  0020               	movlb	0	; select bank0
  2489  0171  1011               	bcf	17,0	;volatile
  2490  0172                     i1l1144:
  2491                           
  2492                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  2493  0172  087B               	movf	_timer1ReloadVal+1,w	;volatile
  2494  0173  00F6               	movwf	TMR1_WriteTimer@timerVal+1
  2495  0174  087A               	movf	_timer1ReloadVal,w	;volatile
  2496  0175  00F5               	movwf	TMR1_WriteTimer@timerVal
  2497  0176  3181  2140  3181   	fcall	_TMR1_WriteTimer
  2498                           
  2499                           ;mcc_generated_files/tmr1.c: 166:     TMR1_CallBack();
  2500  0179  3181  217D  3181   	fcall	_TMR1_CallBack
  2501  017C                     i1l133:
  2502  017C  0008               	return
  2503  017D                     __end_of_TMR1_ISR:
  2504                           
  2505                           	psect	text14
  2506  0140                     __ptext14:	
  2507 ;; *************** function _TMR1_WriteTimer *****************
  2508 ;; Defined at:
  2509 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  2510 ;; Parameters:    Size  Location     Type
  2511 ;;  timerVal        2    0[COMMON] unsigned short 
  2512 ;; Auto vars:     Size  Location     Type
  2513 ;;		None
  2514 ;; Return value:  Size  Location     Type
  2515 ;;                  1    wreg      void 
  2516 ;; Registers used:
  2517 ;;		wreg, status,2
  2518 ;; Tracked objects:
  2519 ;;		On entry : 0/0
  2520 ;;		On exit  : 0/0
  2521 ;;		Unchanged: 0/0
  2522 ;; Data sizes:     COMMON   BANK0   BANK1
  2523 ;;      Params:         2       0       0
  2524 ;;      Locals:         0       0       0
  2525 ;;      Temps:          0       0       0
  2526 ;;      Totals:         2       0       0
  2527 ;;Total ram usage:        2 bytes
  2528 ;; Hardware stack levels used:    1
  2529 ;; This function calls:
  2530 ;;		Nothing
  2531 ;; This function is called by:
  2532 ;;		_TMR1_ISR
  2533 ;;		_TMR1_Reload
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537                           
  2538                           ;psect for function _TMR1_WriteTimer
  2539  0140                     _TMR1_WriteTimer:
  2540  0140                     i1l1114:	
  2541                           ;incstack = 0
  2542                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  2543                           
  2544                           
  2545                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  2546  0140  0020               	movlb	0	; select bank0
  2547  0141  1D18               	btfss	24,2	;volatile
  2548  0142  2944               	goto	u20_21
  2549  0143  2945               	goto	u20_20
  2550  0144                     u20_21:
  2551  0144  294C               	goto	i1l1124
  2552  0145                     u20_20:
  2553  0145                     i1l1116:
  2554                           
  2555                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  2556  0145  1018               	bcf	24,0	;volatile
  2557  0146                     i1l1118:
  2558                           
  2559                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (timerVal >> 8);
  2560  0146  0876               	movf	TMR1_WriteTimer@timerVal+1,w
  2561  0147  0097               	movwf	23	;volatile
  2562  0148                     i1l1120:
  2563                           
  2564                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = timerVal;
  2565  0148  0875               	movf	TMR1_WriteTimer@timerVal,w
  2566  0149  0096               	movwf	22	;volatile
  2567  014A                     i1l1122:
  2568                           
  2569                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  2570  014A  1418               	bsf	24,0	;volatile
  2571                           
  2572                           ;mcc_generated_files/tmr1.c: 133:     }
  2573  014B  2950               	goto	i1l121
  2574  014C                     i1l1124:
  2575                           
  2576                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (timerVal >> 8);
  2577  014C  0876               	movf	TMR1_WriteTimer@timerVal+1,w
  2578  014D  0097               	movwf	23	;volatile
  2579  014E                     i1l1126:
  2580                           
  2581                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = timerVal;
  2582  014E  0875               	movf	TMR1_WriteTimer@timerVal,w
  2583  014F  0096               	movwf	22	;volatile
  2584  0150                     i1l121:
  2585  0150  0008               	return
  2586  0151                     __end_of_TMR1_WriteTimer:
  2587                           
  2588                           	psect	text15
  2589  017D                     __ptext15:	
  2590 ;; *************** function _TMR1_CallBack *****************
  2591 ;; Defined at:
  2592 ;;		line 169 in file "mcc_generated_files/tmr1.c"
  2593 ;; Parameters:    Size  Location     Type
  2594 ;;		None
  2595 ;; Auto vars:     Size  Location     Type
  2596 ;;		None
  2597 ;; Return value:  Size  Location     Type
  2598 ;;                  1    wreg      void 
  2599 ;; Registers used:
  2600 ;;		wreg, status,2, status,0, pclath, cstack
  2601 ;; Tracked objects:
  2602 ;;		On entry : 0/0
  2603 ;;		On exit  : 0/0
  2604 ;;		Unchanged: 0/0
  2605 ;; Data sizes:     COMMON   BANK0   BANK1
  2606 ;;      Params:         0       0       0
  2607 ;;      Locals:         0       0       0
  2608 ;;      Temps:          0       0       0
  2609 ;;      Totals:         0       0       0
  2610 ;;Total ram usage:        0 bytes
  2611 ;; Hardware stack levels used:    1
  2612 ;; Hardware stack levels required when called:    1
  2613 ;; This function calls:
  2614 ;;		Absolute function
  2615 ;;		_TMR1_DefaultInterruptHandler
  2616 ;;		_secondsTick
  2617 ;; This function is called by:
  2618 ;;		_TMR1_ISR
  2619 ;; This function uses a non-reentrant model
  2620 ;;
  2621                           
  2622                           
  2623                           ;psect for function _TMR1_CallBack
  2624  017D                     _TMR1_CallBack:
  2625  017D                     i1l1128:	
  2626                           ;incstack = 0
  2627                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
  2628                           
  2629                           
  2630                           ;mcc_generated_files/tmr1.c: 172:     if(TMR1_InterruptHandler)
  2631  017D  0020               	movlb	0	; select bank0
  2632  017E  0820               	movf	_TMR1_InterruptHandler,w
  2633  017F  0421               	iorwf	_TMR1_InterruptHandler+1,w
  2634  0180  1903               	btfsc	3,2
  2635  0181  2983               	goto	u21_21
  2636  0182  2984               	goto	u21_20
  2637  0183                     u21_21:
  2638  0183  2989               	goto	i1l137
  2639  0184                     u21_20:
  2640  0184                     i1l1130:
  2641                           
  2642                           ;mcc_generated_files/tmr1.c: 173:     {;mcc_generated_files/tmr1.c: 174:         TMR1_In
      +                          terruptHandler();
  2643  0184  0821               	movf	_TMR1_InterruptHandler+1,w
  2644  0185  008A               	movwf	10
  2645  0186  0820               	movf	_TMR1_InterruptHandler,w
  2646  0187  000A               	callw
  2647  0188  3181               	pagesel	$
  2648  0189                     i1l137:
  2649  0189  0008               	return
  2650  018A                     __end_of_TMR1_CallBack:
  2651                           
  2652                           	psect	text16
  2653  01BC                     __ptext16:	
  2654 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  2655 ;; Defined at:
  2656 ;;		line 182 in file "mcc_generated_files/tmr1.c"
  2657 ;; Parameters:    Size  Location     Type
  2658 ;;		None
  2659 ;; Auto vars:     Size  Location     Type
  2660 ;;		None
  2661 ;; Return value:  Size  Location     Type
  2662 ;;                  1    wreg      void 
  2663 ;; Registers used:
  2664 ;;		None
  2665 ;; Tracked objects:
  2666 ;;		On entry : 0/0
  2667 ;;		On exit  : 0/0
  2668 ;;		Unchanged: 0/0
  2669 ;; Data sizes:     COMMON   BANK0   BANK1
  2670 ;;      Params:         0       0       0
  2671 ;;      Locals:         0       0       0
  2672 ;;      Temps:          0       0       0
  2673 ;;      Totals:         0       0       0
  2674 ;;Total ram usage:        0 bytes
  2675 ;; Hardware stack levels used:    1
  2676 ;; This function calls:
  2677 ;;		Nothing
  2678 ;; This function is called by:
  2679 ;;		_TMR1_Initialize
  2680 ;;		_TMR1_CallBack
  2681 ;; This function uses a non-reentrant model
  2682 ;;
  2683                           
  2684                           
  2685                           ;psect for function _TMR1_DefaultInterruptHandler
  2686  01BC                     _TMR1_DefaultInterruptHandler:
  2687  01BC                     i1l143:	
  2688                           ;incstack = 0
  2689                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  2690                           
  2691  01BC  0008               	return
  2692  01BD                     __end_of_TMR1_DefaultInterruptHandler:
  2693                           
  2694                           	psect	text17
  2695  01AD                     __ptext17:	
  2696 ;; *************** function _secondsTick *****************
  2697 ;; Defined at:
  2698 ;;		line 212 in file "main.c"
  2699 ;; Parameters:    Size  Location     Type
  2700 ;;		None
  2701 ;; Auto vars:     Size  Location     Type
  2702 ;;		None
  2703 ;; Return value:  Size  Location     Type
  2704 ;;                  1    wreg      void 
  2705 ;; Registers used:
  2706 ;;		wreg
  2707 ;; Tracked objects:
  2708 ;;		On entry : 0/0
  2709 ;;		On exit  : 0/0
  2710 ;;		Unchanged: 0/0
  2711 ;; Data sizes:     COMMON   BANK0   BANK1
  2712 ;;      Params:         0       0       0
  2713 ;;      Locals:         0       0       0
  2714 ;;      Temps:          0       0       0
  2715 ;;      Totals:         0       0       0
  2716 ;;Total ram usage:        0 bytes
  2717 ;; Hardware stack levels used:    1
  2718 ;; This function calls:
  2719 ;;		Nothing
  2720 ;; This function is called by:
  2721 ;;		_main
  2722 ;;		_TMR1_CallBack
  2723 ;; This function uses a non-reentrant model
  2724 ;;
  2725                           
  2726                           
  2727                           ;psect for function _secondsTick
  2728  01AD                     _secondsTick:
  2729  01AD                     i1l1068:	
  2730                           ;incstack = 0
  2731                           ; Regs used in _secondsTick: [wreg]
  2732                           
  2733                           
  2734                           ;main.c: 214:     currentSecondsTick++;
  2735  01AD  3001               	movlw	1
  2736  01AE  07F2               	addwf	_currentSecondsTick,f	;volatile
  2737  01AF  3000               	movlw	0
  2738  01B0  3DF3               	addwfc	_currentSecondsTick+1,f	;volatile
  2739  01B1                     i1l282:
  2740  01B1  0008               	return
  2741  01B2                     __end_of_secondsTick:
  2742                           
  2743                           	psect	text18
  2744  018A                     __ptext18:	
  2745 ;; *************** function _PIN_MANAGER_IOC *****************
  2746 ;; Defined at:
  2747 ;;		line 120 in file "mcc_generated_files/pin_manager.c"
  2748 ;; Parameters:    Size  Location     Type
  2749 ;;		None
  2750 ;; Auto vars:     Size  Location     Type
  2751 ;;		None
  2752 ;; Return value:  Size  Location     Type
  2753 ;;                  1    wreg      void 
  2754 ;; Registers used:
  2755 ;;		wreg, status,2, status,0, pclath, cstack
  2756 ;; Tracked objects:
  2757 ;;		On entry : 0/0
  2758 ;;		On exit  : 0/0
  2759 ;;		Unchanged: 0/0
  2760 ;; Data sizes:     COMMON   BANK0   BANK1
  2761 ;;      Params:         0       0       0
  2762 ;;      Locals:         0       0       0
  2763 ;;      Temps:          0       0       0
  2764 ;;      Totals:         0       0       0
  2765 ;;Total ram usage:        0 bytes
  2766 ;; Hardware stack levels used:    1
  2767 ;; Hardware stack levels required when called:    2
  2768 ;; This function calls:
  2769 ;;		_IOCAF5_ISR
  2770 ;; This function is called by:
  2771 ;;		_INTERRUPT_InterruptManager
  2772 ;; This function uses a non-reentrant model
  2773 ;;
  2774                           
  2775                           
  2776                           ;psect for function _PIN_MANAGER_IOC
  2777  018A                     _PIN_MANAGER_IOC:
  2778  018A                     i1l1138:	
  2779                           ;incstack = 0
  2780                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
  2781                           
  2782                           
  2783                           ;mcc_generated_files/pin_manager.c: 123:     if(IOCAFbits.IOCAF5 == 1)
  2784  018A  0027               	movlb	7	; select bank7
  2785  018B  1E93               	btfss	19,5	;volatile
  2786  018C  298E               	goto	u22_21
  2787  018D  298F               	goto	u22_20
  2788  018E                     u22_21:
  2789  018E  2992               	goto	i1l68
  2790  018F                     u22_20:
  2791  018F                     i1l1140:
  2792                           
  2793                           ;mcc_generated_files/pin_manager.c: 124:     {;mcc_generated_files/pin_manager.c: 125:  
      +                                 IOCAF5_ISR();
  2794  018F  3181  2161  3181   	fcall	_IOCAF5_ISR
  2795  0192                     i1l68:
  2796  0192  0008               	return
  2797  0193                     __end_of_PIN_MANAGER_IOC:
  2798                           
  2799                           	psect	text19
  2800  0161                     __ptext19:	
  2801 ;; *************** function _IOCAF5_ISR *****************
  2802 ;; Defined at:
  2803 ;;		line 132 in file "mcc_generated_files/pin_manager.c"
  2804 ;; Parameters:    Size  Location     Type
  2805 ;;		None
  2806 ;; Auto vars:     Size  Location     Type
  2807 ;;		None
  2808 ;; Return value:  Size  Location     Type
  2809 ;;                  1    wreg      void 
  2810 ;; Registers used:
  2811 ;;		wreg, status,2, status,0, pclath, cstack
  2812 ;; Tracked objects:
  2813 ;;		On entry : 0/0
  2814 ;;		On exit  : 0/0
  2815 ;;		Unchanged: 0/0
  2816 ;; Data sizes:     COMMON   BANK0   BANK1
  2817 ;;      Params:         0       0       0
  2818 ;;      Locals:         0       0       0
  2819 ;;      Temps:          0       0       0
  2820 ;;      Totals:         0       0       0
  2821 ;;Total ram usage:        0 bytes
  2822 ;; Hardware stack levels used:    1
  2823 ;; Hardware stack levels required when called:    1
  2824 ;; This function calls:
  2825 ;;		Absolute function
  2826 ;;		_IOCAF5_DefaultInterruptHandler
  2827 ;; This function is called by:
  2828 ;;		_PIN_MANAGER_IOC
  2829 ;; This function uses a non-reentrant model
  2830 ;;
  2831                           
  2832                           
  2833                           ;psect for function _IOCAF5_ISR
  2834  0161                     _IOCAF5_ISR:
  2835  0161                     i1l1108:	
  2836                           ;incstack = 0
  2837                           ; Regs used in _IOCAF5_ISR: [wreg+status,2+status,0+pclath+cstack]
  2838                           
  2839                           
  2840                           ;mcc_generated_files/pin_manager.c: 137:     if(IOCAF5_InterruptHandler)
  2841  0161  0020               	movlb	0	; select bank0
  2842  0162  0822               	movf	_IOCAF5_InterruptHandler,w
  2843  0163  0423               	iorwf	_IOCAF5_InterruptHandler+1,w
  2844  0164  1903               	btfsc	3,2
  2845  0165  2967               	goto	u19_21
  2846  0166  2968               	goto	u19_20
  2847  0167                     u19_21:
  2848  0167  296D               	goto	i1l1112
  2849  0168                     u19_20:
  2850  0168                     i1l1110:
  2851                           
  2852                           ;mcc_generated_files/pin_manager.c: 138:     {;mcc_generated_files/pin_manager.c: 139:  
      +                                 IOCAF5_InterruptHandler();
  2853  0168  0823               	movf	_IOCAF5_InterruptHandler+1,w
  2854  0169  008A               	movwf	10
  2855  016A  0822               	movf	_IOCAF5_InterruptHandler,w
  2856  016B  000A               	callw
  2857  016C  3181               	pagesel	$
  2858  016D                     i1l1112:
  2859                           
  2860                           ;mcc_generated_files/pin_manager.c: 141:     IOCAFbits.IOCAF5 = 0;
  2861  016D  0027               	movlb	7	; select bank7
  2862  016E  1293               	bcf	19,5	;volatile
  2863  016F                     i1l72:
  2864  016F  0008               	return
  2865  0170                     __end_of_IOCAF5_ISR:
  2866                           
  2867                           	psect	text20
  2868  01BD                     __ptext20:	
  2869 ;; *************** function _IOCAF5_DefaultInterruptHandler *****************
  2870 ;; Defined at:
  2871 ;;		line 154 in file "mcc_generated_files/pin_manager.c"
  2872 ;; Parameters:    Size  Location     Type
  2873 ;;		None
  2874 ;; Auto vars:     Size  Location     Type
  2875 ;;		None
  2876 ;; Return value:  Size  Location     Type
  2877 ;;                  1    wreg      void 
  2878 ;; Registers used:
  2879 ;;		None
  2880 ;; Tracked objects:
  2881 ;;		On entry : 0/0
  2882 ;;		On exit  : 0/0
  2883 ;;		Unchanged: 0/0
  2884 ;; Data sizes:     COMMON   BANK0   BANK1
  2885 ;;      Params:         0       0       0
  2886 ;;      Locals:         0       0       0
  2887 ;;      Temps:          0       0       0
  2888 ;;      Totals:         0       0       0
  2889 ;;Total ram usage:        0 bytes
  2890 ;; Hardware stack levels used:    1
  2891 ;; This function calls:
  2892 ;;		Nothing
  2893 ;; This function is called by:
  2894 ;;		_PIN_MANAGER_Initialize
  2895 ;;		_IOCAF5_ISR
  2896 ;; This function uses a non-reentrant model
  2897 ;;
  2898                           
  2899                           
  2900                           ;psect for function _IOCAF5_DefaultInterruptHandler
  2901  01BD                     _IOCAF5_DefaultInterruptHandler:
  2902  01BD                     i1l78:	
  2903                           ;incstack = 0
  2904                           ; Regs used in _IOCAF5_DefaultInterruptHandler: []
  2905                           
  2906  01BD  0008               	return
  2907  01BE                     __end_of_IOCAF5_DefaultInterruptHandler:
  2908  007E                     btemp	set	126	;btemp
  2909  007E                     int$flags	set	126
  2910  007E                     wtemp0	set	126
  2911                           
  2912                           	psect	config
  2913                           
  2914                           ;Config register CONFIG1 @ 0x8007
  2915                           ;	
  2916                           ;	FOSC = INTOSC, INTOSC oscillator; I/O function on CLKIN pin
  2917                           ;	Watchdog Timer Enable
  2918                           ;	WDTE = OFF, WDT disabled
  2919                           ;	Power-up Timer Enable
  2920                           ;	PWRTE = OFF, PWRT disabled
  2921                           ;	MCLR Pin Function Select
  2922                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2923                           ;	Flash Program Memory Code Protection
  2924                           ;	CP = ON, Program memory code protection is enabled
  2925                           ;	Brown-out Reset Enable
  2926                           ;	BOREN = ON, Brown-out Reset enabled
  2927                           ;	Clock Out Enable
  2928                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2929  8007                     	org	32775
  2930  8007  3F64               	dw	16228
  2931                           
  2932                           ;Config register CONFIG2 @ 0x8008
  2933                           ;	Flash Memory Self-Write Protection
  2934                           ;	WRT = OFF, Write protection off
  2935                           ;	PLL Enable
  2936                           ;	PLLEN = OFF, 4x PLL disabled
  2937                           ;	Stack Overflow/Underflow Reset Enable
  2938                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2939                           ;	Brown-out Reset Voltage Selection
  2940                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2941                           ;	Low Power Brown-out Reset enable bit
  2942                           ;	LPBOREN = OFF, LPBOR is disabled
  2943                           ;	Low-Voltage Programming Enable
  2944                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  2945  8008                     	org	32776
  2946  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         7
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      12
    BANK0            80      2       8
    BANK1            32      0       0

Pointer List with Targets:

    ADC1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> secondsTick(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> secondsTick(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    IOCAF5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF5_DefaultInterruptHandler(), 

    IOCAF5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), IOCAF5_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_setState
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCAF5_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     491
                                              0 BANK0      2     2      0
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
                     _TMR1_StopTimer
                           _setState
 ---------------------------------------------------------------------------------
 (1) _setState                                             3     3      0      45
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     272
                    _ADC1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0      98
         _IOCAF5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCAF5_SetInterruptHandler                           2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0     240
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     240
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                        _secondsTick *
 ---------------------------------------------------------------------------------
 (7) _secondsTick                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _PIN_MANAGER_IOC                                      0     0      0       0
                         _IOCAF5_ISR
 ---------------------------------------------------------------------------------
 (6) _IOCAF5_ISR                                           0     0      0       0
                   Absolute function *
     _IOCAF5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _IOCAF5_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCAF5_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize
   _TMR1_SetInterruptHandler
   _TMR1_StartTimer
   _TMR1_StopTimer
   _setState

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCAF5_ISR
       Absolute function(Fake) *
       _IOCAF5_DefaultInterruptHandler *
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _secondsTick *
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      14       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2       8       6       10.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      14       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Jan 28 10:23:15 2021

                                        l21 0160                                          l24 0199  
                                        l27 01B5                                          l64 0127  
                                        l75 01AC                                          u50 00BE  
                                        u51 00BD                                         l110 01BB  
                                       l113 01B8                                         l107 013F  
                                       l140 01A6                                         l242 0067  
                                       l234 009F                                         l235 0046  
                                       l260 00C2                                         l237 0059  
                                       l262 00C4                                         l246 007A  
                                       l183 01A0                                         l271 00DA  
                                       l273 00DC                                         l257 0104  
                                       l266 00CE                                         l276 00E6  
                                       l268 00D0                                         l278 00E8  
                                       l910 00C5                                         l840 0197  
                                       l920 00DF                                         l912 00C7  
                                       l904 00B8                                         l842 01B2  
                                       l914 00D1                                         l844 019A  
                                       l836 0193                                         l916 00D3  
                                       l924 00EA                                         l908 00BF  
                                       l838 0196                                         l918 00DD  
                                       l926 0100                                         l896 01B9  
                                       l898 01B6                                         u400 007E  
                                       u401 007D                                         u410 008D  
                                       u411 008C                                         u350 004A  
                                       u415 0089                                         u351 0049  
                                       u360 0054                                         u361 0053  
                                       u370 005D                                         u371 005C  
                                       u380 006B                                         u381 006A  
                                       u365 0050                                         u390 0075  
                                       u391 0074                                         u395 0071  
                           _timer1ReloadVal 007A          __end_of_IOCAF5_SetInterruptHandler 01AD  
                _IOCAF5_SetInterruptHandler 01A7                                        l1100 012F  
                                      l1102 0133                                        l1104 0135  
                                      l1106 013C                                        l1132 0151  
                                      l1070 0105                                        l1134 015A  
                                      l1064 01A7                                        l1080 0116  
                                      l1072 0107                                        l1136 015D  
                                      l1320 00A8                                        l1240 0032  
                                      l1090 0126                                        l1082 011B  
                                      l1074 010A                                        l1066 01A1  
                                      l1322 00F2                                        l1250 004A  
                                      l1242 003C                                        l1084 011D  
                                      l1076 010F                                        l1092 0128  
                                      l1260 0075                                        l1252 0054  
                                      l1244 003D                                        l1086 011E  
                                      l1078 0113                                        l1094 012A  
                                      l1270 009A                                        l1262 007E  
                                      l1254 005D                                        l1246 003E  
                                      l1088 011F                                        l1096 012C  
                                      l1264 0083                                        l1256 0062  
                                      l1248 0041                                        l1098 012E  
                                      l1266 008D                                        l1258 006B  
                                      l1274 009F                                        l1268 0092  
                                      _LATA 010C                                        i1l72 016F  
                                      i1l68 0192                                        i1l78 01BD  
                                      _WPUA 020C                                        _main 0032  
                                      btemp 007E                                        start 0026  
                ??_TMR1_SetInterruptHandler 0079              __size_of_OSCILLATOR_Initialize 0007  
                       __size_of_IOCAF5_ISR 000F               __end_of_OSCILLATOR_Initialize 019A  
                                     ?_main 0075                             _TMR1_StartTimer 01B9  
                                     _T1CON 0018                                       i1l121 0150  
                                     i1l133 017C                                       i1l143 01BC  
                                     i1l137 0189                                       i1l163 0024  
                                     i1l164 0024                                       i1l158 0012  
                                     i1l282 01B1                                       u20_20 0145  
                                     u20_21 0144                                       u21_20 0184  
                                     u21_21 0183                                       u22_20 018F  
                                     u22_21 018E                                       u23_20 000A  
                                     u23_21 0009                                       u24_20 000E  
                                     u24_21 000D                                       u25_20 0016  
                                     u25_21 0015                                       _TMR1H 0017  
                                     _TMR1L 0016                                       u26_20 001B  
                                     u26_21 001A                                       u19_20 0168  
                                     u27_20 0020                                       u19_21 0167  
                                     u27_21 001F                                       _TRISA 008C  
                          __end_of_TMR1_ISR 017D                     __end_of_PIN_MANAGER_IOC 0193  
                            _WDT_Initialize 01B2                     __end_of_TMR1_Initialize 0140  
                                     pclath 000A                                       status 0003  
                                     wtemp0 007E                             _TMR1_WriteTimer 0140  
                           __initialization 0027                                __end_of_main 00B7  
               ?_INTERRUPT_InterruptManager 0075                                      ??_main 0026  
                              ?_secondsTick 0075                      __end_of_WDT_Initialize 01B6  
                                    _ADCON0 009D                                      _ADCON1 009E  
                                    _ADCON2 009F                                      _ADRESH 009C  
                                    _ADRESL 009B                                      _APFCON 011D  
                                    _ANSELA 018C                                      _BORCON 0116  
                                    _T1GCON 0019                                      i1l1110 0168  
                                    i1l1112 016D                                      i1l1120 0148  
                                    i1l1130 0184                                      i1l1122 014A  
                                    i1l1114 0140                     TMR1_WriteTimer@timerVal 0075  
                                    i1l1108 0161                                      i1l1140 018F  
                                    i1l1116 0145                                      i1l1124 014C  
                                    i1l1126 014E                                      i1l1118 0146  
                                    i1l1142 0170                                      i1l1150 000A  
                                    i1l1128 017D                                      i1l1144 0172  
                                    i1l1152 000E                                      i1l1138 018A  
                                    i1l1154 0016                                      i1l1068 01AD  
                                    i1l1156 001B                                      i1l1148 0006  
                                    i1l1158 0020                                      _ODCONA 028C  
                                    _INLVLA 038C                                      _OSCCON 0099  
                                    _WDTCON 0097        __end_of_TMR1_DefaultInterruptHandler 01BD  
     __size_of_TMR1_DefaultInterruptHandler 0001                _TMR1_DefaultInterruptHandler 01BC  
                   __end_of_TMR1_StartTimer 01BC                    __size_of_ADC1_Initialize 0007  
                          __end_of_setState 0105                             ?_WDT_Initialize 0075  
  TMR1_SetInterruptHandler@InterruptHandler 0077  IOCAF5_SetInterruptHandler@InterruptHandler 0077  
                          ?_PIN_MANAGER_IOC 0075                     __end_of_TMR1_WriteTimer 0151  
                              ??_IOCAF5_ISR 0075                       __end_of_TMR1_CallBack 018A  
                          ?_TMR1_Initialize 0075                           _SYSTEM_Initialize 0151  
                   __end_of__initialization 002F                          ?_SYSTEM_Initialize 0075  
                            __pcstackCOMMON 0075                         ??_SYSTEM_Initialize 0079  
                                 ?_TMR1_ISR 0075               ?_TMR1_DefaultInterruptHandler 0075  
                        __end_of_IOCAF5_ISR 0170                              _OPTION_REGbits 0095  
               ?_IOCAF5_SetInterruptHandler 0077                   __end_of_SYSTEM_Initialize 0161  
                                __pbssBANK0 0024                                  __pnvCOMMON 007A  
          ??_IOCAF5_DefaultInterruptHandler 0075             ?_IOCAF5_DefaultInterruptHandler 0075  
                   _IOCAF5_InterruptHandler 0022                                  __pmaintext 0032  
                          ?_TMR1_StartTimer 0075                                  ??_TMR1_ISR 0077  
                                __pintentry 0004                     __size_of_TMR1_StopTimer 0003  
                                   _OSCTUNE 0098                                     _SLRCONA 030C  
                         ??_ADC1_Initialize 0077                        __size_of_secondsTick 0005  
                          ?_TMR1_WriteTimer 0075                                   ?_setState 0075  
                                   __ptext1 00B7                                     __ptext2 01B6  
                                   __ptext3 01B9                                     __ptext4 0151  
                                   __ptext5 01B2                                     __ptext6 0128  
                                   __ptext7 01A1                                     __ptext8 0105  
                                   __ptext9 01A7              ??_TMR1_DefaultInterruptHandler 0075  
                                 _T1CONbits 0018                       _OSCILLATOR_Initialize 0193  
         __size_of_TMR1_SetInterruptHandler 0006                    ??_PIN_MANAGER_Initialize 0079  
                 ?_TMR1_SetInterruptHandler 0077                                   _IOCAFbits 0393  
                                 _IOCANbits 0392                                   _IOCAPbits 0391  
                __size_of_SYSTEM_Initialize 0010                        end_of_initialization 002F  
                                ??_setState 0077                       _ADC1_InterruptHandler 0024  
                          ??_WDT_Initialize 0077                                   _PORTAbits 000C  
                         __size_of_TMR1_ISR 000D                              _TMR1_StopTimer 01B6  
                    ?_OSCILLATOR_Initialize 0075                         start_initialization 0027  
           __size_of_PIN_MANAGER_Initialize 0023                    __size_of_PIN_MANAGER_IOC 0009  
                  __size_of_TMR1_Initialize 0018                      __end_of_TMR1_StopTimer 01B9  
                           _ADC1_Initialize 019A                      __size_of_TMR1_CallBack 000D  
    __end_of_IOCAF5_DefaultInterruptHandler 01BE     __size_of_IOCAF5_DefaultInterruptHandler 0001  
            _IOCAF5_DefaultInterruptHandler 01BD                                 __pbssCOMMON 0070  
                                 ___latbits 0000                               __pcstackBANK0 0026  
                          setState@newState 0079                                _currentState 0074  
                                 __pnvBANK0 0020                      _PIN_MANAGER_Initialize 0105  
          __end_of_TMR1_SetInterruptHandler 01A7                           __size_of_setState 004E  
                           ?_TMR1_StopTimer 0075                ??_INTERRUPT_InterruptManager 0077  
                  __size_of_TMR1_StartTimer 0003                               ??_secondsTick 0075  
                             _TMR1_CallBack 017D                                    _LATAbits 010C  
                                  _PIE1bits 0091                    __size_of_TMR1_WriteTimer 0011  
       __size_of_INTERRUPT_InterruptManager 0022                     __end_of_ADC1_Initialize 01A1  
                                  _PIR1bits 0011                                    _TMR1_ISR 0170  
                         ??_PIN_MANAGER_IOC 0075                           ??_TMR1_Initialize 0079  
                                _ADCON0bits 009D                          _currentSecondsTick 0072  
                       __end_of_secondsTick 01B2                              ?_TMR1_CallBack 0075  
                   ??_OSCILLATOR_Initialize 0077                    _TMR1_SetInterruptHandler 01A1  
                     _TMR1_InterruptHandler 0020                                    __ptext10 0193  
                                  __ptext11 019A                                    __ptext20 01BD  
                                  __ptext13 0170                                  _T1GCONbits 0019  
                                  __ptext14 0140                                    __ptext15 017D  
                                  __ptext16 01BC                                    __ptext17 01AD  
                                  __ptext18 018A                                    __ptext19 0161  
              ??_IOCAF5_SetInterruptHandler 0079                           ??_TMR1_StartTimer 0077  
                                _IOCAF5_ISR 0161                               __size_of_main 0085  
                                  _setState 00B7                            ?_ADC1_Initialize 0075  
                       _demandedSecondsTick 0070                                    int$flags 007E  
        __end_of_INTERRUPT_InterruptManager 0026                  _INTERRUPT_InterruptManager 0004  
                         ??_TMR1_WriteTimer 0077         __size_of_IOCAF5_SetInterruptHandler 0006  
                                _INTCONbits 000B                                 _secondsTick 01AD  
                           ??_TMR1_CallBack 0075                     __size_of_WDT_Initialize 0004  
                                  intlevel1 0000                     ?_PIN_MANAGER_Initialize 0075  
                          ??_TMR1_StopTimer 0077                                 ?_IOCAF5_ISR 0075  
            __end_of_PIN_MANAGER_Initialize 0128                             _PIN_MANAGER_IOC 018A  
                           _TMR1_Initialize 0128  
