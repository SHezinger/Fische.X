

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Aug 11 22:48:12 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	12F1571
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.10
    27                           ; Generated 31/07/2019 GMT
    28                           ; 
    29                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC12F1571 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  008C                     	;# 
    86  0091                     	;# 
    87  0092                     	;# 
    88  0093                     	;# 
    89  0095                     	;# 
    90  0096                     	;# 
    91  0097                     	;# 
    92  0098                     	;# 
    93  0099                     	;# 
    94  009A                     	;# 
    95  009B                     	;# 
    96  009B                     	;# 
    97  009C                     	;# 
    98  009D                     	;# 
    99  009E                     	;# 
   100  009F                     	;# 
   101  010C                     	;# 
   102  0111                     	;# 
   103  0112                     	;# 
   104  0115                     	;# 
   105  0116                     	;# 
   106  0117                     	;# 
   107  0118                     	;# 
   108  0119                     	;# 
   109  011D                     	;# 
   110  011D                     	;# 
   111  018C                     	;# 
   112  0191                     	;# 
   113  0191                     	;# 
   114  0192                     	;# 
   115  0193                     	;# 
   116  0193                     	;# 
   117  0194                     	;# 
   118  0195                     	;# 
   119  0196                     	;# 
   120  0197                     	;# 
   121  020C                     	;# 
   122  028C                     	;# 
   123  030C                     	;# 
   124  038C                     	;# 
   125  0391                     	;# 
   126  0392                     	;# 
   127  0393                     	;# 
   128  0691                     	;# 
   129  0692                     	;# 
   130  0693                     	;# 
   131  0694                     	;# 
   132  0695                     	;# 
   133  0D8E                     	;# 
   134  0D8F                     	;# 
   135  0D90                     	;# 
   136  0D91                     	;# 
   137  0D91                     	;# 
   138  0D92                     	;# 
   139  0D93                     	;# 
   140  0D93                     	;# 
   141  0D94                     	;# 
   142  0D95                     	;# 
   143  0D95                     	;# 
   144  0D96                     	;# 
   145  0D97                     	;# 
   146  0D97                     	;# 
   147  0D98                     	;# 
   148  0D99                     	;# 
   149  0D99                     	;# 
   150  0D9A                     	;# 
   151  0D9B                     	;# 
   152  0D9C                     	;# 
   153  0D9C                     	;# 
   154  0D9D                     	;# 
   155  0D9D                     	;# 
   156  0D9E                     	;# 
   157  0D9F                     	;# 
   158  0DA0                     	;# 
   159  0DA1                     	;# 
   160  0DA1                     	;# 
   161  0DA2                     	;# 
   162  0DA3                     	;# 
   163  0DA3                     	;# 
   164  0DA4                     	;# 
   165  0DA5                     	;# 
   166  0DA5                     	;# 
   167  0DA6                     	;# 
   168  0DA7                     	;# 
   169  0DA7                     	;# 
   170  0DA8                     	;# 
   171  0DA9                     	;# 
   172  0DA9                     	;# 
   173  0DAA                     	;# 
   174  0DAB                     	;# 
   175  0DAC                     	;# 
   176  0DAC                     	;# 
   177  0DAD                     	;# 
   178  0DAD                     	;# 
   179  0DAE                     	;# 
   180  0DAF                     	;# 
   181  0DB0                     	;# 
   182  0DB1                     	;# 
   183  0DB1                     	;# 
   184  0DB2                     	;# 
   185  0DB3                     	;# 
   186  0DB3                     	;# 
   187  0DB4                     	;# 
   188  0DB5                     	;# 
   189  0DB5                     	;# 
   190  0DB6                     	;# 
   191  0DB7                     	;# 
   192  0DB7                     	;# 
   193  0DB8                     	;# 
   194  0DB9                     	;# 
   195  0DB9                     	;# 
   196  0DBA                     	;# 
   197  0DBB                     	;# 
   198  0DBC                     	;# 
   199  0DBC                     	;# 
   200  0DBD                     	;# 
   201  0DBD                     	;# 
   202  0DBE                     	;# 
   203  0DBF                     	;# 
   204  0DC0                     	;# 
   205  0FE4                     	;# 
   206  0FE5                     	;# 
   207  0FE6                     	;# 
   208  0FE7                     	;# 
   209  0FE8                     	;# 
   210  0FE8                     	;# 
   211  0FE9                     	;# 
   212  0FEA                     	;# 
   213  0FEA                     	;# 
   214  0FEB                     	;# 
   215  0FED                     	;# 
   216  0FEE                     	;# 
   217  0FEE                     	;# 
   218  0FEF                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0008                     	;# 
   228  0009                     	;# 
   229  000A                     	;# 
   230  000B                     	;# 
   231  000C                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  008C                     	;# 
   245  0091                     	;# 
   246  0092                     	;# 
   247  0093                     	;# 
   248  0095                     	;# 
   249  0096                     	;# 
   250  0097                     	;# 
   251  0098                     	;# 
   252  0099                     	;# 
   253  009A                     	;# 
   254  009B                     	;# 
   255  009B                     	;# 
   256  009C                     	;# 
   257  009D                     	;# 
   258  009E                     	;# 
   259  009F                     	;# 
   260  010C                     	;# 
   261  0111                     	;# 
   262  0112                     	;# 
   263  0115                     	;# 
   264  0116                     	;# 
   265  0117                     	;# 
   266  0118                     	;# 
   267  0119                     	;# 
   268  011D                     	;# 
   269  011D                     	;# 
   270  018C                     	;# 
   271  0191                     	;# 
   272  0191                     	;# 
   273  0192                     	;# 
   274  0193                     	;# 
   275  0193                     	;# 
   276  0194                     	;# 
   277  0195                     	;# 
   278  0196                     	;# 
   279  0197                     	;# 
   280  020C                     	;# 
   281  028C                     	;# 
   282  030C                     	;# 
   283  038C                     	;# 
   284  0391                     	;# 
   285  0392                     	;# 
   286  0393                     	;# 
   287  0691                     	;# 
   288  0692                     	;# 
   289  0693                     	;# 
   290  0694                     	;# 
   291  0695                     	;# 
   292  0D8E                     	;# 
   293  0D8F                     	;# 
   294  0D90                     	;# 
   295  0D91                     	;# 
   296  0D91                     	;# 
   297  0D92                     	;# 
   298  0D93                     	;# 
   299  0D93                     	;# 
   300  0D94                     	;# 
   301  0D95                     	;# 
   302  0D95                     	;# 
   303  0D96                     	;# 
   304  0D97                     	;# 
   305  0D97                     	;# 
   306  0D98                     	;# 
   307  0D99                     	;# 
   308  0D99                     	;# 
   309  0D9A                     	;# 
   310  0D9B                     	;# 
   311  0D9C                     	;# 
   312  0D9C                     	;# 
   313  0D9D                     	;# 
   314  0D9D                     	;# 
   315  0D9E                     	;# 
   316  0D9F                     	;# 
   317  0DA0                     	;# 
   318  0DA1                     	;# 
   319  0DA1                     	;# 
   320  0DA2                     	;# 
   321  0DA3                     	;# 
   322  0DA3                     	;# 
   323  0DA4                     	;# 
   324  0DA5                     	;# 
   325  0DA5                     	;# 
   326  0DA6                     	;# 
   327  0DA7                     	;# 
   328  0DA7                     	;# 
   329  0DA8                     	;# 
   330  0DA9                     	;# 
   331  0DA9                     	;# 
   332  0DAA                     	;# 
   333  0DAB                     	;# 
   334  0DAC                     	;# 
   335  0DAC                     	;# 
   336  0DAD                     	;# 
   337  0DAD                     	;# 
   338  0DAE                     	;# 
   339  0DAF                     	;# 
   340  0DB0                     	;# 
   341  0DB1                     	;# 
   342  0DB1                     	;# 
   343  0DB2                     	;# 
   344  0DB3                     	;# 
   345  0DB3                     	;# 
   346  0DB4                     	;# 
   347  0DB5                     	;# 
   348  0DB5                     	;# 
   349  0DB6                     	;# 
   350  0DB7                     	;# 
   351  0DB7                     	;# 
   352  0DB8                     	;# 
   353  0DB9                     	;# 
   354  0DB9                     	;# 
   355  0DBA                     	;# 
   356  0DBB                     	;# 
   357  0DBC                     	;# 
   358  0DBC                     	;# 
   359  0DBD                     	;# 
   360  0DBD                     	;# 
   361  0DBE                     	;# 
   362  0DBF                     	;# 
   363  0DC0                     	;# 
   364  0FE4                     	;# 
   365  0FE5                     	;# 
   366  0FE6                     	;# 
   367  0FE7                     	;# 
   368  0FE8                     	;# 
   369  0FE8                     	;# 
   370  0FE9                     	;# 
   371  0FEA                     	;# 
   372  0FEA                     	;# 
   373  0FEB                     	;# 
   374  0FED                     	;# 
   375  0FEE                     	;# 
   376  0FEE                     	;# 
   377  0FEF                     	;# 
   378  0000                     	;# 
   379  0001                     	;# 
   380  0002                     	;# 
   381  0003                     	;# 
   382  0004                     	;# 
   383  0005                     	;# 
   384  0006                     	;# 
   385  0007                     	;# 
   386  0008                     	;# 
   387  0009                     	;# 
   388  000A                     	;# 
   389  000B                     	;# 
   390  000C                     	;# 
   391  0011                     	;# 
   392  0012                     	;# 
   393  0013                     	;# 
   394  0015                     	;# 
   395  0016                     	;# 
   396  0016                     	;# 
   397  0017                     	;# 
   398  0018                     	;# 
   399  0019                     	;# 
   400  001A                     	;# 
   401  001B                     	;# 
   402  001C                     	;# 
   403  008C                     	;# 
   404  0091                     	;# 
   405  0092                     	;# 
   406  0093                     	;# 
   407  0095                     	;# 
   408  0096                     	;# 
   409  0097                     	;# 
   410  0098                     	;# 
   411  0099                     	;# 
   412  009A                     	;# 
   413  009B                     	;# 
   414  009B                     	;# 
   415  009C                     	;# 
   416  009D                     	;# 
   417  009E                     	;# 
   418  009F                     	;# 
   419  010C                     	;# 
   420  0111                     	;# 
   421  0112                     	;# 
   422  0115                     	;# 
   423  0116                     	;# 
   424  0117                     	;# 
   425  0118                     	;# 
   426  0119                     	;# 
   427  011D                     	;# 
   428  011D                     	;# 
   429  018C                     	;# 
   430  0191                     	;# 
   431  0191                     	;# 
   432  0192                     	;# 
   433  0193                     	;# 
   434  0193                     	;# 
   435  0194                     	;# 
   436  0195                     	;# 
   437  0196                     	;# 
   438  0197                     	;# 
   439  020C                     	;# 
   440  028C                     	;# 
   441  030C                     	;# 
   442  038C                     	;# 
   443  0391                     	;# 
   444  0392                     	;# 
   445  0393                     	;# 
   446  0691                     	;# 
   447  0692                     	;# 
   448  0693                     	;# 
   449  0694                     	;# 
   450  0695                     	;# 
   451  0D8E                     	;# 
   452  0D8F                     	;# 
   453  0D90                     	;# 
   454  0D91                     	;# 
   455  0D91                     	;# 
   456  0D92                     	;# 
   457  0D93                     	;# 
   458  0D93                     	;# 
   459  0D94                     	;# 
   460  0D95                     	;# 
   461  0D95                     	;# 
   462  0D96                     	;# 
   463  0D97                     	;# 
   464  0D97                     	;# 
   465  0D98                     	;# 
   466  0D99                     	;# 
   467  0D99                     	;# 
   468  0D9A                     	;# 
   469  0D9B                     	;# 
   470  0D9C                     	;# 
   471  0D9C                     	;# 
   472  0D9D                     	;# 
   473  0D9D                     	;# 
   474  0D9E                     	;# 
   475  0D9F                     	;# 
   476  0DA0                     	;# 
   477  0DA1                     	;# 
   478  0DA1                     	;# 
   479  0DA2                     	;# 
   480  0DA3                     	;# 
   481  0DA3                     	;# 
   482  0DA4                     	;# 
   483  0DA5                     	;# 
   484  0DA5                     	;# 
   485  0DA6                     	;# 
   486  0DA7                     	;# 
   487  0DA7                     	;# 
   488  0DA8                     	;# 
   489  0DA9                     	;# 
   490  0DA9                     	;# 
   491  0DAA                     	;# 
   492  0DAB                     	;# 
   493  0DAC                     	;# 
   494  0DAC                     	;# 
   495  0DAD                     	;# 
   496  0DAD                     	;# 
   497  0DAE                     	;# 
   498  0DAF                     	;# 
   499  0DB0                     	;# 
   500  0DB1                     	;# 
   501  0DB1                     	;# 
   502  0DB2                     	;# 
   503  0DB3                     	;# 
   504  0DB3                     	;# 
   505  0DB4                     	;# 
   506  0DB5                     	;# 
   507  0DB5                     	;# 
   508  0DB6                     	;# 
   509  0DB7                     	;# 
   510  0DB7                     	;# 
   511  0DB8                     	;# 
   512  0DB9                     	;# 
   513  0DB9                     	;# 
   514  0DBA                     	;# 
   515  0DBB                     	;# 
   516  0DBC                     	;# 
   517  0DBC                     	;# 
   518  0DBD                     	;# 
   519  0DBD                     	;# 
   520  0DBE                     	;# 
   521  0DBF                     	;# 
   522  0DC0                     	;# 
   523  0FE4                     	;# 
   524  0FE5                     	;# 
   525  0FE6                     	;# 
   526  0FE7                     	;# 
   527  0FE8                     	;# 
   528  0FE8                     	;# 
   529  0FE9                     	;# 
   530  0FEA                     	;# 
   531  0FEA                     	;# 
   532  0FEB                     	;# 
   533  0FED                     	;# 
   534  0FEE                     	;# 
   535  0FEE                     	;# 
   536  0FEF                     	;# 
   537  0000                     	;# 
   538  0001                     	;# 
   539  0002                     	;# 
   540  0003                     	;# 
   541  0004                     	;# 
   542  0005                     	;# 
   543  0006                     	;# 
   544  0007                     	;# 
   545  0008                     	;# 
   546  0009                     	;# 
   547  000A                     	;# 
   548  000B                     	;# 
   549  000C                     	;# 
   550  0011                     	;# 
   551  0012                     	;# 
   552  0013                     	;# 
   553  0015                     	;# 
   554  0016                     	;# 
   555  0016                     	;# 
   556  0017                     	;# 
   557  0018                     	;# 
   558  0019                     	;# 
   559  001A                     	;# 
   560  001B                     	;# 
   561  001C                     	;# 
   562  008C                     	;# 
   563  0091                     	;# 
   564  0092                     	;# 
   565  0093                     	;# 
   566  0095                     	;# 
   567  0096                     	;# 
   568  0097                     	;# 
   569  0098                     	;# 
   570  0099                     	;# 
   571  009A                     	;# 
   572  009B                     	;# 
   573  009B                     	;# 
   574  009C                     	;# 
   575  009D                     	;# 
   576  009E                     	;# 
   577  009F                     	;# 
   578  010C                     	;# 
   579  0111                     	;# 
   580  0112                     	;# 
   581  0115                     	;# 
   582  0116                     	;# 
   583  0117                     	;# 
   584  0118                     	;# 
   585  0119                     	;# 
   586  011D                     	;# 
   587  011D                     	;# 
   588  018C                     	;# 
   589  0191                     	;# 
   590  0191                     	;# 
   591  0192                     	;# 
   592  0193                     	;# 
   593  0193                     	;# 
   594  0194                     	;# 
   595  0195                     	;# 
   596  0196                     	;# 
   597  0197                     	;# 
   598  020C                     	;# 
   599  028C                     	;# 
   600  030C                     	;# 
   601  038C                     	;# 
   602  0391                     	;# 
   603  0392                     	;# 
   604  0393                     	;# 
   605  0691                     	;# 
   606  0692                     	;# 
   607  0693                     	;# 
   608  0694                     	;# 
   609  0695                     	;# 
   610  0D8E                     	;# 
   611  0D8F                     	;# 
   612  0D90                     	;# 
   613  0D91                     	;# 
   614  0D91                     	;# 
   615  0D92                     	;# 
   616  0D93                     	;# 
   617  0D93                     	;# 
   618  0D94                     	;# 
   619  0D95                     	;# 
   620  0D95                     	;# 
   621  0D96                     	;# 
   622  0D97                     	;# 
   623  0D97                     	;# 
   624  0D98                     	;# 
   625  0D99                     	;# 
   626  0D99                     	;# 
   627  0D9A                     	;# 
   628  0D9B                     	;# 
   629  0D9C                     	;# 
   630  0D9C                     	;# 
   631  0D9D                     	;# 
   632  0D9D                     	;# 
   633  0D9E                     	;# 
   634  0D9F                     	;# 
   635  0DA0                     	;# 
   636  0DA1                     	;# 
   637  0DA1                     	;# 
   638  0DA2                     	;# 
   639  0DA3                     	;# 
   640  0DA3                     	;# 
   641  0DA4                     	;# 
   642  0DA5                     	;# 
   643  0DA5                     	;# 
   644  0DA6                     	;# 
   645  0DA7                     	;# 
   646  0DA7                     	;# 
   647  0DA8                     	;# 
   648  0DA9                     	;# 
   649  0DA9                     	;# 
   650  0DAA                     	;# 
   651  0DAB                     	;# 
   652  0DAC                     	;# 
   653  0DAC                     	;# 
   654  0DAD                     	;# 
   655  0DAD                     	;# 
   656  0DAE                     	;# 
   657  0DAF                     	;# 
   658  0DB0                     	;# 
   659  0DB1                     	;# 
   660  0DB1                     	;# 
   661  0DB2                     	;# 
   662  0DB3                     	;# 
   663  0DB3                     	;# 
   664  0DB4                     	;# 
   665  0DB5                     	;# 
   666  0DB5                     	;# 
   667  0DB6                     	;# 
   668  0DB7                     	;# 
   669  0DB7                     	;# 
   670  0DB8                     	;# 
   671  0DB9                     	;# 
   672  0DB9                     	;# 
   673  0DBA                     	;# 
   674  0DBB                     	;# 
   675  0DBC                     	;# 
   676  0DBC                     	;# 
   677  0DBD                     	;# 
   678  0DBD                     	;# 
   679  0DBE                     	;# 
   680  0DBF                     	;# 
   681  0DC0                     	;# 
   682  0FE4                     	;# 
   683  0FE5                     	;# 
   684  0FE6                     	;# 
   685  0FE7                     	;# 
   686  0FE8                     	;# 
   687  0FE8                     	;# 
   688  0FE9                     	;# 
   689  0FEA                     	;# 
   690  0FEA                     	;# 
   691  0FEB                     	;# 
   692  0FED                     	;# 
   693  0FEE                     	;# 
   694  0FEE                     	;# 
   695  0FEF                     	;# 
   696  0000                     	;# 
   697  0001                     	;# 
   698  0002                     	;# 
   699  0003                     	;# 
   700  0004                     	;# 
   701  0005                     	;# 
   702  0006                     	;# 
   703  0007                     	;# 
   704  0008                     	;# 
   705  0009                     	;# 
   706  000A                     	;# 
   707  000B                     	;# 
   708  000C                     	;# 
   709  0011                     	;# 
   710  0012                     	;# 
   711  0013                     	;# 
   712  0015                     	;# 
   713  0016                     	;# 
   714  0016                     	;# 
   715  0017                     	;# 
   716  0018                     	;# 
   717  0019                     	;# 
   718  001A                     	;# 
   719  001B                     	;# 
   720  001C                     	;# 
   721  008C                     	;# 
   722  0091                     	;# 
   723  0092                     	;# 
   724  0093                     	;# 
   725  0095                     	;# 
   726  0096                     	;# 
   727  0097                     	;# 
   728  0098                     	;# 
   729  0099                     	;# 
   730  009A                     	;# 
   731  009B                     	;# 
   732  009B                     	;# 
   733  009C                     	;# 
   734  009D                     	;# 
   735  009E                     	;# 
   736  009F                     	;# 
   737  010C                     	;# 
   738  0111                     	;# 
   739  0112                     	;# 
   740  0115                     	;# 
   741  0116                     	;# 
   742  0117                     	;# 
   743  0118                     	;# 
   744  0119                     	;# 
   745  011D                     	;# 
   746  011D                     	;# 
   747  018C                     	;# 
   748  0191                     	;# 
   749  0191                     	;# 
   750  0192                     	;# 
   751  0193                     	;# 
   752  0193                     	;# 
   753  0194                     	;# 
   754  0195                     	;# 
   755  0196                     	;# 
   756  0197                     	;# 
   757  020C                     	;# 
   758  028C                     	;# 
   759  030C                     	;# 
   760  038C                     	;# 
   761  0391                     	;# 
   762  0392                     	;# 
   763  0393                     	;# 
   764  0691                     	;# 
   765  0692                     	;# 
   766  0693                     	;# 
   767  0694                     	;# 
   768  0695                     	;# 
   769  0D8E                     	;# 
   770  0D8F                     	;# 
   771  0D90                     	;# 
   772  0D91                     	;# 
   773  0D91                     	;# 
   774  0D92                     	;# 
   775  0D93                     	;# 
   776  0D93                     	;# 
   777  0D94                     	;# 
   778  0D95                     	;# 
   779  0D95                     	;# 
   780  0D96                     	;# 
   781  0D97                     	;# 
   782  0D97                     	;# 
   783  0D98                     	;# 
   784  0D99                     	;# 
   785  0D99                     	;# 
   786  0D9A                     	;# 
   787  0D9B                     	;# 
   788  0D9C                     	;# 
   789  0D9C                     	;# 
   790  0D9D                     	;# 
   791  0D9D                     	;# 
   792  0D9E                     	;# 
   793  0D9F                     	;# 
   794  0DA0                     	;# 
   795  0DA1                     	;# 
   796  0DA1                     	;# 
   797  0DA2                     	;# 
   798  0DA3                     	;# 
   799  0DA3                     	;# 
   800  0DA4                     	;# 
   801  0DA5                     	;# 
   802  0DA5                     	;# 
   803  0DA6                     	;# 
   804  0DA7                     	;# 
   805  0DA7                     	;# 
   806  0DA8                     	;# 
   807  0DA9                     	;# 
   808  0DA9                     	;# 
   809  0DAA                     	;# 
   810  0DAB                     	;# 
   811  0DAC                     	;# 
   812  0DAC                     	;# 
   813  0DAD                     	;# 
   814  0DAD                     	;# 
   815  0DAE                     	;# 
   816  0DAF                     	;# 
   817  0DB0                     	;# 
   818  0DB1                     	;# 
   819  0DB1                     	;# 
   820  0DB2                     	;# 
   821  0DB3                     	;# 
   822  0DB3                     	;# 
   823  0DB4                     	;# 
   824  0DB5                     	;# 
   825  0DB5                     	;# 
   826  0DB6                     	;# 
   827  0DB7                     	;# 
   828  0DB7                     	;# 
   829  0DB8                     	;# 
   830  0DB9                     	;# 
   831  0DB9                     	;# 
   832  0DBA                     	;# 
   833  0DBB                     	;# 
   834  0DBC                     	;# 
   835  0DBC                     	;# 
   836  0DBD                     	;# 
   837  0DBD                     	;# 
   838  0DBE                     	;# 
   839  0DBF                     	;# 
   840  0DC0                     	;# 
   841  0FE4                     	;# 
   842  0FE5                     	;# 
   843  0FE6                     	;# 
   844  0FE7                     	;# 
   845  0FE8                     	;# 
   846  0FE8                     	;# 
   847  0FE9                     	;# 
   848  0FEA                     	;# 
   849  0FEA                     	;# 
   850  0FEB                     	;# 
   851  0FED                     	;# 
   852  0FEE                     	;# 
   853  0FEE                     	;# 
   854  0FEF                     	;# 
   855                           
   856                           	psect	nvCOMMON
   857  0075                     __pnvCOMMON:	
   858  0075                     _TMR1_InterruptHandler:	
   859  0075                     	ds	2
   860  0077                     _timer1ReloadVal:	
   861  0077                     	ds	2
   862  000C                     _PORTAbits	set	12
   863  000B                     _INTCONbits	set	11
   864  0019                     _T1GCONbits	set	25
   865  0018                     _T1CONbits	set	24
   866  0018                     _T1CON	set	24
   867  0011                     _PIR1bits	set	17
   868  0016                     _TMR1L	set	22
   869  0017                     _TMR1H	set	23
   870  0019                     _T1GCON	set	25
   871  0091                     _PIE1bits	set	145
   872  0095                     _OPTION_REGbits	set	149
   873  008C                     _TRISA	set	140
   874  0097                     _WDTCON	set	151
   875  0098                     _OSCTUNE	set	152
   876  0099                     _OSCCON	set	153
   877  010C                     _LATAbits	set	268
   878  011D                     _APFCON	set	285
   879  010C                     _LATA	set	268
   880  0116                     _BORCON	set	278
   881  018C                     _ANSELA	set	396
   882  020C                     _WPUA	set	524
   883  028C                     _ODCONA	set	652
   884  030C                     _SLRCONA	set	780
   885  038C                     _INLVLA	set	908
   886                           
   887                           ; #config settings
   888  0000                     
   889                           	psect	cinit
   890  001A                     start_initialization:	
   891  001A                     __initialization:	
   892                           
   893                           ; Clear objects allocated to COMMON
   894  001A  01F0               	clrf	__pbssCOMMON& (0+127)
   895  001B  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   896  001C  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   897  001D  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   898  001E  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   899  001F                     end_of_initialization:	
   900                           ;End of C runtime variable initialization code
   901                           
   902  001F                     __end_of__initialization:	
   903  001F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   904  0020  0020               	movlb	0
   905  0021  2863               	ljmp	_main	;jump to C main() function
   906                           
   907                           	psect	bssCOMMON
   908  0070                     __pbssCOMMON:	
   909  0070                     _demandedSecondsTick:	
   910  0070                     	ds	2
   911  0072                     _currentSecondsTick:	
   912  0072                     	ds	2
   913  0074                     _currentState:	
   914  0074                     	ds	1
   915                           
   916                           	psect	cstackCOMMON
   917  0079                     __pcstackCOMMON:	
   918  0079                     ?_PIN_MANAGER_Initialize:	
   919  0079                     ?_OSCILLATOR_Initialize:	
   920                           ; 1 bytes @ 0x0
   921                           
   922  0079                     ?_WDT_Initialize:	
   923                           ; 1 bytes @ 0x0
   924                           
   925  0079                     ?_TMR1_Initialize:	
   926                           ; 1 bytes @ 0x0
   927                           
   928  0079                     ?_TMR1_DefaultInterruptHandler:	
   929                           ; 1 bytes @ 0x0
   930                           
   931  0079                     ??_TMR1_DefaultInterruptHandler:	
   932                           ; 1 bytes @ 0x0
   933                           
   934  0079                     ?_TMR1_CallBack:	
   935                           ; 1 bytes @ 0x0
   936                           
   937  0079                     ??_TMR1_CallBack:	
   938                           ; 1 bytes @ 0x0
   939                           
   940  0079                     ?_secondsTick:	
   941                           ; 1 bytes @ 0x0
   942                           
   943  0079                     ??_secondsTick:	
   944                           ; 1 bytes @ 0x0
   945                           
   946  0079                     ?_setState:	
   947                           ; 1 bytes @ 0x0
   948                           
   949  0079                     ?_SYSTEM_Initialize:	
   950                           ; 1 bytes @ 0x0
   951                           
   952  0079                     ?_TMR1_StartTimer:	
   953                           ; 1 bytes @ 0x0
   954                           
   955  0079                     ?_TMR1_WriteTimer:	
   956                           ; 1 bytes @ 0x0
   957                           
   958  0079                     ?_TMR1_ISR:	
   959                           ; 1 bytes @ 0x0
   960                           
   961  0079                     ?_INTERRUPT_InterruptManager:	
   962                           ; 1 bytes @ 0x0
   963                           
   964  0079                     ?_main:	
   965                           ; 1 bytes @ 0x0
   966                           
   967  0079                     TMR1_WriteTimer@timerVal:	
   968                           ; 1 bytes @ 0x0
   969                           
   970                           
   971                           ; 2 bytes @ 0x0
   972  0079                     	ds	2
   973  007B                     ??_PIN_MANAGER_Initialize:	
   974  007B                     ??_OSCILLATOR_Initialize:	
   975                           ; 1 bytes @ 0x2
   976                           
   977  007B                     ??_WDT_Initialize:	
   978                           ; 1 bytes @ 0x2
   979                           
   980  007B                     ??_TMR1_Initialize:	
   981                           ; 1 bytes @ 0x2
   982                           
   983  007B                     ??_TMR1_SetInterruptHandler:	
   984                           ; 1 bytes @ 0x2
   985                           
   986  007B                     ??_SYSTEM_Initialize:	
   987                           ; 1 bytes @ 0x2
   988                           
   989  007B                     ??_TMR1_StartTimer:	
   990                           ; 1 bytes @ 0x2
   991                           
   992  007B                     ??_TMR1_WriteTimer:	
   993                           ; 1 bytes @ 0x2
   994                           
   995  007B                     ??_TMR1_ISR:	
   996                           ; 1 bytes @ 0x2
   997                           
   998  007B                     ??_INTERRUPT_InterruptManager:	
   999                           ; 1 bytes @ 0x2
  1000                           
  1001  007B                     setState@newState:	
  1002                           ; 1 bytes @ 0x2
  1003                           
  1004                           
  1005                           ; 1 bytes @ 0x2
  1006  007B                     	ds	1
  1007  007C                     ??_main:	
  1008                           
  1009                           	psect	cstackBANK0
  1010  0020                     __pcstackBANK0:	
  1011                           ; 1 bytes @ 0x3
  1012                           
  1013  0020                     ?_TMR1_SetInterruptHandler:	
  1014  0020                     ??_setState:	
  1015                           ; 1 bytes @ 0x0
  1016                           
  1017  0020                     TMR1_SetInterruptHandler@InterruptHandler:	
  1018                           ; 1 bytes @ 0x0
  1019                           
  1020                           
  1021                           ; 2 bytes @ 0x0
  1022  0020                     	ds	2
  1023                           
  1024                           	psect	maintext
  1025  0063                     __pmaintext:	
  1026 ;;
  1027 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1028 ;;
  1029 ;; *************** function _main *****************
  1030 ;; Defined at:
  1031 ;;		line 68 in file "main.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;		None
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;		None
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  1    wreg      void 
  1038 ;; Registers used:
  1039 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1040 ;; Tracked objects:
  1041 ;;		On entry : B1F/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMMON   BANK0   BANK1
  1045 ;;      Params:         0       0       0
  1046 ;;      Locals:         0       0       0
  1047 ;;      Temps:          0       0       0
  1048 ;;      Totals:         0       0       0
  1049 ;;Total ram usage:        0 bytes
  1050 ;; Hardware stack levels required when called:    7
  1051 ;; This function calls:
  1052 ;;		_SYSTEM_Initialize
  1053 ;;		_TMR1_SetInterruptHandler
  1054 ;;		_TMR1_StartTimer
  1055 ;;		_setState
  1056 ;; This function is called by:
  1057 ;;		Startup code after reset
  1058 ;; This function uses a non-reentrant model
  1059 ;;
  1060                           
  1061                           
  1062                           ;psect for function _main
  1063  0063                     _main:	
  1064  0063                     l1027:	
  1065                           ;incstack = 0
  1066                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1067                           
  1068                           
  1069                           ;main.c: 71:     SYSTEM_Initialize();
  1070  0063  3180  20D7  3180   	fcall	_SYSTEM_Initialize
  1071  0066                     l1029:	
  1072                           
  1073                           ;main.c: 77:     (INTCONbits.GIE = 1);
  1074  0066  178B               	bsf	11,7	;volatile
  1075  0067                     l1031:	
  1076                           
  1077                           ;main.c: 80:     (INTCONbits.PEIE = 1);
  1078  0067  170B               	bsf	11,6	;volatile
  1079                           
  1080                           ;main.c: 89:     TMR1_SetInterruptHandler(secondsTick);
  1081  0068  30C6               	movlw	low _secondsTick
  1082  0069  0020               	movlb	0	; select bank0
  1083  006A  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  1084  006B  3000               	movlw	high _secondsTick
  1085  006C  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  1086  006D  3181  2104  3180   	fcall	_TMR1_SetInterruptHandler
  1087  0070                     l1033:	
  1088                           
  1089                           ;main.c: 91:     TMR1_StartTimer();
  1090  0070  3181  210E  3180   	fcall	_TMR1_StartTimer
  1091  0073                     l1035:	
  1092                           
  1093                           ;main.c: 93:     setState(STATE_WAIT_TIME);
  1094  0073  3001               	movlw	1
  1095  0074  3180  2022  3180   	fcall	_setState
  1096  0077                     l1037:	
  1097  0077  1003               	clrc
  1098  0078  0022               	movlb	2	; select bank2
  1099  0079  1D0C               	btfss	12,2	;volatile
  1100  007A  1403               	setc
  1101  007B  1803               	btfsc	3,0
  1102  007C  287E               	goto	u181
  1103  007D  2881               	goto	u180
  1104  007E                     u181:	
  1105  007E  0022               	movlb	2	; select bank2
  1106  007F  150C               	bsf	12,2	;volatile
  1107  0080  2883               	goto	u194
  1108  0081                     u180:	
  1109  0081  0022               	movlb	2	; select bank2
  1110  0082  110C               	bcf	12,2	;volatile
  1111  0083                     u194:	
  1112  0083  2877               	goto	l1037
  1113  0084  2819               	ljmp	start
  1114  0085                     __end_of_main:	
  1115                           
  1116                           	psect	text1
  1117  0022                     __ptext1:	
  1118 ;; *************** function _setState *****************
  1119 ;; Defined at:
  1120 ;;		line 142 in file "main.c"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;  newState        1    wreg     enum E2970
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;  newState        1    2[COMMON] enum E2970
  1125 ;; Return value:  Size  Location     Type
  1126 ;;                  1    wreg      void 
  1127 ;; Registers used:
  1128 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMMON   BANK0   BANK1
  1134 ;;      Params:         0       0       0
  1135 ;;      Locals:         1       0       0
  1136 ;;      Temps:          0       2       0
  1137 ;;      Totals:         1       2       0
  1138 ;;Total ram usage:        3 bytes
  1139 ;; Hardware stack levels used:    1
  1140 ;; Hardware stack levels required when called:    4
  1141 ;; This function calls:
  1142 ;;		Nothing
  1143 ;; This function is called by:
  1144 ;;		_main
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           
  1149                           ;psect for function _setState
  1150  0022                     _setState:	
  1151                           
  1152                           ;incstack = 0
  1153                           ; Regs used in _setState: [wreg-fsr0h+status,2+status,0]
  1154                           ;setState@newState stored from wreg
  1155  0022  00FB               	movwf	setState@newState
  1156  0023                     l1009:	
  1157                           
  1158                           ;main.c: 142: void setState(states_t newState);main.c: 143: {;main.c: 144:     if(newSta
      +                          te == currentState)
  1159  0023  087B               	movf	setState@newState,w
  1160  0024  0674               	xorwf	_currentState,w
  1161  0025  1D03               	skipz
  1162  0026  2828               	goto	u171
  1163  0027  2829               	goto	u170
  1164  0028                     u171:	
  1165  0028  2846               	goto	l1019
  1166  0029                     u170:	
  1167  0029  2862               	goto	l184
  1168  002A                     l187:	
  1169                           ;main.c: 151:             do { LATAbits.LATA1 = 0; } while(0);
  1170                           
  1171  002A  0022               	movlb	2	; select bank2
  1172  002B  108C               	bcf	12,1	;volatile
  1173  002C                     l189:	
  1174                           ;main.c: 152:             do { LATAbits.LATA2 = 0; } while(0);
  1175                           
  1176  002C  110C               	bcf	12,2	;volatile
  1177  002D                     l1013:	
  1178                           
  1179                           ;main.c: 153:             demandedSecondsTick = currentSecondsTick + 1;
  1180  002D  0872               	movf	_currentSecondsTick,w
  1181  002E  3E01               	addlw	1
  1182  002F  00F0               	movwf	_demandedSecondsTick
  1183  0030  3000               	movlw	0
  1184  0031  3D73               	addwfc	_currentSecondsTick+1,w
  1185  0032  00F1               	movwf	_demandedSecondsTick+1
  1186                           
  1187                           ;main.c: 154:             break;
  1188  0033  285D               	goto	l1021
  1189  0034                     l193:	
  1190                           ;main.c: 157:             do { LATAbits.LATA1 = 1; } while(0);
  1191                           
  1192  0034  0022               	movlb	2	; select bank2
  1193  0035  148C               	bsf	12,1	;volatile
  1194  0036                     l195:	
  1195                           ;main.c: 158:             do { LATAbits.LATA2 = 0; } while(0);
  1196                           
  1197  0036  110C               	bcf	12,2	;volatile
  1198  0037  285D               	goto	l1021
  1199  0038                     l198:	
  1200                           ;main.c: 162:             do { LATAbits.LATA1 = 0; } while(0);
  1201                           
  1202  0038  0022               	movlb	2	; select bank2
  1203  0039  108C               	bcf	12,1	;volatile
  1204  003A                     l200:	
  1205                           ;main.c: 163:             do { LATAbits.LATA2 = 1; } while(0);
  1206                           
  1207  003A  150C               	bsf	12,2	;volatile
  1208  003B                     l1015:	
  1209                           
  1210                           ;main.c: 164:             demandedSecondsTick = currentSecondsTick + 30;
  1211  003B  0872               	movf	_currentSecondsTick,w
  1212  003C  3E1E               	addlw	30
  1213  003D  00F0               	movwf	_demandedSecondsTick
  1214  003E  3000               	movlw	0
  1215  003F  3D73               	addwfc	_currentSecondsTick+1,w
  1216  0040  00F1               	movwf	_demandedSecondsTick+1
  1217                           
  1218                           ;main.c: 165:             break;
  1219  0041  285D               	goto	l1021
  1220  0042                     l203:	
  1221                           ;main.c: 168:             do { LATAbits.LATA1 = 0; } while(0);
  1222                           
  1223  0042  0022               	movlb	2	; select bank2
  1224  0043  108C               	bcf	12,1	;volatile
  1225  0044                     l205:	
  1226                           ;main.c: 169:             do { LATAbits.LATA2 = 0; } while(0);
  1227                           
  1228  0044  110C               	bcf	12,2	;volatile
  1229  0045  285D               	goto	l1021
  1230  0046                     l1019:	
  1231  0046  087B               	movf	setState@newState,w
  1232  0047  0020               	movlb	0	; select bank0
  1233  0048  00A0               	movwf	??_setState
  1234  0049  01A1               	clrf	??_setState+1
  1235                           
  1236                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1237                           ; Switch size 1, requested type "simple"
  1238                           ; Number of cases is 1, Range of values is 0 to 0
  1239                           ; switch strategies available:
  1240                           ; Name         Instructions Cycles
  1241                           ; simple_byte            4     3 (average)
  1242                           ; direct_byte            8     6 (fixed)
  1243                           ; jumptable            260     6 (fixed)
  1244                           ;	Chosen strategy is simple_byte
  1245  004A  0821               	movf	??_setState+1,w
  1246  004B  3A00               	xorlw	0	; case 0
  1247  004C  1903               	skipnz
  1248  004D  284F               	goto	l1075
  1249  004E  285D               	goto	l1021
  1250  004F                     l1075:	
  1251                           
  1252                           ; Switch size 1, requested type "simple"
  1253                           ; Number of cases is 4, Range of values is 1 to 4
  1254                           ; switch strategies available:
  1255                           ; Name         Instructions Cycles
  1256                           ; simple_byte           13     7 (average)
  1257                           ; direct_byte           17     9 (fixed)
  1258                           ; jumptable            263     9 (fixed)
  1259                           ;	Chosen strategy is simple_byte
  1260  004F  0820               	movf	??_setState,w
  1261  0050  3A01               	xorlw	1	; case 1
  1262  0051  1903               	skipnz
  1263  0052  282A               	goto	l187
  1264  0053  3A03               	xorlw	3	; case 2
  1265  0054  1903               	skipnz
  1266  0055  2834               	goto	l193
  1267  0056  3A01               	xorlw	1	; case 3
  1268  0057  1903               	skipnz
  1269  0058  2838               	goto	l198
  1270  0059  3A07               	xorlw	7	; case 4
  1271  005A  1903               	skipnz
  1272  005B  2842               	goto	l203
  1273  005C  285D               	goto	l1021
  1274  005D                     l1021:	
  1275                           
  1276                           ;main.c: 173:     currentState = newState;
  1277  005D  087B               	movf	setState@newState,w
  1278  005E  0020               	movlb	0	; select bank0
  1279  005F  00A0               	movwf	??_setState
  1280  0060  0820               	movf	??_setState,w
  1281  0061  00F4               	movwf	_currentState
  1282  0062                     l184:	
  1283  0062  0008               	return
  1284  0063                     __end_of_setState:	
  1285                           
  1286                           	psect	text2
  1287  010E                     __ptext2:	
  1288 ;; *************** function _TMR1_StartTimer *****************
  1289 ;; Defined at:
  1290 ;;		line 93 in file "mcc_generated_files/tmr1.c"
  1291 ;; Parameters:    Size  Location     Type
  1292 ;;		None
  1293 ;; Auto vars:     Size  Location     Type
  1294 ;;		None
  1295 ;; Return value:  Size  Location     Type
  1296 ;;                  1    wreg      void 
  1297 ;; Registers used:
  1298 ;;		None
  1299 ;; Tracked objects:
  1300 ;;		On entry : 0/0
  1301 ;;		On exit  : 0/0
  1302 ;;		Unchanged: 0/0
  1303 ;; Data sizes:     COMMON   BANK0   BANK1
  1304 ;;      Params:         0       0       0
  1305 ;;      Locals:         0       0       0
  1306 ;;      Temps:          0       0       0
  1307 ;;      Totals:         0       0       0
  1308 ;;Total ram usage:        0 bytes
  1309 ;; Hardware stack levels used:    1
  1310 ;; Hardware stack levels required when called:    4
  1311 ;; This function calls:
  1312 ;;		Nothing
  1313 ;; This function is called by:
  1314 ;;		_main
  1315 ;; This function uses a non-reentrant model
  1316 ;;
  1317                           
  1318                           
  1319                           ;psect for function _TMR1_StartTimer
  1320  010E                     _TMR1_StartTimer:	
  1321  010E                     l799:	
  1322                           ;incstack = 0
  1323                           ; Regs used in _TMR1_StartTimer: []
  1324                           
  1325                           
  1326                           ;mcc_generated_files/tmr1.c: 96:     T1CONbits.TMR1ON = 1;
  1327  010E  0020               	movlb	0	; select bank0
  1328  010F  1418               	bsf	24,0	;volatile
  1329  0110                     l81:	
  1330  0110  0008               	return
  1331  0111                     __end_of_TMR1_StartTimer:	
  1332                           
  1333                           	psect	text3
  1334  00D7                     __ptext3:	
  1335 ;; *************** function _SYSTEM_Initialize *****************
  1336 ;; Defined at:
  1337 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1338 ;; Parameters:    Size  Location     Type
  1339 ;;		None
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;		None
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  1    wreg      void 
  1344 ;; Registers used:
  1345 ;;		wreg, status,2, status,0, pclath, cstack
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMMON   BANK0   BANK1
  1351 ;;      Params:         0       0       0
  1352 ;;      Locals:         0       0       0
  1353 ;;      Temps:          0       0       0
  1354 ;;      Totals:         0       0       0
  1355 ;;Total ram usage:        0 bytes
  1356 ;; Hardware stack levels used:    1
  1357 ;; Hardware stack levels required when called:    6
  1358 ;; This function calls:
  1359 ;;		_OSCILLATOR_Initialize
  1360 ;;		_PIN_MANAGER_Initialize
  1361 ;;		_TMR1_Initialize
  1362 ;;		_WDT_Initialize
  1363 ;; This function is called by:
  1364 ;;		_main
  1365 ;; This function uses a non-reentrant model
  1366 ;;
  1367                           
  1368                           
  1369                           ;psect for function _SYSTEM_Initialize
  1370  00D7                     _SYSTEM_Initialize:	
  1371  00D7                     l1007:	
  1372                           ;incstack = 0
  1373                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1374                           
  1375                           
  1376                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1377  00D7  3180  209E  3180   	fcall	_PIN_MANAGER_Initialize
  1378                           
  1379                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1380  00DA  3180  20FD  3180   	fcall	_OSCILLATOR_Initialize
  1381                           
  1382                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  1383  00DD  3181  210A  3180   	fcall	_WDT_Initialize
  1384                           
  1385                           ;mcc_generated_files/mcc.c: 56:     TMR1_Initialize();
  1386  00E0  3180  2085  3180   	fcall	_TMR1_Initialize
  1387  00E3                     l19:	
  1388  00E3  0008               	return
  1389  00E4                     __end_of_SYSTEM_Initialize:	
  1390                           
  1391                           	psect	text4
  1392  010A                     __ptext4:	
  1393 ;; *************** function _WDT_Initialize *****************
  1394 ;; Defined at:
  1395 ;;		line 69 in file "mcc_generated_files/mcc.c"
  1396 ;; Parameters:    Size  Location     Type
  1397 ;;		None
  1398 ;; Auto vars:     Size  Location     Type
  1399 ;;		None
  1400 ;; Return value:  Size  Location     Type
  1401 ;;                  1    wreg      void 
  1402 ;; Registers used:
  1403 ;;		wreg
  1404 ;; Tracked objects:
  1405 ;;		On entry : 0/0
  1406 ;;		On exit  : 0/0
  1407 ;;		Unchanged: 0/0
  1408 ;; Data sizes:     COMMON   BANK0   BANK1
  1409 ;;      Params:         0       0       0
  1410 ;;      Locals:         0       0       0
  1411 ;;      Temps:          0       0       0
  1412 ;;      Totals:         0       0       0
  1413 ;;Total ram usage:        0 bytes
  1414 ;; Hardware stack levels used:    1
  1415 ;; Hardware stack levels required when called:    4
  1416 ;; This function calls:
  1417 ;;		Nothing
  1418 ;; This function is called by:
  1419 ;;		_SYSTEM_Initialize
  1420 ;; This function uses a non-reentrant model
  1421 ;;
  1422                           
  1423                           
  1424                           ;psect for function _WDT_Initialize
  1425  010A                     _WDT_Initialize:	
  1426  010A                     l761:	
  1427                           ;incstack = 0
  1428                           ; Regs used in _WDT_Initialize: [wreg]
  1429                           
  1430                           
  1431                           ;mcc_generated_files/mcc.c: 72:     WDTCON = 0x16;
  1432  010A  3016               	movlw	22
  1433  010B  0021               	movlb	1	; select bank1
  1434  010C  0097               	movwf	23	;volatile
  1435  010D                     l25:	
  1436  010D  0008               	return
  1437  010E                     __end_of_WDT_Initialize:	
  1438                           
  1439                           	psect	text5
  1440  0085                     __ptext5:	
  1441 ;; *************** function _TMR1_Initialize *****************
  1442 ;; Defined at:
  1443 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  1444 ;; Parameters:    Size  Location     Type
  1445 ;;		None
  1446 ;; Auto vars:     Size  Location     Type
  1447 ;;		None
  1448 ;; Return value:  Size  Location     Type
  1449 ;;                  1    wreg      void 
  1450 ;; Registers used:
  1451 ;;		wreg, status,2, status,0, pclath, cstack
  1452 ;; Tracked objects:
  1453 ;;		On entry : 0/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMMON   BANK0   BANK1
  1457 ;;      Params:         0       0       0
  1458 ;;      Locals:         0       0       0
  1459 ;;      Temps:          0       0       0
  1460 ;;      Totals:         0       0       0
  1461 ;;Total ram usage:        0 bytes
  1462 ;; Hardware stack levels used:    1
  1463 ;; Hardware stack levels required when called:    5
  1464 ;; This function calls:
  1465 ;;		_TMR1_SetInterruptHandler
  1466 ;; This function is called by:
  1467 ;;		_SYSTEM_Initialize
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           
  1472                           ;psect for function _TMR1_Initialize
  1473  0085                     _TMR1_Initialize:	
  1474  0085                     l991:	
  1475                           ;incstack = 0
  1476                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1477                           
  1478                           
  1479                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  1480  0085  0020               	movlb	0	; select bank0
  1481  0086  0199               	clrf	25	;volatile
  1482  0087                     l993:	
  1483                           
  1484                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x86;
  1485  0087  3086               	movlw	134
  1486  0088  0097               	movwf	23	;volatile
  1487  0089                     l995:	
  1488                           
  1489                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xE8;
  1490  0089  30E8               	movlw	232
  1491  008A  0096               	movwf	22	;volatile
  1492  008B                     l997:	
  1493                           
  1494                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  1495  008B  1011               	bcf	17,0	;volatile
  1496  008C                     l999:	
  1497                           
  1498                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  1499  008C  0817               	movf	23,w	;volatile
  1500  008D  00F8               	movwf	_timer1ReloadVal+1	;volatile
  1501  008E  0816               	movf	22,w	;volatile
  1502  008F  00F7               	movwf	_timer1ReloadVal	;volatile
  1503  0090                     l1001:	
  1504                           
  1505                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  1506  0090  0021               	movlb	1	; select bank1
  1507  0091  1411               	bsf	17,0	;volatile
  1508  0092                     l1003:	
  1509                           
  1510                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  1511  0092  3011               	movlw	low _TMR1_DefaultInterruptHandler
  1512  0093  0020               	movlb	0	; select bank0
  1513  0094  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  1514  0095  3001               	movlw	high _TMR1_DefaultInterruptHandler
  1515  0096  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  1516  0097  3181  2104  3180   	fcall	_TMR1_SetInterruptHandler
  1517  009A                     l1005:	
  1518                           
  1519                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0xC1;
  1520  009A  30C1               	movlw	193
  1521  009B  0020               	movlb	0	; select bank0
  1522  009C  0098               	movwf	24	;volatile
  1523  009D                     l78:	
  1524  009D  0008               	return
  1525  009E                     __end_of_TMR1_Initialize:	
  1526                           
  1527                           	psect	text6
  1528  0104                     __ptext6:	
  1529 ;; *************** function _TMR1_SetInterruptHandler *****************
  1530 ;; Defined at:
  1531 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  1532 ;; Parameters:    Size  Location     Type
  1533 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  1534 ;;		 -> secondsTick(1), TMR1_DefaultInterruptHandler(1), 
  1535 ;; Auto vars:     Size  Location     Type
  1536 ;;		None
  1537 ;; Return value:  Size  Location     Type
  1538 ;;                  1    wreg      void 
  1539 ;; Registers used:
  1540 ;;		wreg
  1541 ;; Tracked objects:
  1542 ;;		On entry : 0/0
  1543 ;;		On exit  : 0/0
  1544 ;;		Unchanged: 0/0
  1545 ;; Data sizes:     COMMON   BANK0   BANK1
  1546 ;;      Params:         0       2       0
  1547 ;;      Locals:         0       0       0
  1548 ;;      Temps:          0       0       0
  1549 ;;      Totals:         0       2       0
  1550 ;;Total ram usage:        2 bytes
  1551 ;; Hardware stack levels used:    1
  1552 ;; Hardware stack levels required when called:    4
  1553 ;; This function calls:
  1554 ;;		Nothing
  1555 ;; This function is called by:
  1556 ;;		_TMR1_Initialize
  1557 ;;		_main
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561                           
  1562                           ;psect for function _TMR1_SetInterruptHandler
  1563  0104                     _TMR1_SetInterruptHandler:	
  1564  0104                     l989:	
  1565                           ;incstack = 0
  1566                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  1567                           
  1568                           
  1569                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  1570  0104  0020               	movlb	0	; select bank0
  1571  0105  0821               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  1572  0106  00F6               	movwf	_TMR1_InterruptHandler+1
  1573  0107  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  1574  0108  00F5               	movwf	_TMR1_InterruptHandler
  1575  0109                     l111:	
  1576  0109  0008               	return
  1577  010A                     __end_of_TMR1_SetInterruptHandler:	
  1578                           
  1579                           	psect	text7
  1580  009E                     __ptext7:	
  1581 ;; *************** function _PIN_MANAGER_Initialize *****************
  1582 ;; Defined at:
  1583 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1584 ;; Parameters:    Size  Location     Type
  1585 ;;		None
  1586 ;; Auto vars:     Size  Location     Type
  1587 ;;		None
  1588 ;; Return value:  Size  Location     Type
  1589 ;;                  1    wreg      void 
  1590 ;; Registers used:
  1591 ;;		wreg, status,2
  1592 ;; Tracked objects:
  1593 ;;		On entry : 0/0
  1594 ;;		On exit  : 0/0
  1595 ;;		Unchanged: 0/0
  1596 ;; Data sizes:     COMMON   BANK0   BANK1
  1597 ;;      Params:         0       0       0
  1598 ;;      Locals:         0       0       0
  1599 ;;      Temps:          0       0       0
  1600 ;;      Totals:         0       0       0
  1601 ;;Total ram usage:        0 bytes
  1602 ;; Hardware stack levels used:    1
  1603 ;; Hardware stack levels required when called:    4
  1604 ;; This function calls:
  1605 ;;		Nothing
  1606 ;; This function is called by:
  1607 ;;		_SYSTEM_Initialize
  1608 ;; This function uses a non-reentrant model
  1609 ;;
  1610                           
  1611                           
  1612                           ;psect for function _PIN_MANAGER_Initialize
  1613  009E                     _PIN_MANAGER_Initialize:	
  1614  009E                     l743:	
  1615                           ;incstack = 0
  1616                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1617                           
  1618                           
  1619                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1620  009E  0022               	movlb	2	; select bank2
  1621  009F  018C               	clrf	12	;volatile
  1622  00A0                     l745:	
  1623                           
  1624                           ;mcc_generated_files/pin_manager.c: 65:     TRISA = 0x39;
  1625  00A0  3039               	movlw	57
  1626  00A1  0021               	movlb	1	; select bank1
  1627  00A2  008C               	movwf	12	;volatile
  1628  00A3                     l747:	
  1629                           
  1630                           ;mcc_generated_files/pin_manager.c: 70:     ANSELA = 0x07;
  1631  00A3  3007               	movlw	7
  1632  00A4  0023               	movlb	3	; select bank3
  1633  00A5  008C               	movwf	12	;volatile
  1634                           
  1635                           ;mcc_generated_files/pin_manager.c: 75:     WPUA = 0x00;
  1636  00A6  0024               	movlb	4	; select bank4
  1637  00A7  018C               	clrf	12	;volatile
  1638  00A8                     l749:	
  1639                           
  1640                           ;mcc_generated_files/pin_manager.c: 76:     OPTION_REGbits.nWPUEN = 1;
  1641  00A8  0021               	movlb	1	; select bank1
  1642  00A9  1795               	bsf	21,7	;volatile
  1643                           
  1644                           ;mcc_generated_files/pin_manager.c: 81:     ODCONA = 0x00;
  1645  00AA  0025               	movlb	5	; select bank5
  1646  00AB  018C               	clrf	12	;volatile
  1647  00AC                     l751:	
  1648                           
  1649                           ;mcc_generated_files/pin_manager.c: 86:     SLRCONA = 0x37;
  1650  00AC  3037               	movlw	55
  1651  00AD  0026               	movlb	6	; select bank6
  1652  00AE  008C               	movwf	12	;volatile
  1653  00AF                     l753:	
  1654                           
  1655                           ;mcc_generated_files/pin_manager.c: 91:     INLVLA = 0x3F;
  1656  00AF  303F               	movlw	63
  1657  00B0  0027               	movlb	7	; select bank7
  1658  00B1  008C               	movwf	12	;volatile
  1659                           
  1660                           ;mcc_generated_files/pin_manager.c: 96:     APFCON = 0x00;
  1661  00B2  0022               	movlb	2	; select bank2
  1662  00B3  019D               	clrf	29	;volatile
  1663  00B4                     l46:	
  1664  00B4  0008               	return
  1665  00B5                     __end_of_PIN_MANAGER_Initialize:	
  1666                           
  1667                           	psect	text8
  1668  00FD                     __ptext8:	
  1669 ;; *************** function _OSCILLATOR_Initialize *****************
  1670 ;; Defined at:
  1671 ;;		line 59 in file "mcc_generated_files/mcc.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;		None
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;		None
  1676 ;; Return value:  Size  Location     Type
  1677 ;;                  1    wreg      void 
  1678 ;; Registers used:
  1679 ;;		wreg, status,2
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMMON   BANK0   BANK1
  1685 ;;      Params:         0       0       0
  1686 ;;      Locals:         0       0       0
  1687 ;;      Temps:          0       0       0
  1688 ;;      Totals:         0       0       0
  1689 ;;Total ram usage:        0 bytes
  1690 ;; Hardware stack levels used:    1
  1691 ;; Hardware stack levels required when called:    4
  1692 ;; This function calls:
  1693 ;;		Nothing
  1694 ;; This function is called by:
  1695 ;;		_SYSTEM_Initialize
  1696 ;; This function uses a non-reentrant model
  1697 ;;
  1698                           
  1699                           
  1700                           ;psect for function _OSCILLATOR_Initialize
  1701  00FD                     _OSCILLATOR_Initialize:	
  1702  00FD                     l755:	
  1703                           ;incstack = 0
  1704                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1705                           
  1706                           
  1707                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x02;
  1708  00FD  3002               	movlw	2
  1709  00FE  0021               	movlb	1	; select bank1
  1710  00FF  0099               	movwf	25	;volatile
  1711  0100                     l757:	
  1712                           
  1713                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
  1714  0100  0198               	clrf	24	;volatile
  1715  0101                     l759:	
  1716                           
  1717                           ;mcc_generated_files/mcc.c: 66:     BORCON = 0x00;
  1718  0101  0022               	movlb	2	; select bank2
  1719  0102  0196               	clrf	22	;volatile
  1720  0103                     l22:	
  1721  0103  0008               	return
  1722  0104                     __end_of_OSCILLATOR_Initialize:	
  1723                           
  1724                           	psect	intentry
  1725  0004                     __pintentry:	
  1726 ;; *************** function _INTERRUPT_InterruptManager *****************
  1727 ;; Defined at:
  1728 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;		None
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;		None
  1733 ;; Return value:  Size  Location     Type
  1734 ;;                  1    wreg      void 
  1735 ;; Registers used:
  1736 ;;		wreg, status,2, status,0, pclath, cstack
  1737 ;; Tracked objects:
  1738 ;;		On entry : 0/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMMON   BANK0   BANK1
  1742 ;;      Params:         0       0       0
  1743 ;;      Locals:         0       0       0
  1744 ;;      Temps:          0       0       0
  1745 ;;      Totals:         0       0       0
  1746 ;;Total ram usage:        0 bytes
  1747 ;; Hardware stack levels used:    1
  1748 ;; Hardware stack levels required when called:    3
  1749 ;; This function calls:
  1750 ;;		_TMR1_ISR
  1751 ;; This function is called by:
  1752 ;;		Interrupt level 1
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756  0004                     _INTERRUPT_InterruptManager:	
  1757                           
  1758                           ;incstack = 0
  1759  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1760                           
  1761                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  1762  0005  3180               	pagesel	$
  1763  0006                     i1l933:	
  1764                           
  1765                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  1766  0006  1F0B               	btfss	11,6	;volatile
  1767  0007  2809               	goto	u12_21
  1768  0008  280A               	goto	u12_20
  1769  0009                     u12_21:	
  1770  0009  2817               	goto	i1l131
  1771  000A                     u12_20:	
  1772  000A                     i1l935:	
  1773                           
  1774                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  1775  000A  0021               	movlb	1	; select bank1
  1776  000B  1C11               	btfss	17,0	;volatile
  1777  000C  280E               	goto	u13_21
  1778  000D  280F               	goto	u13_20
  1779  000E                     u13_21:	
  1780  000E  2817               	goto	i1l131
  1781  000F                     u13_20:	
  1782  000F                     i1l937:	
  1783  000F  0020               	movlb	0	; select bank0
  1784  0010  1C11               	btfss	17,0	;volatile
  1785  0011  2813               	goto	u14_21
  1786  0012  2814               	goto	u14_20
  1787  0013                     u14_21:	
  1788  0013  2817               	goto	i1l131
  1789  0014                     u14_20:	
  1790  0014                     i1l939:	
  1791                           
  1792                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR1_ISR();
  1793  0014  3180  20E4  3180   	fcall	_TMR1_ISR
  1794  0017                     i1l131:	
  1795                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  1796                           
  1797  0017  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1798  0018  0009               	retfie
  1799  0019                     __end_of_INTERRUPT_InterruptManager:	
  1800                           
  1801                           	psect	text10
  1802  00E4                     __ptext10:	
  1803 ;; *************** function _TMR1_ISR *****************
  1804 ;; Defined at:
  1805 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  1806 ;; Parameters:    Size  Location     Type
  1807 ;;		None
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;		None
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  1    wreg      void 
  1812 ;; Registers used:
  1813 ;;		wreg, status,2, status,0, pclath, cstack
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMMON   BANK0   BANK1
  1819 ;;      Params:         0       0       0
  1820 ;;      Locals:         0       0       0
  1821 ;;      Temps:          0       0       0
  1822 ;;      Totals:         0       0       0
  1823 ;;Total ram usage:        0 bytes
  1824 ;; Hardware stack levels used:    1
  1825 ;; Hardware stack levels required when called:    2
  1826 ;; This function calls:
  1827 ;;		_TMR1_CallBack
  1828 ;;		_TMR1_WriteTimer
  1829 ;; This function is called by:
  1830 ;;		_INTERRUPT_InterruptManager
  1831 ;; This function uses a non-reentrant model
  1832 ;;
  1833                           
  1834                           
  1835                           ;psect for function _TMR1_ISR
  1836  00E4                     _TMR1_ISR:	
  1837  00E4                     i1l927:	
  1838                           ;incstack = 0
  1839                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  1840                           
  1841                           
  1842                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  1843  00E4  0020               	movlb	0	; select bank0
  1844  00E5  1011               	bcf	17,0	;volatile
  1845  00E6                     i1l929:	
  1846                           
  1847                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  1848  00E6  0878               	movf	_timer1ReloadVal+1,w	;volatile
  1849  00E7  00FA               	movwf	TMR1_WriteTimer@timerVal+1
  1850  00E8  0877               	movf	_timer1ReloadVal,w	;volatile
  1851  00E9  00F9               	movwf	TMR1_WriteTimer@timerVal
  1852  00EA  3180  20B5  3180   	fcall	_TMR1_WriteTimer
  1853                           
  1854                           ;mcc_generated_files/tmr1.c: 166:     TMR1_CallBack();
  1855  00ED  3180  20F1  3180   	fcall	_TMR1_CallBack
  1856  00F0                     i1l104:	
  1857  00F0  0008               	return
  1858  00F1                     __end_of_TMR1_ISR:	
  1859                           
  1860                           	psect	text11
  1861  00B5                     __ptext11:	
  1862 ;; *************** function _TMR1_WriteTimer *****************
  1863 ;; Defined at:
  1864 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  1865 ;; Parameters:    Size  Location     Type
  1866 ;;  timerVal        2    0[COMMON] unsigned short 
  1867 ;; Auto vars:     Size  Location     Type
  1868 ;;		None
  1869 ;; Return value:  Size  Location     Type
  1870 ;;                  1    wreg      void 
  1871 ;; Registers used:
  1872 ;;		wreg, status,2
  1873 ;; Tracked objects:
  1874 ;;		On entry : 0/0
  1875 ;;		On exit  : 0/0
  1876 ;;		Unchanged: 0/0
  1877 ;; Data sizes:     COMMON   BANK0   BANK1
  1878 ;;      Params:         2       0       0
  1879 ;;      Locals:         0       0       0
  1880 ;;      Temps:          0       0       0
  1881 ;;      Totals:         2       0       0
  1882 ;;Total ram usage:        2 bytes
  1883 ;; Hardware stack levels used:    1
  1884 ;; This function calls:
  1885 ;;		Nothing
  1886 ;; This function is called by:
  1887 ;;		_TMR1_ISR
  1888 ;;		_TMR1_Reload
  1889 ;; This function uses a non-reentrant model
  1890 ;;
  1891                           
  1892                           
  1893                           ;psect for function _TMR1_WriteTimer
  1894  00B5                     _TMR1_WriteTimer:	
  1895  00B5                     i1l911:	
  1896                           ;incstack = 0
  1897                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  1898                           
  1899                           
  1900                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  1901  00B5  0020               	movlb	0	; select bank0
  1902  00B6  1D18               	btfss	24,2	;volatile
  1903  00B7  28B9               	goto	u11_21
  1904  00B8  28BA               	goto	u11_20
  1905  00B9                     u11_21:	
  1906  00B9  28C1               	goto	i1l921
  1907  00BA                     u11_20:	
  1908  00BA                     i1l913:	
  1909                           
  1910                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  1911  00BA  1018               	bcf	24,0	;volatile
  1912  00BB                     i1l915:	
  1913                           
  1914                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (timerVal >> 8);
  1915  00BB  087A               	movf	TMR1_WriteTimer@timerVal+1,w
  1916  00BC  0097               	movwf	23	;volatile
  1917  00BD                     i1l917:	
  1918                           
  1919                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = timerVal;
  1920  00BD  0879               	movf	TMR1_WriteTimer@timerVal,w
  1921  00BE  0096               	movwf	22	;volatile
  1922  00BF                     i1l919:	
  1923                           
  1924                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  1925  00BF  1418               	bsf	24,0	;volatile
  1926                           
  1927                           ;mcc_generated_files/tmr1.c: 133:     }
  1928  00C0  28C5               	goto	i1l92
  1929  00C1                     i1l921:	
  1930                           
  1931                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (timerVal >> 8);
  1932  00C1  087A               	movf	TMR1_WriteTimer@timerVal+1,w
  1933  00C2  0097               	movwf	23	;volatile
  1934  00C3                     i1l923:	
  1935                           
  1936                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = timerVal;
  1937  00C3  0879               	movf	TMR1_WriteTimer@timerVal,w
  1938  00C4  0096               	movwf	22	;volatile
  1939  00C5                     i1l92:	
  1940  00C5  0008               	return
  1941  00C6                     __end_of_TMR1_WriteTimer:	
  1942                           
  1943                           	psect	text12
  1944  00F1                     __ptext12:	
  1945 ;; *************** function _TMR1_CallBack *****************
  1946 ;; Defined at:
  1947 ;;		line 169 in file "mcc_generated_files/tmr1.c"
  1948 ;; Parameters:    Size  Location     Type
  1949 ;;		None
  1950 ;; Auto vars:     Size  Location     Type
  1951 ;;		None
  1952 ;; Return value:  Size  Location     Type
  1953 ;;                  1    wreg      void 
  1954 ;; Registers used:
  1955 ;;		wreg, status,2, status,0, pclath, cstack
  1956 ;; Tracked objects:
  1957 ;;		On entry : 0/0
  1958 ;;		On exit  : 0/0
  1959 ;;		Unchanged: 0/0
  1960 ;; Data sizes:     COMMON   BANK0   BANK1
  1961 ;;      Params:         0       0       0
  1962 ;;      Locals:         0       0       0
  1963 ;;      Temps:          0       0       0
  1964 ;;      Totals:         0       0       0
  1965 ;;Total ram usage:        0 bytes
  1966 ;; Hardware stack levels used:    1
  1967 ;; Hardware stack levels required when called:    1
  1968 ;; This function calls:
  1969 ;;		Absolute function
  1970 ;;		_TMR1_DefaultInterruptHandler
  1971 ;;		_secondsTick
  1972 ;; This function is called by:
  1973 ;;		_TMR1_ISR
  1974 ;; This function uses a non-reentrant model
  1975 ;;
  1976                           
  1977                           
  1978                           ;psect for function _TMR1_CallBack
  1979  00F1                     _TMR1_CallBack:	
  1980  00F1                     i1l793:	
  1981                           ;incstack = 0
  1982                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
  1983                           
  1984                           
  1985                           ;mcc_generated_files/tmr1.c: 172:     if(TMR1_InterruptHandler)
  1986  00F1  0875               	movf	_TMR1_InterruptHandler,w
  1987  00F2  0476               	iorwf	_TMR1_InterruptHandler+1,w
  1988  00F3  1903               	btfsc	3,2
  1989  00F4  28F6               	goto	u4_21
  1990  00F5  28F7               	goto	u4_20
  1991  00F6                     u4_21:	
  1992  00F6  28FC               	goto	i1l108
  1993  00F7                     u4_20:	
  1994  00F7                     i1l795:	
  1995                           
  1996                           ;mcc_generated_files/tmr1.c: 173:     {;mcc_generated_files/tmr1.c: 174:         TMR1_In
      +                          terruptHandler();
  1997  00F7  0876               	movf	_TMR1_InterruptHandler+1,w
  1998  00F8  008A               	movwf	10
  1999  00F9  0875               	movf	_TMR1_InterruptHandler,w
  2000  00FA  000A               	callw
  2001  00FB  3180               	pagesel	$
  2002  00FC                     i1l108:	
  2003  00FC  0008               	return
  2004  00FD                     __end_of_TMR1_CallBack:	
  2005                           
  2006                           	psect	text13
  2007  0111                     __ptext13:	
  2008 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  2009 ;; Defined at:
  2010 ;;		line 182 in file "mcc_generated_files/tmr1.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;		None
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;		None
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  1    wreg      void 
  2017 ;; Registers used:
  2018 ;;		None
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMMON   BANK0   BANK1
  2024 ;;      Params:         0       0       0
  2025 ;;      Locals:         0       0       0
  2026 ;;      Temps:          0       0       0
  2027 ;;      Totals:         0       0       0
  2028 ;;Total ram usage:        0 bytes
  2029 ;; Hardware stack levels used:    1
  2030 ;; This function calls:
  2031 ;;		Nothing
  2032 ;; This function is called by:
  2033 ;;		_TMR1_Initialize
  2034 ;;		_TMR1_CallBack
  2035 ;; This function uses a non-reentrant model
  2036 ;;
  2037                           
  2038                           
  2039                           ;psect for function _TMR1_DefaultInterruptHandler
  2040  0111                     _TMR1_DefaultInterruptHandler:	
  2041  0111                     i1l114:	
  2042                           ;incstack = 0
  2043                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  2044                           
  2045  0111  0008               	return
  2046  0112                     __end_of_TMR1_DefaultInterruptHandler:	
  2047                           
  2048                           	psect	text14
  2049  00C6                     __ptext14:	
  2050 ;; *************** function _secondsTick *****************
  2051 ;; Defined at:
  2052 ;;		line 179 in file "main.c"
  2053 ;; Parameters:    Size  Location     Type
  2054 ;;		None
  2055 ;; Auto vars:     Size  Location     Type
  2056 ;;		None
  2057 ;; Return value:  Size  Location     Type
  2058 ;;                  1    wreg      void 
  2059 ;; Registers used:
  2060 ;;		wreg, status,0
  2061 ;; Tracked objects:
  2062 ;;		On entry : 0/0
  2063 ;;		On exit  : 0/0
  2064 ;;		Unchanged: 0/0
  2065 ;; Data sizes:     COMMON   BANK0   BANK1
  2066 ;;      Params:         0       0       0
  2067 ;;      Locals:         0       0       0
  2068 ;;      Temps:          0       0       0
  2069 ;;      Totals:         0       0       0
  2070 ;;Total ram usage:        0 bytes
  2071 ;; Hardware stack levels used:    1
  2072 ;; This function calls:
  2073 ;;		Nothing
  2074 ;; This function is called by:
  2075 ;;		_main
  2076 ;;		_TMR1_CallBack
  2077 ;; This function uses a non-reentrant model
  2078 ;;
  2079                           
  2080                           
  2081                           ;psect for function _secondsTick
  2082  00C6                     _secondsTick:	
  2083  00C6                     i1l739:	
  2084                           ;incstack = 0
  2085                           ; Regs used in _secondsTick: [wreg+status,0]
  2086                           
  2087                           
  2088                           ;main.c: 181:     currentSecondsTick++;
  2089  00C6  3001               	movlw	1
  2090  00C7  07F2               	addwf	_currentSecondsTick,f
  2091  00C8  3000               	movlw	0
  2092  00C9  3DF3               	addwfc	_currentSecondsTick+1,f
  2093  00CA                     i1l741:	
  2094  00CA  1003               	clrc
  2095  00CB  0022               	movlb	2	; select bank2
  2096  00CC  1D0C               	btfss	12,2	;volatile
  2097  00CD  1403               	setc
  2098  00CE  1803               	btfsc	3,0
  2099  00CF  28D1               	goto	u1_21
  2100  00D0  28D4               	goto	u1_20
  2101  00D1                     u1_21:	
  2102  00D1  0022               	movlb	2	; select bank2
  2103  00D2  150C               	bsf	12,2	;volatile
  2104  00D3  28D6               	goto	u2_24
  2105  00D4                     u1_20:	
  2106  00D4  0022               	movlb	2	; select bank2
  2107  00D5  110C               	bcf	12,2	;volatile
  2108  00D6                     u2_24:	
  2109  00D6                     i1l211:	
  2110  00D6  0008               	return
  2111  00D7                     __end_of_secondsTick:	
  2112  007E                     btemp	set	126	;btemp
  2113  007E                     int$flags	set	126
  2114  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3      12
    BANK0            80      2       2
    BANK1            32      0       0

Pointer List with Targets:

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> secondsTick(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> secondsTick(), Absolute function(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_setState

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->_TMR1_SetInterruptHandler
    _main->_setState
    _TMR1_Initialize->_TMR1_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     488
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
                           _setState
 ---------------------------------------------------------------------------------
 (1) _setState                                             3     3      0      66
                                              2 COMMON     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     211
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0     240
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     240
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                        _secondsTick *
 ---------------------------------------------------------------------------------
 (7) _secondsTick                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize
   _TMR1_SetInterruptHandler
   _TMR1_StartTimer
   _setState

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _secondsTick *
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      3       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       E       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2       2       6        2.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0       E       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Aug 11 22:48:12 2020

                             __CFG_CP$OFF 0000                                        l22 0103  
                                      l25 010D                                        l19 00E3  
                                      l46 00B4                                        l81 0110  
                                      l78 009D                                       l111 0109  
                                     l200 003A                                       l203 0042  
                                     l205 0044                                       l184 0062  
                                     l193 0034                                       l195 0036  
                                     l187 002A                                       l189 002C  
                                     l198 0038                                       l751 00AC  
                                     l743 009E                                       l753 00AF  
                                     l745 00A0                                       l761 010A  
                                     l755 00FD                                       l747 00A3  
                                     l757 0100                                       l749 00A8  
                                     l759 0101                                       l991 0085  
                                     l799 010E                                       l993 0087  
                                     l995 0089                                       l989 0104  
                                     l997 008B                                       l999 008C  
                                     u170 0029                                       u171 0028  
                                     u180 0081                                       u181 007E  
                                     u194 0083                           _timer1ReloadVal 0077  
                            __CFG_BORV$LO 0000                              __CFG_LVP$OFF 0000  
                                    l1001 0090                                      l1003 0092  
                                    l1005 009A                                      l1021 005D  
                                    l1013 002D                                      l1007 00D7  
                                    l1015 003B                                      l1031 0067  
                                    l1009 0023                                      l1033 0070  
                                    l1019 0046                                      l1035 0073  
                                    l1027 0063                                      l1037 0077  
                                    l1029 0066                                      l1075 004F  
                                    _LATA 010C                                      i1l92 00C5  
                                    _WPUA 020C                                      u1_20 00D4  
                                    u1_21 00D1                                      u2_24 00D6  
                                    u4_20 00F7                                      u4_21 00F6  
                            __CFG_WRT$OFF 0000                                      _main 0063  
                                    btemp 007E                             __CFG_BOREN$ON 0000  
                                    start 0019                ??_TMR1_SetInterruptHandler 007B  
                           __CFG_MCLRE$ON 0000            __size_of_OSCILLATOR_Initialize 0007  
           __end_of_OSCILLATOR_Initialize 0104                                     ?_main 0079  
                           __CFG_WDTE$OFF 0000                           _TMR1_StartTimer 010E  
                                   _T1CON 0018                                     i1l104 00F0  
                                   i1l114 0111                                     i1l211 00D6  
                                   i1l131 0017                                     i1l108 00FC  
                                   i1l741 00CA                                     i1l911 00B5  
                                   i1l913 00BA                                     i1l921 00C1  
                                   i1l739 00C6                                     i1l923 00C3  
                                   i1l915 00BB                                     i1l917 00BD  
                                   i1l933 0006                                     i1l919 00BF  
                                   i1l927 00E4                                     i1l935 000A  
                                   i1l793 00F1                                     i1l929 00E6  
                                   i1l937 000F                                     i1l795 00F7  
                                   i1l939 0014                                     u11_20 00BA  
                                   u11_21 00B9                                     u12_20 000A  
                                   u12_21 0009                                     u13_20 000F  
                                   u13_21 000E                                     u14_20 0014  
                                   u14_21 0013                                     _TMR1H 0017  
                                   _TMR1L 0016                                     _TRISA 008C  
                        __end_of_TMR1_ISR 00F1                            _WDT_Initialize 010A  
                 __end_of_TMR1_Initialize 009E                                     pclath 000A  
                                   status 0003                                     wtemp0 007E  
                         _TMR1_WriteTimer 00B5                           __initialization 001A  
                            __end_of_main 0085               ?_INTERRUPT_InterruptManager 0079  
                                  ??_main 007C                            __CFG_PLLEN$OFF 0000  
                            ?_secondsTick 0079                    __end_of_WDT_Initialize 010E  
                                  _APFCON 011D                                    _ANSELA 018C  
                                  _BORCON 0116                                    _T1GCON 0019  
                 TMR1_WriteTimer@timerVal 0079                                    _ODCONA 028C  
                                  _INLVLA 038C                                    _OSCCON 0099  
                                  _WDTCON 0097                            __CFG_PWRTE$OFF 0000  
    __end_of_TMR1_DefaultInterruptHandler 0112     __size_of_TMR1_DefaultInterruptHandler 0001  
            _TMR1_DefaultInterruptHandler 0111                   __end_of_TMR1_StartTimer 0111  
                          __CFG_STVREN$ON 0000                          __end_of_setState 0063  
                         ?_WDT_Initialize 0079  TMR1_SetInterruptHandler@InterruptHandler 0020  
                 __end_of_TMR1_WriteTimer 00C6                     __end_of_TMR1_CallBack 00FD  
                        ?_TMR1_Initialize 0079                         _SYSTEM_Initialize 00D7  
                 __end_of__initialization 001F                        ?_SYSTEM_Initialize 0079  
                          __pcstackCOMMON 0079                       ??_SYSTEM_Initialize 007B  
                               ?_TMR1_ISR 0079             ?_TMR1_DefaultInterruptHandler 0079  
                          _OPTION_REGbits 0095                 __end_of_SYSTEM_Initialize 00E4  
                              __pnvCOMMON 0075                                __pmaintext 0063  
                        ?_TMR1_StartTimer 0079                                ??_TMR1_ISR 007B  
                              __pintentry 0004                                   _OSCTUNE 0098  
                                 _SLRCONA 030C                      __size_of_secondsTick 0011  
                        ?_TMR1_WriteTimer 0079                                 ?_setState 0079  
                                 __ptext1 0022                                   __ptext2 010E  
                                 __ptext3 00D7                                   __ptext4 010A  
                                 __ptext5 0085                                   __ptext6 0104  
                                 __ptext7 009E                                   __ptext8 00FD  
          ??_TMR1_DefaultInterruptHandler 0079                                 _T1CONbits 0018  
                   _OSCILLATOR_Initialize 00FD         __size_of_TMR1_SetInterruptHandler 0006  
                ??_PIN_MANAGER_Initialize 007B                 ?_TMR1_SetInterruptHandler 0020  
              __size_of_SYSTEM_Initialize 000D                      end_of_initialization 001F  
                              ??_setState 0020                          ??_WDT_Initialize 007B  
                               _PORTAbits 000C                          __CFG_FOSC$INTOSC 0000  
                       __size_of_TMR1_ISR 000D                    ?_OSCILLATOR_Initialize 0079  
                     start_initialization 001A           __size_of_PIN_MANAGER_Initialize 0017  
                        __CFG_LPBOREN$OFF 0000                  __size_of_TMR1_Initialize 0019  
                  __size_of_TMR1_CallBack 000C                               __pbssCOMMON 0070  
                               ___latbits 0000                             __pcstackBANK0 0020  
                        setState@newState 007B                              _currentState 0074  
                  _PIN_MANAGER_Initialize 009E          __end_of_TMR1_SetInterruptHandler 010A  
                       __size_of_setState 0041              ??_INTERRUPT_InterruptManager 007B  
                __size_of_TMR1_StartTimer 0003                             ??_secondsTick 0079  
                           _TMR1_CallBack 00F1                                  _LATAbits 010C  
                                _PIE1bits 0091                  __size_of_TMR1_WriteTimer 0011  
     __size_of_INTERRUPT_InterruptManager 0015                                  _PIR1bits 0011  
                                _TMR1_ISR 00E4                         ??_TMR1_Initialize 007B  
                      _currentSecondsTick 0072                       __end_of_secondsTick 00D7  
                          ?_TMR1_CallBack 0079                   ??_OSCILLATOR_Initialize 007B  
                _TMR1_SetInterruptHandler 0104                     _TMR1_InterruptHandler 0075  
                                __ptext10 00E4                                  __ptext11 00B5  
                                __ptext12 00F1                                  __ptext13 0111  
                              _T1GCONbits 0019                                  __ptext14 00C6  
                       ??_TMR1_StartTimer 007B                             __size_of_main 0022  
                                _setState 0022                       _demandedSecondsTick 0070  
                                int$flags 007E        __end_of_INTERRUPT_InterruptManager 0019  
              _INTERRUPT_InterruptManager 0004                         ??_TMR1_WriteTimer 007B  
                              _INTCONbits 000B                               _secondsTick 00C6  
                         ??_TMR1_CallBack 0079                   __size_of_WDT_Initialize 0004  
                                intlevel1 0000                   ?_PIN_MANAGER_Initialize 0079  
                       __CFG_CLKOUTEN$OFF 0000            __end_of_PIN_MANAGER_Initialize 00B5  
                         _TMR1_Initialize 0085  
