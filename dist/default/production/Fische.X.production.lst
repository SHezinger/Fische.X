

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Jan 19 08:28:43 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	12LF1571
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC12LF1571 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  008C                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0095                     	;# 
    95  0096                     	;# 
    96  0097                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009A                     	;# 
   100  009B                     	;# 
   101  009B                     	;# 
   102  009C                     	;# 
   103  009D                     	;# 
   104  009E                     	;# 
   105  009F                     	;# 
   106  010C                     	;# 
   107  0111                     	;# 
   108  0112                     	;# 
   109  0115                     	;# 
   110  0116                     	;# 
   111  0117                     	;# 
   112  0118                     	;# 
   113  0119                     	;# 
   114  011D                     	;# 
   115  011D                     	;# 
   116  018C                     	;# 
   117  0191                     	;# 
   118  0191                     	;# 
   119  0192                     	;# 
   120  0193                     	;# 
   121  0193                     	;# 
   122  0194                     	;# 
   123  0195                     	;# 
   124  0196                     	;# 
   125  020C                     	;# 
   126  028C                     	;# 
   127  030C                     	;# 
   128  038C                     	;# 
   129  0391                     	;# 
   130  0392                     	;# 
   131  0393                     	;# 
   132  0691                     	;# 
   133  0692                     	;# 
   134  0693                     	;# 
   135  0694                     	;# 
   136  0695                     	;# 
   137  0D8E                     	;# 
   138  0D8F                     	;# 
   139  0D90                     	;# 
   140  0D91                     	;# 
   141  0D91                     	;# 
   142  0D92                     	;# 
   143  0D93                     	;# 
   144  0D93                     	;# 
   145  0D94                     	;# 
   146  0D95                     	;# 
   147  0D95                     	;# 
   148  0D96                     	;# 
   149  0D97                     	;# 
   150  0D97                     	;# 
   151  0D98                     	;# 
   152  0D99                     	;# 
   153  0D99                     	;# 
   154  0D9A                     	;# 
   155  0D9B                     	;# 
   156  0D9C                     	;# 
   157  0D9C                     	;# 
   158  0D9D                     	;# 
   159  0D9D                     	;# 
   160  0D9E                     	;# 
   161  0D9F                     	;# 
   162  0DA0                     	;# 
   163  0DA1                     	;# 
   164  0DA1                     	;# 
   165  0DA2                     	;# 
   166  0DA3                     	;# 
   167  0DA3                     	;# 
   168  0DA4                     	;# 
   169  0DA5                     	;# 
   170  0DA5                     	;# 
   171  0DA6                     	;# 
   172  0DA7                     	;# 
   173  0DA7                     	;# 
   174  0DA8                     	;# 
   175  0DA9                     	;# 
   176  0DA9                     	;# 
   177  0DAA                     	;# 
   178  0DAB                     	;# 
   179  0DAC                     	;# 
   180  0DAC                     	;# 
   181  0DAD                     	;# 
   182  0DAD                     	;# 
   183  0DAE                     	;# 
   184  0DAF                     	;# 
   185  0DB0                     	;# 
   186  0DB1                     	;# 
   187  0DB1                     	;# 
   188  0DB2                     	;# 
   189  0DB3                     	;# 
   190  0DB3                     	;# 
   191  0DB4                     	;# 
   192  0DB5                     	;# 
   193  0DB5                     	;# 
   194  0DB6                     	;# 
   195  0DB7                     	;# 
   196  0DB7                     	;# 
   197  0DB8                     	;# 
   198  0DB9                     	;# 
   199  0DB9                     	;# 
   200  0DBA                     	;# 
   201  0DBB                     	;# 
   202  0DBC                     	;# 
   203  0DBC                     	;# 
   204  0DBD                     	;# 
   205  0DBD                     	;# 
   206  0DBE                     	;# 
   207  0DBF                     	;# 
   208  0DC0                     	;# 
   209  0FE4                     	;# 
   210  0FE5                     	;# 
   211  0FE6                     	;# 
   212  0FE7                     	;# 
   213  0FE8                     	;# 
   214  0FE8                     	;# 
   215  0FE9                     	;# 
   216  0FEA                     	;# 
   217  0FEA                     	;# 
   218  0FEB                     	;# 
   219  0FED                     	;# 
   220  0FEE                     	;# 
   221  0FEE                     	;# 
   222  0FEF                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  0011                     	;# 
   237  0012                     	;# 
   238  0013                     	;# 
   239  0015                     	;# 
   240  0016                     	;# 
   241  0016                     	;# 
   242  0017                     	;# 
   243  0018                     	;# 
   244  0019                     	;# 
   245  001A                     	;# 
   246  001B                     	;# 
   247  001C                     	;# 
   248  008C                     	;# 
   249  0091                     	;# 
   250  0092                     	;# 
   251  0093                     	;# 
   252  0095                     	;# 
   253  0096                     	;# 
   254  0097                     	;# 
   255  0098                     	;# 
   256  0099                     	;# 
   257  009A                     	;# 
   258  009B                     	;# 
   259  009B                     	;# 
   260  009C                     	;# 
   261  009D                     	;# 
   262  009E                     	;# 
   263  009F                     	;# 
   264  010C                     	;# 
   265  0111                     	;# 
   266  0112                     	;# 
   267  0115                     	;# 
   268  0116                     	;# 
   269  0117                     	;# 
   270  0118                     	;# 
   271  0119                     	;# 
   272  011D                     	;# 
   273  011D                     	;# 
   274  018C                     	;# 
   275  0191                     	;# 
   276  0191                     	;# 
   277  0192                     	;# 
   278  0193                     	;# 
   279  0193                     	;# 
   280  0194                     	;# 
   281  0195                     	;# 
   282  0196                     	;# 
   283  020C                     	;# 
   284  028C                     	;# 
   285  030C                     	;# 
   286  038C                     	;# 
   287  0391                     	;# 
   288  0392                     	;# 
   289  0393                     	;# 
   290  0691                     	;# 
   291  0692                     	;# 
   292  0693                     	;# 
   293  0694                     	;# 
   294  0695                     	;# 
   295  0D8E                     	;# 
   296  0D8F                     	;# 
   297  0D90                     	;# 
   298  0D91                     	;# 
   299  0D91                     	;# 
   300  0D92                     	;# 
   301  0D93                     	;# 
   302  0D93                     	;# 
   303  0D94                     	;# 
   304  0D95                     	;# 
   305  0D95                     	;# 
   306  0D96                     	;# 
   307  0D97                     	;# 
   308  0D97                     	;# 
   309  0D98                     	;# 
   310  0D99                     	;# 
   311  0D99                     	;# 
   312  0D9A                     	;# 
   313  0D9B                     	;# 
   314  0D9C                     	;# 
   315  0D9C                     	;# 
   316  0D9D                     	;# 
   317  0D9D                     	;# 
   318  0D9E                     	;# 
   319  0D9F                     	;# 
   320  0DA0                     	;# 
   321  0DA1                     	;# 
   322  0DA1                     	;# 
   323  0DA2                     	;# 
   324  0DA3                     	;# 
   325  0DA3                     	;# 
   326  0DA4                     	;# 
   327  0DA5                     	;# 
   328  0DA5                     	;# 
   329  0DA6                     	;# 
   330  0DA7                     	;# 
   331  0DA7                     	;# 
   332  0DA8                     	;# 
   333  0DA9                     	;# 
   334  0DA9                     	;# 
   335  0DAA                     	;# 
   336  0DAB                     	;# 
   337  0DAC                     	;# 
   338  0DAC                     	;# 
   339  0DAD                     	;# 
   340  0DAD                     	;# 
   341  0DAE                     	;# 
   342  0DAF                     	;# 
   343  0DB0                     	;# 
   344  0DB1                     	;# 
   345  0DB1                     	;# 
   346  0DB2                     	;# 
   347  0DB3                     	;# 
   348  0DB3                     	;# 
   349  0DB4                     	;# 
   350  0DB5                     	;# 
   351  0DB5                     	;# 
   352  0DB6                     	;# 
   353  0DB7                     	;# 
   354  0DB7                     	;# 
   355  0DB8                     	;# 
   356  0DB9                     	;# 
   357  0DB9                     	;# 
   358  0DBA                     	;# 
   359  0DBB                     	;# 
   360  0DBC                     	;# 
   361  0DBC                     	;# 
   362  0DBD                     	;# 
   363  0DBD                     	;# 
   364  0DBE                     	;# 
   365  0DBF                     	;# 
   366  0DC0                     	;# 
   367  0FE4                     	;# 
   368  0FE5                     	;# 
   369  0FE6                     	;# 
   370  0FE7                     	;# 
   371  0FE8                     	;# 
   372  0FE8                     	;# 
   373  0FE9                     	;# 
   374  0FEA                     	;# 
   375  0FEA                     	;# 
   376  0FEB                     	;# 
   377  0FED                     	;# 
   378  0FEE                     	;# 
   379  0FEE                     	;# 
   380  0FEF                     	;# 
   381  0000                     	;# 
   382  0001                     	;# 
   383  0002                     	;# 
   384  0003                     	;# 
   385  0004                     	;# 
   386  0005                     	;# 
   387  0006                     	;# 
   388  0007                     	;# 
   389  0008                     	;# 
   390  0009                     	;# 
   391  000A                     	;# 
   392  000B                     	;# 
   393  000C                     	;# 
   394  0011                     	;# 
   395  0012                     	;# 
   396  0013                     	;# 
   397  0015                     	;# 
   398  0016                     	;# 
   399  0016                     	;# 
   400  0017                     	;# 
   401  0018                     	;# 
   402  0019                     	;# 
   403  001A                     	;# 
   404  001B                     	;# 
   405  001C                     	;# 
   406  008C                     	;# 
   407  0091                     	;# 
   408  0092                     	;# 
   409  0093                     	;# 
   410  0095                     	;# 
   411  0096                     	;# 
   412  0097                     	;# 
   413  0098                     	;# 
   414  0099                     	;# 
   415  009A                     	;# 
   416  009B                     	;# 
   417  009B                     	;# 
   418  009C                     	;# 
   419  009D                     	;# 
   420  009E                     	;# 
   421  009F                     	;# 
   422  010C                     	;# 
   423  0111                     	;# 
   424  0112                     	;# 
   425  0115                     	;# 
   426  0116                     	;# 
   427  0117                     	;# 
   428  0118                     	;# 
   429  0119                     	;# 
   430  011D                     	;# 
   431  011D                     	;# 
   432  018C                     	;# 
   433  0191                     	;# 
   434  0191                     	;# 
   435  0192                     	;# 
   436  0193                     	;# 
   437  0193                     	;# 
   438  0194                     	;# 
   439  0195                     	;# 
   440  0196                     	;# 
   441  020C                     	;# 
   442  028C                     	;# 
   443  030C                     	;# 
   444  038C                     	;# 
   445  0391                     	;# 
   446  0392                     	;# 
   447  0393                     	;# 
   448  0691                     	;# 
   449  0692                     	;# 
   450  0693                     	;# 
   451  0694                     	;# 
   452  0695                     	;# 
   453  0D8E                     	;# 
   454  0D8F                     	;# 
   455  0D90                     	;# 
   456  0D91                     	;# 
   457  0D91                     	;# 
   458  0D92                     	;# 
   459  0D93                     	;# 
   460  0D93                     	;# 
   461  0D94                     	;# 
   462  0D95                     	;# 
   463  0D95                     	;# 
   464  0D96                     	;# 
   465  0D97                     	;# 
   466  0D97                     	;# 
   467  0D98                     	;# 
   468  0D99                     	;# 
   469  0D99                     	;# 
   470  0D9A                     	;# 
   471  0D9B                     	;# 
   472  0D9C                     	;# 
   473  0D9C                     	;# 
   474  0D9D                     	;# 
   475  0D9D                     	;# 
   476  0D9E                     	;# 
   477  0D9F                     	;# 
   478  0DA0                     	;# 
   479  0DA1                     	;# 
   480  0DA1                     	;# 
   481  0DA2                     	;# 
   482  0DA3                     	;# 
   483  0DA3                     	;# 
   484  0DA4                     	;# 
   485  0DA5                     	;# 
   486  0DA5                     	;# 
   487  0DA6                     	;# 
   488  0DA7                     	;# 
   489  0DA7                     	;# 
   490  0DA8                     	;# 
   491  0DA9                     	;# 
   492  0DA9                     	;# 
   493  0DAA                     	;# 
   494  0DAB                     	;# 
   495  0DAC                     	;# 
   496  0DAC                     	;# 
   497  0DAD                     	;# 
   498  0DAD                     	;# 
   499  0DAE                     	;# 
   500  0DAF                     	;# 
   501  0DB0                     	;# 
   502  0DB1                     	;# 
   503  0DB1                     	;# 
   504  0DB2                     	;# 
   505  0DB3                     	;# 
   506  0DB3                     	;# 
   507  0DB4                     	;# 
   508  0DB5                     	;# 
   509  0DB5                     	;# 
   510  0DB6                     	;# 
   511  0DB7                     	;# 
   512  0DB7                     	;# 
   513  0DB8                     	;# 
   514  0DB9                     	;# 
   515  0DB9                     	;# 
   516  0DBA                     	;# 
   517  0DBB                     	;# 
   518  0DBC                     	;# 
   519  0DBC                     	;# 
   520  0DBD                     	;# 
   521  0DBD                     	;# 
   522  0DBE                     	;# 
   523  0DBF                     	;# 
   524  0DC0                     	;# 
   525  0FE4                     	;# 
   526  0FE5                     	;# 
   527  0FE6                     	;# 
   528  0FE7                     	;# 
   529  0FE8                     	;# 
   530  0FE8                     	;# 
   531  0FE9                     	;# 
   532  0FEA                     	;# 
   533  0FEA                     	;# 
   534  0FEB                     	;# 
   535  0FED                     	;# 
   536  0FEE                     	;# 
   537  0FEE                     	;# 
   538  0FEF                     	;# 
   539  0000                     	;# 
   540  0001                     	;# 
   541  0002                     	;# 
   542  0003                     	;# 
   543  0004                     	;# 
   544  0005                     	;# 
   545  0006                     	;# 
   546  0007                     	;# 
   547  0008                     	;# 
   548  0009                     	;# 
   549  000A                     	;# 
   550  000B                     	;# 
   551  000C                     	;# 
   552  0011                     	;# 
   553  0012                     	;# 
   554  0013                     	;# 
   555  0015                     	;# 
   556  0016                     	;# 
   557  0016                     	;# 
   558  0017                     	;# 
   559  0018                     	;# 
   560  0019                     	;# 
   561  001A                     	;# 
   562  001B                     	;# 
   563  001C                     	;# 
   564  008C                     	;# 
   565  0091                     	;# 
   566  0092                     	;# 
   567  0093                     	;# 
   568  0095                     	;# 
   569  0096                     	;# 
   570  0097                     	;# 
   571  0098                     	;# 
   572  0099                     	;# 
   573  009A                     	;# 
   574  009B                     	;# 
   575  009B                     	;# 
   576  009C                     	;# 
   577  009D                     	;# 
   578  009E                     	;# 
   579  009F                     	;# 
   580  010C                     	;# 
   581  0111                     	;# 
   582  0112                     	;# 
   583  0115                     	;# 
   584  0116                     	;# 
   585  0117                     	;# 
   586  0118                     	;# 
   587  0119                     	;# 
   588  011D                     	;# 
   589  011D                     	;# 
   590  018C                     	;# 
   591  0191                     	;# 
   592  0191                     	;# 
   593  0192                     	;# 
   594  0193                     	;# 
   595  0193                     	;# 
   596  0194                     	;# 
   597  0195                     	;# 
   598  0196                     	;# 
   599  020C                     	;# 
   600  028C                     	;# 
   601  030C                     	;# 
   602  038C                     	;# 
   603  0391                     	;# 
   604  0392                     	;# 
   605  0393                     	;# 
   606  0691                     	;# 
   607  0692                     	;# 
   608  0693                     	;# 
   609  0694                     	;# 
   610  0695                     	;# 
   611  0D8E                     	;# 
   612  0D8F                     	;# 
   613  0D90                     	;# 
   614  0D91                     	;# 
   615  0D91                     	;# 
   616  0D92                     	;# 
   617  0D93                     	;# 
   618  0D93                     	;# 
   619  0D94                     	;# 
   620  0D95                     	;# 
   621  0D95                     	;# 
   622  0D96                     	;# 
   623  0D97                     	;# 
   624  0D97                     	;# 
   625  0D98                     	;# 
   626  0D99                     	;# 
   627  0D99                     	;# 
   628  0D9A                     	;# 
   629  0D9B                     	;# 
   630  0D9C                     	;# 
   631  0D9C                     	;# 
   632  0D9D                     	;# 
   633  0D9D                     	;# 
   634  0D9E                     	;# 
   635  0D9F                     	;# 
   636  0DA0                     	;# 
   637  0DA1                     	;# 
   638  0DA1                     	;# 
   639  0DA2                     	;# 
   640  0DA3                     	;# 
   641  0DA3                     	;# 
   642  0DA4                     	;# 
   643  0DA5                     	;# 
   644  0DA5                     	;# 
   645  0DA6                     	;# 
   646  0DA7                     	;# 
   647  0DA7                     	;# 
   648  0DA8                     	;# 
   649  0DA9                     	;# 
   650  0DA9                     	;# 
   651  0DAA                     	;# 
   652  0DAB                     	;# 
   653  0DAC                     	;# 
   654  0DAC                     	;# 
   655  0DAD                     	;# 
   656  0DAD                     	;# 
   657  0DAE                     	;# 
   658  0DAF                     	;# 
   659  0DB0                     	;# 
   660  0DB1                     	;# 
   661  0DB1                     	;# 
   662  0DB2                     	;# 
   663  0DB3                     	;# 
   664  0DB3                     	;# 
   665  0DB4                     	;# 
   666  0DB5                     	;# 
   667  0DB5                     	;# 
   668  0DB6                     	;# 
   669  0DB7                     	;# 
   670  0DB7                     	;# 
   671  0DB8                     	;# 
   672  0DB9                     	;# 
   673  0DB9                     	;# 
   674  0DBA                     	;# 
   675  0DBB                     	;# 
   676  0DBC                     	;# 
   677  0DBC                     	;# 
   678  0DBD                     	;# 
   679  0DBD                     	;# 
   680  0DBE                     	;# 
   681  0DBF                     	;# 
   682  0DC0                     	;# 
   683  0FE4                     	;# 
   684  0FE5                     	;# 
   685  0FE6                     	;# 
   686  0FE7                     	;# 
   687  0FE8                     	;# 
   688  0FE8                     	;# 
   689  0FE9                     	;# 
   690  0FEA                     	;# 
   691  0FEA                     	;# 
   692  0FEB                     	;# 
   693  0FED                     	;# 
   694  0FEE                     	;# 
   695  0FEE                     	;# 
   696  0FEF                     	;# 
   697  0000                     	;# 
   698  0001                     	;# 
   699  0002                     	;# 
   700  0003                     	;# 
   701  0004                     	;# 
   702  0005                     	;# 
   703  0006                     	;# 
   704  0007                     	;# 
   705  0008                     	;# 
   706  0009                     	;# 
   707  000A                     	;# 
   708  000B                     	;# 
   709  000C                     	;# 
   710  0011                     	;# 
   711  0012                     	;# 
   712  0013                     	;# 
   713  0015                     	;# 
   714  0016                     	;# 
   715  0016                     	;# 
   716  0017                     	;# 
   717  0018                     	;# 
   718  0019                     	;# 
   719  001A                     	;# 
   720  001B                     	;# 
   721  001C                     	;# 
   722  008C                     	;# 
   723  0091                     	;# 
   724  0092                     	;# 
   725  0093                     	;# 
   726  0095                     	;# 
   727  0096                     	;# 
   728  0097                     	;# 
   729  0098                     	;# 
   730  0099                     	;# 
   731  009A                     	;# 
   732  009B                     	;# 
   733  009B                     	;# 
   734  009C                     	;# 
   735  009D                     	;# 
   736  009E                     	;# 
   737  009F                     	;# 
   738  010C                     	;# 
   739  0111                     	;# 
   740  0112                     	;# 
   741  0115                     	;# 
   742  0116                     	;# 
   743  0117                     	;# 
   744  0118                     	;# 
   745  0119                     	;# 
   746  011D                     	;# 
   747  011D                     	;# 
   748  018C                     	;# 
   749  0191                     	;# 
   750  0191                     	;# 
   751  0192                     	;# 
   752  0193                     	;# 
   753  0193                     	;# 
   754  0194                     	;# 
   755  0195                     	;# 
   756  0196                     	;# 
   757  020C                     	;# 
   758  028C                     	;# 
   759  030C                     	;# 
   760  038C                     	;# 
   761  0391                     	;# 
   762  0392                     	;# 
   763  0393                     	;# 
   764  0691                     	;# 
   765  0692                     	;# 
   766  0693                     	;# 
   767  0694                     	;# 
   768  0695                     	;# 
   769  0D8E                     	;# 
   770  0D8F                     	;# 
   771  0D90                     	;# 
   772  0D91                     	;# 
   773  0D91                     	;# 
   774  0D92                     	;# 
   775  0D93                     	;# 
   776  0D93                     	;# 
   777  0D94                     	;# 
   778  0D95                     	;# 
   779  0D95                     	;# 
   780  0D96                     	;# 
   781  0D97                     	;# 
   782  0D97                     	;# 
   783  0D98                     	;# 
   784  0D99                     	;# 
   785  0D99                     	;# 
   786  0D9A                     	;# 
   787  0D9B                     	;# 
   788  0D9C                     	;# 
   789  0D9C                     	;# 
   790  0D9D                     	;# 
   791  0D9D                     	;# 
   792  0D9E                     	;# 
   793  0D9F                     	;# 
   794  0DA0                     	;# 
   795  0DA1                     	;# 
   796  0DA1                     	;# 
   797  0DA2                     	;# 
   798  0DA3                     	;# 
   799  0DA3                     	;# 
   800  0DA4                     	;# 
   801  0DA5                     	;# 
   802  0DA5                     	;# 
   803  0DA6                     	;# 
   804  0DA7                     	;# 
   805  0DA7                     	;# 
   806  0DA8                     	;# 
   807  0DA9                     	;# 
   808  0DA9                     	;# 
   809  0DAA                     	;# 
   810  0DAB                     	;# 
   811  0DAC                     	;# 
   812  0DAC                     	;# 
   813  0DAD                     	;# 
   814  0DAD                     	;# 
   815  0DAE                     	;# 
   816  0DAF                     	;# 
   817  0DB0                     	;# 
   818  0DB1                     	;# 
   819  0DB1                     	;# 
   820  0DB2                     	;# 
   821  0DB3                     	;# 
   822  0DB3                     	;# 
   823  0DB4                     	;# 
   824  0DB5                     	;# 
   825  0DB5                     	;# 
   826  0DB6                     	;# 
   827  0DB7                     	;# 
   828  0DB7                     	;# 
   829  0DB8                     	;# 
   830  0DB9                     	;# 
   831  0DB9                     	;# 
   832  0DBA                     	;# 
   833  0DBB                     	;# 
   834  0DBC                     	;# 
   835  0DBC                     	;# 
   836  0DBD                     	;# 
   837  0DBD                     	;# 
   838  0DBE                     	;# 
   839  0DBF                     	;# 
   840  0DC0                     	;# 
   841  0FE4                     	;# 
   842  0FE5                     	;# 
   843  0FE6                     	;# 
   844  0FE7                     	;# 
   845  0FE8                     	;# 
   846  0FE8                     	;# 
   847  0FE9                     	;# 
   848  0FEA                     	;# 
   849  0FEA                     	;# 
   850  0FEB                     	;# 
   851  0FED                     	;# 
   852  0FEE                     	;# 
   853  0FEE                     	;# 
   854  0FEF                     	;# 
   855  0000                     	;# 
   856  0001                     	;# 
   857  0002                     	;# 
   858  0003                     	;# 
   859  0004                     	;# 
   860  0005                     	;# 
   861  0006                     	;# 
   862  0007                     	;# 
   863  0008                     	;# 
   864  0009                     	;# 
   865  000A                     	;# 
   866  000B                     	;# 
   867  000C                     	;# 
   868  0011                     	;# 
   869  0012                     	;# 
   870  0013                     	;# 
   871  0015                     	;# 
   872  0016                     	;# 
   873  0016                     	;# 
   874  0017                     	;# 
   875  0018                     	;# 
   876  0019                     	;# 
   877  001A                     	;# 
   878  001B                     	;# 
   879  001C                     	;# 
   880  008C                     	;# 
   881  0091                     	;# 
   882  0092                     	;# 
   883  0093                     	;# 
   884  0095                     	;# 
   885  0096                     	;# 
   886  0097                     	;# 
   887  0098                     	;# 
   888  0099                     	;# 
   889  009A                     	;# 
   890  009B                     	;# 
   891  009B                     	;# 
   892  009C                     	;# 
   893  009D                     	;# 
   894  009E                     	;# 
   895  009F                     	;# 
   896  010C                     	;# 
   897  0111                     	;# 
   898  0112                     	;# 
   899  0115                     	;# 
   900  0116                     	;# 
   901  0117                     	;# 
   902  0118                     	;# 
   903  0119                     	;# 
   904  011D                     	;# 
   905  011D                     	;# 
   906  018C                     	;# 
   907  0191                     	;# 
   908  0191                     	;# 
   909  0192                     	;# 
   910  0193                     	;# 
   911  0193                     	;# 
   912  0194                     	;# 
   913  0195                     	;# 
   914  0196                     	;# 
   915  020C                     	;# 
   916  028C                     	;# 
   917  030C                     	;# 
   918  038C                     	;# 
   919  0391                     	;# 
   920  0392                     	;# 
   921  0393                     	;# 
   922  0691                     	;# 
   923  0692                     	;# 
   924  0693                     	;# 
   925  0694                     	;# 
   926  0695                     	;# 
   927  0D8E                     	;# 
   928  0D8F                     	;# 
   929  0D90                     	;# 
   930  0D91                     	;# 
   931  0D91                     	;# 
   932  0D92                     	;# 
   933  0D93                     	;# 
   934  0D93                     	;# 
   935  0D94                     	;# 
   936  0D95                     	;# 
   937  0D95                     	;# 
   938  0D96                     	;# 
   939  0D97                     	;# 
   940  0D97                     	;# 
   941  0D98                     	;# 
   942  0D99                     	;# 
   943  0D99                     	;# 
   944  0D9A                     	;# 
   945  0D9B                     	;# 
   946  0D9C                     	;# 
   947  0D9C                     	;# 
   948  0D9D                     	;# 
   949  0D9D                     	;# 
   950  0D9E                     	;# 
   951  0D9F                     	;# 
   952  0DA0                     	;# 
   953  0DA1                     	;# 
   954  0DA1                     	;# 
   955  0DA2                     	;# 
   956  0DA3                     	;# 
   957  0DA3                     	;# 
   958  0DA4                     	;# 
   959  0DA5                     	;# 
   960  0DA5                     	;# 
   961  0DA6                     	;# 
   962  0DA7                     	;# 
   963  0DA7                     	;# 
   964  0DA8                     	;# 
   965  0DA9                     	;# 
   966  0DA9                     	;# 
   967  0DAA                     	;# 
   968  0DAB                     	;# 
   969  0DAC                     	;# 
   970  0DAC                     	;# 
   971  0DAD                     	;# 
   972  0DAD                     	;# 
   973  0DAE                     	;# 
   974  0DAF                     	;# 
   975  0DB0                     	;# 
   976  0DB1                     	;# 
   977  0DB1                     	;# 
   978  0DB2                     	;# 
   979  0DB3                     	;# 
   980  0DB3                     	;# 
   981  0DB4                     	;# 
   982  0DB5                     	;# 
   983  0DB5                     	;# 
   984  0DB6                     	;# 
   985  0DB7                     	;# 
   986  0DB7                     	;# 
   987  0DB8                     	;# 
   988  0DB9                     	;# 
   989  0DB9                     	;# 
   990  0DBA                     	;# 
   991  0DBB                     	;# 
   992  0DBC                     	;# 
   993  0DBC                     	;# 
   994  0DBD                     	;# 
   995  0DBD                     	;# 
   996  0DBE                     	;# 
   997  0DBF                     	;# 
   998  0DC0                     	;# 
   999  0FE4                     	;# 
  1000  0FE5                     	;# 
  1001  0FE6                     	;# 
  1002  0FE7                     	;# 
  1003  0FE8                     	;# 
  1004  0FE8                     	;# 
  1005  0FE9                     	;# 
  1006  0FEA                     	;# 
  1007  0FEA                     	;# 
  1008  0FEB                     	;# 
  1009  0FED                     	;# 
  1010  0FEE                     	;# 
  1011  0FEE                     	;# 
  1012  0FEF                     	;# 
  1013                           
  1014                           	psect	nvCOMMON
  1015  007A                     __pnvCOMMON:
  1016  007A                     _timer1ReloadVal:
  1017  007A                     	ds	2
  1018                           
  1019                           	psect	nvBANK0
  1020  0020                     __pnvBANK0:
  1021  0020                     _TMR1_InterruptHandler:
  1022  0020                     	ds	2
  1023  000C                     _PORTAbits	set	12
  1024  0019                     _T1GCONbits	set	25
  1025  0018                     _T1CONbits	set	24
  1026  0018                     _T1CON	set	24
  1027  0011                     _PIR1bits	set	17
  1028  0016                     _TMR1L	set	22
  1029  0017                     _TMR1H	set	23
  1030  0019                     _T1GCON	set	25
  1031  000B                     _INTCONbits	set	11
  1032  009D                     _ADCON0bits	set	157
  1033  009D                     _ADCON0	set	157
  1034  009C                     _ADRESH	set	156
  1035  009B                     _ADRESL	set	155
  1036  009F                     _ADCON2	set	159
  1037  009E                     _ADCON1	set	158
  1038  0091                     _PIE1bits	set	145
  1039  0095                     _OPTION_REGbits	set	149
  1040  008C                     _TRISA	set	140
  1041  0097                     _WDTCON	set	151
  1042  0098                     _OSCTUNE	set	152
  1043  0099                     _OSCCON	set	153
  1044  010C                     _LATAbits	set	268
  1045  011D                     _APFCON	set	285
  1046  010C                     _LATA	set	268
  1047  0116                     _BORCON	set	278
  1048  018C                     _ANSELA	set	396
  1049  020C                     _WPUA	set	524
  1050  028C                     _ODCONA	set	652
  1051  030C                     _SLRCONA	set	780
  1052  0391                     _IOCAPbits	set	913
  1053  038C                     _INLVLA	set	908
  1054                           
  1055                           	psect	cinit
  1056  0027                     start_initialization:	
  1057                           ; #config settings
  1058                           
  1059  0027                     __initialization:
  1060                           
  1061                           ; Clear objects allocated to COMMON
  1062  0027  01F0               	clrf	__pbssCOMMON& (0+127)
  1063  0028  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1064  0029  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1065  002A  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1066  002B  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1067                           
  1068                           ; Clear objects allocated to BANK0
  1069  002C  0020               	movlb	0	; select bank0
  1070  002D  01A2               	clrf	__pbssBANK0& (0+127)
  1071  002E  01A3               	clrf	(__pbssBANK0+1)& (0+127)
  1072  002F                     end_of_initialization:	
  1073                           ;End of C runtime variable initialization code
  1074                           
  1075  002F                     __end_of__initialization:
  1076  002F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1077  0030  0020               	movlb	0
  1078  0031  2832               	ljmp	_main	;jump to C main() function
  1079                           
  1080                           	psect	bssCOMMON
  1081  0070                     __pbssCOMMON:
  1082  0070                     _demandedSecondsTick:
  1083  0070                     	ds	2
  1084  0072                     _currentSecondsTick:
  1085  0072                     	ds	2
  1086  0074                     _currentState:
  1087  0074                     	ds	1
  1088                           
  1089                           	psect	bssBANK0
  1090  0022                     __pbssBANK0:
  1091  0022                     _ADC1_InterruptHandler:
  1092  0022                     	ds	2
  1093                           
  1094                           	psect	cstackCOMMON
  1095  0075                     __pcstackCOMMON:
  1096  0075                     ?_PIN_MANAGER_Initialize:
  1097  0075                     ?_OSCILLATOR_Initialize:	
  1098                           ; 1 bytes @ 0x0
  1099                           
  1100  0075                     ?_WDT_Initialize:	
  1101                           ; 1 bytes @ 0x0
  1102                           
  1103  0075                     ?_ADC1_Initialize:	
  1104                           ; 1 bytes @ 0x0
  1105                           
  1106  0075                     ?_TMR1_Initialize:	
  1107                           ; 1 bytes @ 0x0
  1108                           
  1109  0075                     ?_TMR1_DefaultInterruptHandler:	
  1110                           ; 1 bytes @ 0x0
  1111                           
  1112  0075                     ??_TMR1_DefaultInterruptHandler:	
  1113                           ; 1 bytes @ 0x0
  1114                           
  1115  0075                     ?_TMR1_CallBack:	
  1116                           ; 1 bytes @ 0x0
  1117                           
  1118  0075                     ??_TMR1_CallBack:	
  1119                           ; 1 bytes @ 0x0
  1120                           
  1121  0075                     ?_secondsTick:	
  1122                           ; 1 bytes @ 0x0
  1123                           
  1124  0075                     ??_secondsTick:	
  1125                           ; 1 bytes @ 0x0
  1126                           
  1127  0075                     ?_setState:	
  1128                           ; 1 bytes @ 0x0
  1129                           
  1130  0075                     ?_SYSTEM_Initialize:	
  1131                           ; 1 bytes @ 0x0
  1132                           
  1133  0075                     ?_PIN_MANAGER_IOC:	
  1134                           ; 1 bytes @ 0x0
  1135                           
  1136  0075                     ??_PIN_MANAGER_IOC:	
  1137                           ; 1 bytes @ 0x0
  1138                           
  1139  0075                     ?_TMR1_StartTimer:	
  1140                           ; 1 bytes @ 0x0
  1141                           
  1142  0075                     ?_TMR1_WriteTimer:	
  1143                           ; 1 bytes @ 0x0
  1144                           
  1145  0075                     ?_TMR1_ISR:	
  1146                           ; 1 bytes @ 0x0
  1147                           
  1148  0075                     ?_INTERRUPT_InterruptManager:	
  1149                           ; 1 bytes @ 0x0
  1150                           
  1151  0075                     ?_main:	
  1152                           ; 1 bytes @ 0x0
  1153                           
  1154  0075                     TMR1_WriteTimer@timerVal:	
  1155                           ; 1 bytes @ 0x0
  1156                           
  1157                           
  1158                           ; 2 bytes @ 0x0
  1159  0075                     	ds	2
  1160  0077                     ??_PIN_MANAGER_Initialize:
  1161  0077                     ??_OSCILLATOR_Initialize:	
  1162                           ; 1 bytes @ 0x2
  1163                           
  1164  0077                     ??_WDT_Initialize:	
  1165                           ; 1 bytes @ 0x2
  1166                           
  1167  0077                     ??_ADC1_Initialize:	
  1168                           ; 1 bytes @ 0x2
  1169                           
  1170  0077                     ?_TMR1_SetInterruptHandler:	
  1171                           ; 1 bytes @ 0x2
  1172                           
  1173  0077                     ??_setState:	
  1174                           ; 1 bytes @ 0x2
  1175                           
  1176  0077                     ??_TMR1_StartTimer:	
  1177                           ; 1 bytes @ 0x2
  1178                           
  1179  0077                     ??_TMR1_WriteTimer:	
  1180                           ; 1 bytes @ 0x2
  1181                           
  1182  0077                     ??_TMR1_ISR:	
  1183                           ; 1 bytes @ 0x2
  1184                           
  1185  0077                     ??_INTERRUPT_InterruptManager:	
  1186                           ; 1 bytes @ 0x2
  1187                           
  1188  0077                     TMR1_SetInterruptHandler@InterruptHandler:	
  1189                           ; 1 bytes @ 0x2
  1190                           
  1191                           
  1192                           ; 2 bytes @ 0x2
  1193  0077                     	ds	2
  1194  0079                     ??_TMR1_Initialize:
  1195  0079                     ??_TMR1_SetInterruptHandler:	
  1196                           ; 1 bytes @ 0x4
  1197                           
  1198  0079                     ??_SYSTEM_Initialize:	
  1199                           ; 1 bytes @ 0x4
  1200                           
  1201  0079                     setState@newState:	
  1202                           ; 1 bytes @ 0x4
  1203                           
  1204                           
  1205                           ; 1 bytes @ 0x4
  1206  0079                     	ds	1
  1207                           
  1208                           	psect	cstackBANK0
  1209  0024                     __pcstackBANK0:
  1210  0024                     ??_main:
  1211                           
  1212                           ; 1 bytes @ 0x0
  1213  0024                     	ds	2
  1214                           
  1215                           	psect	maintext
  1216  0032                     __pmaintext:	
  1217 ;;
  1218 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1219 ;;
  1220 ;; *************** function _main *****************
  1221 ;; Defined at:
  1222 ;;		line 66 in file "main.c"
  1223 ;; Parameters:    Size  Location     Type
  1224 ;;		None
  1225 ;; Auto vars:     Size  Location     Type
  1226 ;;		None
  1227 ;; Return value:  Size  Location     Type
  1228 ;;                  1    wreg      void 
  1229 ;; Registers used:
  1230 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1231 ;; Tracked objects:
  1232 ;;		On entry : B1F/0
  1233 ;;		On exit  : 0/0
  1234 ;;		Unchanged: 0/0
  1235 ;; Data sizes:     COMMON   BANK0   BANK1
  1236 ;;      Params:         0       0       0
  1237 ;;      Locals:         0       0       0
  1238 ;;      Temps:          0       2       0
  1239 ;;      Totals:         0       2       0
  1240 ;;Total ram usage:        2 bytes
  1241 ;; Hardware stack levels required when called:    7
  1242 ;; This function calls:
  1243 ;;		_SYSTEM_Initialize
  1244 ;;		_TMR1_SetInterruptHandler
  1245 ;;		_TMR1_StartTimer
  1246 ;;		_setState
  1247 ;; This function is called by:
  1248 ;;		Startup code after reset
  1249 ;; This function uses a non-reentrant model
  1250 ;;
  1251                           
  1252                           
  1253                           ;psect for function _main
  1254  0032                     _main:
  1255  0032                     l1145:	
  1256                           ;incstack = 0
  1257                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1258                           
  1259                           
  1260                           ;main.c: 69:     SYSTEM_Initialize();
  1261  0032  3181  2141  3180   	fcall	_SYSTEM_Initialize
  1262  0035                     l1147:
  1263                           
  1264                           ;main.c: 75:     (INTCONbits.GIE = 1);
  1265  0035  178B               	bsf	11,7	;volatile
  1266  0036                     l1149:
  1267                           
  1268                           ;main.c: 78:     (INTCONbits.PEIE = 1);
  1269  0036  170B               	bsf	11,6	;volatile
  1270                           
  1271                           ;main.c: 87:     TMR1_SetInterruptHandler(secondsTick);
  1272  0037  3080               	movlw	low _secondsTick
  1273  0038  00F7               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  1274  0039  3001               	movlw	high _secondsTick
  1275  003A  00F8               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  1276  003B  3181  217A  3180   	fcall	_TMR1_SetInterruptHandler
  1277  003E                     l1151:
  1278                           
  1279                           ;main.c: 90:     TMR1_StartTimer();
  1280  003E  3181  2189  3180   	fcall	_TMR1_StartTimer
  1281  0041                     l1153:
  1282                           
  1283                           ;main.c: 94:     setState(STATE_WAIT_TIME);
  1284  0041  3001               	movlw	1
  1285  0042  3180  20B2  3180   	fcall	_setState
  1286  0045  289A               	goto	l1175
  1287  0046                     l170:	
  1288                           ;main.c: 101:         {;main.c: 102:             case STATE_WAIT_TIME:
  1289                           
  1290                           
  1291                           ;main.c: 103:                 if(PORTAbits.RA5 && (currentSecondsTick >= demandedSeconds
      +                          Tick))
  1292  0046  1E8C               	btfss	12,5	;volatile
  1293  0047  2849               	goto	u311
  1294  0048  284A               	goto	u310
  1295  0049                     u311:
  1296  0049  2859               	goto	l171
  1297  004A                     u310:
  1298  004A                     l1155:
  1299  004A  0871               	movf	_demandedSecondsTick+1,w
  1300  004B  0273               	subwf	_currentSecondsTick+1,w	;volatile
  1301  004C  1D03               	skipz
  1302  004D  2850               	goto	u325
  1303  004E  0870               	movf	_demandedSecondsTick,w
  1304  004F  0272               	subwf	_currentSecondsTick,w	;volatile
  1305  0050                     u325:
  1306  0050  1C03               	skipc
  1307  0051  2853               	goto	u321
  1308  0052  2854               	goto	u320
  1309  0053                     u321:
  1310  0053  2859               	goto	l171
  1311  0054                     u320:
  1312  0054                     l1157:
  1313                           
  1314                           ;main.c: 104:                 {;main.c: 105:                     setState(STATE_OPEN_VAL
      +                          VE);
  1315  0054  3002               	movlw	2
  1316  0055  3180  20B2  3180   	fcall	_setState
  1317                           
  1318                           ;main.c: 106:                 }
  1319  0058  289A               	goto	l1175
  1320  0059                     l171:	
  1321                           ;main.c: 107:                 else if(PORTAbits.RA4)
  1322                           
  1323  0059  1E0C               	btfss	12,4	;volatile
  1324  005A  285C               	goto	u331
  1325  005B  285D               	goto	u330
  1326  005C                     u331:
  1327  005C  289A               	goto	l169
  1328  005D                     u330:
  1329  005D                     l1159:
  1330                           
  1331                           ;main.c: 108:                 {;main.c: 109:                     setState(STATE_CLOSE_VA
      +                          LVE);
  1332  005D  3003               	movlw	3
  1333  005E  3180  20B2  3180   	fcall	_setState
  1334  0061  289A               	goto	l1175
  1335  0062                     l175:	
  1336                           ;main.c: 113:             case STATE_OPEN_VALVE:
  1337                           
  1338                           
  1339                           ;main.c: 115:                 if(PORTAbits.RA4 || (currentSecondsTick >= demandedSeconds
      +                          Tick))
  1340  0062  1A0C               	btfsc	12,4	;volatile
  1341  0063  2865               	goto	u341
  1342  0064  2866               	goto	u340
  1343  0065                     u341:
  1344  0065  2870               	goto	l1163
  1345  0066                     u340:
  1346  0066                     l1161:
  1347  0066  0871               	movf	_demandedSecondsTick+1,w
  1348  0067  0273               	subwf	_currentSecondsTick+1,w	;volatile
  1349  0068  1D03               	skipz
  1350  0069  286C               	goto	u355
  1351  006A  0870               	movf	_demandedSecondsTick,w
  1352  006B  0272               	subwf	_currentSecondsTick,w	;volatile
  1353  006C                     u355:
  1354  006C  1C03               	skipc
  1355  006D  286F               	goto	u351
  1356  006E  2870               	goto	u350
  1357  006F                     u351:
  1358  006F  289A               	goto	l169
  1359  0070                     u350:
  1360  0070                     l1163:
  1361                           
  1362                           ;main.c: 116:                 {;main.c: 117:                     setState(STATE_CLOSE_VA
      +                          LVE);
  1363  0070  3003               	movlw	3
  1364  0071  3180  20B2  3180   	fcall	_setState
  1365  0074  289A               	goto	l1175
  1366  0075                     l179:	
  1367                           ;main.c: 121:             case STATE_CLOSE_VALVE:
  1368                           
  1369                           
  1370                           ;main.c: 122:                 if(PORTAbits.RA5)
  1371  0075  1E8C               	btfss	12,5	;volatile
  1372  0076  2878               	goto	u361
  1373  0077  2879               	goto	u360
  1374  0078                     u361:
  1375  0078  287E               	goto	l1167
  1376  0079                     u360:
  1377  0079                     l1165:
  1378                           
  1379                           ;main.c: 123:                 {;main.c: 124:                     setState(STATE_OPEN_VAL
      +                          VE);
  1380  0079  3002               	movlw	2
  1381  007A  3180  20B2  3180   	fcall	_setState
  1382                           
  1383                           ;main.c: 125:                 }
  1384  007D  289A               	goto	l1175
  1385  007E                     l1167:
  1386  007E  0871               	movf	_demandedSecondsTick+1,w
  1387  007F  0273               	subwf	_currentSecondsTick+1,w	;volatile
  1388  0080  1D03               	skipz
  1389  0081  2884               	goto	u375
  1390  0082  0870               	movf	_demandedSecondsTick,w
  1391  0083  0272               	subwf	_currentSecondsTick,w	;volatile
  1392  0084                     u375:
  1393  0084  1C03               	skipc
  1394  0085  2887               	goto	u371
  1395  0086  2888               	goto	u370
  1396  0087                     u371:
  1397  0087  289A               	goto	l169
  1398  0088                     u370:
  1399  0088                     l1169:
  1400                           
  1401                           ;main.c: 127:                 {;main.c: 128:                     setState(STATE_END);
  1402  0088  3004               	movlw	4
  1403  0089  3180  20B2  3180   	fcall	_setState
  1404  008C  289A               	goto	l1175
  1405  008D                     l183:	
  1406                           ;main.c: 132:             case STATE_END:
  1407                           
  1408                           
  1409                           ;main.c: 134:                 IOCAPbits.IOCAP5 = 1;
  1410  008D  0027               	movlb	7	; select bank7
  1411  008E  1691               	bsf	17,5	;volatile
  1412  008F  0063               	sleep	;# 
  1413  0090  0000               	nop	;# 
  1414  0091  0000               	nop	;# 
  1415                           
  1416                           ;main.c: 143:                 INTCONbits.IOCIF = 0;
  1417  0092  100B               	bcf	11,0	;volatile
  1418                           
  1419                           ;main.c: 146:                 IOCAPbits.IOCAP5 = 0;
  1420  0093  0027               	movlb	7	; select bank7
  1421  0094  1291               	bcf	17,5	;volatile
  1422  0095                     l1171:
  1423                           
  1424                           ;main.c: 149:                 setState(STATE_WAIT_TIME);
  1425  0095  3001               	movlw	1
  1426  0096  3180  20B2  3180   	fcall	_setState
  1427                           
  1428                           ;main.c: 150:                 break;
  1429  0099  289A               	goto	l1175
  1430  009A                     l169:
  1431  009A                     l1175:
  1432  009A  0874               	movf	_currentState,w
  1433  009B  0020               	movlb	0	; select bank0
  1434  009C  00A4               	movwf	??_main
  1435  009D  01A5               	clrf	??_main+1
  1436                           
  1437                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1438                           ; Switch size 1, requested type "simple"
  1439                           ; Number of cases is 1, Range of values is 0 to 0
  1440                           ; switch strategies available:
  1441                           ; Name         Instructions Cycles
  1442                           ; simple_byte            4     3 (average)
  1443                           ; direct_byte            8     6 (fixed)
  1444                           ; jumptable            260     6 (fixed)
  1445                           ;	Chosen strategy is simple_byte
  1446  009E  0825               	movf	??_main+1,w
  1447  009F  3A00               	xorlw	0	; case 0
  1448  00A0  1903               	skipnz
  1449  00A1  28A3               	goto	l1221
  1450  00A2  289A               	goto	l1175
  1451  00A3                     l1221:
  1452                           
  1453                           ; Switch size 1, requested type "simple"
  1454                           ; Number of cases is 4, Range of values is 1 to 4
  1455                           ; switch strategies available:
  1456                           ; Name         Instructions Cycles
  1457                           ; simple_byte           13     7 (average)
  1458                           ; direct_byte           17     9 (fixed)
  1459                           ; jumptable            263     9 (fixed)
  1460                           ;	Chosen strategy is simple_byte
  1461  00A3  0824               	movf	??_main,w
  1462  00A4  3A01               	xorlw	1	; case 1
  1463  00A5  1903               	skipnz
  1464  00A6  2846               	goto	l170
  1465  00A7  3A03               	xorlw	3	; case 2
  1466  00A8  1903               	skipnz
  1467  00A9  2862               	goto	l175
  1468  00AA  3A01               	xorlw	1	; case 3
  1469  00AB  1903               	skipnz
  1470  00AC  2875               	goto	l179
  1471  00AD  3A07               	xorlw	7	; case 4
  1472  00AE  1903               	skipnz
  1473  00AF  288D               	goto	l183
  1474  00B0  289A               	goto	l1175
  1475  00B1  2826               	ljmp	start
  1476  00B2                     __end_of_main:
  1477                           
  1478                           	psect	text1
  1479  00B2                     __ptext1:	
  1480 ;; *************** function _setState *****************
  1481 ;; Defined at:
  1482 ;;		line 162 in file "main.c"
  1483 ;; Parameters:    Size  Location     Type
  1484 ;;  newState        1    wreg     enum E2981
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;  newState        1    4[COMMON] enum E2981
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  1    wreg      void 
  1489 ;; Registers used:
  1490 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMMON   BANK0   BANK1
  1496 ;;      Params:         0       0       0
  1497 ;;      Locals:         1       0       0
  1498 ;;      Temps:          2       0       0
  1499 ;;      Totals:         3       0       0
  1500 ;;Total ram usage:        3 bytes
  1501 ;; Hardware stack levels used:    1
  1502 ;; Hardware stack levels required when called:    4
  1503 ;; This function calls:
  1504 ;;		Nothing
  1505 ;; This function is called by:
  1506 ;;		_main
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           
  1511                           ;psect for function _setState
  1512  00B2                     _setState:
  1513                           
  1514                           ;incstack = 0
  1515                           ; Regs used in _setState: [wreg-fsr0h+status,2+status,0]
  1516                           ;setState@newState stored from wreg
  1517  00B2  00F9               	movwf	setState@newState
  1518  00B3                     l853:
  1519                           
  1520                           ;main.c: 162: void setState(states_t newState);main.c: 163: {;main.c: 164:     if(newSta
      +                          te == currentState)
  1521  00B3  0879               	movf	setState@newState,w
  1522  00B4  0674               	xorwf	_currentState,w
  1523  00B5  1D03               	skipz
  1524  00B6  28B8               	goto	u31
  1525  00B7  28B9               	goto	u30
  1526  00B8                     u31:
  1527  00B8  28BA               	goto	l857
  1528  00B9                     u30:
  1529  00B9  28FF               	goto	l190
  1530  00BA                     l857:
  1531                           
  1532                           ;main.c: 169:     currentSecondsTick = 0;
  1533  00BA  01F2               	clrf	_currentSecondsTick	;volatile
  1534  00BB  01F3               	clrf	_currentSecondsTick+1	;volatile
  1535                           
  1536                           ;main.c: 172:     switch(newState)
  1537  00BC  28E5               	goto	l873
  1538  00BD                     l193:	
  1539                           ;main.c: 175:             do { LATAbits.LATA1 = 0; } while(0);
  1540                           
  1541  00BD  0022               	movlb	2	; select bank2
  1542  00BE  108C               	bcf	12,1	;volatile
  1543  00BF                     l195:	
  1544                           ;main.c: 176:             do { LATAbits.LATA2 = 0; } while(0);
  1545                           
  1546  00BF  110C               	bcf	12,2	;volatile
  1547  00C0                     l859:
  1548                           
  1549                           ;main.c: 177:             currentSecondsTick = 0;
  1550  00C0  01F2               	clrf	_currentSecondsTick	;volatile
  1551  00C1  01F3               	clrf	_currentSecondsTick+1	;volatile
  1552  00C2                     l861:
  1553                           
  1554                           ;main.c: 178:             demandedSecondsTick = currentSecondsTick + 2;
  1555  00C2  0872               	movf	_currentSecondsTick,w	;volatile
  1556  00C3  3E02               	addlw	2
  1557  00C4  00F0               	movwf	_demandedSecondsTick
  1558  00C5  3000               	movlw	0
  1559  00C6  3D73               	addwfc	_currentSecondsTick+1,w	;volatile
  1560  00C7  00F1               	movwf	_demandedSecondsTick+1
  1561                           
  1562                           ;main.c: 179:             break;
  1563  00C8  28FB               	goto	l875
  1564  00C9                     l199:	
  1565                           ;main.c: 182:             do { LATAbits.LATA1 = 1; } while(0);
  1566                           
  1567  00C9  0022               	movlb	2	; select bank2
  1568  00CA  148C               	bsf	12,1	;volatile
  1569  00CB                     l201:	
  1570                           ;main.c: 183:             do { LATAbits.LATA2 = 0; } while(0);
  1571                           
  1572  00CB  110C               	bcf	12,2	;volatile
  1573  00CC                     l863:
  1574                           
  1575                           ;main.c: 184:             currentSecondsTick = 0;
  1576  00CC  01F2               	clrf	_currentSecondsTick	;volatile
  1577  00CD  01F3               	clrf	_currentSecondsTick+1	;volatile
  1578  00CE                     l865:
  1579                           
  1580                           ;main.c: 185:             demandedSecondsTick = currentSecondsTick + 1200;
  1581  00CE  0872               	movf	_currentSecondsTick,w	;volatile
  1582  00CF  3EB0               	addlw	176
  1583  00D0  00F0               	movwf	_demandedSecondsTick
  1584  00D1  3004               	movlw	4
  1585  00D2  3D73               	addwfc	_currentSecondsTick+1,w	;volatile
  1586  00D3  00F1               	movwf	_demandedSecondsTick+1
  1587                           
  1588                           ;main.c: 186:             break;
  1589  00D4  28FB               	goto	l875
  1590  00D5                     l204:	
  1591                           ;main.c: 189:             do { LATAbits.LATA1 = 0; } while(0);
  1592                           
  1593  00D5  0022               	movlb	2	; select bank2
  1594  00D6  108C               	bcf	12,1	;volatile
  1595  00D7                     l206:	
  1596                           ;main.c: 190:             do { LATAbits.LATA2 = 1; } while(0);
  1597                           
  1598  00D7  150C               	bsf	12,2	;volatile
  1599  00D8                     l867:
  1600                           
  1601                           ;main.c: 191:             currentSecondsTick = 0;
  1602  00D8  01F2               	clrf	_currentSecondsTick	;volatile
  1603  00D9  01F3               	clrf	_currentSecondsTick+1	;volatile
  1604  00DA                     l869:
  1605                           
  1606                           ;main.c: 192:             demandedSecondsTick = currentSecondsTick + 10;
  1607  00DA  0872               	movf	_currentSecondsTick,w	;volatile
  1608  00DB  3E0A               	addlw	10
  1609  00DC  00F0               	movwf	_demandedSecondsTick
  1610  00DD  3000               	movlw	0
  1611  00DE  3D73               	addwfc	_currentSecondsTick+1,w	;volatile
  1612  00DF  00F1               	movwf	_demandedSecondsTick+1
  1613                           
  1614                           ;main.c: 193:             break;
  1615  00E0  28FB               	goto	l875
  1616  00E1                     l209:	
  1617                           ;main.c: 196:             do { LATAbits.LATA1 = 0; } while(0);
  1618                           
  1619  00E1  0022               	movlb	2	; select bank2
  1620  00E2  108C               	bcf	12,1	;volatile
  1621  00E3                     l211:	
  1622                           ;main.c: 197:             do { LATAbits.LATA2 = 0; } while(0);
  1623                           
  1624  00E3  110C               	bcf	12,2	;volatile
  1625  00E4  28FB               	goto	l875
  1626  00E5                     l873:
  1627  00E5  0879               	movf	setState@newState,w
  1628  00E6  00F7               	movwf	??_setState
  1629  00E7  01F8               	clrf	??_setState+1
  1630                           
  1631                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1632                           ; Switch size 1, requested type "simple"
  1633                           ; Number of cases is 1, Range of values is 0 to 0
  1634                           ; switch strategies available:
  1635                           ; Name         Instructions Cycles
  1636                           ; simple_byte            4     3 (average)
  1637                           ; direct_byte            8     6 (fixed)
  1638                           ; jumptable            260     6 (fixed)
  1639                           ;	Chosen strategy is simple_byte
  1640  00E8  0878               	movf	??_setState+1,w
  1641  00E9  3A00               	xorlw	0	; case 0
  1642  00EA  1903               	skipnz
  1643  00EB  28ED               	goto	l1223
  1644  00EC  28FB               	goto	l875
  1645  00ED                     l1223:
  1646                           
  1647                           ; Switch size 1, requested type "simple"
  1648                           ; Number of cases is 4, Range of values is 1 to 4
  1649                           ; switch strategies available:
  1650                           ; Name         Instructions Cycles
  1651                           ; simple_byte           13     7 (average)
  1652                           ; direct_byte           17     9 (fixed)
  1653                           ; jumptable            263     9 (fixed)
  1654                           ;	Chosen strategy is simple_byte
  1655  00ED  0877               	movf	??_setState,w
  1656  00EE  3A01               	xorlw	1	; case 1
  1657  00EF  1903               	skipnz
  1658  00F0  28BD               	goto	l193
  1659  00F1  3A03               	xorlw	3	; case 2
  1660  00F2  1903               	skipnz
  1661  00F3  28C9               	goto	l199
  1662  00F4  3A01               	xorlw	1	; case 3
  1663  00F5  1903               	skipnz
  1664  00F6  28D5               	goto	l204
  1665  00F7  3A07               	xorlw	7	; case 4
  1666  00F8  1903               	skipnz
  1667  00F9  28E1               	goto	l209
  1668  00FA  28FB               	goto	l875
  1669  00FB                     l875:
  1670                           
  1671                           ;main.c: 201:     currentState = newState;
  1672  00FB  0879               	movf	setState@newState,w
  1673  00FC  00F7               	movwf	??_setState
  1674  00FD  0877               	movf	??_setState,w
  1675  00FE  00F4               	movwf	_currentState
  1676  00FF                     l190:
  1677  00FF  0008               	return
  1678  0100                     __end_of_setState:
  1679                           
  1680                           	psect	text2
  1681  0189                     __ptext2:	
  1682 ;; *************** function _TMR1_StartTimer *****************
  1683 ;; Defined at:
  1684 ;;		line 93 in file "mcc_generated_files/tmr1.c"
  1685 ;; Parameters:    Size  Location     Type
  1686 ;;		None
  1687 ;; Auto vars:     Size  Location     Type
  1688 ;;		None
  1689 ;; Return value:  Size  Location     Type
  1690 ;;                  1    wreg      void 
  1691 ;; Registers used:
  1692 ;;		None
  1693 ;; Tracked objects:
  1694 ;;		On entry : 0/0
  1695 ;;		On exit  : 0/0
  1696 ;;		Unchanged: 0/0
  1697 ;; Data sizes:     COMMON   BANK0   BANK1
  1698 ;;      Params:         0       0       0
  1699 ;;      Locals:         0       0       0
  1700 ;;      Temps:          0       0       0
  1701 ;;      Totals:         0       0       0
  1702 ;;Total ram usage:        0 bytes
  1703 ;; Hardware stack levels used:    1
  1704 ;; Hardware stack levels required when called:    4
  1705 ;; This function calls:
  1706 ;;		Nothing
  1707 ;; This function is called by:
  1708 ;;		_main
  1709 ;; This function uses a non-reentrant model
  1710 ;;
  1711                           
  1712                           
  1713                           ;psect for function _TMR1_StartTimer
  1714  0189                     _TMR1_StartTimer:
  1715  0189                     l847:	
  1716                           ;incstack = 0
  1717                           ; Regs used in _TMR1_StartTimer: []
  1718                           
  1719                           
  1720                           ;mcc_generated_files/tmr1.c: 96:     T1CONbits.TMR1ON = 1;
  1721  0189  0020               	movlb	0	; select bank0
  1722  018A  1418               	bsf	24,0	;volatile
  1723  018B                     l85:
  1724  018B  0008               	return
  1725  018C                     __end_of_TMR1_StartTimer:
  1726                           
  1727                           	psect	text3
  1728  0141                     __ptext3:	
  1729 ;; *************** function _SYSTEM_Initialize *****************
  1730 ;; Defined at:
  1731 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1732 ;; Parameters:    Size  Location     Type
  1733 ;;		None
  1734 ;; Auto vars:     Size  Location     Type
  1735 ;;		None
  1736 ;; Return value:  Size  Location     Type
  1737 ;;                  1    wreg      void 
  1738 ;; Registers used:
  1739 ;;		wreg, status,2, status,0, pclath, cstack
  1740 ;; Tracked objects:
  1741 ;;		On entry : 0/0
  1742 ;;		On exit  : 0/0
  1743 ;;		Unchanged: 0/0
  1744 ;; Data sizes:     COMMON   BANK0   BANK1
  1745 ;;      Params:         0       0       0
  1746 ;;      Locals:         0       0       0
  1747 ;;      Temps:          0       0       0
  1748 ;;      Totals:         0       0       0
  1749 ;;Total ram usage:        0 bytes
  1750 ;; Hardware stack levels used:    1
  1751 ;; Hardware stack levels required when called:    6
  1752 ;; This function calls:
  1753 ;;		_ADC1_Initialize
  1754 ;;		_OSCILLATOR_Initialize
  1755 ;;		_PIN_MANAGER_Initialize
  1756 ;;		_TMR1_Initialize
  1757 ;;		_WDT_Initialize
  1758 ;; This function is called by:
  1759 ;;		_main
  1760 ;; This function uses a non-reentrant model
  1761 ;;
  1762                           
  1763                           
  1764                           ;psect for function _SYSTEM_Initialize
  1765  0141                     _SYSTEM_Initialize:
  1766  0141                     l1049:	
  1767                           ;incstack = 0
  1768                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1769                           
  1770                           
  1771                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1772  0141  3181  2118  3181   	fcall	_PIN_MANAGER_Initialize
  1773                           
  1774                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1775  0144  3181  2173  3181   	fcall	_OSCILLATOR_Initialize
  1776                           
  1777                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  1778  0147  3181  2185  3181   	fcall	_WDT_Initialize
  1779                           
  1780                           ;mcc_generated_files/mcc.c: 56:     ADC1_Initialize();
  1781  014A  3181  216B  3181   	fcall	_ADC1_Initialize
  1782                           
  1783                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
  1784  014D  3181  2100  3181   	fcall	_TMR1_Initialize
  1785  0150                     l21:
  1786  0150  0008               	return
  1787  0151                     __end_of_SYSTEM_Initialize:
  1788                           
  1789                           	psect	text4
  1790  0185                     __ptext4:	
  1791 ;; *************** function _WDT_Initialize *****************
  1792 ;; Defined at:
  1793 ;;		line 70 in file "mcc_generated_files/mcc.c"
  1794 ;; Parameters:    Size  Location     Type
  1795 ;;		None
  1796 ;; Auto vars:     Size  Location     Type
  1797 ;;		None
  1798 ;; Return value:  Size  Location     Type
  1799 ;;                  1    wreg      void 
  1800 ;; Registers used:
  1801 ;;		wreg
  1802 ;; Tracked objects:
  1803 ;;		On entry : 0/0
  1804 ;;		On exit  : 0/0
  1805 ;;		Unchanged: 0/0
  1806 ;; Data sizes:     COMMON   BANK0   BANK1
  1807 ;;      Params:         0       0       0
  1808 ;;      Locals:         0       0       0
  1809 ;;      Temps:          0       0       0
  1810 ;;      Totals:         0       0       0
  1811 ;;Total ram usage:        0 bytes
  1812 ;; Hardware stack levels used:    1
  1813 ;; Hardware stack levels required when called:    4
  1814 ;; This function calls:
  1815 ;;		Nothing
  1816 ;; This function is called by:
  1817 ;;		_SYSTEM_Initialize
  1818 ;; This function uses a non-reentrant model
  1819 ;;
  1820                           
  1821                           
  1822                           ;psect for function _WDT_Initialize
  1823  0185                     _WDT_Initialize:
  1824  0185                     l805:	
  1825                           ;incstack = 0
  1826                           ; Regs used in _WDT_Initialize: [wreg]
  1827                           
  1828                           
  1829                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x16;
  1830  0185  3016               	movlw	22
  1831  0186  0021               	movlb	1	; select bank1
  1832  0187  0097               	movwf	23	;volatile
  1833  0188                     l27:
  1834  0188  0008               	return
  1835  0189                     __end_of_WDT_Initialize:
  1836                           
  1837                           	psect	text5
  1838  0100                     __ptext5:	
  1839 ;; *************** function _TMR1_Initialize *****************
  1840 ;; Defined at:
  1841 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;		None
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;		None
  1846 ;; Return value:  Size  Location     Type
  1847 ;;                  1    wreg      void 
  1848 ;; Registers used:
  1849 ;;		wreg, status,2, status,0, pclath, cstack
  1850 ;; Tracked objects:
  1851 ;;		On entry : 0/0
  1852 ;;		On exit  : 0/0
  1853 ;;		Unchanged: 0/0
  1854 ;; Data sizes:     COMMON   BANK0   BANK1
  1855 ;;      Params:         0       0       0
  1856 ;;      Locals:         0       0       0
  1857 ;;      Temps:          0       0       0
  1858 ;;      Totals:         0       0       0
  1859 ;;Total ram usage:        0 bytes
  1860 ;; Hardware stack levels used:    1
  1861 ;; Hardware stack levels required when called:    5
  1862 ;; This function calls:
  1863 ;;		_TMR1_SetInterruptHandler
  1864 ;; This function is called by:
  1865 ;;		_SYSTEM_Initialize
  1866 ;; This function uses a non-reentrant model
  1867 ;;
  1868                           
  1869                           
  1870                           ;psect for function _TMR1_Initialize
  1871  0100                     _TMR1_Initialize:
  1872  0100                     l1015:	
  1873                           ;incstack = 0
  1874                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1875                           
  1876                           
  1877                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  1878  0100  0020               	movlb	0	; select bank0
  1879  0101  0199               	clrf	25	;volatile
  1880  0102                     l1017:
  1881                           
  1882                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x86;
  1883  0102  3086               	movlw	134
  1884  0103  0097               	movwf	23	;volatile
  1885  0104                     l1019:
  1886                           
  1887                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xE8;
  1888  0104  30E8               	movlw	232
  1889  0105  0096               	movwf	22	;volatile
  1890  0106                     l1021:
  1891                           
  1892                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  1893  0106  1011               	bcf	17,0	;volatile
  1894  0107                     l1023:
  1895                           
  1896                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  1897  0107  0817               	movf	23,w	;volatile
  1898  0108  00FB               	movwf	_timer1ReloadVal+1	;volatile
  1899  0109  0816               	movf	22,w	;volatile
  1900  010A  00FA               	movwf	_timer1ReloadVal	;volatile
  1901  010B                     l1025:
  1902                           
  1903                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  1904  010B  0021               	movlb	1	; select bank1
  1905  010C  1411               	bsf	17,0	;volatile
  1906  010D                     l1027:
  1907                           
  1908                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  1909  010D  308C               	movlw	low _TMR1_DefaultInterruptHandler
  1910  010E  00F7               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  1911  010F  3001               	movlw	high _TMR1_DefaultInterruptHandler
  1912  0110  00F8               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  1913  0111  3181  217A  3181   	fcall	_TMR1_SetInterruptHandler
  1914  0114                     l1029:
  1915                           
  1916                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x41;
  1917  0114  3041               	movlw	65
  1918  0115  0020               	movlb	0	; select bank0
  1919  0116  0098               	movwf	24	;volatile
  1920  0117                     l82:
  1921  0117  0008               	return
  1922  0118                     __end_of_TMR1_Initialize:
  1923                           
  1924                           	psect	text6
  1925  017A                     __ptext6:	
  1926 ;; *************** function _TMR1_SetInterruptHandler *****************
  1927 ;; Defined at:
  1928 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  1929 ;; Parameters:    Size  Location     Type
  1930 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  1931 ;;		 -> secondsTick(1), TMR1_DefaultInterruptHandler(1), 
  1932 ;; Auto vars:     Size  Location     Type
  1933 ;;		None
  1934 ;; Return value:  Size  Location     Type
  1935 ;;                  1    wreg      void 
  1936 ;; Registers used:
  1937 ;;		wreg
  1938 ;; Tracked objects:
  1939 ;;		On entry : 0/0
  1940 ;;		On exit  : 0/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMMON   BANK0   BANK1
  1943 ;;      Params:         2       0       0
  1944 ;;      Locals:         0       0       0
  1945 ;;      Temps:          0       0       0
  1946 ;;      Totals:         2       0       0
  1947 ;;Total ram usage:        2 bytes
  1948 ;; Hardware stack levels used:    1
  1949 ;; Hardware stack levels required when called:    4
  1950 ;; This function calls:
  1951 ;;		Nothing
  1952 ;; This function is called by:
  1953 ;;		_TMR1_Initialize
  1954 ;;		_main
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           
  1959                           ;psect for function _TMR1_SetInterruptHandler
  1960  017A                     _TMR1_SetInterruptHandler:
  1961  017A                     l1011:	
  1962                           ;incstack = 0
  1963                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  1964                           
  1965                           
  1966                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  1967  017A  0878               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  1968  017B  0020               	movlb	0	; select bank0
  1969  017C  00A1               	movwf	_TMR1_InterruptHandler+1
  1970  017D  0877               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  1971  017E  00A0               	movwf	_TMR1_InterruptHandler
  1972  017F                     l115:
  1973  017F  0008               	return
  1974  0180                     __end_of_TMR1_SetInterruptHandler:
  1975                           
  1976                           	psect	text7
  1977  0118                     __ptext7:	
  1978 ;; *************** function _PIN_MANAGER_Initialize *****************
  1979 ;; Defined at:
  1980 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1981 ;; Parameters:    Size  Location     Type
  1982 ;;		None
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;		None
  1985 ;; Return value:  Size  Location     Type
  1986 ;;                  1    wreg      void 
  1987 ;; Registers used:
  1988 ;;		wreg, status,2
  1989 ;; Tracked objects:
  1990 ;;		On entry : 0/0
  1991 ;;		On exit  : 0/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMMON   BANK0   BANK1
  1994 ;;      Params:         0       0       0
  1995 ;;      Locals:         0       0       0
  1996 ;;      Temps:          0       0       0
  1997 ;;      Totals:         0       0       0
  1998 ;;Total ram usage:        0 bytes
  1999 ;; Hardware stack levels used:    1
  2000 ;; Hardware stack levels required when called:    4
  2001 ;; This function calls:
  2002 ;;		Nothing
  2003 ;; This function is called by:
  2004 ;;		_SYSTEM_Initialize
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           
  2008                           
  2009                           ;psect for function _PIN_MANAGER_Initialize
  2010  0118                     _PIN_MANAGER_Initialize:
  2011  0118                     l785:	
  2012                           ;incstack = 0
  2013                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2014                           
  2015                           
  2016                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2017  0118  0022               	movlb	2	; select bank2
  2018  0119  018C               	clrf	12	;volatile
  2019  011A                     l787:
  2020                           
  2021                           ;mcc_generated_files/pin_manager.c: 65:     TRISA = 0x39;
  2022  011A  3039               	movlw	57
  2023  011B  0021               	movlb	1	; select bank1
  2024  011C  008C               	movwf	12	;volatile
  2025  011D                     l789:
  2026                           
  2027                           ;mcc_generated_files/pin_manager.c: 70:     ANSELA = 0x07;
  2028  011D  3007               	movlw	7
  2029  011E  0023               	movlb	3	; select bank3
  2030  011F  008C               	movwf	12	;volatile
  2031                           
  2032                           ;mcc_generated_files/pin_manager.c: 75:     WPUA = 0x00;
  2033  0120  0024               	movlb	4	; select bank4
  2034  0121  018C               	clrf	12	;volatile
  2035  0122                     l791:
  2036                           
  2037                           ;mcc_generated_files/pin_manager.c: 76:     OPTION_REGbits.nWPUEN = 1;
  2038  0122  0021               	movlb	1	; select bank1
  2039  0123  1795               	bsf	21,7	;volatile
  2040                           
  2041                           ;mcc_generated_files/pin_manager.c: 81:     ODCONA = 0x00;
  2042  0124  0025               	movlb	5	; select bank5
  2043  0125  018C               	clrf	12	;volatile
  2044  0126                     l793:
  2045                           
  2046                           ;mcc_generated_files/pin_manager.c: 86:     SLRCONA = 0x37;
  2047  0126  3037               	movlw	55
  2048  0127  0026               	movlb	6	; select bank6
  2049  0128  008C               	movwf	12	;volatile
  2050  0129                     l795:
  2051                           
  2052                           ;mcc_generated_files/pin_manager.c: 91:     INLVLA = 0x3F;
  2053  0129  303F               	movlw	63
  2054  012A  0027               	movlb	7	; select bank7
  2055  012B  008C               	movwf	12	;volatile
  2056                           
  2057                           ;mcc_generated_files/pin_manager.c: 96:     APFCON = 0x00;
  2058  012C  0022               	movlb	2	; select bank2
  2059  012D  019D               	clrf	29	;volatile
  2060  012E                     l797:
  2061                           
  2062                           ;mcc_generated_files/pin_manager.c: 103:     INTCONbits.IOCIE = 1;
  2063  012E  158B               	bsf	11,3	;volatile
  2064  012F                     l50:
  2065  012F  0008               	return
  2066  0130                     __end_of_PIN_MANAGER_Initialize:
  2067                           
  2068                           	psect	text8
  2069  0173                     __ptext8:	
  2070 ;; *************** function _OSCILLATOR_Initialize *****************
  2071 ;; Defined at:
  2072 ;;		line 60 in file "mcc_generated_files/mcc.c"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;		None
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;		None
  2077 ;; Return value:  Size  Location     Type
  2078 ;;                  1    wreg      void 
  2079 ;; Registers used:
  2080 ;;		wreg, status,2
  2081 ;; Tracked objects:
  2082 ;;		On entry : 0/0
  2083 ;;		On exit  : 0/0
  2084 ;;		Unchanged: 0/0
  2085 ;; Data sizes:     COMMON   BANK0   BANK1
  2086 ;;      Params:         0       0       0
  2087 ;;      Locals:         0       0       0
  2088 ;;      Temps:          0       0       0
  2089 ;;      Totals:         0       0       0
  2090 ;;Total ram usage:        0 bytes
  2091 ;; Hardware stack levels used:    1
  2092 ;; Hardware stack levels required when called:    4
  2093 ;; This function calls:
  2094 ;;		Nothing
  2095 ;; This function is called by:
  2096 ;;		_SYSTEM_Initialize
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           
  2100                           
  2101                           ;psect for function _OSCILLATOR_Initialize
  2102  0173                     _OSCILLATOR_Initialize:
  2103  0173                     l799:	
  2104                           ;incstack = 0
  2105                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2106                           
  2107                           
  2108                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x02;
  2109  0173  3002               	movlw	2
  2110  0174  0021               	movlb	1	; select bank1
  2111  0175  0099               	movwf	25	;volatile
  2112  0176                     l801:
  2113                           
  2114                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  2115  0176  0198               	clrf	24	;volatile
  2116  0177                     l803:
  2117                           
  2118                           ;mcc_generated_files/mcc.c: 67:     BORCON = 0x00;
  2119  0177  0022               	movlb	2	; select bank2
  2120  0178  0196               	clrf	22	;volatile
  2121  0179                     l24:
  2122  0179  0008               	return
  2123  017A                     __end_of_OSCILLATOR_Initialize:
  2124                           
  2125                           	psect	text9
  2126  016B                     __ptext9:	
  2127 ;; *************** function _ADC1_Initialize *****************
  2128 ;; Defined at:
  2129 ;;		line 67 in file "mcc_generated_files/adc1.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;		None
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;		None
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  1    wreg      void 
  2136 ;; Registers used:
  2137 ;;		wreg, status,2
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMMON   BANK0   BANK1
  2143 ;;      Params:         0       0       0
  2144 ;;      Locals:         0       0       0
  2145 ;;      Temps:          0       0       0
  2146 ;;      Totals:         0       0       0
  2147 ;;Total ram usage:        0 bytes
  2148 ;; Hardware stack levels used:    1
  2149 ;; Hardware stack levels required when called:    4
  2150 ;; This function calls:
  2151 ;;		Nothing
  2152 ;; This function is called by:
  2153 ;;		_SYSTEM_Initialize
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157                           
  2158                           ;psect for function _ADC1_Initialize
  2159  016B                     _ADC1_Initialize:
  2160  016B                     l807:	
  2161                           ;incstack = 0
  2162                           ; Regs used in _ADC1_Initialize: [wreg+status,2]
  2163                           
  2164                           
  2165                           ;mcc_generated_files/adc1.c: 72:     ADCON1 = 0x00;
  2166  016B  0021               	movlb	1	; select bank1
  2167  016C  019E               	clrf	30	;volatile
  2168                           
  2169                           ;mcc_generated_files/adc1.c: 75:     ADCON2 = 0x00;
  2170  016D  019F               	clrf	31	;volatile
  2171                           
  2172                           ;mcc_generated_files/adc1.c: 78:     ADRESL = 0x00;
  2173  016E  019B               	clrf	27	;volatile
  2174                           
  2175                           ;mcc_generated_files/adc1.c: 81:     ADRESH = 0x00;
  2176  016F  019C               	clrf	28	;volatile
  2177  0170                     l809:
  2178                           
  2179                           ;mcc_generated_files/adc1.c: 84:     ADCON0 = 0x01;
  2180  0170  3001               	movlw	1
  2181  0171  009D               	movwf	29	;volatile
  2182  0172                     l234:
  2183  0172  0008               	return
  2184  0173                     __end_of_ADC1_Initialize:
  2185                           
  2186                           	psect	intentry
  2187  0004                     __pintentry:	
  2188 ;; *************** function _INTERRUPT_InterruptManager *****************
  2189 ;; Defined at:
  2190 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2191 ;; Parameters:    Size  Location     Type
  2192 ;;		None
  2193 ;; Auto vars:     Size  Location     Type
  2194 ;;		None
  2195 ;; Return value:  Size  Location     Type
  2196 ;;                  1    wreg      void 
  2197 ;; Registers used:
  2198 ;;		wreg, status,2, status,0, pclath, cstack
  2199 ;; Tracked objects:
  2200 ;;		On entry : 0/0
  2201 ;;		On exit  : 0/0
  2202 ;;		Unchanged: 0/0
  2203 ;; Data sizes:     COMMON   BANK0   BANK1
  2204 ;;      Params:         0       0       0
  2205 ;;      Locals:         0       0       0
  2206 ;;      Temps:          0       0       0
  2207 ;;      Totals:         0       0       0
  2208 ;;Total ram usage:        0 bytes
  2209 ;; Hardware stack levels used:    1
  2210 ;; Hardware stack levels required when called:    3
  2211 ;; This function calls:
  2212 ;;		_PIN_MANAGER_IOC
  2213 ;;		_TMR1_ISR
  2214 ;; This function is called by:
  2215 ;;		Interrupt level 1
  2216 ;; This function uses a non-reentrant model
  2217 ;;
  2218                           
  2219  0004                     _INTERRUPT_InterruptManager:
  2220                           
  2221                           ;incstack = 0
  2222  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  2223                           
  2224                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  2225  0005  3180               	pagesel	$
  2226  0006                     i1l1057:
  2227                           
  2228                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
  2229  0006  1D8B               	btfss	11,3	;volatile
  2230  0007  2809               	goto	u19_21
  2231  0008  280A               	goto	u19_20
  2232  0009                     u19_21:
  2233  0009  2812               	goto	i1l133
  2234  000A                     u19_20:
  2235  000A                     i1l1059:
  2236  000A  1C0B               	btfss	11,0	;volatile
  2237  000B  280D               	goto	u20_21
  2238  000C  280E               	goto	u20_20
  2239  000D                     u20_21:
  2240  000D  2812               	goto	i1l133
  2241  000E                     u20_20:
  2242  000E                     i1l1061:
  2243                           
  2244                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
  2245  000E  3181  218D  3180   	fcall	_PIN_MANAGER_IOC
  2246                           
  2247                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  2248  0011  2824               	goto	i1l139
  2249  0012                     i1l133:	
  2250                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  2251                           
  2252  0012  1F0B               	btfss	11,6	;volatile
  2253  0013  2815               	goto	u21_21
  2254  0014  2816               	goto	u21_20
  2255  0015                     u21_21:
  2256  0015  2824               	goto	i1l139
  2257  0016                     u21_20:
  2258  0016                     i1l1063:
  2259                           
  2260                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  2261  0016  0021               	movlb	1	; select bank1
  2262  0017  1C11               	btfss	17,0	;volatile
  2263  0018  281A               	goto	u22_21
  2264  0019  281B               	goto	u22_20
  2265  001A                     u22_21:
  2266  001A  2824               	goto	i1l138
  2267  001B                     u22_20:
  2268  001B                     i1l1065:
  2269  001B  0020               	movlb	0	; select bank0
  2270  001C  1C11               	btfss	17,0	;volatile
  2271  001D  281F               	goto	u23_21
  2272  001E  2820               	goto	u23_20
  2273  001F                     u23_21:
  2274  001F  2824               	goto	i1l138
  2275  0020                     u23_20:
  2276  0020                     i1l1067:
  2277                           
  2278                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR1_ISR();
  2279  0020  3181  2151  3180   	fcall	_TMR1_ISR
  2280                           
  2281                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  2282  0023  2824               	goto	i1l139
  2283  0024                     i1l138:	
  2284                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
  2285                           
  2286  0024                     i1l139:
  2287  0024  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2288  0025  0009               	retfie
  2289  0026                     __end_of_INTERRUPT_InterruptManager:
  2290                           
  2291                           	psect	text11
  2292  0151                     __ptext11:	
  2293 ;; *************** function _TMR1_ISR *****************
  2294 ;; Defined at:
  2295 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  2296 ;; Parameters:    Size  Location     Type
  2297 ;;		None
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;		None
  2300 ;; Return value:  Size  Location     Type
  2301 ;;                  1    wreg      void 
  2302 ;; Registers used:
  2303 ;;		wreg, status,2, status,0, pclath, cstack
  2304 ;; Tracked objects:
  2305 ;;		On entry : 0/0
  2306 ;;		On exit  : 0/0
  2307 ;;		Unchanged: 0/0
  2308 ;; Data sizes:     COMMON   BANK0   BANK1
  2309 ;;      Params:         0       0       0
  2310 ;;      Locals:         0       0       0
  2311 ;;      Temps:          0       0       0
  2312 ;;      Totals:         0       0       0
  2313 ;;Total ram usage:        0 bytes
  2314 ;; Hardware stack levels used:    1
  2315 ;; Hardware stack levels required when called:    2
  2316 ;; This function calls:
  2317 ;;		_TMR1_CallBack
  2318 ;;		_TMR1_WriteTimer
  2319 ;; This function is called by:
  2320 ;;		_INTERRUPT_InterruptManager
  2321 ;; This function uses a non-reentrant model
  2322 ;;
  2323                           
  2324                           
  2325                           ;psect for function _TMR1_ISR
  2326  0151                     _TMR1_ISR:
  2327  0151                     i1l1051:	
  2328                           ;incstack = 0
  2329                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  2330                           
  2331                           
  2332                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  2333  0151  0020               	movlb	0	; select bank0
  2334  0152  1011               	bcf	17,0	;volatile
  2335  0153                     i1l1053:
  2336                           
  2337                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  2338  0153  087B               	movf	_timer1ReloadVal+1,w	;volatile
  2339  0154  00F6               	movwf	TMR1_WriteTimer@timerVal+1
  2340  0155  087A               	movf	_timer1ReloadVal,w	;volatile
  2341  0156  00F5               	movwf	TMR1_WriteTimer@timerVal
  2342  0157  3181  2130  3181   	fcall	_TMR1_WriteTimer
  2343                           
  2344                           ;mcc_generated_files/tmr1.c: 166:     TMR1_CallBack();
  2345  015A  3181  215E  3181   	fcall	_TMR1_CallBack
  2346  015D                     i1l108:
  2347  015D  0008               	return
  2348  015E                     __end_of_TMR1_ISR:
  2349                           
  2350                           	psect	text12
  2351  0130                     __ptext12:	
  2352 ;; *************** function _TMR1_WriteTimer *****************
  2353 ;; Defined at:
  2354 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  2355 ;; Parameters:    Size  Location     Type
  2356 ;;  timerVal        2    0[COMMON] unsigned short 
  2357 ;; Auto vars:     Size  Location     Type
  2358 ;;		None
  2359 ;; Return value:  Size  Location     Type
  2360 ;;                  1    wreg      void 
  2361 ;; Registers used:
  2362 ;;		wreg, status,2
  2363 ;; Tracked objects:
  2364 ;;		On entry : 0/0
  2365 ;;		On exit  : 0/0
  2366 ;;		Unchanged: 0/0
  2367 ;; Data sizes:     COMMON   BANK0   BANK1
  2368 ;;      Params:         2       0       0
  2369 ;;      Locals:         0       0       0
  2370 ;;      Temps:          0       0       0
  2371 ;;      Totals:         2       0       0
  2372 ;;Total ram usage:        2 bytes
  2373 ;; Hardware stack levels used:    1
  2374 ;; This function calls:
  2375 ;;		Nothing
  2376 ;; This function is called by:
  2377 ;;		_TMR1_ISR
  2378 ;;		_TMR1_Reload
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381                           
  2382                           
  2383                           ;psect for function _TMR1_WriteTimer
  2384  0130                     _TMR1_WriteTimer:
  2385  0130                     i1l1031:	
  2386                           ;incstack = 0
  2387                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  2388                           
  2389                           
  2390                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  2391  0130  0020               	movlb	0	; select bank0
  2392  0131  1D18               	btfss	24,2	;volatile
  2393  0132  2934               	goto	u17_21
  2394  0133  2935               	goto	u17_20
  2395  0134                     u17_21:
  2396  0134  293C               	goto	i1l1041
  2397  0135                     u17_20:
  2398  0135                     i1l1033:
  2399                           
  2400                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  2401  0135  1018               	bcf	24,0	;volatile
  2402  0136                     i1l1035:
  2403                           
  2404                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (timerVal >> 8);
  2405  0136  0876               	movf	TMR1_WriteTimer@timerVal+1,w
  2406  0137  0097               	movwf	23	;volatile
  2407  0138                     i1l1037:
  2408                           
  2409                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = timerVal;
  2410  0138  0875               	movf	TMR1_WriteTimer@timerVal,w
  2411  0139  0096               	movwf	22	;volatile
  2412  013A                     i1l1039:
  2413                           
  2414                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  2415  013A  1418               	bsf	24,0	;volatile
  2416                           
  2417                           ;mcc_generated_files/tmr1.c: 133:     }
  2418  013B  2940               	goto	i1l96
  2419  013C                     i1l1041:
  2420                           
  2421                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (timerVal >> 8);
  2422  013C  0876               	movf	TMR1_WriteTimer@timerVal+1,w
  2423  013D  0097               	movwf	23	;volatile
  2424  013E                     i1l1043:
  2425                           
  2426                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = timerVal;
  2427  013E  0875               	movf	TMR1_WriteTimer@timerVal,w
  2428  013F  0096               	movwf	22	;volatile
  2429  0140                     i1l96:
  2430  0140  0008               	return
  2431  0141                     __end_of_TMR1_WriteTimer:
  2432                           
  2433                           	psect	text13
  2434  015E                     __ptext13:	
  2435 ;; *************** function _TMR1_CallBack *****************
  2436 ;; Defined at:
  2437 ;;		line 169 in file "mcc_generated_files/tmr1.c"
  2438 ;; Parameters:    Size  Location     Type
  2439 ;;		None
  2440 ;; Auto vars:     Size  Location     Type
  2441 ;;		None
  2442 ;; Return value:  Size  Location     Type
  2443 ;;                  1    wreg      void 
  2444 ;; Registers used:
  2445 ;;		wreg, status,2, status,0, pclath, cstack
  2446 ;; Tracked objects:
  2447 ;;		On entry : 0/0
  2448 ;;		On exit  : 0/0
  2449 ;;		Unchanged: 0/0
  2450 ;; Data sizes:     COMMON   BANK0   BANK1
  2451 ;;      Params:         0       0       0
  2452 ;;      Locals:         0       0       0
  2453 ;;      Temps:          0       0       0
  2454 ;;      Totals:         0       0       0
  2455 ;;Total ram usage:        0 bytes
  2456 ;; Hardware stack levels used:    1
  2457 ;; Hardware stack levels required when called:    1
  2458 ;; This function calls:
  2459 ;;		Absolute function
  2460 ;;		_TMR1_DefaultInterruptHandler
  2461 ;;		_secondsTick
  2462 ;; This function is called by:
  2463 ;;		_TMR1_ISR
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467                           
  2468                           ;psect for function _TMR1_CallBack
  2469  015E                     _TMR1_CallBack:
  2470  015E                     i1l1045:	
  2471                           ;incstack = 0
  2472                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
  2473                           
  2474                           
  2475                           ;mcc_generated_files/tmr1.c: 172:     if(TMR1_InterruptHandler)
  2476  015E  0020               	movlb	0	; select bank0
  2477  015F  0820               	movf	_TMR1_InterruptHandler,w
  2478  0160  0421               	iorwf	_TMR1_InterruptHandler+1,w
  2479  0161  1903               	btfsc	3,2
  2480  0162  2964               	goto	u18_21
  2481  0163  2965               	goto	u18_20
  2482  0164                     u18_21:
  2483  0164  296A               	goto	i1l112
  2484  0165                     u18_20:
  2485  0165                     i1l1047:
  2486                           
  2487                           ;mcc_generated_files/tmr1.c: 173:     {;mcc_generated_files/tmr1.c: 174:         TMR1_In
      +                          terruptHandler();
  2488  0165  0821               	movf	_TMR1_InterruptHandler+1,w
  2489  0166  008A               	movwf	10
  2490  0167  0820               	movf	_TMR1_InterruptHandler,w
  2491  0168  000A               	callw
  2492  0169  3181               	pagesel	$
  2493  016A                     i1l112:
  2494  016A  0008               	return
  2495  016B                     __end_of_TMR1_CallBack:
  2496                           
  2497                           	psect	text14
  2498  018C                     __ptext14:	
  2499 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  2500 ;; Defined at:
  2501 ;;		line 182 in file "mcc_generated_files/tmr1.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;		None
  2504 ;; Auto vars:     Size  Location     Type
  2505 ;;		None
  2506 ;; Return value:  Size  Location     Type
  2507 ;;                  1    wreg      void 
  2508 ;; Registers used:
  2509 ;;		None
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMMON   BANK0   BANK1
  2515 ;;      Params:         0       0       0
  2516 ;;      Locals:         0       0       0
  2517 ;;      Temps:          0       0       0
  2518 ;;      Totals:         0       0       0
  2519 ;;Total ram usage:        0 bytes
  2520 ;; Hardware stack levels used:    1
  2521 ;; This function calls:
  2522 ;;		Nothing
  2523 ;; This function is called by:
  2524 ;;		_TMR1_Initialize
  2525 ;;		_TMR1_CallBack
  2526 ;; This function uses a non-reentrant model
  2527 ;;
  2528                           
  2529                           
  2530                           ;psect for function _TMR1_DefaultInterruptHandler
  2531  018C                     _TMR1_DefaultInterruptHandler:
  2532  018C                     i1l118:	
  2533                           ;incstack = 0
  2534                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  2535                           
  2536  018C  0008               	return
  2537  018D                     __end_of_TMR1_DefaultInterruptHandler:
  2538                           
  2539                           	psect	text15
  2540  0180                     __ptext15:	
  2541 ;; *************** function _secondsTick *****************
  2542 ;; Defined at:
  2543 ;;		line 205 in file "main.c"
  2544 ;; Parameters:    Size  Location     Type
  2545 ;;		None
  2546 ;; Auto vars:     Size  Location     Type
  2547 ;;		None
  2548 ;; Return value:  Size  Location     Type
  2549 ;;                  1    wreg      void 
  2550 ;; Registers used:
  2551 ;;		wreg
  2552 ;; Tracked objects:
  2553 ;;		On entry : 0/0
  2554 ;;		On exit  : 0/0
  2555 ;;		Unchanged: 0/0
  2556 ;; Data sizes:     COMMON   BANK0   BANK1
  2557 ;;      Params:         0       0       0
  2558 ;;      Locals:         0       0       0
  2559 ;;      Temps:          0       0       0
  2560 ;;      Totals:         0       0       0
  2561 ;;Total ram usage:        0 bytes
  2562 ;; Hardware stack levels used:    1
  2563 ;; This function calls:
  2564 ;;		Nothing
  2565 ;; This function is called by:
  2566 ;;		_main
  2567 ;;		_TMR1_CallBack
  2568 ;; This function uses a non-reentrant model
  2569 ;;
  2570                           
  2571                           
  2572                           ;psect for function _secondsTick
  2573  0180                     _secondsTick:
  2574  0180                     i1l1013:	
  2575                           ;incstack = 0
  2576                           ; Regs used in _secondsTick: [wreg]
  2577                           
  2578                           
  2579                           ;main.c: 207:     currentSecondsTick++;
  2580  0180  3001               	movlw	1
  2581  0181  07F2               	addwf	_currentSecondsTick,f	;volatile
  2582  0182  3000               	movlw	0
  2583  0183  3DF3               	addwfc	_currentSecondsTick+1,f	;volatile
  2584  0184                     i1l215:
  2585  0184  0008               	return
  2586  0185                     __end_of_secondsTick:
  2587                           
  2588                           	psect	text16
  2589  018D                     __ptext16:	
  2590 ;; *************** function _PIN_MANAGER_IOC *****************
  2591 ;; Defined at:
  2592 ;;		line 107 in file "mcc_generated_files/pin_manager.c"
  2593 ;; Parameters:    Size  Location     Type
  2594 ;;		None
  2595 ;; Auto vars:     Size  Location     Type
  2596 ;;		None
  2597 ;; Return value:  Size  Location     Type
  2598 ;;                  1    wreg      void 
  2599 ;; Registers used:
  2600 ;;		None
  2601 ;; Tracked objects:
  2602 ;;		On entry : 0/0
  2603 ;;		On exit  : 0/0
  2604 ;;		Unchanged: 0/0
  2605 ;; Data sizes:     COMMON   BANK0   BANK1
  2606 ;;      Params:         0       0       0
  2607 ;;      Locals:         0       0       0
  2608 ;;      Temps:          0       0       0
  2609 ;;      Totals:         0       0       0
  2610 ;;Total ram usage:        0 bytes
  2611 ;; Hardware stack levels used:    1
  2612 ;; This function calls:
  2613 ;;		Nothing
  2614 ;; This function is called by:
  2615 ;;		_INTERRUPT_InterruptManager
  2616 ;; This function uses a non-reentrant model
  2617 ;;
  2618                           
  2619                           
  2620                           ;psect for function _PIN_MANAGER_IOC
  2621  018D                     _PIN_MANAGER_IOC:
  2622  018D                     i1l53:	
  2623                           ;incstack = 0
  2624                           ; Regs used in _PIN_MANAGER_IOC: []
  2625                           
  2626  018D  0008               	return
  2627  018E                     __end_of_PIN_MANAGER_IOC:
  2628  007E                     btemp	set	126	;btemp
  2629  007E                     int$flags	set	126
  2630  007E                     wtemp0	set	126
  2631                           
  2632                           	psect	config
  2633                           
  2634                           ;Config register CONFIG1 @ 0x8007
  2635                           ;	
  2636                           ;	FOSC = INTOSC, INTOSC oscillator; I/O function on CLKIN pin
  2637                           ;	Watchdog Timer Enable
  2638                           ;	WDTE = OFF, WDT disabled
  2639                           ;	Power-up Timer Enable
  2640                           ;	PWRTE = OFF, PWRT disabled
  2641                           ;	MCLR Pin Function Select
  2642                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2643                           ;	Flash Program Memory Code Protection
  2644                           ;	CP = ON, Program memory code protection is enabled
  2645                           ;	Brown-out Reset Enable
  2646                           ;	BOREN = ON, Brown-out Reset enabled
  2647                           ;	Clock Out Enable
  2648                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2649  8007                     	org	32775
  2650  8007  3F64               	dw	16228
  2651                           
  2652                           ;Config register CONFIG2 @ 0x8008
  2653                           ;	Flash Memory Self-Write Protection
  2654                           ;	WRT = OFF, Write protection off
  2655                           ;	PLL Enable
  2656                           ;	PLLEN = OFF, 4x PLL disabled
  2657                           ;	Stack Overflow/Underflow Reset Enable
  2658                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2659                           ;	Brown-out Reset Voltage Selection
  2660                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2661                           ;	Low Power Brown-out Reset enable bit
  2662                           ;	LPBOREN = OFF, LPBOR is disabled
  2663                           ;	Low-Voltage Programming Enable
  2664                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  2665  8008                     	org	32776
  2666  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         7
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      12
    BANK0            80      2       6
    BANK1            32      0       0

Pointer List with Targets:

    ADC1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> secondsTick(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> secondsTick(), Absolute function(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_setState
    _TMR1_Initialize->_TMR1_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     393
                                              0 BANK0      2     2      0
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
                           _setState
 ---------------------------------------------------------------------------------
 (1) _setState                                             3     3      0      45
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
                    _ADC1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0     240
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     240
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                        _secondsTick *
 ---------------------------------------------------------------------------------
 (7) _secondsTick                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _PIN_MANAGER_IOC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize
   _TMR1_SetInterruptHandler
   _TMR1_StartTimer
   _setState

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _secondsTick *
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      12       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2       6       6        7.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      12       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Jan 19 08:28:43 2021

                                      l21 0150                                        l24 0179  
                                      l50 012F                                        l27 0188  
                                      l82 0117                                        l85 018B  
                                      u30 00B9                                        u31 00B8  
                                     l201 00CB                                       l115 017F  
                                     l211 00E3                                       l204 00D5  
                                     l206 00D7                                       l209 00E1  
                                     l234 0172                                       l170 0046  
                                     l171 0059                                       l190 00FF  
                                     l183 008D                                       l175 0062  
                                     l193 00BD                                       l169 009A  
                                     l195 00BF                                       l179 0075  
                                     l199 00C9                                       l801 0176  
                                     l803 0177                                       l805 0185  
                                     l807 016B                                       l809 0170  
                                     l861 00C2                                       l853 00B3  
                                     l791 0122                                       l847 0189  
                                     l863 00CC                                       l793 0126  
                                     l785 0118                                       l865 00CE  
                                     l873 00E5                                       l857 00BA  
                                     l795 0129                                       l787 011A  
                                     l867 00D8                                       l875 00FB  
                                     l859 00C0                                       l797 012E  
                                     l789 011D                                       l869 00DA  
                                     l799 0173                                       u310 004A  
                                     u311 0049                                       u320 0054  
                                     u321 0053                                       u330 005D  
                                     u331 005C                                       u340 0066  
                                     u341 0065                                       u325 0050  
                                     u350 0070                                       u351 006F  
                                     u360 0079                                       u361 0078  
                                     u370 0088                                       u371 0087  
                                     u355 006C                                       u375 0084  
                         _timer1ReloadVal 007A                                      l1011 017A  
                                    l1021 0106                                      l1023 0107  
                                    l1015 0100                                      l1025 010B  
                                    l1017 0102                                      l1027 010D  
                                    l1019 0104                                      l1029 0114  
                                    l1221 00A3                                      l1223 00ED  
                                    l1151 003E                                      l1049 0141  
                                    l1161 0066                                      l1153 0041  
                                    l1145 0032                                      l1171 0095  
                                    l1163 0070                                      l1155 004A  
                                    l1147 0035                                      l1165 0079  
                                    l1157 0054                                      l1149 0036  
                                    l1167 007E                                      l1159 005D  
                                    l1175 009A                                      l1169 0088  
                                    _LATA 010C                                      i1l53 018D  
                                    i1l96 0140                                      _WPUA 020C  
                                    _main 0032                                      btemp 007E  
                                    start 0026                ??_TMR1_SetInterruptHandler 0079  
          __size_of_OSCILLATOR_Initialize 0007             __end_of_OSCILLATOR_Initialize 017A  
                                   ?_main 0075                           _TMR1_StartTimer 0189  
                                   _T1CON 0018                                     i1l112 016A  
                                   i1l108 015D                                     i1l133 0012  
                                   i1l118 018C                                     i1l215 0184  
                                   i1l138 0024                                     i1l139 0024  
                                   u20_20 000E                                     u20_21 000D  
                                   u21_20 0016                                     u21_21 0015  
                                   u22_20 001B                                     u22_21 001A  
                                   u23_20 0020                                     u23_21 001F  
                                   u17_20 0135                                     u17_21 0134  
                                   _TMR1H 0017                                     _TMR1L 0016  
                                   u18_20 0165                                     u18_21 0164  
                                   u19_20 000A                                     u19_21 0009  
                                   _TRISA 008C                          __end_of_TMR1_ISR 015E  
                 __end_of_PIN_MANAGER_IOC 018E                            _WDT_Initialize 0185  
                 __end_of_TMR1_Initialize 0118                                     pclath 000A  
                                   status 0003                                     wtemp0 007E  
                         _TMR1_WriteTimer 0130                           __initialization 0027  
                            __end_of_main 00B2               ?_INTERRUPT_InterruptManager 0075  
                                  ??_main 0024                              ?_secondsTick 0075  
                  __end_of_WDT_Initialize 0189                                    _ADCON0 009D  
                                  _ADCON1 009E                                    _ADCON2 009F  
                                  _ADRESH 009C                                    _ADRESL 009B  
                                  _APFCON 011D                                    _ANSELA 018C  
                                  _BORCON 0116                                    _T1GCON 0019  
                                  i1l1013 0180                                    i1l1031 0130  
                                  i1l1033 0135                                    i1l1041 013C  
                 TMR1_WriteTimer@timerVal 0075                                    i1l1043 013E  
                                  i1l1035 0136                                    i1l1051 0151  
                                  i1l1045 015E                                    i1l1037 0138  
                                  i1l1053 0153                                    i1l1061 000E  
                                  i1l1047 0165                                    i1l1039 013A  
                                  i1l1063 0016                                    i1l1065 001B  
                                  i1l1057 0006                                    i1l1067 0020  
                                  i1l1059 000A                                    _ODCONA 028C  
                                  _INLVLA 038C                                    _OSCCON 0099  
                                  _WDTCON 0097      __end_of_TMR1_DefaultInterruptHandler 018D  
   __size_of_TMR1_DefaultInterruptHandler 0001              _TMR1_DefaultInterruptHandler 018C  
                 __end_of_TMR1_StartTimer 018C                  __size_of_ADC1_Initialize 0008  
                        __end_of_setState 0100                           ?_WDT_Initialize 0075  
TMR1_SetInterruptHandler@InterruptHandler 0077                          ?_PIN_MANAGER_IOC 0075  
                 __end_of_TMR1_WriteTimer 0141                     __end_of_TMR1_CallBack 016B  
                        ?_TMR1_Initialize 0075                         _SYSTEM_Initialize 0141  
                 __end_of__initialization 002F                        ?_SYSTEM_Initialize 0075  
                          __pcstackCOMMON 0075                       ??_SYSTEM_Initialize 0079  
                               ?_TMR1_ISR 0075             ?_TMR1_DefaultInterruptHandler 0075  
                          _OPTION_REGbits 0095                 __end_of_SYSTEM_Initialize 0151  
                              __pbssBANK0 0022                                __pnvCOMMON 007A  
                              __pmaintext 0032                          ?_TMR1_StartTimer 0075  
                              ??_TMR1_ISR 0077                                __pintentry 0004  
                                 _OSCTUNE 0098                                   _SLRCONA 030C  
                       ??_ADC1_Initialize 0077                      __size_of_secondsTick 0005  
                        ?_TMR1_WriteTimer 0075                                 ?_setState 0075  
                                 __ptext1 00B2                                   __ptext2 0189  
                                 __ptext3 0141                                   __ptext4 0185  
                                 __ptext5 0100                                   __ptext6 017A  
                                 __ptext7 0118                                   __ptext8 0173  
                                 __ptext9 016B            ??_TMR1_DefaultInterruptHandler 0075  
                               _T1CONbits 0018                     _OSCILLATOR_Initialize 0173  
       __size_of_TMR1_SetInterruptHandler 0006                  ??_PIN_MANAGER_Initialize 0077  
               ?_TMR1_SetInterruptHandler 0077                                 _IOCAPbits 0391  
              __size_of_SYSTEM_Initialize 0010                      end_of_initialization 002F  
                              ??_setState 0077                     _ADC1_InterruptHandler 0022  
                        ??_WDT_Initialize 0077                                 _PORTAbits 000C  
                       __size_of_TMR1_ISR 000D                    ?_OSCILLATOR_Initialize 0075  
                     start_initialization 0027           __size_of_PIN_MANAGER_Initialize 0018  
                __size_of_PIN_MANAGER_IOC 0001                  __size_of_TMR1_Initialize 0018  
                         _ADC1_Initialize 016B                    __size_of_TMR1_CallBack 000D  
                             __pbssCOMMON 0070                                 ___latbits 0000  
                           __pcstackBANK0 0024                          setState@newState 0079  
                            _currentState 0074                                 __pnvBANK0 0020  
                  _PIN_MANAGER_Initialize 0118          __end_of_TMR1_SetInterruptHandler 0180  
                       __size_of_setState 004E              ??_INTERRUPT_InterruptManager 0077  
                __size_of_TMR1_StartTimer 0003                             ??_secondsTick 0075  
                           _TMR1_CallBack 015E                                  _LATAbits 010C  
                                _PIE1bits 0091                  __size_of_TMR1_WriteTimer 0011  
     __size_of_INTERRUPT_InterruptManager 0022                   __end_of_ADC1_Initialize 0173  
                                _PIR1bits 0011                                  _TMR1_ISR 0151  
                       ??_PIN_MANAGER_IOC 0075                         ??_TMR1_Initialize 0079  
                              _ADCON0bits 009D                        _currentSecondsTick 0072  
                     __end_of_secondsTick 0185                            ?_TMR1_CallBack 0075  
                 ??_OSCILLATOR_Initialize 0077                  _TMR1_SetInterruptHandler 017A  
                   _TMR1_InterruptHandler 0020                                  __ptext11 0151  
                                __ptext12 0130                                  __ptext13 015E  
                              _T1GCONbits 0019                                  __ptext14 018C  
                                __ptext15 0180                                  __ptext16 018D  
                       ??_TMR1_StartTimer 0077                             __size_of_main 0080  
                                _setState 00B2                          ?_ADC1_Initialize 0075  
                     _demandedSecondsTick 0070                                  int$flags 007E  
      __end_of_INTERRUPT_InterruptManager 0026                _INTERRUPT_InterruptManager 0004  
                       ??_TMR1_WriteTimer 0077                                _INTCONbits 000B  
                             _secondsTick 0180                           ??_TMR1_CallBack 0075  
                 __size_of_WDT_Initialize 0004                                  intlevel1 0000  
                 ?_PIN_MANAGER_Initialize 0075            __end_of_PIN_MANAGER_Initialize 0130  
                         _PIN_MANAGER_IOC 018D                           _TMR1_Initialize 0100  
