

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Fri Aug 21 14:58:09 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	12F1571
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 09/04/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC12F1571 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  008C                     	;# 
    88  0091                     	;# 
    89  0092                     	;# 
    90  0093                     	;# 
    91  0095                     	;# 
    92  0096                     	;# 
    93  0097                     	;# 
    94  0098                     	;# 
    95  0099                     	;# 
    96  009A                     	;# 
    97  009B                     	;# 
    98  009B                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  0111                     	;# 
   105  0112                     	;# 
   106  0115                     	;# 
   107  0116                     	;# 
   108  0117                     	;# 
   109  0118                     	;# 
   110  0119                     	;# 
   111  011D                     	;# 
   112  011D                     	;# 
   113  018C                     	;# 
   114  0191                     	;# 
   115  0191                     	;# 
   116  0192                     	;# 
   117  0193                     	;# 
   118  0193                     	;# 
   119  0194                     	;# 
   120  0195                     	;# 
   121  0196                     	;# 
   122  0197                     	;# 
   123  020C                     	;# 
   124  028C                     	;# 
   125  030C                     	;# 
   126  038C                     	;# 
   127  0391                     	;# 
   128  0392                     	;# 
   129  0393                     	;# 
   130  0691                     	;# 
   131  0692                     	;# 
   132  0693                     	;# 
   133  0694                     	;# 
   134  0695                     	;# 
   135  0D8E                     	;# 
   136  0D8F                     	;# 
   137  0D90                     	;# 
   138  0D91                     	;# 
   139  0D91                     	;# 
   140  0D92                     	;# 
   141  0D93                     	;# 
   142  0D93                     	;# 
   143  0D94                     	;# 
   144  0D95                     	;# 
   145  0D95                     	;# 
   146  0D96                     	;# 
   147  0D97                     	;# 
   148  0D97                     	;# 
   149  0D98                     	;# 
   150  0D99                     	;# 
   151  0D99                     	;# 
   152  0D9A                     	;# 
   153  0D9B                     	;# 
   154  0D9C                     	;# 
   155  0D9C                     	;# 
   156  0D9D                     	;# 
   157  0D9D                     	;# 
   158  0D9E                     	;# 
   159  0D9F                     	;# 
   160  0DA0                     	;# 
   161  0DA1                     	;# 
   162  0DA1                     	;# 
   163  0DA2                     	;# 
   164  0DA3                     	;# 
   165  0DA3                     	;# 
   166  0DA4                     	;# 
   167  0DA5                     	;# 
   168  0DA5                     	;# 
   169  0DA6                     	;# 
   170  0DA7                     	;# 
   171  0DA7                     	;# 
   172  0DA8                     	;# 
   173  0DA9                     	;# 
   174  0DA9                     	;# 
   175  0DAA                     	;# 
   176  0DAB                     	;# 
   177  0DAC                     	;# 
   178  0DAC                     	;# 
   179  0DAD                     	;# 
   180  0DAD                     	;# 
   181  0DAE                     	;# 
   182  0DAF                     	;# 
   183  0DB0                     	;# 
   184  0DB1                     	;# 
   185  0DB1                     	;# 
   186  0DB2                     	;# 
   187  0DB3                     	;# 
   188  0DB3                     	;# 
   189  0DB4                     	;# 
   190  0DB5                     	;# 
   191  0DB5                     	;# 
   192  0DB6                     	;# 
   193  0DB7                     	;# 
   194  0DB7                     	;# 
   195  0DB8                     	;# 
   196  0DB9                     	;# 
   197  0DB9                     	;# 
   198  0DBA                     	;# 
   199  0DBB                     	;# 
   200  0DBC                     	;# 
   201  0DBC                     	;# 
   202  0DBD                     	;# 
   203  0DBD                     	;# 
   204  0DBE                     	;# 
   205  0DBF                     	;# 
   206  0DC0                     	;# 
   207  0FE4                     	;# 
   208  0FE5                     	;# 
   209  0FE6                     	;# 
   210  0FE7                     	;# 
   211  0FE8                     	;# 
   212  0FE8                     	;# 
   213  0FE9                     	;# 
   214  0FEA                     	;# 
   215  0FEA                     	;# 
   216  0FEB                     	;# 
   217  0FED                     	;# 
   218  0FEE                     	;# 
   219  0FEE                     	;# 
   220  0FEF                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  0011                     	;# 
   235  0012                     	;# 
   236  0013                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0016                     	;# 
   240  0017                     	;# 
   241  0018                     	;# 
   242  0019                     	;# 
   243  001A                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  008C                     	;# 
   247  0091                     	;# 
   248  0092                     	;# 
   249  0093                     	;# 
   250  0095                     	;# 
   251  0096                     	;# 
   252  0097                     	;# 
   253  0098                     	;# 
   254  0099                     	;# 
   255  009A                     	;# 
   256  009B                     	;# 
   257  009B                     	;# 
   258  009C                     	;# 
   259  009D                     	;# 
   260  009E                     	;# 
   261  009F                     	;# 
   262  010C                     	;# 
   263  0111                     	;# 
   264  0112                     	;# 
   265  0115                     	;# 
   266  0116                     	;# 
   267  0117                     	;# 
   268  0118                     	;# 
   269  0119                     	;# 
   270  011D                     	;# 
   271  011D                     	;# 
   272  018C                     	;# 
   273  0191                     	;# 
   274  0191                     	;# 
   275  0192                     	;# 
   276  0193                     	;# 
   277  0193                     	;# 
   278  0194                     	;# 
   279  0195                     	;# 
   280  0196                     	;# 
   281  0197                     	;# 
   282  020C                     	;# 
   283  028C                     	;# 
   284  030C                     	;# 
   285  038C                     	;# 
   286  0391                     	;# 
   287  0392                     	;# 
   288  0393                     	;# 
   289  0691                     	;# 
   290  0692                     	;# 
   291  0693                     	;# 
   292  0694                     	;# 
   293  0695                     	;# 
   294  0D8E                     	;# 
   295  0D8F                     	;# 
   296  0D90                     	;# 
   297  0D91                     	;# 
   298  0D91                     	;# 
   299  0D92                     	;# 
   300  0D93                     	;# 
   301  0D93                     	;# 
   302  0D94                     	;# 
   303  0D95                     	;# 
   304  0D95                     	;# 
   305  0D96                     	;# 
   306  0D97                     	;# 
   307  0D97                     	;# 
   308  0D98                     	;# 
   309  0D99                     	;# 
   310  0D99                     	;# 
   311  0D9A                     	;# 
   312  0D9B                     	;# 
   313  0D9C                     	;# 
   314  0D9C                     	;# 
   315  0D9D                     	;# 
   316  0D9D                     	;# 
   317  0D9E                     	;# 
   318  0D9F                     	;# 
   319  0DA0                     	;# 
   320  0DA1                     	;# 
   321  0DA1                     	;# 
   322  0DA2                     	;# 
   323  0DA3                     	;# 
   324  0DA3                     	;# 
   325  0DA4                     	;# 
   326  0DA5                     	;# 
   327  0DA5                     	;# 
   328  0DA6                     	;# 
   329  0DA7                     	;# 
   330  0DA7                     	;# 
   331  0DA8                     	;# 
   332  0DA9                     	;# 
   333  0DA9                     	;# 
   334  0DAA                     	;# 
   335  0DAB                     	;# 
   336  0DAC                     	;# 
   337  0DAC                     	;# 
   338  0DAD                     	;# 
   339  0DAD                     	;# 
   340  0DAE                     	;# 
   341  0DAF                     	;# 
   342  0DB0                     	;# 
   343  0DB1                     	;# 
   344  0DB1                     	;# 
   345  0DB2                     	;# 
   346  0DB3                     	;# 
   347  0DB3                     	;# 
   348  0DB4                     	;# 
   349  0DB5                     	;# 
   350  0DB5                     	;# 
   351  0DB6                     	;# 
   352  0DB7                     	;# 
   353  0DB7                     	;# 
   354  0DB8                     	;# 
   355  0DB9                     	;# 
   356  0DB9                     	;# 
   357  0DBA                     	;# 
   358  0DBB                     	;# 
   359  0DBC                     	;# 
   360  0DBC                     	;# 
   361  0DBD                     	;# 
   362  0DBD                     	;# 
   363  0DBE                     	;# 
   364  0DBF                     	;# 
   365  0DC0                     	;# 
   366  0FE4                     	;# 
   367  0FE5                     	;# 
   368  0FE6                     	;# 
   369  0FE7                     	;# 
   370  0FE8                     	;# 
   371  0FE8                     	;# 
   372  0FE9                     	;# 
   373  0FEA                     	;# 
   374  0FEA                     	;# 
   375  0FEB                     	;# 
   376  0FED                     	;# 
   377  0FEE                     	;# 
   378  0FEE                     	;# 
   379  0FEF                     	;# 
   380  0000                     	;# 
   381  0001                     	;# 
   382  0002                     	;# 
   383  0003                     	;# 
   384  0004                     	;# 
   385  0005                     	;# 
   386  0006                     	;# 
   387  0007                     	;# 
   388  0008                     	;# 
   389  0009                     	;# 
   390  000A                     	;# 
   391  000B                     	;# 
   392  000C                     	;# 
   393  0011                     	;# 
   394  0012                     	;# 
   395  0013                     	;# 
   396  0015                     	;# 
   397  0016                     	;# 
   398  0016                     	;# 
   399  0017                     	;# 
   400  0018                     	;# 
   401  0019                     	;# 
   402  001A                     	;# 
   403  001B                     	;# 
   404  001C                     	;# 
   405  008C                     	;# 
   406  0091                     	;# 
   407  0092                     	;# 
   408  0093                     	;# 
   409  0095                     	;# 
   410  0096                     	;# 
   411  0097                     	;# 
   412  0098                     	;# 
   413  0099                     	;# 
   414  009A                     	;# 
   415  009B                     	;# 
   416  009B                     	;# 
   417  009C                     	;# 
   418  009D                     	;# 
   419  009E                     	;# 
   420  009F                     	;# 
   421  010C                     	;# 
   422  0111                     	;# 
   423  0112                     	;# 
   424  0115                     	;# 
   425  0116                     	;# 
   426  0117                     	;# 
   427  0118                     	;# 
   428  0119                     	;# 
   429  011D                     	;# 
   430  011D                     	;# 
   431  018C                     	;# 
   432  0191                     	;# 
   433  0191                     	;# 
   434  0192                     	;# 
   435  0193                     	;# 
   436  0193                     	;# 
   437  0194                     	;# 
   438  0195                     	;# 
   439  0196                     	;# 
   440  0197                     	;# 
   441  020C                     	;# 
   442  028C                     	;# 
   443  030C                     	;# 
   444  038C                     	;# 
   445  0391                     	;# 
   446  0392                     	;# 
   447  0393                     	;# 
   448  0691                     	;# 
   449  0692                     	;# 
   450  0693                     	;# 
   451  0694                     	;# 
   452  0695                     	;# 
   453  0D8E                     	;# 
   454  0D8F                     	;# 
   455  0D90                     	;# 
   456  0D91                     	;# 
   457  0D91                     	;# 
   458  0D92                     	;# 
   459  0D93                     	;# 
   460  0D93                     	;# 
   461  0D94                     	;# 
   462  0D95                     	;# 
   463  0D95                     	;# 
   464  0D96                     	;# 
   465  0D97                     	;# 
   466  0D97                     	;# 
   467  0D98                     	;# 
   468  0D99                     	;# 
   469  0D99                     	;# 
   470  0D9A                     	;# 
   471  0D9B                     	;# 
   472  0D9C                     	;# 
   473  0D9C                     	;# 
   474  0D9D                     	;# 
   475  0D9D                     	;# 
   476  0D9E                     	;# 
   477  0D9F                     	;# 
   478  0DA0                     	;# 
   479  0DA1                     	;# 
   480  0DA1                     	;# 
   481  0DA2                     	;# 
   482  0DA3                     	;# 
   483  0DA3                     	;# 
   484  0DA4                     	;# 
   485  0DA5                     	;# 
   486  0DA5                     	;# 
   487  0DA6                     	;# 
   488  0DA7                     	;# 
   489  0DA7                     	;# 
   490  0DA8                     	;# 
   491  0DA9                     	;# 
   492  0DA9                     	;# 
   493  0DAA                     	;# 
   494  0DAB                     	;# 
   495  0DAC                     	;# 
   496  0DAC                     	;# 
   497  0DAD                     	;# 
   498  0DAD                     	;# 
   499  0DAE                     	;# 
   500  0DAF                     	;# 
   501  0DB0                     	;# 
   502  0DB1                     	;# 
   503  0DB1                     	;# 
   504  0DB2                     	;# 
   505  0DB3                     	;# 
   506  0DB3                     	;# 
   507  0DB4                     	;# 
   508  0DB5                     	;# 
   509  0DB5                     	;# 
   510  0DB6                     	;# 
   511  0DB7                     	;# 
   512  0DB7                     	;# 
   513  0DB8                     	;# 
   514  0DB9                     	;# 
   515  0DB9                     	;# 
   516  0DBA                     	;# 
   517  0DBB                     	;# 
   518  0DBC                     	;# 
   519  0DBC                     	;# 
   520  0DBD                     	;# 
   521  0DBD                     	;# 
   522  0DBE                     	;# 
   523  0DBF                     	;# 
   524  0DC0                     	;# 
   525  0FE4                     	;# 
   526  0FE5                     	;# 
   527  0FE6                     	;# 
   528  0FE7                     	;# 
   529  0FE8                     	;# 
   530  0FE8                     	;# 
   531  0FE9                     	;# 
   532  0FEA                     	;# 
   533  0FEA                     	;# 
   534  0FEB                     	;# 
   535  0FED                     	;# 
   536  0FEE                     	;# 
   537  0FEE                     	;# 
   538  0FEF                     	;# 
   539  0000                     	;# 
   540  0001                     	;# 
   541  0002                     	;# 
   542  0003                     	;# 
   543  0004                     	;# 
   544  0005                     	;# 
   545  0006                     	;# 
   546  0007                     	;# 
   547  0008                     	;# 
   548  0009                     	;# 
   549  000A                     	;# 
   550  000B                     	;# 
   551  000C                     	;# 
   552  0011                     	;# 
   553  0012                     	;# 
   554  0013                     	;# 
   555  0015                     	;# 
   556  0016                     	;# 
   557  0016                     	;# 
   558  0017                     	;# 
   559  0018                     	;# 
   560  0019                     	;# 
   561  001A                     	;# 
   562  001B                     	;# 
   563  001C                     	;# 
   564  008C                     	;# 
   565  0091                     	;# 
   566  0092                     	;# 
   567  0093                     	;# 
   568  0095                     	;# 
   569  0096                     	;# 
   570  0097                     	;# 
   571  0098                     	;# 
   572  0099                     	;# 
   573  009A                     	;# 
   574  009B                     	;# 
   575  009B                     	;# 
   576  009C                     	;# 
   577  009D                     	;# 
   578  009E                     	;# 
   579  009F                     	;# 
   580  010C                     	;# 
   581  0111                     	;# 
   582  0112                     	;# 
   583  0115                     	;# 
   584  0116                     	;# 
   585  0117                     	;# 
   586  0118                     	;# 
   587  0119                     	;# 
   588  011D                     	;# 
   589  011D                     	;# 
   590  018C                     	;# 
   591  0191                     	;# 
   592  0191                     	;# 
   593  0192                     	;# 
   594  0193                     	;# 
   595  0193                     	;# 
   596  0194                     	;# 
   597  0195                     	;# 
   598  0196                     	;# 
   599  0197                     	;# 
   600  020C                     	;# 
   601  028C                     	;# 
   602  030C                     	;# 
   603  038C                     	;# 
   604  0391                     	;# 
   605  0392                     	;# 
   606  0393                     	;# 
   607  0691                     	;# 
   608  0692                     	;# 
   609  0693                     	;# 
   610  0694                     	;# 
   611  0695                     	;# 
   612  0D8E                     	;# 
   613  0D8F                     	;# 
   614  0D90                     	;# 
   615  0D91                     	;# 
   616  0D91                     	;# 
   617  0D92                     	;# 
   618  0D93                     	;# 
   619  0D93                     	;# 
   620  0D94                     	;# 
   621  0D95                     	;# 
   622  0D95                     	;# 
   623  0D96                     	;# 
   624  0D97                     	;# 
   625  0D97                     	;# 
   626  0D98                     	;# 
   627  0D99                     	;# 
   628  0D99                     	;# 
   629  0D9A                     	;# 
   630  0D9B                     	;# 
   631  0D9C                     	;# 
   632  0D9C                     	;# 
   633  0D9D                     	;# 
   634  0D9D                     	;# 
   635  0D9E                     	;# 
   636  0D9F                     	;# 
   637  0DA0                     	;# 
   638  0DA1                     	;# 
   639  0DA1                     	;# 
   640  0DA2                     	;# 
   641  0DA3                     	;# 
   642  0DA3                     	;# 
   643  0DA4                     	;# 
   644  0DA5                     	;# 
   645  0DA5                     	;# 
   646  0DA6                     	;# 
   647  0DA7                     	;# 
   648  0DA7                     	;# 
   649  0DA8                     	;# 
   650  0DA9                     	;# 
   651  0DA9                     	;# 
   652  0DAA                     	;# 
   653  0DAB                     	;# 
   654  0DAC                     	;# 
   655  0DAC                     	;# 
   656  0DAD                     	;# 
   657  0DAD                     	;# 
   658  0DAE                     	;# 
   659  0DAF                     	;# 
   660  0DB0                     	;# 
   661  0DB1                     	;# 
   662  0DB1                     	;# 
   663  0DB2                     	;# 
   664  0DB3                     	;# 
   665  0DB3                     	;# 
   666  0DB4                     	;# 
   667  0DB5                     	;# 
   668  0DB5                     	;# 
   669  0DB6                     	;# 
   670  0DB7                     	;# 
   671  0DB7                     	;# 
   672  0DB8                     	;# 
   673  0DB9                     	;# 
   674  0DB9                     	;# 
   675  0DBA                     	;# 
   676  0DBB                     	;# 
   677  0DBC                     	;# 
   678  0DBC                     	;# 
   679  0DBD                     	;# 
   680  0DBD                     	;# 
   681  0DBE                     	;# 
   682  0DBF                     	;# 
   683  0DC0                     	;# 
   684  0FE4                     	;# 
   685  0FE5                     	;# 
   686  0FE6                     	;# 
   687  0FE7                     	;# 
   688  0FE8                     	;# 
   689  0FE8                     	;# 
   690  0FE9                     	;# 
   691  0FEA                     	;# 
   692  0FEA                     	;# 
   693  0FEB                     	;# 
   694  0FED                     	;# 
   695  0FEE                     	;# 
   696  0FEE                     	;# 
   697  0FEF                     	;# 
   698  0000                     	;# 
   699  0001                     	;# 
   700  0002                     	;# 
   701  0003                     	;# 
   702  0004                     	;# 
   703  0005                     	;# 
   704  0006                     	;# 
   705  0007                     	;# 
   706  0008                     	;# 
   707  0009                     	;# 
   708  000A                     	;# 
   709  000B                     	;# 
   710  000C                     	;# 
   711  0011                     	;# 
   712  0012                     	;# 
   713  0013                     	;# 
   714  0015                     	;# 
   715  0016                     	;# 
   716  0016                     	;# 
   717  0017                     	;# 
   718  0018                     	;# 
   719  0019                     	;# 
   720  001A                     	;# 
   721  001B                     	;# 
   722  001C                     	;# 
   723  008C                     	;# 
   724  0091                     	;# 
   725  0092                     	;# 
   726  0093                     	;# 
   727  0095                     	;# 
   728  0096                     	;# 
   729  0097                     	;# 
   730  0098                     	;# 
   731  0099                     	;# 
   732  009A                     	;# 
   733  009B                     	;# 
   734  009B                     	;# 
   735  009C                     	;# 
   736  009D                     	;# 
   737  009E                     	;# 
   738  009F                     	;# 
   739  010C                     	;# 
   740  0111                     	;# 
   741  0112                     	;# 
   742  0115                     	;# 
   743  0116                     	;# 
   744  0117                     	;# 
   745  0118                     	;# 
   746  0119                     	;# 
   747  011D                     	;# 
   748  011D                     	;# 
   749  018C                     	;# 
   750  0191                     	;# 
   751  0191                     	;# 
   752  0192                     	;# 
   753  0193                     	;# 
   754  0193                     	;# 
   755  0194                     	;# 
   756  0195                     	;# 
   757  0196                     	;# 
   758  0197                     	;# 
   759  020C                     	;# 
   760  028C                     	;# 
   761  030C                     	;# 
   762  038C                     	;# 
   763  0391                     	;# 
   764  0392                     	;# 
   765  0393                     	;# 
   766  0691                     	;# 
   767  0692                     	;# 
   768  0693                     	;# 
   769  0694                     	;# 
   770  0695                     	;# 
   771  0D8E                     	;# 
   772  0D8F                     	;# 
   773  0D90                     	;# 
   774  0D91                     	;# 
   775  0D91                     	;# 
   776  0D92                     	;# 
   777  0D93                     	;# 
   778  0D93                     	;# 
   779  0D94                     	;# 
   780  0D95                     	;# 
   781  0D95                     	;# 
   782  0D96                     	;# 
   783  0D97                     	;# 
   784  0D97                     	;# 
   785  0D98                     	;# 
   786  0D99                     	;# 
   787  0D99                     	;# 
   788  0D9A                     	;# 
   789  0D9B                     	;# 
   790  0D9C                     	;# 
   791  0D9C                     	;# 
   792  0D9D                     	;# 
   793  0D9D                     	;# 
   794  0D9E                     	;# 
   795  0D9F                     	;# 
   796  0DA0                     	;# 
   797  0DA1                     	;# 
   798  0DA1                     	;# 
   799  0DA2                     	;# 
   800  0DA3                     	;# 
   801  0DA3                     	;# 
   802  0DA4                     	;# 
   803  0DA5                     	;# 
   804  0DA5                     	;# 
   805  0DA6                     	;# 
   806  0DA7                     	;# 
   807  0DA7                     	;# 
   808  0DA8                     	;# 
   809  0DA9                     	;# 
   810  0DA9                     	;# 
   811  0DAA                     	;# 
   812  0DAB                     	;# 
   813  0DAC                     	;# 
   814  0DAC                     	;# 
   815  0DAD                     	;# 
   816  0DAD                     	;# 
   817  0DAE                     	;# 
   818  0DAF                     	;# 
   819  0DB0                     	;# 
   820  0DB1                     	;# 
   821  0DB1                     	;# 
   822  0DB2                     	;# 
   823  0DB3                     	;# 
   824  0DB3                     	;# 
   825  0DB4                     	;# 
   826  0DB5                     	;# 
   827  0DB5                     	;# 
   828  0DB6                     	;# 
   829  0DB7                     	;# 
   830  0DB7                     	;# 
   831  0DB8                     	;# 
   832  0DB9                     	;# 
   833  0DB9                     	;# 
   834  0DBA                     	;# 
   835  0DBB                     	;# 
   836  0DBC                     	;# 
   837  0DBC                     	;# 
   838  0DBD                     	;# 
   839  0DBD                     	;# 
   840  0DBE                     	;# 
   841  0DBF                     	;# 
   842  0DC0                     	;# 
   843  0FE4                     	;# 
   844  0FE5                     	;# 
   845  0FE6                     	;# 
   846  0FE7                     	;# 
   847  0FE8                     	;# 
   848  0FE8                     	;# 
   849  0FE9                     	;# 
   850  0FEA                     	;# 
   851  0FEA                     	;# 
   852  0FEB                     	;# 
   853  0FED                     	;# 
   854  0FEE                     	;# 
   855  0FEE                     	;# 
   856  0FEF                     	;# 
   857                           
   858                           	psect	nvCOMMON
   859  007A                     __pnvCOMMON:
   860  007A                     _timer1ReloadVal:
   861  007A                     	ds	2
   862                           
   863                           	psect	nvBANK0
   864  0020                     __pnvBANK0:
   865  0020                     _TMR1_InterruptHandler:
   866  0020                     	ds	2
   867  000C                     _PORTAbits	set	12
   868  000B                     _INTCONbits	set	11
   869  0019                     _T1GCONbits	set	25
   870  0018                     _T1CONbits	set	24
   871  0018                     _T1CON	set	24
   872  0011                     _PIR1bits	set	17
   873  0016                     _TMR1L	set	22
   874  0017                     _TMR1H	set	23
   875  0019                     _T1GCON	set	25
   876  0091                     _PIE1bits	set	145
   877  0095                     _OPTION_REGbits	set	149
   878  008C                     _TRISA	set	140
   879  0097                     _WDTCON	set	151
   880  0098                     _OSCTUNE	set	152
   881  0099                     _OSCCON	set	153
   882  010C                     _LATAbits	set	268
   883  011D                     _APFCON	set	285
   884  010C                     _LATA	set	268
   885  0116                     _BORCON	set	278
   886  018C                     _ANSELA	set	396
   887  020C                     _WPUA	set	524
   888  028C                     _ODCONA	set	652
   889  030C                     _SLRCONA	set	780
   890  038C                     _INLVLA	set	908
   891                           
   892                           	psect	cinit
   893  001A                     start_initialization:	
   894                           ; #config settings
   895                           
   896  001A                     __initialization:
   897                           
   898                           ; Clear objects allocated to COMMON
   899  001A  01F0               	clrf	__pbssCOMMON& (0+127)
   900  001B  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   901  001C  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   902  001D  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   903  001E  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   904  001F                     end_of_initialization:	
   905                           ;End of C runtime variable initialization code
   906                           
   907  001F                     __end_of__initialization:
   908  001F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   909  0020  0020               	movlb	0
   910  0021  2822               	ljmp	_main	;jump to C main() function
   911                           
   912                           	psect	bssCOMMON
   913  0070                     __pbssCOMMON:
   914  0070                     _demandedSecondsTick:
   915  0070                     	ds	2
   916  0072                     _currentSecondsTick:
   917  0072                     	ds	2
   918  0074                     _currentState:
   919  0074                     	ds	1
   920                           
   921                           	psect	cstackCOMMON
   922  0075                     __pcstackCOMMON:
   923  0075                     ?_PIN_MANAGER_Initialize:
   924  0075                     ?_OSCILLATOR_Initialize:	
   925                           ; 1 bytes @ 0x0
   926                           
   927  0075                     ?_WDT_Initialize:	
   928                           ; 1 bytes @ 0x0
   929                           
   930  0075                     ?_TMR1_Initialize:	
   931                           ; 1 bytes @ 0x0
   932                           
   933  0075                     ?_TMR1_DefaultInterruptHandler:	
   934                           ; 1 bytes @ 0x0
   935                           
   936  0075                     ??_TMR1_DefaultInterruptHandler:	
   937                           ; 1 bytes @ 0x0
   938                           
   939  0075                     ?_TMR1_CallBack:	
   940                           ; 1 bytes @ 0x0
   941                           
   942  0075                     ??_TMR1_CallBack:	
   943                           ; 1 bytes @ 0x0
   944                           
   945  0075                     ?_secondsTick:	
   946                           ; 1 bytes @ 0x0
   947                           
   948  0075                     ??_secondsTick:	
   949                           ; 1 bytes @ 0x0
   950                           
   951  0075                     ?_setState:	
   952                           ; 1 bytes @ 0x0
   953                           
   954  0075                     ?_SYSTEM_Initialize:	
   955                           ; 1 bytes @ 0x0
   956                           
   957  0075                     ?_TMR1_StartTimer:	
   958                           ; 1 bytes @ 0x0
   959                           
   960  0075                     ?_TMR1_WriteTimer:	
   961                           ; 1 bytes @ 0x0
   962                           
   963  0075                     ?_TMR1_ISR:	
   964                           ; 1 bytes @ 0x0
   965                           
   966  0075                     ?_INTERRUPT_InterruptManager:	
   967                           ; 1 bytes @ 0x0
   968                           
   969  0075                     ?_main:	
   970                           ; 1 bytes @ 0x0
   971                           
   972  0075                     TMR1_WriteTimer@timerVal:	
   973                           ; 1 bytes @ 0x0
   974                           
   975                           
   976                           ; 2 bytes @ 0x0
   977  0075                     	ds	2
   978  0077                     ??_PIN_MANAGER_Initialize:
   979  0077                     ??_OSCILLATOR_Initialize:	
   980                           ; 1 bytes @ 0x2
   981                           
   982  0077                     ??_WDT_Initialize:	
   983                           ; 1 bytes @ 0x2
   984                           
   985  0077                     ?_TMR1_SetInterruptHandler:	
   986                           ; 1 bytes @ 0x2
   987                           
   988  0077                     ??_setState:	
   989                           ; 1 bytes @ 0x2
   990                           
   991  0077                     ??_TMR1_StartTimer:	
   992                           ; 1 bytes @ 0x2
   993                           
   994  0077                     ??_TMR1_WriteTimer:	
   995                           ; 1 bytes @ 0x2
   996                           
   997  0077                     ??_TMR1_ISR:	
   998                           ; 1 bytes @ 0x2
   999                           
  1000  0077                     ??_INTERRUPT_InterruptManager:	
  1001                           ; 1 bytes @ 0x2
  1002                           
  1003  0077                     TMR1_SetInterruptHandler@InterruptHandler:	
  1004                           ; 1 bytes @ 0x2
  1005                           
  1006                           
  1007                           ; 2 bytes @ 0x2
  1008  0077                     	ds	2
  1009  0079                     ??_TMR1_Initialize:
  1010  0079                     ??_TMR1_SetInterruptHandler:	
  1011                           ; 1 bytes @ 0x4
  1012                           
  1013  0079                     ??_SYSTEM_Initialize:	
  1014                           ; 1 bytes @ 0x4
  1015                           
  1016  0079                     setState@newState:	
  1017                           ; 1 bytes @ 0x4
  1018                           
  1019                           
  1020                           ; 1 bytes @ 0x4
  1021  0079                     	ds	1
  1022                           
  1023                           	psect	cstackBANK0
  1024  0022                     __pcstackBANK0:
  1025  0022                     ??_main:
  1026                           
  1027                           ; 1 bytes @ 0x0
  1028  0022                     	ds	2
  1029                           
  1030                           	psect	maintext
  1031  0022                     __pmaintext:	
  1032 ;;
  1033 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1034 ;;
  1035 ;; *************** function _main *****************
  1036 ;; Defined at:
  1037 ;;		line 68 in file "main.c"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;		None
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;		None
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  1    wreg      void 
  1044 ;; Registers used:
  1045 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1046 ;; Tracked objects:
  1047 ;;		On entry : B1F/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMMON   BANK0   BANK1
  1051 ;;      Params:         0       0       0
  1052 ;;      Locals:         0       0       0
  1053 ;;      Temps:          0       2       0
  1054 ;;      Totals:         0       2       0
  1055 ;;Total ram usage:        2 bytes
  1056 ;; Hardware stack levels required when called:    7
  1057 ;; This function calls:
  1058 ;;		_SYSTEM_Initialize
  1059 ;;		_TMR1_SetInterruptHandler
  1060 ;;		_TMR1_StartTimer
  1061 ;;		_setState
  1062 ;; This function is called by:
  1063 ;;		Startup code after reset
  1064 ;; This function uses a non-reentrant model
  1065 ;;
  1066                           
  1067                           
  1068                           ;psect for function _main
  1069  0022                     _main:
  1070  0022                     l1046:	
  1071                           ;incstack = 0
  1072                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1073                           
  1074                           
  1075                           ;main.c: 71:     SYSTEM_Initialize();
  1076  0022  3181  211E  3180   	fcall	_SYSTEM_Initialize
  1077  0025                     l1048:
  1078                           
  1079                           ;main.c: 77:     (INTCONbits.GIE = 1);
  1080  0025  178B               	bsf	11,7	;volatile
  1081  0026                     l1050:
  1082                           
  1083                           ;main.c: 80:     (INTCONbits.PEIE = 1);
  1084  0026  170B               	bsf	11,6	;volatile
  1085                           
  1086                           ;main.c: 89:     TMR1_SetInterruptHandler(secondsTick);
  1087  0027  3052               	movlw	low _secondsTick
  1088  0028  00F7               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  1089  0029  3001               	movlw	high _secondsTick
  1090  002A  00F8               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  1091  002B  3181  214C  3180   	fcall	_TMR1_SetInterruptHandler
  1092  002E                     l1052:
  1093                           
  1094                           ;main.c: 91:     TMR1_StartTimer();
  1095  002E  3181  215B  3180   	fcall	_TMR1_StartTimer
  1096  0031                     l1054:
  1097                           
  1098                           ;main.c: 93:     setState(STATE_WAIT_TIME);
  1099  0031  3001               	movlw	1
  1100  0032  3180  2096  3180   	fcall	_setState
  1101  0035  287E               	goto	l1074
  1102  0036                     l160:	
  1103                           ;main.c: 100:         {;main.c: 101:             case STATE_WAIT_TIME:
  1104                           
  1105                           
  1106                           ;main.c: 102:                 if(PORTAbits.RA5 && (currentSecondsTick >= demandedSeconds
      +                          Tick))
  1107  0036  1E8C               	btfss	12,5	;volatile
  1108  0037  2839               	goto	u261
  1109  0038  283A               	goto	u260
  1110  0039                     u261:
  1111  0039  2849               	goto	l161
  1112  003A                     u260:
  1113  003A                     l1056:
  1114  003A  0871               	movf	_demandedSecondsTick+1,w
  1115  003B  0273               	subwf	_currentSecondsTick+1,w	;volatile
  1116  003C  1D03               	skipz
  1117  003D  2840               	goto	u275
  1118  003E  0870               	movf	_demandedSecondsTick,w
  1119  003F  0272               	subwf	_currentSecondsTick,w	;volatile
  1120  0040                     u275:
  1121  0040  1C03               	skipc
  1122  0041  2843               	goto	u271
  1123  0042  2844               	goto	u270
  1124  0043                     u271:
  1125  0043  2849               	goto	l161
  1126  0044                     u270:
  1127  0044                     l1058:
  1128                           
  1129                           ;main.c: 103:                 {;main.c: 104:                     setState(STATE_OPEN_VAL
      +                          VE);
  1130  0044  3002               	movlw	2
  1131  0045  3180  2096  3180   	fcall	_setState
  1132                           
  1133                           ;main.c: 105:                 }
  1134  0048  287E               	goto	l1074
  1135  0049                     l161:	
  1136                           ;main.c: 106:                 else if(PORTAbits.RA4)
  1137                           
  1138  0049  1E0C               	btfss	12,4	;volatile
  1139  004A  284C               	goto	u281
  1140  004B  284D               	goto	u280
  1141  004C                     u281:
  1142  004C  287E               	goto	l159
  1143  004D                     u280:
  1144  004D                     l1060:
  1145                           
  1146                           ;main.c: 107:                 {;main.c: 108:                     setState(STATE_CLOSE_VA
      +                          LVE);
  1147  004D  3003               	movlw	3
  1148  004E  3180  2096  3180   	fcall	_setState
  1149  0051  287E               	goto	l1074
  1150  0052                     l165:	
  1151                           ;main.c: 112:             case STATE_OPEN_VALVE:
  1152                           
  1153                           
  1154                           ;main.c: 114:                 if(PORTAbits.RA4 || (currentSecondsTick >= demandedSeconds
      +                          Tick))
  1155  0052  1A0C               	btfsc	12,4	;volatile
  1156  0053  2855               	goto	u291
  1157  0054  2856               	goto	u290
  1158  0055                     u291:
  1159  0055  2860               	goto	l1064
  1160  0056                     u290:
  1161  0056                     l1062:
  1162  0056  0871               	movf	_demandedSecondsTick+1,w
  1163  0057  0273               	subwf	_currentSecondsTick+1,w	;volatile
  1164  0058  1D03               	skipz
  1165  0059  285C               	goto	u305
  1166  005A  0870               	movf	_demandedSecondsTick,w
  1167  005B  0272               	subwf	_currentSecondsTick,w	;volatile
  1168  005C                     u305:
  1169  005C  1C03               	skipc
  1170  005D  285F               	goto	u301
  1171  005E  2860               	goto	u300
  1172  005F                     u301:
  1173  005F  287E               	goto	l159
  1174  0060                     u300:
  1175  0060                     l1064:
  1176                           
  1177                           ;main.c: 115:                 {;main.c: 116:                     setState(STATE_CLOSE_VA
      +                          LVE);
  1178  0060  3003               	movlw	3
  1179  0061  3180  2096  3180   	fcall	_setState
  1180  0064  287E               	goto	l1074
  1181  0065                     l169:	
  1182                           ;main.c: 120:             case STATE_CLOSE_VALVE:
  1183                           
  1184                           
  1185                           ;main.c: 121:                 if(PORTAbits.RA5)
  1186  0065  1E8C               	btfss	12,5	;volatile
  1187  0066  2868               	goto	u311
  1188  0067  2869               	goto	u310
  1189  0068                     u311:
  1190  0068  286E               	goto	l1068
  1191  0069                     u310:
  1192  0069                     l1066:
  1193                           
  1194                           ;main.c: 122:                 {;main.c: 123:                     setState(STATE_OPEN_VAL
      +                          VE);
  1195  0069  3002               	movlw	2
  1196  006A  3180  2096  3180   	fcall	_setState
  1197                           
  1198                           ;main.c: 124:                 }
  1199  006D  287E               	goto	l1074
  1200  006E                     l1068:
  1201  006E  0871               	movf	_demandedSecondsTick+1,w
  1202  006F  0273               	subwf	_currentSecondsTick+1,w	;volatile
  1203  0070  1D03               	skipz
  1204  0071  2874               	goto	u325
  1205  0072  0870               	movf	_demandedSecondsTick,w
  1206  0073  0272               	subwf	_currentSecondsTick,w	;volatile
  1207  0074                     u325:
  1208  0074  1C03               	skipc
  1209  0075  2877               	goto	u321
  1210  0076  2878               	goto	u320
  1211  0077                     u321:
  1212  0077  287E               	goto	l159
  1213  0078                     u320:
  1214  0078                     l1070:
  1215                           
  1216                           ;main.c: 126:                 {;main.c: 127:                     setState(STATE_END);
  1217  0078  3004               	movlw	4
  1218  0079  3180  2096  3180   	fcall	_setState
  1219  007C  287E               	goto	l1074
  1220  007D                     l174:	
  1221                           ;main.c: 132:                 while(1);
  1222                           
  1223  007D  287D               	goto	l174
  1224  007E                     l159:
  1225  007E                     l1074:
  1226  007E  0874               	movf	_currentState,w
  1227  007F  0020               	movlb	0	; select bank0
  1228  0080  00A2               	movwf	??_main
  1229  0081  01A3               	clrf	??_main+1
  1230                           
  1231                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1232                           ; Switch size 1, requested type "simple"
  1233                           ; Number of cases is 1, Range of values is 0 to 0
  1234                           ; switch strategies available:
  1235                           ; Name         Instructions Cycles
  1236                           ; simple_byte            4     3 (average)
  1237                           ; direct_byte            8     6 (fixed)
  1238                           ; jumptable            260     6 (fixed)
  1239                           ;	Chosen strategy is simple_byte
  1240  0082  0823               	movf	??_main+1,w
  1241  0083  3A00               	xorlw	0	; case 0
  1242  0084  1903               	skipnz
  1243  0085  2887               	goto	l1120
  1244  0086  287E               	goto	l1074
  1245  0087                     l1120:
  1246                           
  1247                           ; Switch size 1, requested type "simple"
  1248                           ; Number of cases is 4, Range of values is 1 to 4
  1249                           ; switch strategies available:
  1250                           ; Name         Instructions Cycles
  1251                           ; simple_byte           13     7 (average)
  1252                           ; direct_byte           17     9 (fixed)
  1253                           ; jumptable            263     9 (fixed)
  1254                           ;	Chosen strategy is simple_byte
  1255  0087  0822               	movf	??_main,w
  1256  0088  3A01               	xorlw	1	; case 1
  1257  0089  1903               	skipnz
  1258  008A  2836               	goto	l160
  1259  008B  3A03               	xorlw	3	; case 2
  1260  008C  1903               	skipnz
  1261  008D  2852               	goto	l165
  1262  008E  3A01               	xorlw	1	; case 3
  1263  008F  1903               	skipnz
  1264  0090  2865               	goto	l169
  1265  0091  3A07               	xorlw	7	; case 4
  1266  0092  1903               	skipnz
  1267  0093  287D               	goto	l174
  1268  0094  287E               	goto	l1074
  1269  0095  2819               	ljmp	start
  1270  0096                     __end_of_main:
  1271                           
  1272                           	psect	text1
  1273  0096                     __ptext1:	
  1274 ;; *************** function _setState *****************
  1275 ;; Defined at:
  1276 ;;		line 145 in file "main.c"
  1277 ;; Parameters:    Size  Location     Type
  1278 ;;  newState        1    wreg     enum E2970
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;  newState        1    4[COMMON] enum E2970
  1281 ;; Return value:  Size  Location     Type
  1282 ;;                  1    wreg      void 
  1283 ;; Registers used:
  1284 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1285 ;; Tracked objects:
  1286 ;;		On entry : 0/0
  1287 ;;		On exit  : 0/0
  1288 ;;		Unchanged: 0/0
  1289 ;; Data sizes:     COMMON   BANK0   BANK1
  1290 ;;      Params:         0       0       0
  1291 ;;      Locals:         1       0       0
  1292 ;;      Temps:          2       0       0
  1293 ;;      Totals:         3       0       0
  1294 ;;Total ram usage:        3 bytes
  1295 ;; Hardware stack levels used:    1
  1296 ;; Hardware stack levels required when called:    4
  1297 ;; This function calls:
  1298 ;;		Nothing
  1299 ;; This function is called by:
  1300 ;;		_main
  1301 ;; This function uses a non-reentrant model
  1302 ;;
  1303                           
  1304                           
  1305                           ;psect for function _setState
  1306  0096                     _setState:
  1307                           
  1308                           ;incstack = 0
  1309                           ; Regs used in _setState: [wreg-fsr0h+status,2+status,0]
  1310                           ;setState@newState stored from wreg
  1311  0096  00F9               	movwf	setState@newState
  1312  0097                     l800:
  1313                           
  1314                           ;main.c: 145: void setState(states_t newState);main.c: 146: {;main.c: 147:     if(newSta
      +                          te == currentState)
  1315  0097  0879               	movf	setState@newState,w
  1316  0098  0674               	xorwf	_currentState,w
  1317  0099  1D03               	skipz
  1318  009A  289C               	goto	u31
  1319  009B  289D               	goto	u30
  1320  009C                     u31:
  1321  009C  289E               	goto	l804
  1322  009D                     u30:
  1323  009D  28DD               	goto	l183
  1324  009E                     l804:
  1325                           
  1326                           ;main.c: 152:     currentSecondsTick = 0;
  1327  009E  01F2               	clrf	_currentSecondsTick	;volatile
  1328  009F  01F3               	clrf	_currentSecondsTick+1	;volatile
  1329                           
  1330                           ;main.c: 155:     switch(newState)
  1331  00A0  28C3               	goto	l814
  1332  00A1                     l186:	
  1333                           ;main.c: 158:             do { LATAbits.LATA1 = 0; } while(0);
  1334                           
  1335  00A1  0022               	movlb	2	; select bank2
  1336  00A2  108C               	bcf	12,1	;volatile
  1337  00A3                     l188:	
  1338                           ;main.c: 159:             do { LATAbits.LATA2 = 0; } while(0);
  1339                           
  1340  00A3  110C               	bcf	12,2	;volatile
  1341  00A4                     l806:
  1342                           
  1343                           ;main.c: 160:             demandedSecondsTick = currentSecondsTick + 1;
  1344  00A4  0872               	movf	_currentSecondsTick,w	;volatile
  1345  00A5  3E01               	addlw	1
  1346  00A6  00F0               	movwf	_demandedSecondsTick
  1347  00A7  3000               	movlw	0
  1348  00A8  3D73               	addwfc	_currentSecondsTick+1,w	;volatile
  1349  00A9  00F1               	movwf	_demandedSecondsTick+1
  1350                           
  1351                           ;main.c: 161:             break;
  1352  00AA  28D9               	goto	l816
  1353  00AB                     l192:	
  1354                           ;main.c: 164:             do { LATAbits.LATA1 = 1; } while(0);
  1355                           
  1356  00AB  0022               	movlb	2	; select bank2
  1357  00AC  148C               	bsf	12,1	;volatile
  1358  00AD                     l194:	
  1359                           ;main.c: 165:             do { LATAbits.LATA2 = 0; } while(0);
  1360                           
  1361  00AD  110C               	bcf	12,2	;volatile
  1362  00AE                     l808:
  1363                           
  1364                           ;main.c: 166:             demandedSecondsTick = currentSecondsTick + 1200;
  1365  00AE  0872               	movf	_currentSecondsTick,w	;volatile
  1366  00AF  3EB0               	addlw	176
  1367  00B0  00F0               	movwf	_demandedSecondsTick
  1368  00B1  3004               	movlw	4
  1369  00B2  3D73               	addwfc	_currentSecondsTick+1,w	;volatile
  1370  00B3  00F1               	movwf	_demandedSecondsTick+1
  1371                           
  1372                           ;main.c: 167:             break;
  1373  00B4  28D9               	goto	l816
  1374  00B5                     l197:	
  1375                           ;main.c: 170:             do { LATAbits.LATA1 = 0; } while(0);
  1376                           
  1377  00B5  0022               	movlb	2	; select bank2
  1378  00B6  108C               	bcf	12,1	;volatile
  1379  00B7                     l199:	
  1380                           ;main.c: 171:             do { LATAbits.LATA2 = 1; } while(0);
  1381                           
  1382  00B7  150C               	bsf	12,2	;volatile
  1383  00B8                     l810:
  1384                           
  1385                           ;main.c: 172:             demandedSecondsTick = currentSecondsTick + 10;
  1386  00B8  0872               	movf	_currentSecondsTick,w	;volatile
  1387  00B9  3E0A               	addlw	10
  1388  00BA  00F0               	movwf	_demandedSecondsTick
  1389  00BB  3000               	movlw	0
  1390  00BC  3D73               	addwfc	_currentSecondsTick+1,w	;volatile
  1391  00BD  00F1               	movwf	_demandedSecondsTick+1
  1392                           
  1393                           ;main.c: 173:             break;
  1394  00BE  28D9               	goto	l816
  1395  00BF                     l202:	
  1396                           ;main.c: 176:             do { LATAbits.LATA1 = 0; } while(0);
  1397                           
  1398  00BF  0022               	movlb	2	; select bank2
  1399  00C0  108C               	bcf	12,1	;volatile
  1400  00C1                     l204:	
  1401                           ;main.c: 177:             do { LATAbits.LATA2 = 0; } while(0);
  1402                           
  1403  00C1  110C               	bcf	12,2	;volatile
  1404  00C2  28D9               	goto	l816
  1405  00C3                     l814:
  1406  00C3  0879               	movf	setState@newState,w
  1407  00C4  00F7               	movwf	??_setState
  1408  00C5  01F8               	clrf	??_setState+1
  1409                           
  1410                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1411                           ; Switch size 1, requested type "simple"
  1412                           ; Number of cases is 1, Range of values is 0 to 0
  1413                           ; switch strategies available:
  1414                           ; Name         Instructions Cycles
  1415                           ; simple_byte            4     3 (average)
  1416                           ; direct_byte            8     6 (fixed)
  1417                           ; jumptable            260     6 (fixed)
  1418                           ;	Chosen strategy is simple_byte
  1419  00C6  0878               	movf	??_setState+1,w
  1420  00C7  3A00               	xorlw	0	; case 0
  1421  00C8  1903               	skipnz
  1422  00C9  28CB               	goto	l1122
  1423  00CA  28D9               	goto	l816
  1424  00CB                     l1122:
  1425                           
  1426                           ; Switch size 1, requested type "simple"
  1427                           ; Number of cases is 4, Range of values is 1 to 4
  1428                           ; switch strategies available:
  1429                           ; Name         Instructions Cycles
  1430                           ; simple_byte           13     7 (average)
  1431                           ; direct_byte           17     9 (fixed)
  1432                           ; jumptable            263     9 (fixed)
  1433                           ;	Chosen strategy is simple_byte
  1434  00CB  0877               	movf	??_setState,w
  1435  00CC  3A01               	xorlw	1	; case 1
  1436  00CD  1903               	skipnz
  1437  00CE  28A1               	goto	l186
  1438  00CF  3A03               	xorlw	3	; case 2
  1439  00D0  1903               	skipnz
  1440  00D1  28AB               	goto	l192
  1441  00D2  3A01               	xorlw	1	; case 3
  1442  00D3  1903               	skipnz
  1443  00D4  28B5               	goto	l197
  1444  00D5  3A07               	xorlw	7	; case 4
  1445  00D6  1903               	skipnz
  1446  00D7  28BF               	goto	l202
  1447  00D8  28D9               	goto	l816
  1448  00D9                     l816:
  1449                           
  1450                           ;main.c: 181:     currentState = newState;
  1451  00D9  0879               	movf	setState@newState,w
  1452  00DA  00F7               	movwf	??_setState
  1453  00DB  0877               	movf	??_setState,w
  1454  00DC  00F4               	movwf	_currentState
  1455  00DD                     l183:
  1456  00DD  0008               	return
  1457  00DE                     __end_of_setState:
  1458                           
  1459                           	psect	text2
  1460  015B                     __ptext2:	
  1461 ;; *************** function _TMR1_StartTimer *****************
  1462 ;; Defined at:
  1463 ;;		line 93 in file "mcc_generated_files/tmr1.c"
  1464 ;; Parameters:    Size  Location     Type
  1465 ;;		None
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;		None
  1468 ;; Return value:  Size  Location     Type
  1469 ;;                  1    wreg      void 
  1470 ;; Registers used:
  1471 ;;		None
  1472 ;; Tracked objects:
  1473 ;;		On entry : 0/0
  1474 ;;		On exit  : 0/0
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMMON   BANK0   BANK1
  1477 ;;      Params:         0       0       0
  1478 ;;      Locals:         0       0       0
  1479 ;;      Temps:          0       0       0
  1480 ;;      Totals:         0       0       0
  1481 ;;Total ram usage:        0 bytes
  1482 ;; Hardware stack levels used:    1
  1483 ;; Hardware stack levels required when called:    4
  1484 ;; This function calls:
  1485 ;;		Nothing
  1486 ;; This function is called by:
  1487 ;;		_main
  1488 ;; This function uses a non-reentrant model
  1489 ;;
  1490                           
  1491                           
  1492                           ;psect for function _TMR1_StartTimer
  1493  015B                     _TMR1_StartTimer:
  1494  015B                     l794:	
  1495                           ;incstack = 0
  1496                           ; Regs used in _TMR1_StartTimer: []
  1497                           
  1498                           
  1499                           ;mcc_generated_files/tmr1.c: 96:     T1CONbits.TMR1ON = 1;
  1500  015B  0020               	movlb	0	; select bank0
  1501  015C  1418               	bsf	24,0	;volatile
  1502  015D                     l81:
  1503  015D  0008               	return
  1504  015E                     __end_of_TMR1_StartTimer:
  1505                           
  1506                           	psect	text3
  1507  011E                     __ptext3:	
  1508 ;; *************** function _SYSTEM_Initialize *****************
  1509 ;; Defined at:
  1510 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;		None
  1513 ;; Auto vars:     Size  Location     Type
  1514 ;;		None
  1515 ;; Return value:  Size  Location     Type
  1516 ;;                  1    wreg      void 
  1517 ;; Registers used:
  1518 ;;		wreg, status,2, status,0, pclath, cstack
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMMON   BANK0   BANK1
  1524 ;;      Params:         0       0       0
  1525 ;;      Locals:         0       0       0
  1526 ;;      Temps:          0       0       0
  1527 ;;      Totals:         0       0       0
  1528 ;;Total ram usage:        0 bytes
  1529 ;; Hardware stack levels used:    1
  1530 ;; Hardware stack levels required when called:    6
  1531 ;; This function calls:
  1532 ;;		_OSCILLATOR_Initialize
  1533 ;;		_PIN_MANAGER_Initialize
  1534 ;;		_TMR1_Initialize
  1535 ;;		_WDT_Initialize
  1536 ;; This function is called by:
  1537 ;;		_main
  1538 ;; This function uses a non-reentrant model
  1539 ;;
  1540                           
  1541                           
  1542                           ;psect for function _SYSTEM_Initialize
  1543  011E                     _SYSTEM_Initialize:
  1544  011E                     l956:	
  1545                           ;incstack = 0
  1546                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1547                           
  1548                           
  1549                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1550  011E  3180  20F6  3181   	fcall	_PIN_MANAGER_Initialize
  1551                           
  1552                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1553  0121  3181  2145  3181   	fcall	_OSCILLATOR_Initialize
  1554                           
  1555                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  1556  0124  3181  2157  3181   	fcall	_WDT_Initialize
  1557                           
  1558                           ;mcc_generated_files/mcc.c: 56:     TMR1_Initialize();
  1559  0127  3180  20DE  3181   	fcall	_TMR1_Initialize
  1560  012A                     l19:
  1561  012A  0008               	return
  1562  012B                     __end_of_SYSTEM_Initialize:
  1563                           
  1564                           	psect	text4
  1565  0157                     __ptext4:	
  1566 ;; *************** function _WDT_Initialize *****************
  1567 ;; Defined at:
  1568 ;;		line 69 in file "mcc_generated_files/mcc.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;		None
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;		None
  1573 ;; Return value:  Size  Location     Type
  1574 ;;                  1    wreg      void 
  1575 ;; Registers used:
  1576 ;;		wreg
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMMON   BANK0   BANK1
  1582 ;;      Params:         0       0       0
  1583 ;;      Locals:         0       0       0
  1584 ;;      Temps:          0       0       0
  1585 ;;      Totals:         0       0       0
  1586 ;;Total ram usage:        0 bytes
  1587 ;; Hardware stack levels used:    1
  1588 ;; Hardware stack levels required when called:    4
  1589 ;; This function calls:
  1590 ;;		Nothing
  1591 ;; This function is called by:
  1592 ;;		_SYSTEM_Initialize
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           
  1596                           
  1597                           ;psect for function _WDT_Initialize
  1598  0157                     _WDT_Initialize:
  1599  0157                     l756:	
  1600                           ;incstack = 0
  1601                           ; Regs used in _WDT_Initialize: [wreg]
  1602                           
  1603                           
  1604                           ;mcc_generated_files/mcc.c: 72:     WDTCON = 0x16;
  1605  0157  3016               	movlw	22
  1606  0158  0021               	movlb	1	; select bank1
  1607  0159  0097               	movwf	23	;volatile
  1608  015A                     l25:
  1609  015A  0008               	return
  1610  015B                     __end_of_WDT_Initialize:
  1611                           
  1612                           	psect	text5
  1613  00DE                     __ptext5:	
  1614 ;; *************** function _TMR1_Initialize *****************
  1615 ;; Defined at:
  1616 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  1617 ;; Parameters:    Size  Location     Type
  1618 ;;		None
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;		None
  1621 ;; Return value:  Size  Location     Type
  1622 ;;                  1    wreg      void 
  1623 ;; Registers used:
  1624 ;;		wreg, status,2, status,0, pclath, cstack
  1625 ;; Tracked objects:
  1626 ;;		On entry : 0/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMMON   BANK0   BANK1
  1630 ;;      Params:         0       0       0
  1631 ;;      Locals:         0       0       0
  1632 ;;      Temps:          0       0       0
  1633 ;;      Totals:         0       0       0
  1634 ;;Total ram usage:        0 bytes
  1635 ;; Hardware stack levels used:    1
  1636 ;; Hardware stack levels required when called:    5
  1637 ;; This function calls:
  1638 ;;		_TMR1_SetInterruptHandler
  1639 ;; This function is called by:
  1640 ;;		_SYSTEM_Initialize
  1641 ;; This function uses a non-reentrant model
  1642 ;;
  1643                           
  1644                           
  1645                           ;psect for function _TMR1_Initialize
  1646  00DE                     _TMR1_Initialize:
  1647  00DE                     l922:	
  1648                           ;incstack = 0
  1649                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1650                           
  1651                           
  1652                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  1653  00DE  0020               	movlb	0	; select bank0
  1654  00DF  0199               	clrf	25	;volatile
  1655  00E0                     l924:
  1656                           
  1657                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x86;
  1658  00E0  3086               	movlw	134
  1659  00E1  0097               	movwf	23	;volatile
  1660  00E2                     l926:
  1661                           
  1662                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xE8;
  1663  00E2  30E8               	movlw	232
  1664  00E3  0096               	movwf	22	;volatile
  1665  00E4                     l928:
  1666                           
  1667                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  1668  00E4  1011               	bcf	17,0	;volatile
  1669  00E5                     l930:
  1670                           
  1671                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  1672  00E5  0817               	movf	23,w	;volatile
  1673  00E6  00FB               	movwf	_timer1ReloadVal+1	;volatile
  1674  00E7  0816               	movf	22,w	;volatile
  1675  00E8  00FA               	movwf	_timer1ReloadVal	;volatile
  1676  00E9                     l932:
  1677                           
  1678                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  1679  00E9  0021               	movlb	1	; select bank1
  1680  00EA  1411               	bsf	17,0	;volatile
  1681  00EB                     l934:
  1682                           
  1683                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  1684  00EB  305E               	movlw	low _TMR1_DefaultInterruptHandler
  1685  00EC  00F7               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  1686  00ED  3001               	movlw	high _TMR1_DefaultInterruptHandler
  1687  00EE  00F8               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  1688  00EF  3181  214C  3180   	fcall	_TMR1_SetInterruptHandler
  1689  00F2                     l936:
  1690                           
  1691                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x41;
  1692  00F2  3041               	movlw	65
  1693  00F3  0020               	movlb	0	; select bank0
  1694  00F4  0098               	movwf	24	;volatile
  1695  00F5                     l78:
  1696  00F5  0008               	return
  1697  00F6                     __end_of_TMR1_Initialize:
  1698                           
  1699                           	psect	text6
  1700  014C                     __ptext6:	
  1701 ;; *************** function _TMR1_SetInterruptHandler *****************
  1702 ;; Defined at:
  1703 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  1704 ;; Parameters:    Size  Location     Type
  1705 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  1706 ;;		 -> secondsTick(1), TMR1_DefaultInterruptHandler(1), 
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;		None
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  1    wreg      void 
  1711 ;; Registers used:
  1712 ;;		wreg
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMMON   BANK0   BANK1
  1718 ;;      Params:         2       0       0
  1719 ;;      Locals:         0       0       0
  1720 ;;      Temps:          0       0       0
  1721 ;;      Totals:         2       0       0
  1722 ;;Total ram usage:        2 bytes
  1723 ;; Hardware stack levels used:    1
  1724 ;; Hardware stack levels required when called:    4
  1725 ;; This function calls:
  1726 ;;		Nothing
  1727 ;; This function is called by:
  1728 ;;		_TMR1_Initialize
  1729 ;;		_main
  1730 ;; This function uses a non-reentrant model
  1731 ;;
  1732                           
  1733                           
  1734                           ;psect for function _TMR1_SetInterruptHandler
  1735  014C                     _TMR1_SetInterruptHandler:
  1736  014C                     l918:	
  1737                           ;incstack = 0
  1738                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  1739                           
  1740                           
  1741                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  1742  014C  0878               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  1743  014D  0020               	movlb	0	; select bank0
  1744  014E  00A1               	movwf	_TMR1_InterruptHandler+1
  1745  014F  0877               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  1746  0150  00A0               	movwf	_TMR1_InterruptHandler
  1747  0151                     l111:
  1748  0151  0008               	return
  1749  0152                     __end_of_TMR1_SetInterruptHandler:
  1750                           
  1751                           	psect	text7
  1752  00F6                     __ptext7:	
  1753 ;; *************** function _PIN_MANAGER_Initialize *****************
  1754 ;; Defined at:
  1755 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;		None
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;		None
  1760 ;; Return value:  Size  Location     Type
  1761 ;;                  1    wreg      void 
  1762 ;; Registers used:
  1763 ;;		wreg, status,2
  1764 ;; Tracked objects:
  1765 ;;		On entry : 0/0
  1766 ;;		On exit  : 0/0
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMMON   BANK0   BANK1
  1769 ;;      Params:         0       0       0
  1770 ;;      Locals:         0       0       0
  1771 ;;      Temps:          0       0       0
  1772 ;;      Totals:         0       0       0
  1773 ;;Total ram usage:        0 bytes
  1774 ;; Hardware stack levels used:    1
  1775 ;; Hardware stack levels required when called:    4
  1776 ;; This function calls:
  1777 ;;		Nothing
  1778 ;; This function is called by:
  1779 ;;		_SYSTEM_Initialize
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           
  1784                           ;psect for function _PIN_MANAGER_Initialize
  1785  00F6                     _PIN_MANAGER_Initialize:
  1786  00F6                     l738:	
  1787                           ;incstack = 0
  1788                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1789                           
  1790                           
  1791                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1792  00F6  0022               	movlb	2	; select bank2
  1793  00F7  018C               	clrf	12	;volatile
  1794  00F8                     l740:
  1795                           
  1796                           ;mcc_generated_files/pin_manager.c: 65:     TRISA = 0x39;
  1797  00F8  3039               	movlw	57
  1798  00F9  0021               	movlb	1	; select bank1
  1799  00FA  008C               	movwf	12	;volatile
  1800  00FB                     l742:
  1801                           
  1802                           ;mcc_generated_files/pin_manager.c: 70:     ANSELA = 0x07;
  1803  00FB  3007               	movlw	7
  1804  00FC  0023               	movlb	3	; select bank3
  1805  00FD  008C               	movwf	12	;volatile
  1806                           
  1807                           ;mcc_generated_files/pin_manager.c: 75:     WPUA = 0x00;
  1808  00FE  0024               	movlb	4	; select bank4
  1809  00FF  018C               	clrf	12	;volatile
  1810  0100                     l744:
  1811                           
  1812                           ;mcc_generated_files/pin_manager.c: 76:     OPTION_REGbits.nWPUEN = 1;
  1813  0100  0021               	movlb	1	; select bank1
  1814  0101  1795               	bsf	21,7	;volatile
  1815                           
  1816                           ;mcc_generated_files/pin_manager.c: 81:     ODCONA = 0x00;
  1817  0102  0025               	movlb	5	; select bank5
  1818  0103  018C               	clrf	12	;volatile
  1819  0104                     l746:
  1820                           
  1821                           ;mcc_generated_files/pin_manager.c: 86:     SLRCONA = 0x37;
  1822  0104  3037               	movlw	55
  1823  0105  0026               	movlb	6	; select bank6
  1824  0106  008C               	movwf	12	;volatile
  1825  0107                     l748:
  1826                           
  1827                           ;mcc_generated_files/pin_manager.c: 91:     INLVLA = 0x3F;
  1828  0107  303F               	movlw	63
  1829  0108  0027               	movlb	7	; select bank7
  1830  0109  008C               	movwf	12	;volatile
  1831                           
  1832                           ;mcc_generated_files/pin_manager.c: 96:     APFCON = 0x00;
  1833  010A  0022               	movlb	2	; select bank2
  1834  010B  019D               	clrf	29	;volatile
  1835  010C                     l46:
  1836  010C  0008               	return
  1837  010D                     __end_of_PIN_MANAGER_Initialize:
  1838                           
  1839                           	psect	text8
  1840  0145                     __ptext8:	
  1841 ;; *************** function _OSCILLATOR_Initialize *****************
  1842 ;; Defined at:
  1843 ;;		line 59 in file "mcc_generated_files/mcc.c"
  1844 ;; Parameters:    Size  Location     Type
  1845 ;;		None
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;		None
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  1    wreg      void 
  1850 ;; Registers used:
  1851 ;;		wreg, status,2
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMMON   BANK0   BANK1
  1857 ;;      Params:         0       0       0
  1858 ;;      Locals:         0       0       0
  1859 ;;      Temps:          0       0       0
  1860 ;;      Totals:         0       0       0
  1861 ;;Total ram usage:        0 bytes
  1862 ;; Hardware stack levels used:    1
  1863 ;; Hardware stack levels required when called:    4
  1864 ;; This function calls:
  1865 ;;		Nothing
  1866 ;; This function is called by:
  1867 ;;		_SYSTEM_Initialize
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871                           
  1872                           ;psect for function _OSCILLATOR_Initialize
  1873  0145                     _OSCILLATOR_Initialize:
  1874  0145                     l750:	
  1875                           ;incstack = 0
  1876                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1877                           
  1878                           
  1879                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x02;
  1880  0145  3002               	movlw	2
  1881  0146  0021               	movlb	1	; select bank1
  1882  0147  0099               	movwf	25	;volatile
  1883  0148                     l752:
  1884                           
  1885                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
  1886  0148  0198               	clrf	24	;volatile
  1887  0149                     l754:
  1888                           
  1889                           ;mcc_generated_files/mcc.c: 66:     BORCON = 0x00;
  1890  0149  0022               	movlb	2	; select bank2
  1891  014A  0196               	clrf	22	;volatile
  1892  014B                     l22:
  1893  014B  0008               	return
  1894  014C                     __end_of_OSCILLATOR_Initialize:
  1895                           
  1896                           	psect	intentry
  1897  0004                     __pintentry:	
  1898 ;; *************** function _INTERRUPT_InterruptManager *****************
  1899 ;; Defined at:
  1900 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;		None
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;		None
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  1    wreg      void 
  1907 ;; Registers used:
  1908 ;;		wreg, status,2, status,0, pclath, cstack
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMMON   BANK0   BANK1
  1914 ;;      Params:         0       0       0
  1915 ;;      Locals:         0       0       0
  1916 ;;      Temps:          0       0       0
  1917 ;;      Totals:         0       0       0
  1918 ;;Total ram usage:        0 bytes
  1919 ;; Hardware stack levels used:    1
  1920 ;; Hardware stack levels required when called:    3
  1921 ;; This function calls:
  1922 ;;		_TMR1_ISR
  1923 ;; This function is called by:
  1924 ;;		Interrupt level 1
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928  0004                     _INTERRUPT_InterruptManager:
  1929                           
  1930                           ;incstack = 0
  1931  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1932                           
  1933                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  1934  0005  3180               	pagesel	$
  1935  0006                     i1l964:
  1936                           
  1937                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  1938  0006  1F0B               	btfss	11,6	;volatile
  1939  0007  2809               	goto	u16_21
  1940  0008  280A               	goto	u16_20
  1941  0009                     u16_21:
  1942  0009  2817               	goto	i1l131
  1943  000A                     u16_20:
  1944  000A                     i1l966:
  1945                           
  1946                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  1947  000A  0021               	movlb	1	; select bank1
  1948  000B  1C11               	btfss	17,0	;volatile
  1949  000C  280E               	goto	u17_21
  1950  000D  280F               	goto	u17_20
  1951  000E                     u17_21:
  1952  000E  2817               	goto	i1l131
  1953  000F                     u17_20:
  1954  000F                     i1l968:
  1955  000F  0020               	movlb	0	; select bank0
  1956  0010  1C11               	btfss	17,0	;volatile
  1957  0011  2813               	goto	u18_21
  1958  0012  2814               	goto	u18_20
  1959  0013                     u18_21:
  1960  0013  2817               	goto	i1l131
  1961  0014                     u18_20:
  1962  0014                     i1l970:
  1963                           
  1964                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR1_ISR();
  1965  0014  3181  212B  3180   	fcall	_TMR1_ISR
  1966  0017                     i1l131:	
  1967                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  1968                           
  1969  0017  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1970  0018  0009               	retfie
  1971  0019                     __end_of_INTERRUPT_InterruptManager:
  1972                           
  1973                           	psect	text10
  1974  012B                     __ptext10:	
  1975 ;; *************** function _TMR1_ISR *****************
  1976 ;; Defined at:
  1977 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  1978 ;; Parameters:    Size  Location     Type
  1979 ;;		None
  1980 ;; Auto vars:     Size  Location     Type
  1981 ;;		None
  1982 ;; Return value:  Size  Location     Type
  1983 ;;                  1    wreg      void 
  1984 ;; Registers used:
  1985 ;;		wreg, status,2, status,0, pclath, cstack
  1986 ;; Tracked objects:
  1987 ;;		On entry : 0/0
  1988 ;;		On exit  : 0/0
  1989 ;;		Unchanged: 0/0
  1990 ;; Data sizes:     COMMON   BANK0   BANK1
  1991 ;;      Params:         0       0       0
  1992 ;;      Locals:         0       0       0
  1993 ;;      Temps:          0       0       0
  1994 ;;      Totals:         0       0       0
  1995 ;;Total ram usage:        0 bytes
  1996 ;; Hardware stack levels used:    1
  1997 ;; Hardware stack levels required when called:    2
  1998 ;; This function calls:
  1999 ;;		_TMR1_CallBack
  2000 ;;		_TMR1_WriteTimer
  2001 ;; This function is called by:
  2002 ;;		_INTERRUPT_InterruptManager
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006                           
  2007                           ;psect for function _TMR1_ISR
  2008  012B                     _TMR1_ISR:
  2009  012B                     i1l958:	
  2010                           ;incstack = 0
  2011                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  2012                           
  2013                           
  2014                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  2015  012B  0020               	movlb	0	; select bank0
  2016  012C  1011               	bcf	17,0	;volatile
  2017  012D                     i1l960:
  2018                           
  2019                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  2020  012D  087B               	movf	_timer1ReloadVal+1,w	;volatile
  2021  012E  00F6               	movwf	TMR1_WriteTimer@timerVal+1
  2022  012F  087A               	movf	_timer1ReloadVal,w	;volatile
  2023  0130  00F5               	movwf	TMR1_WriteTimer@timerVal
  2024  0131  3181  210D  3181   	fcall	_TMR1_WriteTimer
  2025                           
  2026                           ;mcc_generated_files/tmr1.c: 166:     TMR1_CallBack();
  2027  0134  3181  2138  3181   	fcall	_TMR1_CallBack
  2028  0137                     i1l104:
  2029  0137  0008               	return
  2030  0138                     __end_of_TMR1_ISR:
  2031                           
  2032                           	psect	text11
  2033  010D                     __ptext11:	
  2034 ;; *************** function _TMR1_WriteTimer *****************
  2035 ;; Defined at:
  2036 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;  timerVal        2    0[COMMON] unsigned short 
  2039 ;; Auto vars:     Size  Location     Type
  2040 ;;		None
  2041 ;; Return value:  Size  Location     Type
  2042 ;;                  1    wreg      void 
  2043 ;; Registers used:
  2044 ;;		wreg, status,2
  2045 ;; Tracked objects:
  2046 ;;		On entry : 0/0
  2047 ;;		On exit  : 0/0
  2048 ;;		Unchanged: 0/0
  2049 ;; Data sizes:     COMMON   BANK0   BANK1
  2050 ;;      Params:         2       0       0
  2051 ;;      Locals:         0       0       0
  2052 ;;      Temps:          0       0       0
  2053 ;;      Totals:         2       0       0
  2054 ;;Total ram usage:        2 bytes
  2055 ;; Hardware stack levels used:    1
  2056 ;; This function calls:
  2057 ;;		Nothing
  2058 ;; This function is called by:
  2059 ;;		_TMR1_ISR
  2060 ;;		_TMR1_Reload
  2061 ;; This function uses a non-reentrant model
  2062 ;;
  2063                           
  2064                           
  2065                           ;psect for function _TMR1_WriteTimer
  2066  010D                     _TMR1_WriteTimer:
  2067  010D                     i1l938:	
  2068                           ;incstack = 0
  2069                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  2070                           
  2071                           
  2072                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  2073  010D  0020               	movlb	0	; select bank0
  2074  010E  1D18               	btfss	24,2	;volatile
  2075  010F  2911               	goto	u14_21
  2076  0110  2912               	goto	u14_20
  2077  0111                     u14_21:
  2078  0111  2919               	goto	i1l948
  2079  0112                     u14_20:
  2080  0112                     i1l940:
  2081                           
  2082                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  2083  0112  1018               	bcf	24,0	;volatile
  2084  0113                     i1l942:
  2085                           
  2086                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (timerVal >> 8);
  2087  0113  0876               	movf	TMR1_WriteTimer@timerVal+1,w
  2088  0114  0097               	movwf	23	;volatile
  2089  0115                     i1l944:
  2090                           
  2091                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = timerVal;
  2092  0115  0875               	movf	TMR1_WriteTimer@timerVal,w
  2093  0116  0096               	movwf	22	;volatile
  2094  0117                     i1l946:
  2095                           
  2096                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  2097  0117  1418               	bsf	24,0	;volatile
  2098                           
  2099                           ;mcc_generated_files/tmr1.c: 133:     }
  2100  0118  291D               	goto	i1l92
  2101  0119                     i1l948:
  2102                           
  2103                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (timerVal >> 8);
  2104  0119  0876               	movf	TMR1_WriteTimer@timerVal+1,w
  2105  011A  0097               	movwf	23	;volatile
  2106  011B                     i1l950:
  2107                           
  2108                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = timerVal;
  2109  011B  0875               	movf	TMR1_WriteTimer@timerVal,w
  2110  011C  0096               	movwf	22	;volatile
  2111  011D                     i1l92:
  2112  011D  0008               	return
  2113  011E                     __end_of_TMR1_WriteTimer:
  2114                           
  2115                           	psect	text12
  2116  0138                     __ptext12:	
  2117 ;; *************** function _TMR1_CallBack *****************
  2118 ;; Defined at:
  2119 ;;		line 169 in file "mcc_generated_files/tmr1.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;		None
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;		None
  2124 ;; Return value:  Size  Location     Type
  2125 ;;                  1    wreg      void 
  2126 ;; Registers used:
  2127 ;;		wreg, status,2, status,0, pclath, cstack
  2128 ;; Tracked objects:
  2129 ;;		On entry : 0/0
  2130 ;;		On exit  : 0/0
  2131 ;;		Unchanged: 0/0
  2132 ;; Data sizes:     COMMON   BANK0   BANK1
  2133 ;;      Params:         0       0       0
  2134 ;;      Locals:         0       0       0
  2135 ;;      Temps:          0       0       0
  2136 ;;      Totals:         0       0       0
  2137 ;;Total ram usage:        0 bytes
  2138 ;; Hardware stack levels used:    1
  2139 ;; Hardware stack levels required when called:    1
  2140 ;; This function calls:
  2141 ;;		Absolute function
  2142 ;;		_TMR1_DefaultInterruptHandler
  2143 ;;		_secondsTick
  2144 ;; This function is called by:
  2145 ;;		_TMR1_ISR
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149                           
  2150                           ;psect for function _TMR1_CallBack
  2151  0138                     _TMR1_CallBack:
  2152  0138                     i1l952:	
  2153                           ;incstack = 0
  2154                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
  2155                           
  2156                           
  2157                           ;mcc_generated_files/tmr1.c: 172:     if(TMR1_InterruptHandler)
  2158  0138  0020               	movlb	0	; select bank0
  2159  0139  0820               	movf	_TMR1_InterruptHandler,w
  2160  013A  0421               	iorwf	_TMR1_InterruptHandler+1,w
  2161  013B  1903               	btfsc	3,2
  2162  013C  293E               	goto	u15_21
  2163  013D  293F               	goto	u15_20
  2164  013E                     u15_21:
  2165  013E  2944               	goto	i1l108
  2166  013F                     u15_20:
  2167  013F                     i1l954:
  2168                           
  2169                           ;mcc_generated_files/tmr1.c: 173:     {;mcc_generated_files/tmr1.c: 174:         TMR1_In
      +                          terruptHandler();
  2170  013F  0821               	movf	_TMR1_InterruptHandler+1,w
  2171  0140  008A               	movwf	10
  2172  0141  0820               	movf	_TMR1_InterruptHandler,w
  2173  0142  000A               	callw
  2174  0143  3181               	pagesel	$
  2175  0144                     i1l108:
  2176  0144  0008               	return
  2177  0145                     __end_of_TMR1_CallBack:
  2178                           
  2179                           	psect	text13
  2180  015E                     __ptext13:	
  2181 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  2182 ;; Defined at:
  2183 ;;		line 182 in file "mcc_generated_files/tmr1.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;		None
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;		None
  2188 ;; Return value:  Size  Location     Type
  2189 ;;                  1    wreg      void 
  2190 ;; Registers used:
  2191 ;;		None
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMMON   BANK0   BANK1
  2197 ;;      Params:         0       0       0
  2198 ;;      Locals:         0       0       0
  2199 ;;      Temps:          0       0       0
  2200 ;;      Totals:         0       0       0
  2201 ;;Total ram usage:        0 bytes
  2202 ;; Hardware stack levels used:    1
  2203 ;; This function calls:
  2204 ;;		Nothing
  2205 ;; This function is called by:
  2206 ;;		_TMR1_Initialize
  2207 ;;		_TMR1_CallBack
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211                           
  2212                           ;psect for function _TMR1_DefaultInterruptHandler
  2213  015E                     _TMR1_DefaultInterruptHandler:
  2214  015E                     i1l114:	
  2215                           ;incstack = 0
  2216                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  2217                           
  2218  015E  0008               	return
  2219  015F                     __end_of_TMR1_DefaultInterruptHandler:
  2220                           
  2221                           	psect	text14
  2222  0152                     __ptext14:	
  2223 ;; *************** function _secondsTick *****************
  2224 ;; Defined at:
  2225 ;;		line 185 in file "main.c"
  2226 ;; Parameters:    Size  Location     Type
  2227 ;;		None
  2228 ;; Auto vars:     Size  Location     Type
  2229 ;;		None
  2230 ;; Return value:  Size  Location     Type
  2231 ;;                  1    wreg      void 
  2232 ;; Registers used:
  2233 ;;		wreg
  2234 ;; Tracked objects:
  2235 ;;		On entry : 0/0
  2236 ;;		On exit  : 0/0
  2237 ;;		Unchanged: 0/0
  2238 ;; Data sizes:     COMMON   BANK0   BANK1
  2239 ;;      Params:         0       0       0
  2240 ;;      Locals:         0       0       0
  2241 ;;      Temps:          0       0       0
  2242 ;;      Totals:         0       0       0
  2243 ;;Total ram usage:        0 bytes
  2244 ;; Hardware stack levels used:    1
  2245 ;; This function calls:
  2246 ;;		Nothing
  2247 ;; This function is called by:
  2248 ;;		_main
  2249 ;;		_TMR1_CallBack
  2250 ;; This function uses a non-reentrant model
  2251 ;;
  2252                           
  2253                           
  2254                           ;psect for function _secondsTick
  2255  0152                     _secondsTick:
  2256  0152                     i1l920:	
  2257                           ;incstack = 0
  2258                           ; Regs used in _secondsTick: [wreg]
  2259                           
  2260                           
  2261                           ;main.c: 187:     currentSecondsTick++;
  2262  0152  3001               	movlw	1
  2263  0153  07F2               	addwf	_currentSecondsTick,f	;volatile
  2264  0154  3000               	movlw	0
  2265  0155  3DF3               	addwfc	_currentSecondsTick+1,f	;volatile
  2266  0156                     i1l208:
  2267  0156  0008               	return
  2268  0157                     __end_of_secondsTick:
  2269  007E                     btemp	set	126	;btemp
  2270  007E                     int$flags	set	126
  2271  007E                     wtemp0	set	126
  2272                           
  2273                           	psect	config
  2274                           
  2275                           ;Config register CONFIG1 @ 0x8007
  2276                           ;	
  2277                           ;	FOSC = INTOSC, INTOSC oscillator; I/O function on CLKIN pin
  2278                           ;	Watchdog Timer Enable
  2279                           ;	WDTE = OFF, WDT disabled
  2280                           ;	Power-up Timer Enable
  2281                           ;	PWRTE = OFF, PWRT disabled
  2282                           ;	MCLR Pin Function Select
  2283                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2284                           ;	Flash Program Memory Code Protection
  2285                           ;	CP = ON, Program memory code protection is enabled
  2286                           ;	Brown-out Reset Enable
  2287                           ;	BOREN = ON, Brown-out Reset enabled
  2288                           ;	Clock Out Enable
  2289                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2290  8007                     	org	32775
  2291  8007  3F64               	dw	16228
  2292                           
  2293                           ;Config register CONFIG2 @ 0x8008
  2294                           ;	Flash Memory Self-Write Protection
  2295                           ;	WRT = OFF, Write protection off
  2296                           ;	PLL Enable
  2297                           ;	PLLEN = OFF, 4x PLL disabled
  2298                           ;	Stack Overflow/Underflow Reset Enable
  2299                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2300                           ;	Brown-out Reset Voltage Selection
  2301                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2302                           ;	Low Power Brown-out Reset enable bit
  2303                           ;	LPBOREN = OFF, LPBOR is disabled
  2304                           ;	Low-Voltage Programming Enable
  2305                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  2306  8008                     	org	32776
  2307  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      12
    BANK0            80      2       4
    BANK1            32      0       0

Pointer List with Targets:

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> secondsTick(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> secondsTick(), Absolute function(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_setState
    _TMR1_Initialize->_TMR1_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     393
                                              0 BANK0      2     2      0
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
                           _setState
 ---------------------------------------------------------------------------------
 (1) _setState                                             3     3      0      45
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0     240
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     240
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                        _secondsTick *
 ---------------------------------------------------------------------------------
 (7) _secondsTick                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize
   _TMR1_SetInterruptHandler
   _TMR1_StartTimer
   _setState

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _secondsTick *
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      10       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2       4       6        5.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      10       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Fri Aug 21 14:58:09 2020

                                      l22 014B                                        l25 015A  
                                      l19 012A                                        l46 010C  
                                      l81 015D                                        l78 00F5  
                                      u30 009D                                        u31 009C  
                                     l111 0151                                       l202 00BF  
                                     l204 00C1                                       l160 0036  
                                     l161 0049                                       l165 0052  
                                     l174 007D                                       l183 00DD  
                                     l159 007E                                       l192 00AB  
                                     l169 0065                                       l194 00AD  
                                     l186 00A1                                       l188 00A3  
                                     l197 00B5                                       l199 00B7  
                                     l800 0097                                       l810 00B8  
                                     l740 00F8                                       l804 009E  
                                     l750 0145                                       l742 00FB  
                                     l806 00A4                                       l814 00C3  
                                     l752 0148                                       l744 0100  
                                     l808 00AE                                       l816 00D9  
                                     l754 0149                                       l746 0104  
                                     l738 00F6                                       l930 00E5  
                                     l922 00DE                                       l748 0107  
                                     l932 00E9                                       l924 00E0  
                                     l756 0157                                       l918 014C  
                                     l934 00EB                                       l926 00E2  
                                     l936 00F2                                       l928 00E4  
                                     l794 015B                                       l956 011E  
                                     u300 0060                                       u301 005F  
                                     u310 0069                                       u311 0068  
                                     u320 0078                                       u321 0077  
                                     u305 005C                                       u260 003A  
                                     u325 0074                                       u261 0039  
                                     u270 0044                                       u271 0043  
                                     u280 004D                                       u281 004C  
                                     u290 0056                                       u291 0055  
                                     u275 0040                           _timer1ReloadVal 007A  
                                    l1120 0087                                      l1122 00CB  
                                    l1050 0026                                      l1060 004D  
                                    l1052 002E                                      l1070 0078  
                                    l1062 0056                                      l1054 0031  
                                    l1046 0022                                      l1064 0060  
                                    l1056 003A                                      l1048 0025  
                                    l1066 0069                                      l1058 0044  
                                    l1074 007E                                      l1068 006E  
                                    _LATA 010C                                      i1l92 011D  
                                    _WPUA 020C                                      _main 0022  
                                    btemp 007E                                      start 0019  
              ??_TMR1_SetInterruptHandler 0079            __size_of_OSCILLATOR_Initialize 0007  
           __end_of_OSCILLATOR_Initialize 014C                                     ?_main 0075  
                         _TMR1_StartTimer 015B                                     _T1CON 0018  
                                   i1l104 0137                                     i1l114 015E  
                                   i1l131 0017                                     i1l108 0144  
                                   i1l208 0156                                     i1l920 0152  
                                   i1l940 0112                                     i1l950 011B  
                                   i1l942 0113                                     i1l952 0138  
                                   i1l944 0115                                     i1l960 012D  
                                   i1l954 013F                                     i1l946 0117  
                                   i1l938 010D                                     i1l970 0014  
                                   i1l948 0119                                     i1l964 0006  
                                   i1l958 012B                                     i1l966 000A  
                                   i1l968 000F                                     u14_20 0112  
                                   u14_21 0111                                     u15_20 013F  
                                   u15_21 013E                                     u16_20 000A  
                                   u16_21 0009                                     u17_20 000F  
                                   u17_21 000E                                     _TMR1H 0017  
                                   _TMR1L 0016                                     u18_20 0014  
                                   u18_21 0013                                     _TRISA 008C  
                        __end_of_TMR1_ISR 0138                            _WDT_Initialize 0157  
                 __end_of_TMR1_Initialize 00F6                                     pclath 000A  
                                   status 0003                                     wtemp0 007E  
                         _TMR1_WriteTimer 010D                           __initialization 001A  
                            __end_of_main 0096               ?_INTERRUPT_InterruptManager 0075  
                                  ??_main 0022                              ?_secondsTick 0075  
                  __end_of_WDT_Initialize 015B                                    _APFCON 011D  
                                  _ANSELA 018C                                    _BORCON 0116  
                                  _T1GCON 0019                   TMR1_WriteTimer@timerVal 0075  
                                  _ODCONA 028C                                    _INLVLA 038C  
                                  _OSCCON 0099                                    _WDTCON 0097  
    __end_of_TMR1_DefaultInterruptHandler 015F     __size_of_TMR1_DefaultInterruptHandler 0001  
            _TMR1_DefaultInterruptHandler 015E                   __end_of_TMR1_StartTimer 015E  
                        __end_of_setState 00DE                           ?_WDT_Initialize 0075  
TMR1_SetInterruptHandler@InterruptHandler 0077                   __end_of_TMR1_WriteTimer 011E  
                   __end_of_TMR1_CallBack 0145                          ?_TMR1_Initialize 0075  
                       _SYSTEM_Initialize 011E                   __end_of__initialization 001F  
                      ?_SYSTEM_Initialize 0075                            __pcstackCOMMON 0075  
                     ??_SYSTEM_Initialize 0079                                 ?_TMR1_ISR 0075  
           ?_TMR1_DefaultInterruptHandler 0075                            _OPTION_REGbits 0095  
               __end_of_SYSTEM_Initialize 012B                                __pnvCOMMON 007A  
                              __pmaintext 0022                          ?_TMR1_StartTimer 0075  
                              ??_TMR1_ISR 0077                                __pintentry 0004  
                                 _OSCTUNE 0098                                   _SLRCONA 030C  
                    __size_of_secondsTick 0005                          ?_TMR1_WriteTimer 0075  
                               ?_setState 0075                                   __ptext1 0096  
                                 __ptext2 015B                                   __ptext3 011E  
                                 __ptext4 0157                                   __ptext5 00DE  
                                 __ptext6 014C                                   __ptext7 00F6  
                                 __ptext8 0145            ??_TMR1_DefaultInterruptHandler 0075  
                               _T1CONbits 0018                     _OSCILLATOR_Initialize 0145  
       __size_of_TMR1_SetInterruptHandler 0006                  ??_PIN_MANAGER_Initialize 0077  
               ?_TMR1_SetInterruptHandler 0077                __size_of_SYSTEM_Initialize 000D  
                    end_of_initialization 001F                                ??_setState 0077  
                        ??_WDT_Initialize 0077                                 _PORTAbits 000C  
                       __size_of_TMR1_ISR 000D                    ?_OSCILLATOR_Initialize 0075  
                     start_initialization 001A           __size_of_PIN_MANAGER_Initialize 0017  
                __size_of_TMR1_Initialize 0018                    __size_of_TMR1_CallBack 000D  
                             __pbssCOMMON 0070                                 ___latbits 0000  
                           __pcstackBANK0 0022                          setState@newState 0079  
                            _currentState 0074                                 __pnvBANK0 0020  
                  _PIN_MANAGER_Initialize 00F6          __end_of_TMR1_SetInterruptHandler 0152  
                       __size_of_setState 0048              ??_INTERRUPT_InterruptManager 0077  
                __size_of_TMR1_StartTimer 0003                             ??_secondsTick 0075  
                           _TMR1_CallBack 0138                                  _LATAbits 010C  
                                _PIE1bits 0091                  __size_of_TMR1_WriteTimer 0011  
     __size_of_INTERRUPT_InterruptManager 0015                                  _PIR1bits 0011  
                                _TMR1_ISR 012B                         ??_TMR1_Initialize 0079  
                      _currentSecondsTick 0072                       __end_of_secondsTick 0157  
                          ?_TMR1_CallBack 0075                   ??_OSCILLATOR_Initialize 0077  
                _TMR1_SetInterruptHandler 014C                     _TMR1_InterruptHandler 0020  
                                __ptext10 012B                                  __ptext11 010D  
                                __ptext12 0138                                  __ptext13 015E  
                              _T1GCONbits 0019                                  __ptext14 0152  
                       ??_TMR1_StartTimer 0077                             __size_of_main 0074  
                                _setState 0096                       _demandedSecondsTick 0070  
                                int$flags 007E        __end_of_INTERRUPT_InterruptManager 0019  
              _INTERRUPT_InterruptManager 0004                         ??_TMR1_WriteTimer 0077  
                              _INTCONbits 000B                               _secondsTick 0152  
                         ??_TMR1_CallBack 0075                   __size_of_WDT_Initialize 0004  
                                intlevel1 0000                   ?_PIN_MANAGER_Initialize 0075  
          __end_of_PIN_MANAGER_Initialize 010D                           _TMR1_Initialize 00DE  
