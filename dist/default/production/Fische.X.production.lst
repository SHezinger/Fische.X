

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Aug 06 15:07:25 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	12F1571
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 12/02/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC12F1571 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  008C                     	;# 
    88  0091                     	;# 
    89  0092                     	;# 
    90  0093                     	;# 
    91  0095                     	;# 
    92  0096                     	;# 
    93  0097                     	;# 
    94  0098                     	;# 
    95  0099                     	;# 
    96  009A                     	;# 
    97  009B                     	;# 
    98  009B                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  0111                     	;# 
   105  0112                     	;# 
   106  0115                     	;# 
   107  0116                     	;# 
   108  0117                     	;# 
   109  0118                     	;# 
   110  0119                     	;# 
   111  011D                     	;# 
   112  011D                     	;# 
   113  018C                     	;# 
   114  0191                     	;# 
   115  0191                     	;# 
   116  0192                     	;# 
   117  0193                     	;# 
   118  0193                     	;# 
   119  0194                     	;# 
   120  0195                     	;# 
   121  0196                     	;# 
   122  0197                     	;# 
   123  020C                     	;# 
   124  028C                     	;# 
   125  030C                     	;# 
   126  038C                     	;# 
   127  0391                     	;# 
   128  0392                     	;# 
   129  0393                     	;# 
   130  0691                     	;# 
   131  0692                     	;# 
   132  0693                     	;# 
   133  0694                     	;# 
   134  0695                     	;# 
   135  0D8E                     	;# 
   136  0D8F                     	;# 
   137  0D90                     	;# 
   138  0D91                     	;# 
   139  0D91                     	;# 
   140  0D92                     	;# 
   141  0D93                     	;# 
   142  0D93                     	;# 
   143  0D94                     	;# 
   144  0D95                     	;# 
   145  0D95                     	;# 
   146  0D96                     	;# 
   147  0D97                     	;# 
   148  0D97                     	;# 
   149  0D98                     	;# 
   150  0D99                     	;# 
   151  0D99                     	;# 
   152  0D9A                     	;# 
   153  0D9B                     	;# 
   154  0D9C                     	;# 
   155  0D9C                     	;# 
   156  0D9D                     	;# 
   157  0D9D                     	;# 
   158  0D9E                     	;# 
   159  0D9F                     	;# 
   160  0DA0                     	;# 
   161  0DA1                     	;# 
   162  0DA1                     	;# 
   163  0DA2                     	;# 
   164  0DA3                     	;# 
   165  0DA3                     	;# 
   166  0DA4                     	;# 
   167  0DA5                     	;# 
   168  0DA5                     	;# 
   169  0DA6                     	;# 
   170  0DA7                     	;# 
   171  0DA7                     	;# 
   172  0DA8                     	;# 
   173  0DA9                     	;# 
   174  0DA9                     	;# 
   175  0DAA                     	;# 
   176  0DAB                     	;# 
   177  0DAC                     	;# 
   178  0DAC                     	;# 
   179  0DAD                     	;# 
   180  0DAD                     	;# 
   181  0DAE                     	;# 
   182  0DAF                     	;# 
   183  0DB0                     	;# 
   184  0DB1                     	;# 
   185  0DB1                     	;# 
   186  0DB2                     	;# 
   187  0DB3                     	;# 
   188  0DB3                     	;# 
   189  0DB4                     	;# 
   190  0DB5                     	;# 
   191  0DB5                     	;# 
   192  0DB6                     	;# 
   193  0DB7                     	;# 
   194  0DB7                     	;# 
   195  0DB8                     	;# 
   196  0DB9                     	;# 
   197  0DB9                     	;# 
   198  0DBA                     	;# 
   199  0DBB                     	;# 
   200  0DBC                     	;# 
   201  0DBC                     	;# 
   202  0DBD                     	;# 
   203  0DBD                     	;# 
   204  0DBE                     	;# 
   205  0DBF                     	;# 
   206  0DC0                     	;# 
   207  0FE4                     	;# 
   208  0FE5                     	;# 
   209  0FE6                     	;# 
   210  0FE7                     	;# 
   211  0FE8                     	;# 
   212  0FE8                     	;# 
   213  0FE9                     	;# 
   214  0FEA                     	;# 
   215  0FEA                     	;# 
   216  0FEB                     	;# 
   217  0FED                     	;# 
   218  0FEE                     	;# 
   219  0FEE                     	;# 
   220  0FEF                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  0011                     	;# 
   235  0012                     	;# 
   236  0013                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0016                     	;# 
   240  0017                     	;# 
   241  0018                     	;# 
   242  0019                     	;# 
   243  001A                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  008C                     	;# 
   247  0091                     	;# 
   248  0092                     	;# 
   249  0093                     	;# 
   250  0095                     	;# 
   251  0096                     	;# 
   252  0097                     	;# 
   253  0098                     	;# 
   254  0099                     	;# 
   255  009A                     	;# 
   256  009B                     	;# 
   257  009B                     	;# 
   258  009C                     	;# 
   259  009D                     	;# 
   260  009E                     	;# 
   261  009F                     	;# 
   262  010C                     	;# 
   263  0111                     	;# 
   264  0112                     	;# 
   265  0115                     	;# 
   266  0116                     	;# 
   267  0117                     	;# 
   268  0118                     	;# 
   269  0119                     	;# 
   270  011D                     	;# 
   271  011D                     	;# 
   272  018C                     	;# 
   273  0191                     	;# 
   274  0191                     	;# 
   275  0192                     	;# 
   276  0193                     	;# 
   277  0193                     	;# 
   278  0194                     	;# 
   279  0195                     	;# 
   280  0196                     	;# 
   281  0197                     	;# 
   282  020C                     	;# 
   283  028C                     	;# 
   284  030C                     	;# 
   285  038C                     	;# 
   286  0391                     	;# 
   287  0392                     	;# 
   288  0393                     	;# 
   289  0691                     	;# 
   290  0692                     	;# 
   291  0693                     	;# 
   292  0694                     	;# 
   293  0695                     	;# 
   294  0D8E                     	;# 
   295  0D8F                     	;# 
   296  0D90                     	;# 
   297  0D91                     	;# 
   298  0D91                     	;# 
   299  0D92                     	;# 
   300  0D93                     	;# 
   301  0D93                     	;# 
   302  0D94                     	;# 
   303  0D95                     	;# 
   304  0D95                     	;# 
   305  0D96                     	;# 
   306  0D97                     	;# 
   307  0D97                     	;# 
   308  0D98                     	;# 
   309  0D99                     	;# 
   310  0D99                     	;# 
   311  0D9A                     	;# 
   312  0D9B                     	;# 
   313  0D9C                     	;# 
   314  0D9C                     	;# 
   315  0D9D                     	;# 
   316  0D9D                     	;# 
   317  0D9E                     	;# 
   318  0D9F                     	;# 
   319  0DA0                     	;# 
   320  0DA1                     	;# 
   321  0DA1                     	;# 
   322  0DA2                     	;# 
   323  0DA3                     	;# 
   324  0DA3                     	;# 
   325  0DA4                     	;# 
   326  0DA5                     	;# 
   327  0DA5                     	;# 
   328  0DA6                     	;# 
   329  0DA7                     	;# 
   330  0DA7                     	;# 
   331  0DA8                     	;# 
   332  0DA9                     	;# 
   333  0DA9                     	;# 
   334  0DAA                     	;# 
   335  0DAB                     	;# 
   336  0DAC                     	;# 
   337  0DAC                     	;# 
   338  0DAD                     	;# 
   339  0DAD                     	;# 
   340  0DAE                     	;# 
   341  0DAF                     	;# 
   342  0DB0                     	;# 
   343  0DB1                     	;# 
   344  0DB1                     	;# 
   345  0DB2                     	;# 
   346  0DB3                     	;# 
   347  0DB3                     	;# 
   348  0DB4                     	;# 
   349  0DB5                     	;# 
   350  0DB5                     	;# 
   351  0DB6                     	;# 
   352  0DB7                     	;# 
   353  0DB7                     	;# 
   354  0DB8                     	;# 
   355  0DB9                     	;# 
   356  0DB9                     	;# 
   357  0DBA                     	;# 
   358  0DBB                     	;# 
   359  0DBC                     	;# 
   360  0DBC                     	;# 
   361  0DBD                     	;# 
   362  0DBD                     	;# 
   363  0DBE                     	;# 
   364  0DBF                     	;# 
   365  0DC0                     	;# 
   366  0FE4                     	;# 
   367  0FE5                     	;# 
   368  0FE6                     	;# 
   369  0FE7                     	;# 
   370  0FE8                     	;# 
   371  0FE8                     	;# 
   372  0FE9                     	;# 
   373  0FEA                     	;# 
   374  0FEA                     	;# 
   375  0FEB                     	;# 
   376  0FED                     	;# 
   377  0FEE                     	;# 
   378  0FEE                     	;# 
   379  0FEF                     	;# 
   380  0000                     	;# 
   381  0001                     	;# 
   382  0002                     	;# 
   383  0003                     	;# 
   384  0004                     	;# 
   385  0005                     	;# 
   386  0006                     	;# 
   387  0007                     	;# 
   388  0008                     	;# 
   389  0009                     	;# 
   390  000A                     	;# 
   391  000B                     	;# 
   392  000C                     	;# 
   393  0011                     	;# 
   394  0012                     	;# 
   395  0013                     	;# 
   396  0015                     	;# 
   397  0016                     	;# 
   398  0016                     	;# 
   399  0017                     	;# 
   400  0018                     	;# 
   401  0019                     	;# 
   402  001A                     	;# 
   403  001B                     	;# 
   404  001C                     	;# 
   405  008C                     	;# 
   406  0091                     	;# 
   407  0092                     	;# 
   408  0093                     	;# 
   409  0095                     	;# 
   410  0096                     	;# 
   411  0097                     	;# 
   412  0098                     	;# 
   413  0099                     	;# 
   414  009A                     	;# 
   415  009B                     	;# 
   416  009B                     	;# 
   417  009C                     	;# 
   418  009D                     	;# 
   419  009E                     	;# 
   420  009F                     	;# 
   421  010C                     	;# 
   422  0111                     	;# 
   423  0112                     	;# 
   424  0115                     	;# 
   425  0116                     	;# 
   426  0117                     	;# 
   427  0118                     	;# 
   428  0119                     	;# 
   429  011D                     	;# 
   430  011D                     	;# 
   431  018C                     	;# 
   432  0191                     	;# 
   433  0191                     	;# 
   434  0192                     	;# 
   435  0193                     	;# 
   436  0193                     	;# 
   437  0194                     	;# 
   438  0195                     	;# 
   439  0196                     	;# 
   440  0197                     	;# 
   441  020C                     	;# 
   442  028C                     	;# 
   443  030C                     	;# 
   444  038C                     	;# 
   445  0391                     	;# 
   446  0392                     	;# 
   447  0393                     	;# 
   448  0691                     	;# 
   449  0692                     	;# 
   450  0693                     	;# 
   451  0694                     	;# 
   452  0695                     	;# 
   453  0D8E                     	;# 
   454  0D8F                     	;# 
   455  0D90                     	;# 
   456  0D91                     	;# 
   457  0D91                     	;# 
   458  0D92                     	;# 
   459  0D93                     	;# 
   460  0D93                     	;# 
   461  0D94                     	;# 
   462  0D95                     	;# 
   463  0D95                     	;# 
   464  0D96                     	;# 
   465  0D97                     	;# 
   466  0D97                     	;# 
   467  0D98                     	;# 
   468  0D99                     	;# 
   469  0D99                     	;# 
   470  0D9A                     	;# 
   471  0D9B                     	;# 
   472  0D9C                     	;# 
   473  0D9C                     	;# 
   474  0D9D                     	;# 
   475  0D9D                     	;# 
   476  0D9E                     	;# 
   477  0D9F                     	;# 
   478  0DA0                     	;# 
   479  0DA1                     	;# 
   480  0DA1                     	;# 
   481  0DA2                     	;# 
   482  0DA3                     	;# 
   483  0DA3                     	;# 
   484  0DA4                     	;# 
   485  0DA5                     	;# 
   486  0DA5                     	;# 
   487  0DA6                     	;# 
   488  0DA7                     	;# 
   489  0DA7                     	;# 
   490  0DA8                     	;# 
   491  0DA9                     	;# 
   492  0DA9                     	;# 
   493  0DAA                     	;# 
   494  0DAB                     	;# 
   495  0DAC                     	;# 
   496  0DAC                     	;# 
   497  0DAD                     	;# 
   498  0DAD                     	;# 
   499  0DAE                     	;# 
   500  0DAF                     	;# 
   501  0DB0                     	;# 
   502  0DB1                     	;# 
   503  0DB1                     	;# 
   504  0DB2                     	;# 
   505  0DB3                     	;# 
   506  0DB3                     	;# 
   507  0DB4                     	;# 
   508  0DB5                     	;# 
   509  0DB5                     	;# 
   510  0DB6                     	;# 
   511  0DB7                     	;# 
   512  0DB7                     	;# 
   513  0DB8                     	;# 
   514  0DB9                     	;# 
   515  0DB9                     	;# 
   516  0DBA                     	;# 
   517  0DBB                     	;# 
   518  0DBC                     	;# 
   519  0DBC                     	;# 
   520  0DBD                     	;# 
   521  0DBD                     	;# 
   522  0DBE                     	;# 
   523  0DBF                     	;# 
   524  0DC0                     	;# 
   525  0FE4                     	;# 
   526  0FE5                     	;# 
   527  0FE6                     	;# 
   528  0FE7                     	;# 
   529  0FE8                     	;# 
   530  0FE8                     	;# 
   531  0FE9                     	;# 
   532  0FEA                     	;# 
   533  0FEA                     	;# 
   534  0FEB                     	;# 
   535  0FED                     	;# 
   536  0FEE                     	;# 
   537  0FEE                     	;# 
   538  0FEF                     	;# 
   539  0000                     	;# 
   540  0001                     	;# 
   541  0002                     	;# 
   542  0003                     	;# 
   543  0004                     	;# 
   544  0005                     	;# 
   545  0006                     	;# 
   546  0007                     	;# 
   547  0008                     	;# 
   548  0009                     	;# 
   549  000A                     	;# 
   550  000B                     	;# 
   551  000C                     	;# 
   552  0011                     	;# 
   553  0012                     	;# 
   554  0013                     	;# 
   555  0015                     	;# 
   556  0016                     	;# 
   557  0016                     	;# 
   558  0017                     	;# 
   559  0018                     	;# 
   560  0019                     	;# 
   561  001A                     	;# 
   562  001B                     	;# 
   563  001C                     	;# 
   564  008C                     	;# 
   565  0091                     	;# 
   566  0092                     	;# 
   567  0093                     	;# 
   568  0095                     	;# 
   569  0096                     	;# 
   570  0097                     	;# 
   571  0098                     	;# 
   572  0099                     	;# 
   573  009A                     	;# 
   574  009B                     	;# 
   575  009B                     	;# 
   576  009C                     	;# 
   577  009D                     	;# 
   578  009E                     	;# 
   579  009F                     	;# 
   580  010C                     	;# 
   581  0111                     	;# 
   582  0112                     	;# 
   583  0115                     	;# 
   584  0116                     	;# 
   585  0117                     	;# 
   586  0118                     	;# 
   587  0119                     	;# 
   588  011D                     	;# 
   589  011D                     	;# 
   590  018C                     	;# 
   591  0191                     	;# 
   592  0191                     	;# 
   593  0192                     	;# 
   594  0193                     	;# 
   595  0193                     	;# 
   596  0194                     	;# 
   597  0195                     	;# 
   598  0196                     	;# 
   599  0197                     	;# 
   600  020C                     	;# 
   601  028C                     	;# 
   602  030C                     	;# 
   603  038C                     	;# 
   604  0391                     	;# 
   605  0392                     	;# 
   606  0393                     	;# 
   607  0691                     	;# 
   608  0692                     	;# 
   609  0693                     	;# 
   610  0694                     	;# 
   611  0695                     	;# 
   612  0D8E                     	;# 
   613  0D8F                     	;# 
   614  0D90                     	;# 
   615  0D91                     	;# 
   616  0D91                     	;# 
   617  0D92                     	;# 
   618  0D93                     	;# 
   619  0D93                     	;# 
   620  0D94                     	;# 
   621  0D95                     	;# 
   622  0D95                     	;# 
   623  0D96                     	;# 
   624  0D97                     	;# 
   625  0D97                     	;# 
   626  0D98                     	;# 
   627  0D99                     	;# 
   628  0D99                     	;# 
   629  0D9A                     	;# 
   630  0D9B                     	;# 
   631  0D9C                     	;# 
   632  0D9C                     	;# 
   633  0D9D                     	;# 
   634  0D9D                     	;# 
   635  0D9E                     	;# 
   636  0D9F                     	;# 
   637  0DA0                     	;# 
   638  0DA1                     	;# 
   639  0DA1                     	;# 
   640  0DA2                     	;# 
   641  0DA3                     	;# 
   642  0DA3                     	;# 
   643  0DA4                     	;# 
   644  0DA5                     	;# 
   645  0DA5                     	;# 
   646  0DA6                     	;# 
   647  0DA7                     	;# 
   648  0DA7                     	;# 
   649  0DA8                     	;# 
   650  0DA9                     	;# 
   651  0DA9                     	;# 
   652  0DAA                     	;# 
   653  0DAB                     	;# 
   654  0DAC                     	;# 
   655  0DAC                     	;# 
   656  0DAD                     	;# 
   657  0DAD                     	;# 
   658  0DAE                     	;# 
   659  0DAF                     	;# 
   660  0DB0                     	;# 
   661  0DB1                     	;# 
   662  0DB1                     	;# 
   663  0DB2                     	;# 
   664  0DB3                     	;# 
   665  0DB3                     	;# 
   666  0DB4                     	;# 
   667  0DB5                     	;# 
   668  0DB5                     	;# 
   669  0DB6                     	;# 
   670  0DB7                     	;# 
   671  0DB7                     	;# 
   672  0DB8                     	;# 
   673  0DB9                     	;# 
   674  0DB9                     	;# 
   675  0DBA                     	;# 
   676  0DBB                     	;# 
   677  0DBC                     	;# 
   678  0DBC                     	;# 
   679  0DBD                     	;# 
   680  0DBD                     	;# 
   681  0DBE                     	;# 
   682  0DBF                     	;# 
   683  0DC0                     	;# 
   684  0FE4                     	;# 
   685  0FE5                     	;# 
   686  0FE6                     	;# 
   687  0FE7                     	;# 
   688  0FE8                     	;# 
   689  0FE8                     	;# 
   690  0FE9                     	;# 
   691  0FEA                     	;# 
   692  0FEA                     	;# 
   693  0FEB                     	;# 
   694  0FED                     	;# 
   695  0FEE                     	;# 
   696  0FEE                     	;# 
   697  0FEF                     	;# 
   698  0000                     	;# 
   699  0001                     	;# 
   700  0002                     	;# 
   701  0003                     	;# 
   702  0004                     	;# 
   703  0005                     	;# 
   704  0006                     	;# 
   705  0007                     	;# 
   706  0008                     	;# 
   707  0009                     	;# 
   708  000A                     	;# 
   709  000B                     	;# 
   710  000C                     	;# 
   711  0011                     	;# 
   712  0012                     	;# 
   713  0013                     	;# 
   714  0015                     	;# 
   715  0016                     	;# 
   716  0016                     	;# 
   717  0017                     	;# 
   718  0018                     	;# 
   719  0019                     	;# 
   720  001A                     	;# 
   721  001B                     	;# 
   722  001C                     	;# 
   723  008C                     	;# 
   724  0091                     	;# 
   725  0092                     	;# 
   726  0093                     	;# 
   727  0095                     	;# 
   728  0096                     	;# 
   729  0097                     	;# 
   730  0098                     	;# 
   731  0099                     	;# 
   732  009A                     	;# 
   733  009B                     	;# 
   734  009B                     	;# 
   735  009C                     	;# 
   736  009D                     	;# 
   737  009E                     	;# 
   738  009F                     	;# 
   739  010C                     	;# 
   740  0111                     	;# 
   741  0112                     	;# 
   742  0115                     	;# 
   743  0116                     	;# 
   744  0117                     	;# 
   745  0118                     	;# 
   746  0119                     	;# 
   747  011D                     	;# 
   748  011D                     	;# 
   749  018C                     	;# 
   750  0191                     	;# 
   751  0191                     	;# 
   752  0192                     	;# 
   753  0193                     	;# 
   754  0193                     	;# 
   755  0194                     	;# 
   756  0195                     	;# 
   757  0196                     	;# 
   758  0197                     	;# 
   759  020C                     	;# 
   760  028C                     	;# 
   761  030C                     	;# 
   762  038C                     	;# 
   763  0391                     	;# 
   764  0392                     	;# 
   765  0393                     	;# 
   766  0691                     	;# 
   767  0692                     	;# 
   768  0693                     	;# 
   769  0694                     	;# 
   770  0695                     	;# 
   771  0D8E                     	;# 
   772  0D8F                     	;# 
   773  0D90                     	;# 
   774  0D91                     	;# 
   775  0D91                     	;# 
   776  0D92                     	;# 
   777  0D93                     	;# 
   778  0D93                     	;# 
   779  0D94                     	;# 
   780  0D95                     	;# 
   781  0D95                     	;# 
   782  0D96                     	;# 
   783  0D97                     	;# 
   784  0D97                     	;# 
   785  0D98                     	;# 
   786  0D99                     	;# 
   787  0D99                     	;# 
   788  0D9A                     	;# 
   789  0D9B                     	;# 
   790  0D9C                     	;# 
   791  0D9C                     	;# 
   792  0D9D                     	;# 
   793  0D9D                     	;# 
   794  0D9E                     	;# 
   795  0D9F                     	;# 
   796  0DA0                     	;# 
   797  0DA1                     	;# 
   798  0DA1                     	;# 
   799  0DA2                     	;# 
   800  0DA3                     	;# 
   801  0DA3                     	;# 
   802  0DA4                     	;# 
   803  0DA5                     	;# 
   804  0DA5                     	;# 
   805  0DA6                     	;# 
   806  0DA7                     	;# 
   807  0DA7                     	;# 
   808  0DA8                     	;# 
   809  0DA9                     	;# 
   810  0DA9                     	;# 
   811  0DAA                     	;# 
   812  0DAB                     	;# 
   813  0DAC                     	;# 
   814  0DAC                     	;# 
   815  0DAD                     	;# 
   816  0DAD                     	;# 
   817  0DAE                     	;# 
   818  0DAF                     	;# 
   819  0DB0                     	;# 
   820  0DB1                     	;# 
   821  0DB1                     	;# 
   822  0DB2                     	;# 
   823  0DB3                     	;# 
   824  0DB3                     	;# 
   825  0DB4                     	;# 
   826  0DB5                     	;# 
   827  0DB5                     	;# 
   828  0DB6                     	;# 
   829  0DB7                     	;# 
   830  0DB7                     	;# 
   831  0DB8                     	;# 
   832  0DB9                     	;# 
   833  0DB9                     	;# 
   834  0DBA                     	;# 
   835  0DBB                     	;# 
   836  0DBC                     	;# 
   837  0DBC                     	;# 
   838  0DBD                     	;# 
   839  0DBD                     	;# 
   840  0DBE                     	;# 
   841  0DBF                     	;# 
   842  0DC0                     	;# 
   843  0FE4                     	;# 
   844  0FE5                     	;# 
   845  0FE6                     	;# 
   846  0FE7                     	;# 
   847  0FE8                     	;# 
   848  0FE8                     	;# 
   849  0FE9                     	;# 
   850  0FEA                     	;# 
   851  0FEA                     	;# 
   852  0FEB                     	;# 
   853  0FED                     	;# 
   854  0FEE                     	;# 
   855  0FEE                     	;# 
   856  0FEF                     	;# 
   857                           
   858                           	psect	nvCOMMON
   859  007A                     __pnvCOMMON:
   860  007A                     _timer1ReloadVal:
   861  007A                     	ds	2
   862                           
   863                           	psect	nvBANK0
   864  0020                     __pnvBANK0:
   865  0020                     _TMR1_InterruptHandler:
   866  0020                     	ds	2
   867  000C                     _PORTAbits	set	12
   868  000B                     _INTCONbits	set	11
   869  0019                     _T1GCONbits	set	25
   870  0018                     _T1CONbits	set	24
   871  0018                     _T1CON	set	24
   872  0011                     _PIR1bits	set	17
   873  0016                     _TMR1L	set	22
   874  0017                     _TMR1H	set	23
   875  0019                     _T1GCON	set	25
   876  0091                     _PIE1bits	set	145
   877  0095                     _OPTION_REGbits	set	149
   878  008C                     _TRISA	set	140
   879  0097                     _WDTCON	set	151
   880  0098                     _OSCTUNE	set	152
   881  0099                     _OSCCON	set	153
   882  010C                     _LATAbits	set	268
   883  011D                     _APFCON	set	285
   884  010C                     _LATA	set	268
   885  0116                     _BORCON	set	278
   886  018C                     _ANSELA	set	396
   887  020C                     _WPUA	set	524
   888  028C                     _ODCONA	set	652
   889  030C                     _SLRCONA	set	780
   890  038C                     _INLVLA	set	908
   891                           
   892                           	psect	cinit
   893  001A                     start_initialization:	
   894                           ; #config settings
   895                           
   896  001A                     __initialization:
   897                           
   898                           ; Clear objects allocated to COMMON
   899  001A  01F0               	clrf	__pbssCOMMON& (0+127)
   900  001B  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   901  001C  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   902  001D  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   903  001E  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   904  001F                     end_of_initialization:	
   905                           ;End of C runtime variable initialization code
   906                           
   907  001F                     __end_of__initialization:
   908  001F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   909  0020  0020               	movlb	0
   910  0021  2822               	ljmp	_main	;jump to C main() function
   911                           
   912                           	psect	bssCOMMON
   913  0070                     __pbssCOMMON:
   914  0070                     _demandedSecondsTick:
   915  0070                     	ds	2
   916  0072                     _currentSecondsTick:
   917  0072                     	ds	2
   918  0074                     _currentState:
   919  0074                     	ds	1
   920                           
   921                           	psect	cstackCOMMON
   922  0075                     __pcstackCOMMON:
   923  0075                     ?_PIN_MANAGER_Initialize:
   924  0075                     ?_OSCILLATOR_Initialize:	
   925                           ; 1 bytes @ 0x0
   926                           
   927  0075                     ?_WDT_Initialize:	
   928                           ; 1 bytes @ 0x0
   929                           
   930  0075                     ?_TMR1_Initialize:	
   931                           ; 1 bytes @ 0x0
   932                           
   933  0075                     ?_TMR1_DefaultInterruptHandler:	
   934                           ; 1 bytes @ 0x0
   935                           
   936  0075                     ??_TMR1_DefaultInterruptHandler:	
   937                           ; 1 bytes @ 0x0
   938                           
   939  0075                     ?_TMR1_CallBack:	
   940                           ; 1 bytes @ 0x0
   941                           
   942  0075                     ??_TMR1_CallBack:	
   943                           ; 1 bytes @ 0x0
   944                           
   945  0075                     ?_secondsTick:	
   946                           ; 1 bytes @ 0x0
   947                           
   948  0075                     ??_secondsTick:	
   949                           ; 1 bytes @ 0x0
   950                           
   951  0075                     ?_setState:	
   952                           ; 1 bytes @ 0x0
   953                           
   954  0075                     ?_SYSTEM_Initialize:	
   955                           ; 1 bytes @ 0x0
   956                           
   957  0075                     ?_TMR1_StartTimer:	
   958                           ; 1 bytes @ 0x0
   959                           
   960  0075                     ?_TMR1_WriteTimer:	
   961                           ; 1 bytes @ 0x0
   962                           
   963  0075                     ?_TMR1_ISR:	
   964                           ; 1 bytes @ 0x0
   965                           
   966  0075                     ?_main:	
   967                           ; 1 bytes @ 0x0
   968                           
   969  0075                     ?_INTERRUPT_InterruptManager:	
   970                           ; 1 bytes @ 0x0
   971                           
   972  0075                     TMR1_WriteTimer@timerVal:	
   973                           ; 1 bytes @ 0x0
   974                           
   975                           
   976                           ; 2 bytes @ 0x0
   977  0075                     	ds	2
   978  0077                     ??_PIN_MANAGER_Initialize:
   979  0077                     ??_OSCILLATOR_Initialize:	
   980                           ; 1 bytes @ 0x2
   981                           
   982  0077                     ??_WDT_Initialize:	
   983                           ; 1 bytes @ 0x2
   984                           
   985  0077                     ?_TMR1_SetInterruptHandler:	
   986                           ; 1 bytes @ 0x2
   987                           
   988  0077                     ??_setState:	
   989                           ; 1 bytes @ 0x2
   990                           
   991  0077                     ??_TMR1_StartTimer:	
   992                           ; 1 bytes @ 0x2
   993                           
   994  0077                     ??_TMR1_WriteTimer:	
   995                           ; 1 bytes @ 0x2
   996                           
   997  0077                     ??_TMR1_ISR:	
   998                           ; 1 bytes @ 0x2
   999                           
  1000  0077                     ??_INTERRUPT_InterruptManager:	
  1001                           ; 1 bytes @ 0x2
  1002                           
  1003  0077                     TMR1_SetInterruptHandler@InterruptHandler:	
  1004                           ; 1 bytes @ 0x2
  1005                           
  1006                           
  1007                           ; 2 bytes @ 0x2
  1008  0077                     	ds	2
  1009  0079                     ??_TMR1_Initialize:
  1010  0079                     ??_TMR1_SetInterruptHandler:	
  1011                           ; 1 bytes @ 0x4
  1012                           
  1013  0079                     ??_SYSTEM_Initialize:	
  1014                           ; 1 bytes @ 0x4
  1015                           
  1016  0079                     setState@newState:	
  1017                           ; 1 bytes @ 0x4
  1018                           
  1019                           
  1020                           ; 1 bytes @ 0x4
  1021  0079                     	ds	1
  1022                           
  1023                           	psect	cstackBANK0
  1024  0022                     __pcstackBANK0:
  1025  0022                     ??_main:
  1026                           
  1027                           ; 1 bytes @ 0x0
  1028  0022                     	ds	2
  1029                           
  1030                           	psect	maintext
  1031  0022                     __pmaintext:	
  1032 ;;
  1033 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1034 ;;
  1035 ;; *************** function _main *****************
  1036 ;; Defined at:
  1037 ;;		line 68 in file "main.c"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;		None
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;		None
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  1    wreg      void 
  1044 ;; Registers used:
  1045 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1046 ;; Tracked objects:
  1047 ;;		On entry : B1F/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMMON   BANK0   BANK1
  1051 ;;      Params:         0       0       0
  1052 ;;      Locals:         0       0       0
  1053 ;;      Temps:          0       2       0
  1054 ;;      Totals:         0       2       0
  1055 ;;Total ram usage:        2 bytes
  1056 ;; Hardware stack levels required when called:    7
  1057 ;; This function calls:
  1058 ;;		_SYSTEM_Initialize
  1059 ;;		_TMR1_SetInterruptHandler
  1060 ;;		_TMR1_StartTimer
  1061 ;;		_setState
  1062 ;; This function is called by:
  1063 ;;		Startup code after reset
  1064 ;; This function uses a non-reentrant model
  1065 ;;
  1066                           
  1067                           
  1068                           ;psect for function _main
  1069  0022                     _main:
  1070  0022                     l1034:	
  1071                           ;incstack = 0
  1072                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1073                           
  1074                           
  1075                           ;main.c: 71:     SYSTEM_Initialize();
  1076  0022  3181  2109  3180   	fcall	_SYSTEM_Initialize
  1077                           
  1078                           ;main.c: 76:     TMR1_SetInterruptHandler(secondsTick);
  1079  0025  30F8               	movlw	low _secondsTick
  1080  0026  00F7               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  1081  0027  3000               	movlw	high _secondsTick
  1082  0028  00F8               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  1083  0029  3181  2130  3180   	fcall	_TMR1_SetInterruptHandler
  1084  002C                     l1036:
  1085                           
  1086                           ;main.c: 79:     (INTCONbits.GIE = 1);
  1087  002C  178B               	bsf	11,7	;volatile
  1088  002D                     l1038:
  1089                           
  1090                           ;main.c: 90:     TMR1_StartTimer();
  1091  002D  3181  2140  3180   	fcall	_TMR1_StartTimer
  1092  0030                     l1040:
  1093                           
  1094                           ;main.c: 92:     setState( STATE_WAIT_TIME);
  1095  0030  3001               	movlw	1
  1096  0031  3180  2079  3180   	fcall	_setState
  1097  0034  2861               	goto	l1054
  1098  0035                     l143:	
  1099                           ;main.c: 98:         {;main.c: 99:             case STATE_WAIT_TIME:
  1100                           
  1101                           
  1102                           ;main.c: 101:                 if(PORTAbits.RA5 && (currentSecondsTick >= demandedSeconds
      +                          Tick))
  1103  0035  1E8C               	btfss	12,5	;volatile
  1104  0036  2838               	goto	u241
  1105  0037  2839               	goto	u240
  1106  0038                     u241:
  1107  0038  2861               	goto	l142
  1108  0039                     u240:
  1109  0039                     l1042:
  1110  0039  0871               	movf	_demandedSecondsTick+1,w
  1111  003A  0273               	subwf	_currentSecondsTick+1,w
  1112  003B  1D03               	skipz
  1113  003C  283F               	goto	u255
  1114  003D  0870               	movf	_demandedSecondsTick,w
  1115  003E  0272               	subwf	_currentSecondsTick,w
  1116  003F                     u255:
  1117  003F  1C03               	skipc
  1118  0040  2842               	goto	u251
  1119  0041  2843               	goto	u250
  1120  0042                     u251:
  1121  0042  2861               	goto	l142
  1122  0043                     u250:
  1123  0043                     l1044:
  1124                           
  1125                           ;main.c: 102:                 {;main.c: 103:                     setState(STATE_OPEN_VAL
      +                          VE);
  1126  0043  3002               	movlw	2
  1127  0044  3180  2079  3180   	fcall	_setState
  1128  0047  2861               	goto	l1054
  1129  0048                     l146:	
  1130                           ;main.c: 107:             case STATE_OPEN_VALVE:
  1131                           
  1132                           
  1133                           ;main.c: 108:                 if(PORTAbits.RA4)
  1134  0048  1E0C               	btfss	12,4	;volatile
  1135  0049  284B               	goto	u261
  1136  004A  284C               	goto	u260
  1137  004B                     u261:
  1138  004B  2861               	goto	l142
  1139  004C                     u260:
  1140  004C                     l1046:
  1141                           
  1142                           ;main.c: 109:                 {;main.c: 110:                     setState(STATE_CLOSE_VA
      +                          LVE);
  1143  004C  3003               	movlw	3
  1144  004D  3180  2079  3180   	fcall	_setState
  1145  0050  2861               	goto	l1054
  1146  0051                     l1048:
  1147                           
  1148                           ;main.c: 116:                 if(currentSecondsTick >= demandedSecondsTick)
  1149  0051  0871               	movf	_demandedSecondsTick+1,w
  1150  0052  0273               	subwf	_currentSecondsTick+1,w
  1151  0053  1D03               	skipz
  1152  0054  2857               	goto	u275
  1153  0055  0870               	movf	_demandedSecondsTick,w
  1154  0056  0272               	subwf	_currentSecondsTick,w
  1155  0057                     u275:
  1156  0057  1C03               	skipc
  1157  0058  285A               	goto	u271
  1158  0059  285B               	goto	u270
  1159  005A                     u271:
  1160  005A  2861               	goto	l142
  1161  005B                     u270:
  1162  005B                     l1050:
  1163                           
  1164                           ;main.c: 117:                 {;main.c: 118:                     setState(STATE_END);
  1165  005B  3004               	movlw	4
  1166  005C  3180  2079  3180   	fcall	_setState
  1167  005F  2861               	goto	l1054
  1168  0060                     l151:	
  1169                           ;main.c: 123:                 while(1);
  1170                           
  1171  0060  2860               	goto	l151
  1172  0061                     l142:
  1173  0061                     l1054:
  1174  0061  0874               	movf	_currentState,w
  1175  0062  0020               	movlb	0	; select bank0
  1176  0063  00A2               	movwf	??_main
  1177  0064  01A3               	clrf	??_main+1
  1178                           
  1179                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1180                           ; Switch size 1, requested type "simple"
  1181                           ; Number of cases is 1, Range of values is 0 to 0
  1182                           ; switch strategies available:
  1183                           ; Name         Instructions Cycles
  1184                           ; simple_byte            4     3 (average)
  1185                           ; direct_byte            8     6 (fixed)
  1186                           ; jumptable            260     6 (fixed)
  1187                           ;	Chosen strategy is simple_byte
  1188  0065  0823               	movf	??_main+1,w
  1189  0066  3A00               	xorlw	0	; case 0
  1190  0067  1903               	skipnz
  1191  0068  286A               	goto	l1112
  1192  0069  2861               	goto	l1054
  1193  006A                     l1112:
  1194                           
  1195                           ; Switch size 1, requested type "simple"
  1196                           ; Number of cases is 4, Range of values is 1 to 4
  1197                           ; switch strategies available:
  1198                           ; Name         Instructions Cycles
  1199                           ; simple_byte           13     7 (average)
  1200                           ; direct_byte           17     9 (fixed)
  1201                           ; jumptable            263     9 (fixed)
  1202                           ;	Chosen strategy is simple_byte
  1203  006A  0822               	movf	??_main,w
  1204  006B  3A01               	xorlw	1	; case 1
  1205  006C  1903               	skipnz
  1206  006D  2835               	goto	l143
  1207  006E  3A03               	xorlw	3	; case 2
  1208  006F  1903               	skipnz
  1209  0070  2848               	goto	l146
  1210  0071  3A01               	xorlw	1	; case 3
  1211  0072  1903               	skipnz
  1212  0073  2851               	goto	l1048
  1213  0074  3A07               	xorlw	7	; case 4
  1214  0075  1903               	skipnz
  1215  0076  2860               	goto	l151
  1216  0077  2861               	goto	l1054
  1217  0078  2819               	ljmp	start
  1218  0079                     __end_of_main:
  1219                           
  1220                           	psect	text1
  1221  0079                     __ptext1:	
  1222 ;; *************** function _setState *****************
  1223 ;; Defined at:
  1224 ;;		line 134 in file "main.c"
  1225 ;; Parameters:    Size  Location     Type
  1226 ;;  newState        1    wreg     enum E2970
  1227 ;; Auto vars:     Size  Location     Type
  1228 ;;  newState        1    4[COMMON] enum E2970
  1229 ;; Return value:  Size  Location     Type
  1230 ;;                  1    wreg      void 
  1231 ;; Registers used:
  1232 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1233 ;; Tracked objects:
  1234 ;;		On entry : 0/0
  1235 ;;		On exit  : 0/0
  1236 ;;		Unchanged: 0/0
  1237 ;; Data sizes:     COMMON   BANK0   BANK1
  1238 ;;      Params:         0       0       0
  1239 ;;      Locals:         1       0       0
  1240 ;;      Temps:          2       0       0
  1241 ;;      Totals:         3       0       0
  1242 ;;Total ram usage:        3 bytes
  1243 ;; Hardware stack levels used:    1
  1244 ;; Hardware stack levels required when called:    4
  1245 ;; This function calls:
  1246 ;;		Nothing
  1247 ;; This function is called by:
  1248 ;;		_main
  1249 ;; This function uses a non-reentrant model
  1250 ;;
  1251                           
  1252                           
  1253                           ;psect for function _setState
  1254  0079                     _setState:
  1255                           
  1256                           ;incstack = 0
  1257                           ; Regs used in _setState: [wreg-fsr0h+status,2+status,0]
  1258                           ;setState@newState stored from wreg
  1259  0079  00F9               	movwf	setState@newState
  1260  007A                     l800:
  1261                           
  1262                           ;main.c: 134: void setState(states_t newState);main.c: 135: {;main.c: 136:     if(newSta
      +                          te == currentState)
  1263  007A  0879               	movf	setState@newState,w
  1264  007B  0674               	xorwf	_currentState,w
  1265  007C  1D03               	skipz
  1266  007D  287F               	goto	u51
  1267  007E  2880               	goto	u50
  1268  007F                     u51:
  1269  007F  289D               	goto	l810
  1270  0080                     u50:
  1271  0080  28B7               	goto	l160
  1272  0081                     l163:	
  1273                           ;main.c: 143:             do { LATAbits.LATA1 = 0; } while(0);
  1274                           
  1275  0081  0022               	movlb	2	; select bank2
  1276  0082  108C               	bcf	12,1	;volatile
  1277  0083                     l165:	
  1278                           ;main.c: 144:             do { LATAbits.LATA2 = 0; } while(0);
  1279                           
  1280  0083  110C               	bcf	12,2	;volatile
  1281  0084                     l804:
  1282                           
  1283                           ;main.c: 145:             demandedSecondsTick = currentSecondsTick + 1;
  1284  0084  0872               	movf	_currentSecondsTick,w
  1285  0085  3E01               	addlw	1
  1286  0086  00F0               	movwf	_demandedSecondsTick
  1287  0087  3000               	movlw	0
  1288  0088  3D73               	addwfc	_currentSecondsTick+1,w
  1289  0089  00F1               	movwf	_demandedSecondsTick+1
  1290                           
  1291                           ;main.c: 146:             break;
  1292  008A  28B3               	goto	l812
  1293  008B                     l169:	
  1294                           ;main.c: 149:             do { LATAbits.LATA1 = 1; } while(0);
  1295                           
  1296  008B  0022               	movlb	2	; select bank2
  1297  008C  148C               	bsf	12,1	;volatile
  1298  008D                     l171:	
  1299                           ;main.c: 150:             do { LATAbits.LATA2 = 0; } while(0);
  1300                           
  1301  008D  110C               	bcf	12,2	;volatile
  1302  008E  28B3               	goto	l812
  1303  008F                     l174:	
  1304                           ;main.c: 154:             do { LATAbits.LATA1 = 0; } while(0);
  1305                           
  1306  008F  0022               	movlb	2	; select bank2
  1307  0090  108C               	bcf	12,1	;volatile
  1308  0091                     l176:	
  1309                           ;main.c: 155:             do { LATAbits.LATA2 = 1; } while(0);
  1310                           
  1311  0091  150C               	bsf	12,2	;volatile
  1312  0092                     l806:
  1313                           
  1314                           ;main.c: 156:             demandedSecondsTick = currentSecondsTick + 30;
  1315  0092  0872               	movf	_currentSecondsTick,w
  1316  0093  3E1E               	addlw	30
  1317  0094  00F0               	movwf	_demandedSecondsTick
  1318  0095  3000               	movlw	0
  1319  0096  3D73               	addwfc	_currentSecondsTick+1,w
  1320  0097  00F1               	movwf	_demandedSecondsTick+1
  1321                           
  1322                           ;main.c: 157:             break;
  1323  0098  28B3               	goto	l812
  1324  0099                     l179:	
  1325                           ;main.c: 160:             do { LATAbits.LATA1 = 0; } while(0);
  1326                           
  1327  0099  0022               	movlb	2	; select bank2
  1328  009A  108C               	bcf	12,1	;volatile
  1329  009B                     l181:	
  1330                           ;main.c: 161:             do { LATAbits.LATA2 = 0; } while(0);
  1331                           
  1332  009B  110C               	bcf	12,2	;volatile
  1333  009C  28B3               	goto	l812
  1334  009D                     l810:
  1335  009D  0879               	movf	setState@newState,w
  1336  009E  00F7               	movwf	??_setState
  1337  009F  01F8               	clrf	??_setState+1
  1338                           
  1339                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1340                           ; Switch size 1, requested type "simple"
  1341                           ; Number of cases is 1, Range of values is 0 to 0
  1342                           ; switch strategies available:
  1343                           ; Name         Instructions Cycles
  1344                           ; simple_byte            4     3 (average)
  1345                           ; direct_byte            8     6 (fixed)
  1346                           ; jumptable            260     6 (fixed)
  1347                           ;	Chosen strategy is simple_byte
  1348  00A0  0878               	movf	??_setState+1,w
  1349  00A1  3A00               	xorlw	0	; case 0
  1350  00A2  1903               	skipnz
  1351  00A3  28A5               	goto	l1114
  1352  00A4  28B3               	goto	l812
  1353  00A5                     l1114:
  1354                           
  1355                           ; Switch size 1, requested type "simple"
  1356                           ; Number of cases is 4, Range of values is 1 to 4
  1357                           ; switch strategies available:
  1358                           ; Name         Instructions Cycles
  1359                           ; simple_byte           13     7 (average)
  1360                           ; direct_byte           17     9 (fixed)
  1361                           ; jumptable            263     9 (fixed)
  1362                           ;	Chosen strategy is simple_byte
  1363  00A5  0877               	movf	??_setState,w
  1364  00A6  3A01               	xorlw	1	; case 1
  1365  00A7  1903               	skipnz
  1366  00A8  2881               	goto	l163
  1367  00A9  3A03               	xorlw	3	; case 2
  1368  00AA  1903               	skipnz
  1369  00AB  288B               	goto	l169
  1370  00AC  3A01               	xorlw	1	; case 3
  1371  00AD  1903               	skipnz
  1372  00AE  288F               	goto	l174
  1373  00AF  3A07               	xorlw	7	; case 4
  1374  00B0  1903               	skipnz
  1375  00B1  2899               	goto	l179
  1376  00B2  28B3               	goto	l812
  1377  00B3                     l812:
  1378                           
  1379                           ;main.c: 165:     currentState = newState;
  1380  00B3  0879               	movf	setState@newState,w
  1381  00B4  00F7               	movwf	??_setState
  1382  00B5  0877               	movf	??_setState,w
  1383  00B6  00F4               	movwf	_currentState
  1384  00B7                     l160:
  1385  00B7  0008               	return
  1386  00B8                     __end_of_setState:
  1387                           
  1388                           	psect	text2
  1389  0140                     __ptext2:	
  1390 ;; *************** function _TMR1_StartTimer *****************
  1391 ;; Defined at:
  1392 ;;		line 93 in file "mcc_generated_files/tmr1.c"
  1393 ;; Parameters:    Size  Location     Type
  1394 ;;		None
  1395 ;; Auto vars:     Size  Location     Type
  1396 ;;		None
  1397 ;; Return value:  Size  Location     Type
  1398 ;;                  1    wreg      void 
  1399 ;; Registers used:
  1400 ;;		None
  1401 ;; Tracked objects:
  1402 ;;		On entry : 0/0
  1403 ;;		On exit  : 0/0
  1404 ;;		Unchanged: 0/0
  1405 ;; Data sizes:     COMMON   BANK0   BANK1
  1406 ;;      Params:         0       0       0
  1407 ;;      Locals:         0       0       0
  1408 ;;      Temps:          0       0       0
  1409 ;;      Totals:         0       0       0
  1410 ;;Total ram usage:        0 bytes
  1411 ;; Hardware stack levels used:    1
  1412 ;; Hardware stack levels required when called:    4
  1413 ;; This function calls:
  1414 ;;		Nothing
  1415 ;; This function is called by:
  1416 ;;		_main
  1417 ;; This function uses a non-reentrant model
  1418 ;;
  1419                           
  1420                           
  1421                           ;psect for function _TMR1_StartTimer
  1422  0140                     _TMR1_StartTimer:
  1423  0140                     l794:	
  1424                           ;incstack = 0
  1425                           ; Regs used in _TMR1_StartTimer: []
  1426                           
  1427                           
  1428                           ;mcc_generated_files/tmr1.c: 96:     T1CONbits.TMR1ON = 1;
  1429  0140  0020               	movlb	0	; select bank0
  1430  0141  1418               	bsf	24,0	;volatile
  1431  0142                     l81:
  1432  0142  0008               	return
  1433  0143                     __end_of_TMR1_StartTimer:
  1434                           
  1435                           	psect	text3
  1436  0109                     __ptext3:	
  1437 ;; *************** function _SYSTEM_Initialize *****************
  1438 ;; Defined at:
  1439 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1440 ;; Parameters:    Size  Location     Type
  1441 ;;		None
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;		None
  1444 ;; Return value:  Size  Location     Type
  1445 ;;                  1    wreg      void 
  1446 ;; Registers used:
  1447 ;;		wreg, status,2, status,0, pclath, cstack
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMMON   BANK0   BANK1
  1453 ;;      Params:         0       0       0
  1454 ;;      Locals:         0       0       0
  1455 ;;      Temps:          0       0       0
  1456 ;;      Totals:         0       0       0
  1457 ;;Total ram usage:        0 bytes
  1458 ;; Hardware stack levels used:    1
  1459 ;; Hardware stack levels required when called:    6
  1460 ;; This function calls:
  1461 ;;		_OSCILLATOR_Initialize
  1462 ;;		_PIN_MANAGER_Initialize
  1463 ;;		_TMR1_Initialize
  1464 ;;		_WDT_Initialize
  1465 ;; This function is called by:
  1466 ;;		_main
  1467 ;; This function uses a non-reentrant model
  1468 ;;
  1469                           
  1470                           
  1471                           ;psect for function _SYSTEM_Initialize
  1472  0109                     _SYSTEM_Initialize:
  1473  0109                     l946:	
  1474                           ;incstack = 0
  1475                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1476                           
  1477                           
  1478                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1479  0109  3180  20D0  3181   	fcall	_PIN_MANAGER_Initialize
  1480  010C                     l948:
  1481                           
  1482                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1483  010C  3181  2136  3181   	fcall	_OSCILLATOR_Initialize
  1484  010F                     l950:
  1485                           
  1486                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  1487  010F  3181  213C  3181   	fcall	_WDT_Initialize
  1488  0112                     l952:
  1489                           
  1490                           ;mcc_generated_files/mcc.c: 56:     TMR1_Initialize();
  1491  0112  3180  20B8  3181   	fcall	_TMR1_Initialize
  1492  0115                     l19:
  1493  0115  0008               	return
  1494  0116                     __end_of_SYSTEM_Initialize:
  1495                           
  1496                           	psect	text4
  1497  013C                     __ptext4:	
  1498 ;; *************** function _WDT_Initialize *****************
  1499 ;; Defined at:
  1500 ;;		line 69 in file "mcc_generated_files/mcc.c"
  1501 ;; Parameters:    Size  Location     Type
  1502 ;;		None
  1503 ;; Auto vars:     Size  Location     Type
  1504 ;;		None
  1505 ;; Return value:  Size  Location     Type
  1506 ;;                  1    wreg      void 
  1507 ;; Registers used:
  1508 ;;		wreg
  1509 ;; Tracked objects:
  1510 ;;		On entry : 0/0
  1511 ;;		On exit  : 0/0
  1512 ;;		Unchanged: 0/0
  1513 ;; Data sizes:     COMMON   BANK0   BANK1
  1514 ;;      Params:         0       0       0
  1515 ;;      Locals:         0       0       0
  1516 ;;      Temps:          0       0       0
  1517 ;;      Totals:         0       0       0
  1518 ;;Total ram usage:        0 bytes
  1519 ;; Hardware stack levels used:    1
  1520 ;; Hardware stack levels required when called:    4
  1521 ;; This function calls:
  1522 ;;		Nothing
  1523 ;; This function is called by:
  1524 ;;		_SYSTEM_Initialize
  1525 ;; This function uses a non-reentrant model
  1526 ;;
  1527                           
  1528                           
  1529                           ;psect for function _WDT_Initialize
  1530  013C                     _WDT_Initialize:
  1531  013C                     l750:	
  1532                           ;incstack = 0
  1533                           ; Regs used in _WDT_Initialize: [wreg]
  1534                           
  1535                           
  1536                           ;mcc_generated_files/mcc.c: 72:     WDTCON = 0x16;
  1537  013C  3016               	movlw	22
  1538  013D  0021               	movlb	1	; select bank1
  1539  013E  0097               	movwf	23	;volatile
  1540  013F                     l25:
  1541  013F  0008               	return
  1542  0140                     __end_of_WDT_Initialize:
  1543                           
  1544                           	psect	text5
  1545  00B8                     __ptext5:	
  1546 ;; *************** function _TMR1_Initialize *****************
  1547 ;; Defined at:
  1548 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  1549 ;; Parameters:    Size  Location     Type
  1550 ;;		None
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;		None
  1553 ;; Return value:  Size  Location     Type
  1554 ;;                  1    wreg      void 
  1555 ;; Registers used:
  1556 ;;		wreg, status,2, status,0, pclath, cstack
  1557 ;; Tracked objects:
  1558 ;;		On entry : 0/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMMON   BANK0   BANK1
  1562 ;;      Params:         0       0       0
  1563 ;;      Locals:         0       0       0
  1564 ;;      Temps:          0       0       0
  1565 ;;      Totals:         0       0       0
  1566 ;;Total ram usage:        0 bytes
  1567 ;; Hardware stack levels used:    1
  1568 ;; Hardware stack levels required when called:    5
  1569 ;; This function calls:
  1570 ;;		_TMR1_SetInterruptHandler
  1571 ;; This function is called by:
  1572 ;;		_SYSTEM_Initialize
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           
  1577                           ;psect for function _TMR1_Initialize
  1578  00B8                     _TMR1_Initialize:
  1579  00B8                     l912:	
  1580                           ;incstack = 0
  1581                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1582                           
  1583                           
  1584                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  1585  00B8  0020               	movlb	0	; select bank0
  1586  00B9  0199               	clrf	25	;volatile
  1587  00BA                     l914:
  1588                           
  1589                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x86;
  1590  00BA  3086               	movlw	134
  1591  00BB  0097               	movwf	23	;volatile
  1592  00BC                     l916:
  1593                           
  1594                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xE8;
  1595  00BC  30E8               	movlw	232
  1596  00BD  0096               	movwf	22	;volatile
  1597  00BE                     l918:
  1598                           
  1599                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  1600  00BE  1011               	bcf	17,0	;volatile
  1601  00BF                     l920:
  1602                           
  1603                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  1604  00BF  0817               	movf	23,w	;volatile
  1605  00C0  00FB               	movwf	_timer1ReloadVal+1	;volatile
  1606  00C1  0816               	movf	22,w	;volatile
  1607  00C2  00FA               	movwf	_timer1ReloadVal	;volatile
  1608  00C3                     l922:
  1609                           
  1610                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  1611  00C3  0021               	movlb	1	; select bank1
  1612  00C4  1411               	bsf	17,0	;volatile
  1613  00C5                     l924:
  1614                           
  1615                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  1616  00C5  3043               	movlw	low _TMR1_DefaultInterruptHandler
  1617  00C6  00F7               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  1618  00C7  3001               	movlw	high _TMR1_DefaultInterruptHandler
  1619  00C8  00F8               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  1620  00C9  3181  2130  3180   	fcall	_TMR1_SetInterruptHandler
  1621  00CC                     l926:
  1622                           
  1623                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0xC1;
  1624  00CC  30C1               	movlw	193
  1625  00CD  0020               	movlb	0	; select bank0
  1626  00CE  0098               	movwf	24	;volatile
  1627  00CF                     l78:
  1628  00CF  0008               	return
  1629  00D0                     __end_of_TMR1_Initialize:
  1630                           
  1631                           	psect	text6
  1632  0130                     __ptext6:	
  1633 ;; *************** function _TMR1_SetInterruptHandler *****************
  1634 ;; Defined at:
  1635 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  1636 ;; Parameters:    Size  Location     Type
  1637 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  1638 ;;		 -> secondsTick(1), TMR1_DefaultInterruptHandler(1), 
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;		None
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  1    wreg      void 
  1643 ;; Registers used:
  1644 ;;		wreg
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMMON   BANK0   BANK1
  1650 ;;      Params:         2       0       0
  1651 ;;      Locals:         0       0       0
  1652 ;;      Temps:          0       0       0
  1653 ;;      Totals:         2       0       0
  1654 ;;Total ram usage:        2 bytes
  1655 ;; Hardware stack levels used:    1
  1656 ;; Hardware stack levels required when called:    4
  1657 ;; This function calls:
  1658 ;;		Nothing
  1659 ;; This function is called by:
  1660 ;;		_TMR1_Initialize
  1661 ;;		_main
  1662 ;; This function uses a non-reentrant model
  1663 ;;
  1664                           
  1665                           
  1666                           ;psect for function _TMR1_SetInterruptHandler
  1667  0130                     _TMR1_SetInterruptHandler:
  1668  0130                     l906:	
  1669                           ;incstack = 0
  1670                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  1671                           
  1672                           
  1673                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  1674  0130  0878               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  1675  0131  0020               	movlb	0	; select bank0
  1676  0132  00A1               	movwf	_TMR1_InterruptHandler+1
  1677  0133  0877               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  1678  0134  00A0               	movwf	_TMR1_InterruptHandler
  1679  0135                     l111:
  1680  0135  0008               	return
  1681  0136                     __end_of_TMR1_SetInterruptHandler:
  1682                           
  1683                           	psect	text7
  1684  00D0                     __ptext7:	
  1685 ;; *************** function _PIN_MANAGER_Initialize *****************
  1686 ;; Defined at:
  1687 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;		None
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;		None
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  1    wreg      void 
  1694 ;; Registers used:
  1695 ;;		wreg, status,2
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMMON   BANK0   BANK1
  1701 ;;      Params:         0       0       0
  1702 ;;      Locals:         0       0       0
  1703 ;;      Temps:          0       0       0
  1704 ;;      Totals:         0       0       0
  1705 ;;Total ram usage:        0 bytes
  1706 ;; Hardware stack levels used:    1
  1707 ;; Hardware stack levels required when called:    4
  1708 ;; This function calls:
  1709 ;;		Nothing
  1710 ;; This function is called by:
  1711 ;;		_SYSTEM_Initialize
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714                           
  1715                           
  1716                           ;psect for function _PIN_MANAGER_Initialize
  1717  00D0                     _PIN_MANAGER_Initialize:
  1718  00D0                     l736:	
  1719                           ;incstack = 0
  1720                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1721                           
  1722                           
  1723                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1724  00D0  0022               	movlb	2	; select bank2
  1725  00D1  018C               	clrf	12	;volatile
  1726  00D2                     l738:
  1727                           
  1728                           ;mcc_generated_files/pin_manager.c: 65:     TRISA = 0x39;
  1729  00D2  3039               	movlw	57
  1730  00D3  0021               	movlb	1	; select bank1
  1731  00D4  008C               	movwf	12	;volatile
  1732  00D5                     l740:
  1733                           
  1734                           ;mcc_generated_files/pin_manager.c: 70:     ANSELA = 0x07;
  1735  00D5  3007               	movlw	7
  1736  00D6  0023               	movlb	3	; select bank3
  1737  00D7  008C               	movwf	12	;volatile
  1738                           
  1739                           ;mcc_generated_files/pin_manager.c: 75:     WPUA = 0x00;
  1740  00D8  0024               	movlb	4	; select bank4
  1741  00D9  018C               	clrf	12	;volatile
  1742  00DA                     l742:
  1743                           
  1744                           ;mcc_generated_files/pin_manager.c: 76:     OPTION_REGbits.nWPUEN = 1;
  1745  00DA  0021               	movlb	1	; select bank1
  1746  00DB  1795               	bsf	21,7	;volatile
  1747                           
  1748                           ;mcc_generated_files/pin_manager.c: 81:     ODCONA = 0x00;
  1749  00DC  0025               	movlb	5	; select bank5
  1750  00DD  018C               	clrf	12	;volatile
  1751  00DE                     l744:
  1752                           
  1753                           ;mcc_generated_files/pin_manager.c: 86:     SLRCONA = 0x37;
  1754  00DE  3037               	movlw	55
  1755  00DF  0026               	movlb	6	; select bank6
  1756  00E0  008C               	movwf	12	;volatile
  1757  00E1                     l746:
  1758                           
  1759                           ;mcc_generated_files/pin_manager.c: 91:     INLVLA = 0x3F;
  1760  00E1  303F               	movlw	63
  1761  00E2  0027               	movlb	7	; select bank7
  1762  00E3  008C               	movwf	12	;volatile
  1763                           
  1764                           ;mcc_generated_files/pin_manager.c: 96:     APFCON = 0x00;
  1765  00E4  0022               	movlb	2	; select bank2
  1766  00E5  019D               	clrf	29	;volatile
  1767  00E6                     l46:
  1768  00E6  0008               	return
  1769  00E7                     __end_of_PIN_MANAGER_Initialize:
  1770                           
  1771                           	psect	text8
  1772  0136                     __ptext8:	
  1773 ;; *************** function _OSCILLATOR_Initialize *****************
  1774 ;; Defined at:
  1775 ;;		line 59 in file "mcc_generated_files/mcc.c"
  1776 ;; Parameters:    Size  Location     Type
  1777 ;;		None
  1778 ;; Auto vars:     Size  Location     Type
  1779 ;;		None
  1780 ;; Return value:  Size  Location     Type
  1781 ;;                  1    wreg      void 
  1782 ;; Registers used:
  1783 ;;		status,2
  1784 ;; Tracked objects:
  1785 ;;		On entry : 0/0
  1786 ;;		On exit  : 0/0
  1787 ;;		Unchanged: 0/0
  1788 ;; Data sizes:     COMMON   BANK0   BANK1
  1789 ;;      Params:         0       0       0
  1790 ;;      Locals:         0       0       0
  1791 ;;      Temps:          0       0       0
  1792 ;;      Totals:         0       0       0
  1793 ;;Total ram usage:        0 bytes
  1794 ;; Hardware stack levels used:    1
  1795 ;; Hardware stack levels required when called:    4
  1796 ;; This function calls:
  1797 ;;		Nothing
  1798 ;; This function is called by:
  1799 ;;		_SYSTEM_Initialize
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           
  1803                           
  1804                           ;psect for function _OSCILLATOR_Initialize
  1805  0136                     _OSCILLATOR_Initialize:
  1806  0136                     l748:	
  1807                           ;incstack = 0
  1808                           ; Regs used in _OSCILLATOR_Initialize: [status,2]
  1809                           
  1810                           
  1811                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x00;
  1812  0136  0021               	movlb	1	; select bank1
  1813  0137  0199               	clrf	25	;volatile
  1814                           
  1815                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
  1816  0138  0198               	clrf	24	;volatile
  1817                           
  1818                           ;mcc_generated_files/mcc.c: 66:     BORCON = 0x00;
  1819  0139  0022               	movlb	2	; select bank2
  1820  013A  0196               	clrf	22	;volatile
  1821  013B                     l22:
  1822  013B  0008               	return
  1823  013C                     __end_of_OSCILLATOR_Initialize:
  1824                           
  1825                           	psect	intentry
  1826  0004                     __pintentry:	
  1827 ;; *************** function _INTERRUPT_InterruptManager *****************
  1828 ;; Defined at:
  1829 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;		None
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;		None
  1834 ;; Return value:  Size  Location     Type
  1835 ;;                  1    wreg      void 
  1836 ;; Registers used:
  1837 ;;		wreg, status,2, status,0, pclath, cstack
  1838 ;; Tracked objects:
  1839 ;;		On entry : 0/0
  1840 ;;		On exit  : 0/0
  1841 ;;		Unchanged: 0/0
  1842 ;; Data sizes:     COMMON   BANK0   BANK1
  1843 ;;      Params:         0       0       0
  1844 ;;      Locals:         0       0       0
  1845 ;;      Temps:          0       0       0
  1846 ;;      Totals:         0       0       0
  1847 ;;Total ram usage:        0 bytes
  1848 ;; Hardware stack levels used:    1
  1849 ;; Hardware stack levels required when called:    3
  1850 ;; This function calls:
  1851 ;;		_TMR1_ISR
  1852 ;; This function is called by:
  1853 ;;		Interrupt level 1
  1854 ;; This function uses a non-reentrant model
  1855 ;;
  1856                           
  1857  0004                     _INTERRUPT_InterruptManager:
  1858                           
  1859                           ;incstack = 0
  1860  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1861                           
  1862                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  1863  0005  3180               	pagesel	$
  1864  0006                     i1l986:
  1865                           
  1866                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  1867  0006  1F0B               	btfss	11,6	;volatile
  1868  0007  2809               	goto	u21_21
  1869  0008  280A               	goto	u21_20
  1870  0009                     u21_21:
  1871  0009  2817               	goto	i1l204
  1872  000A                     u21_20:
  1873  000A                     i1l988:
  1874                           
  1875                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  1876  000A  0021               	movlb	1	; select bank1
  1877  000B  1C11               	btfss	17,0	;volatile
  1878  000C  280E               	goto	u22_21
  1879  000D  280F               	goto	u22_20
  1880  000E                     u22_21:
  1881  000E  2817               	goto	i1l204
  1882  000F                     u22_20:
  1883  000F                     i1l990:
  1884  000F  0020               	movlb	0	; select bank0
  1885  0010  1C11               	btfss	17,0	;volatile
  1886  0011  2813               	goto	u23_21
  1887  0012  2814               	goto	u23_20
  1888  0013                     u23_21:
  1889  0013  2817               	goto	i1l204
  1890  0014                     u23_20:
  1891  0014                     i1l992:
  1892                           
  1893                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR1_ISR();
  1894  0014  3181  2116  3180   	fcall	_TMR1_ISR
  1895  0017                     i1l204:	
  1896                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  1897                           
  1898  0017  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1899  0018  0009               	retfie
  1900  0019                     __end_of_INTERRUPT_InterruptManager:
  1901                           
  1902                           	psect	text10
  1903  0116                     __ptext10:	
  1904 ;; *************** function _TMR1_ISR *****************
  1905 ;; Defined at:
  1906 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;		None
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;		None
  1911 ;; Return value:  Size  Location     Type
  1912 ;;                  1    wreg      void 
  1913 ;; Registers used:
  1914 ;;		wreg, status,2, status,0, pclath, cstack
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMMON   BANK0   BANK1
  1920 ;;      Params:         0       0       0
  1921 ;;      Locals:         0       0       0
  1922 ;;      Temps:          0       0       0
  1923 ;;      Totals:         0       0       0
  1924 ;;Total ram usage:        0 bytes
  1925 ;; Hardware stack levels used:    1
  1926 ;; Hardware stack levels required when called:    2
  1927 ;; This function calls:
  1928 ;;		_TMR1_CallBack
  1929 ;;		_TMR1_WriteTimer
  1930 ;; This function is called by:
  1931 ;;		_INTERRUPT_InterruptManager
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           
  1936                           ;psect for function _TMR1_ISR
  1937  0116                     _TMR1_ISR:
  1938  0116                     i1l954:	
  1939                           ;incstack = 0
  1940                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  1941                           
  1942                           
  1943                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  1944  0116  0020               	movlb	0	; select bank0
  1945  0117  1011               	bcf	17,0	;volatile
  1946  0118                     i1l956:
  1947                           
  1948                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  1949  0118  087B               	movf	_timer1ReloadVal+1,w	;volatile
  1950  0119  00F6               	movwf	TMR1_WriteTimer@timerVal+1
  1951  011A  087A               	movf	_timer1ReloadVal,w	;volatile
  1952  011B  00F5               	movwf	TMR1_WriteTimer@timerVal
  1953  011C  3180  20E7  3181   	fcall	_TMR1_WriteTimer
  1954                           
  1955                           ;mcc_generated_files/tmr1.c: 166:     TMR1_CallBack();
  1956  011F  3181  2123  3181   	fcall	_TMR1_CallBack
  1957  0122                     i1l104:
  1958  0122  0008               	return
  1959  0123                     __end_of_TMR1_ISR:
  1960                           
  1961                           	psect	text11
  1962  00E7                     __ptext11:	
  1963 ;; *************** function _TMR1_WriteTimer *****************
  1964 ;; Defined at:
  1965 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  1966 ;; Parameters:    Size  Location     Type
  1967 ;;  timerVal        2    0[COMMON] unsigned short 
  1968 ;; Auto vars:     Size  Location     Type
  1969 ;;		None
  1970 ;; Return value:  Size  Location     Type
  1971 ;;                  1    wreg      void 
  1972 ;; Registers used:
  1973 ;;		wreg, status,2
  1974 ;; Tracked objects:
  1975 ;;		On entry : 0/0
  1976 ;;		On exit  : 0/0
  1977 ;;		Unchanged: 0/0
  1978 ;; Data sizes:     COMMON   BANK0   BANK1
  1979 ;;      Params:         2       0       0
  1980 ;;      Locals:         0       0       0
  1981 ;;      Temps:          0       0       0
  1982 ;;      Totals:         2       0       0
  1983 ;;Total ram usage:        2 bytes
  1984 ;; Hardware stack levels used:    1
  1985 ;; This function calls:
  1986 ;;		Nothing
  1987 ;; This function is called by:
  1988 ;;		_TMR1_ISR
  1989 ;;		_TMR1_Reload
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993                           
  1994                           ;psect for function _TMR1_WriteTimer
  1995  00E7                     _TMR1_WriteTimer:
  1996  00E7                     i1l928:	
  1997                           ;incstack = 0
  1998                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  1999                           
  2000                           
  2001                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  2002  00E7  0020               	movlb	0	; select bank0
  2003  00E8  1D18               	btfss	24,2	;volatile
  2004  00E9  28EB               	goto	u15_21
  2005  00EA  28EC               	goto	u15_20
  2006  00EB                     u15_21:
  2007  00EB  28F3               	goto	i1l938
  2008  00EC                     u15_20:
  2009  00EC                     i1l930:
  2010                           
  2011                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  2012  00EC  1018               	bcf	24,0	;volatile
  2013  00ED                     i1l932:
  2014                           
  2015                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (timerVal >> 8);
  2016  00ED  0876               	movf	TMR1_WriteTimer@timerVal+1,w
  2017  00EE  0097               	movwf	23	;volatile
  2018  00EF                     i1l934:
  2019                           
  2020                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = timerVal;
  2021  00EF  0875               	movf	TMR1_WriteTimer@timerVal,w
  2022  00F0  0096               	movwf	22	;volatile
  2023  00F1                     i1l936:
  2024                           
  2025                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  2026  00F1  1418               	bsf	24,0	;volatile
  2027                           
  2028                           ;mcc_generated_files/tmr1.c: 133:     }
  2029  00F2  28F7               	goto	i1l92
  2030  00F3                     i1l938:
  2031                           
  2032                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (timerVal >> 8);
  2033  00F3  0876               	movf	TMR1_WriteTimer@timerVal+1,w
  2034  00F4  0097               	movwf	23	;volatile
  2035  00F5                     i1l940:
  2036                           
  2037                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = timerVal;
  2038  00F5  0875               	movf	TMR1_WriteTimer@timerVal,w
  2039  00F6  0096               	movwf	22	;volatile
  2040  00F7                     i1l92:
  2041  00F7  0008               	return
  2042  00F8                     __end_of_TMR1_WriteTimer:
  2043                           
  2044                           	psect	text12
  2045  0123                     __ptext12:	
  2046 ;; *************** function _TMR1_CallBack *****************
  2047 ;; Defined at:
  2048 ;;		line 169 in file "mcc_generated_files/tmr1.c"
  2049 ;; Parameters:    Size  Location     Type
  2050 ;;		None
  2051 ;; Auto vars:     Size  Location     Type
  2052 ;;		None
  2053 ;; Return value:  Size  Location     Type
  2054 ;;                  1    wreg      void 
  2055 ;; Registers used:
  2056 ;;		wreg, status,2, status,0, pclath, cstack
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMMON   BANK0   BANK1
  2062 ;;      Params:         0       0       0
  2063 ;;      Locals:         0       0       0
  2064 ;;      Temps:          0       0       0
  2065 ;;      Totals:         0       0       0
  2066 ;;Total ram usage:        0 bytes
  2067 ;; Hardware stack levels used:    1
  2068 ;; Hardware stack levels required when called:    1
  2069 ;; This function calls:
  2070 ;;		Absolute function
  2071 ;;		_TMR1_DefaultInterruptHandler
  2072 ;;		_secondsTick
  2073 ;; This function is called by:
  2074 ;;		_TMR1_ISR
  2075 ;; This function uses a non-reentrant model
  2076 ;;
  2077                           
  2078                           
  2079                           ;psect for function _TMR1_CallBack
  2080  0123                     _TMR1_CallBack:
  2081  0123                     i1l942:	
  2082                           ;incstack = 0
  2083                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
  2084                           
  2085                           
  2086                           ;mcc_generated_files/tmr1.c: 172:     if(TMR1_InterruptHandler)
  2087  0123  0020               	movlb	0	; select bank0
  2088  0124  0820               	movf	_TMR1_InterruptHandler,w
  2089  0125  0421               	iorwf	_TMR1_InterruptHandler+1,w
  2090  0126  1903               	btfsc	3,2
  2091  0127  2929               	goto	u16_21
  2092  0128  292A               	goto	u16_20
  2093  0129                     u16_21:
  2094  0129  292F               	goto	i1l108
  2095  012A                     u16_20:
  2096  012A                     i1l944:
  2097                           
  2098                           ;mcc_generated_files/tmr1.c: 173:     {;mcc_generated_files/tmr1.c: 174:         TMR1_In
      +                          terruptHandler();
  2099  012A  0821               	movf	_TMR1_InterruptHandler+1,w
  2100  012B  008A               	movwf	10
  2101  012C  0820               	movf	_TMR1_InterruptHandler,w
  2102  012D  000A               	callw
  2103  012E  3181               	pagesel	$
  2104  012F                     i1l108:
  2105  012F  0008               	return
  2106  0130                     __end_of_TMR1_CallBack:
  2107                           
  2108                           	psect	text13
  2109  0143                     __ptext13:	
  2110 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  2111 ;; Defined at:
  2112 ;;		line 182 in file "mcc_generated_files/tmr1.c"
  2113 ;; Parameters:    Size  Location     Type
  2114 ;;		None
  2115 ;; Auto vars:     Size  Location     Type
  2116 ;;		None
  2117 ;; Return value:  Size  Location     Type
  2118 ;;                  1    wreg      void 
  2119 ;; Registers used:
  2120 ;;		None
  2121 ;; Tracked objects:
  2122 ;;		On entry : 0/0
  2123 ;;		On exit  : 0/0
  2124 ;;		Unchanged: 0/0
  2125 ;; Data sizes:     COMMON   BANK0   BANK1
  2126 ;;      Params:         0       0       0
  2127 ;;      Locals:         0       0       0
  2128 ;;      Temps:          0       0       0
  2129 ;;      Totals:         0       0       0
  2130 ;;Total ram usage:        0 bytes
  2131 ;; Hardware stack levels used:    1
  2132 ;; This function calls:
  2133 ;;		Nothing
  2134 ;; This function is called by:
  2135 ;;		_TMR1_Initialize
  2136 ;;		_TMR1_CallBack
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139                           
  2140                           
  2141                           ;psect for function _TMR1_DefaultInterruptHandler
  2142  0143                     _TMR1_DefaultInterruptHandler:
  2143  0143                     i1l114:	
  2144                           ;incstack = 0
  2145                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  2146                           
  2147  0143  0008               	return
  2148  0144                     __end_of_TMR1_DefaultInterruptHandler:
  2149                           
  2150                           	psect	text14
  2151  00F8                     __ptext14:	
  2152 ;; *************** function _secondsTick *****************
  2153 ;; Defined at:
  2154 ;;		line 171 in file "main.c"
  2155 ;; Parameters:    Size  Location     Type
  2156 ;;		None
  2157 ;; Auto vars:     Size  Location     Type
  2158 ;;		None
  2159 ;; Return value:  Size  Location     Type
  2160 ;;                  1    wreg      void 
  2161 ;; Registers used:
  2162 ;;		wreg, status,0
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/0
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMMON   BANK0   BANK1
  2168 ;;      Params:         0       0       0
  2169 ;;      Locals:         0       0       0
  2170 ;;      Temps:          0       0       0
  2171 ;;      Totals:         0       0       0
  2172 ;;Total ram usage:        0 bytes
  2173 ;; Hardware stack levels used:    1
  2174 ;; This function calls:
  2175 ;;		Nothing
  2176 ;; This function is called by:
  2177 ;;		_main
  2178 ;;		_TMR1_CallBack
  2179 ;; This function uses a non-reentrant model
  2180 ;;
  2181                           
  2182                           
  2183                           ;psect for function _secondsTick
  2184  00F8                     _secondsTick:
  2185  00F8                     i1l908:	
  2186                           ;incstack = 0
  2187                           ; Regs used in _secondsTick: [wreg+status,0]
  2188                           
  2189                           
  2190                           ;main.c: 173:     currentSecondsTick++;
  2191  00F8  3001               	movlw	1
  2192  00F9  07F2               	addwf	_currentSecondsTick,f
  2193  00FA  3000               	movlw	0
  2194  00FB  3DF3               	addwfc	_currentSecondsTick+1,f
  2195  00FC                     i1l910:
  2196  00FC  1003               	clrc
  2197  00FD  0022               	movlb	2	; select bank2
  2198  00FE  1D0C               	btfss	12,2	;volatile
  2199  00FF  1403               	setc
  2200  0100  1803               	btfsc	3,0
  2201  0101  2903               	goto	u13_21
  2202  0102  2906               	goto	u13_20
  2203  0103                     u13_21:
  2204  0103  0022               	movlb	2	; select bank2
  2205  0104  150C               	bsf	12,2	;volatile
  2206  0105  2908               	goto	u14_24
  2207  0106                     u13_20:
  2208  0106  0022               	movlb	2	; select bank2
  2209  0107  110C               	bcf	12,2	;volatile
  2210  0108                     u14_24:
  2211  0108                     i1l187:
  2212  0108  0008               	return
  2213  0109                     __end_of_secondsTick:
  2214  007E                     btemp	set	126	;btemp
  2215  007E                     int$flags	set	126
  2216  007E                     wtemp0	set	126
  2217                           
  2218                           	psect	config
  2219                           
  2220                           ;Config register CONFIG1 @ 0x8007
  2221                           ;	
  2222                           ;	FOSC = INTOSC, INTOSC oscillator; I/O function on CLKIN pin
  2223                           ;	Watchdog Timer Enable
  2224                           ;	WDTE = OFF, WDT disabled
  2225                           ;	Power-up Timer Enable
  2226                           ;	PWRTE = OFF, PWRT disabled
  2227                           ;	MCLR Pin Function Select
  2228                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2229                           ;	Flash Program Memory Code Protection
  2230                           ;	CP = OFF, Program memory code protection is disabled
  2231                           ;	Brown-out Reset Enable
  2232                           ;	BOREN = ON, Brown-out Reset enabled
  2233                           ;	Clock Out Enable
  2234                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2235  8007                     	org	32775
  2236  8007  3FE4               	dw	16356
  2237                           
  2238                           ;Config register CONFIG2 @ 0x8008
  2239                           ;	Flash Memory Self-Write Protection
  2240                           ;	WRT = OFF, Write protection off
  2241                           ;	PLL Enable
  2242                           ;	PLLEN = OFF, 4x PLL disabled
  2243                           ;	Stack Overflow/Underflow Reset Enable
  2244                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2245                           ;	Brown-out Reset Voltage Selection
  2246                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2247                           ;	Low Power Brown-out Reset enable bit
  2248                           ;	LPBOREN = OFF, LPBOR is disabled
  2249                           ;	Low-Voltage Programming Enable
  2250                           ;	LVP = ON, Low-voltage programming enabled
  2251  8008                     	org	32776
  2252  8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      12
    BANK0            80      2       4
    BANK1            32      0       0

Pointer List with Targets:

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> secondsTick(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> secondsTick(), Absolute function(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_setState
    _TMR1_Initialize->_TMR1_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     393
                                              0 BANK0      2     2      0
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
                           _setState
 ---------------------------------------------------------------------------------
 (1) _setState                                             3     3      0      45
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0     240
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     240
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                        _secondsTick *
 ---------------------------------------------------------------------------------
 (7) _secondsTick                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize
   _TMR1_SetInterruptHandler
   _TMR1_StartTimer
   _setState

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _secondsTick *
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      10       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2       4       6        5.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      10       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Aug 06 15:07:25 2020

                                      l22 013B                                        l25 013F  
                                      l19 0115                                        l46 00E6  
                                      l81 0142                                        l78 00CF  
                                      u50 0080                                        u51 007F  
                                     l111 0135                                       l142 0061  
                                     l151 0060                                       l143 0035  
                                     l160 00B7                                       l146 0048  
                                     l171 008D                                       l163 0081  
                                     l181 009B                                       l165 0083  
                                     l174 008F                                       l176 0091  
                                     l169 008B                                       l179 0099  
                                     l800 007A                                       l810 009D  
                                     l740 00D5                                       l812 00B3  
                                     l804 0084                                       l742 00DA  
                                     l750 013C                                       l806 0092  
                                     l744 00DE                                       l736 00D0  
                                     l920 00BF                                       l912 00B8  
                                     l746 00E1                                       l738 00D2  
                                     l906 0130                                       l922 00C3  
                                     l914 00BA                                       l748 0136  
                                     l924 00C5                                       l916 00BC  
                                     l926 00CC                                       l918 00BE  
                                     l950 010F                                       l952 0112  
                                     l946 0109                                       l794 0140  
                                     l948 010C                                       u240 0039  
                                     u241 0038                                       u250 0043  
                                     u251 0042                                       u260 004C  
                                     u261 004B                                       u270 005B  
                                     u271 005A                                       u255 003F  
                                     u275 0057                           _timer1ReloadVal 007A  
                                    l1112 006A                                      l1040 0030  
                                    l1114 00A5                                      l1050 005B  
                                    l1042 0039                                      l1034 0022  
                                    l1044 0043                                      l1036 002C  
                                    l1046 004C                                      l1054 0061  
                                    l1038 002D                                      l1048 0051  
                                    _LATA 010C                                      i1l92 00F7  
                                    _WPUA 020C                                      _main 0022  
                                    btemp 007E                                      start 0019  
              ??_TMR1_SetInterruptHandler 0079            __size_of_OSCILLATOR_Initialize 0006  
           __end_of_OSCILLATOR_Initialize 013C                                     ?_main 0075  
                         _TMR1_StartTimer 0140                                     _T1CON 0018  
                                   i1l104 0122                                     i1l114 0143  
                                   i1l108 012F                                     i1l204 0017  
                                   i1l187 0108                                     i1l910 00FC  
                                   i1l930 00EC                                     i1l908 00F8  
                                   i1l940 00F5                                     i1l932 00ED  
                                   i1l942 0123                                     i1l934 00EF  
                                   i1l944 012A                                     i1l936 00F1  
                                   i1l928 00E7                                     i1l938 00F3  
                                   i1l954 0116                                     i1l956 0118  
                                   i1l990 000F                                     i1l992 0014  
                                   i1l986 0006                                     i1l988 000A  
                                   u13_20 0106                                     u21_20 000A  
                                   u13_21 0103                                     u21_21 0009  
                                   u22_20 000F                                     u22_21 000E  
                                   u14_24 0108                                     u15_20 00EC  
                                   u23_20 0014                                     u15_21 00EB  
                                   u23_21 0013                                     u16_20 012A  
                                   u16_21 0129                                     _TMR1H 0017  
                                   _TMR1L 0016                                     _TRISA 008C  
                        __end_of_TMR1_ISR 0123                            _WDT_Initialize 013C  
                 __end_of_TMR1_Initialize 00D0                                     pclath 000A  
                                   status 0003                                     wtemp0 007E  
                         _TMR1_WriteTimer 00E7                           __initialization 001A  
                            __end_of_main 0079               ?_INTERRUPT_InterruptManager 0075  
                                  ??_main 0022                              ?_secondsTick 0075  
                  __end_of_WDT_Initialize 0140                                    _APFCON 011D  
                                  _ANSELA 018C                                    _BORCON 0116  
                                  _T1GCON 0019                   TMR1_WriteTimer@timerVal 0075  
                                  _ODCONA 028C                                    _INLVLA 038C  
                                  _OSCCON 0099                                    _WDTCON 0097  
    __end_of_TMR1_DefaultInterruptHandler 0144     __size_of_TMR1_DefaultInterruptHandler 0001  
            _TMR1_DefaultInterruptHandler 0143                   __end_of_TMR1_StartTimer 0143  
                        __end_of_setState 00B8                           ?_WDT_Initialize 0075  
TMR1_SetInterruptHandler@InterruptHandler 0077                   __end_of_TMR1_WriteTimer 00F8  
                   __end_of_TMR1_CallBack 0130                          ?_TMR1_Initialize 0075  
                       _SYSTEM_Initialize 0109                   __end_of__initialization 001F  
                      ?_SYSTEM_Initialize 0075                            __pcstackCOMMON 0075  
                     ??_SYSTEM_Initialize 0079                                 ?_TMR1_ISR 0075  
           ?_TMR1_DefaultInterruptHandler 0075                            _OPTION_REGbits 0095  
               __end_of_SYSTEM_Initialize 0116                                __pnvCOMMON 007A  
                              __pmaintext 0022                          ?_TMR1_StartTimer 0075  
                              ??_TMR1_ISR 0077                                __pintentry 0004  
                                 _OSCTUNE 0098                                   _SLRCONA 030C  
                    __size_of_secondsTick 0011                          ?_TMR1_WriteTimer 0075  
                               ?_setState 0075                                   __ptext1 0079  
                                 __ptext2 0140                                   __ptext3 0109  
                                 __ptext4 013C                                   __ptext5 00B8  
                                 __ptext6 0130                                   __ptext7 00D0  
                                 __ptext8 0136            ??_TMR1_DefaultInterruptHandler 0075  
                               _T1CONbits 0018                     _OSCILLATOR_Initialize 0136  
       __size_of_TMR1_SetInterruptHandler 0006                  ??_PIN_MANAGER_Initialize 0077  
               ?_TMR1_SetInterruptHandler 0077                __size_of_SYSTEM_Initialize 000D  
                    end_of_initialization 001F                                ??_setState 0077  
                        ??_WDT_Initialize 0077                                 _PORTAbits 000C  
                       __size_of_TMR1_ISR 000D                    ?_OSCILLATOR_Initialize 0075  
                     start_initialization 001A           __size_of_PIN_MANAGER_Initialize 0017  
                __size_of_TMR1_Initialize 0018                    __size_of_TMR1_CallBack 000D  
                             __pbssCOMMON 0070                                 ___latbits 0000  
                           __pcstackBANK0 0022                          setState@newState 0079  
                            _currentState 0074                                 __pnvBANK0 0020  
                  _PIN_MANAGER_Initialize 00D0          __end_of_TMR1_SetInterruptHandler 0136  
                       __size_of_setState 003F              ??_INTERRUPT_InterruptManager 0077  
                __size_of_TMR1_StartTimer 0003                             ??_secondsTick 0075  
                           _TMR1_CallBack 0123                                  _LATAbits 010C  
                                _PIE1bits 0091                  __size_of_TMR1_WriteTimer 0011  
     __size_of_INTERRUPT_InterruptManager 0015                                  _PIR1bits 0011  
                                _TMR1_ISR 0116                         ??_TMR1_Initialize 0079  
                      _currentSecondsTick 0072                       __end_of_secondsTick 0109  
                          ?_TMR1_CallBack 0075                   ??_OSCILLATOR_Initialize 0077  
                _TMR1_SetInterruptHandler 0130                     _TMR1_InterruptHandler 0020  
                                __ptext10 0116                                  __ptext11 00E7  
                                __ptext12 0123                                  __ptext13 0143  
                              _T1GCONbits 0019                                  __ptext14 00F8  
                       ??_TMR1_StartTimer 0077                             __size_of_main 0057  
                                _setState 0079                       _demandedSecondsTick 0070  
                                int$flags 007E        __end_of_INTERRUPT_InterruptManager 0019  
              _INTERRUPT_InterruptManager 0004                         ??_TMR1_WriteTimer 0077  
                              _INTCONbits 000B                               _secondsTick 00F8  
                         ??_TMR1_CallBack 0075                   __size_of_WDT_Initialize 0004  
                                intlevel1 0000                   ?_PIN_MANAGER_Initialize 0075  
          __end_of_PIN_MANAGER_Initialize 00E7                           _TMR1_Initialize 00B8  
