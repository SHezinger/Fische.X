

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Fri Aug 14 11:02:32 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	12F1571
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 09/04/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC12F1571 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  008C                     	;# 
    88  0091                     	;# 
    89  0092                     	;# 
    90  0093                     	;# 
    91  0095                     	;# 
    92  0096                     	;# 
    93  0097                     	;# 
    94  0098                     	;# 
    95  0099                     	;# 
    96  009A                     	;# 
    97  009B                     	;# 
    98  009B                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  0111                     	;# 
   105  0112                     	;# 
   106  0115                     	;# 
   107  0116                     	;# 
   108  0117                     	;# 
   109  0118                     	;# 
   110  0119                     	;# 
   111  011D                     	;# 
   112  011D                     	;# 
   113  018C                     	;# 
   114  0191                     	;# 
   115  0191                     	;# 
   116  0192                     	;# 
   117  0193                     	;# 
   118  0193                     	;# 
   119  0194                     	;# 
   120  0195                     	;# 
   121  0196                     	;# 
   122  0197                     	;# 
   123  020C                     	;# 
   124  028C                     	;# 
   125  030C                     	;# 
   126  038C                     	;# 
   127  0391                     	;# 
   128  0392                     	;# 
   129  0393                     	;# 
   130  0691                     	;# 
   131  0692                     	;# 
   132  0693                     	;# 
   133  0694                     	;# 
   134  0695                     	;# 
   135  0D8E                     	;# 
   136  0D8F                     	;# 
   137  0D90                     	;# 
   138  0D91                     	;# 
   139  0D91                     	;# 
   140  0D92                     	;# 
   141  0D93                     	;# 
   142  0D93                     	;# 
   143  0D94                     	;# 
   144  0D95                     	;# 
   145  0D95                     	;# 
   146  0D96                     	;# 
   147  0D97                     	;# 
   148  0D97                     	;# 
   149  0D98                     	;# 
   150  0D99                     	;# 
   151  0D99                     	;# 
   152  0D9A                     	;# 
   153  0D9B                     	;# 
   154  0D9C                     	;# 
   155  0D9C                     	;# 
   156  0D9D                     	;# 
   157  0D9D                     	;# 
   158  0D9E                     	;# 
   159  0D9F                     	;# 
   160  0DA0                     	;# 
   161  0DA1                     	;# 
   162  0DA1                     	;# 
   163  0DA2                     	;# 
   164  0DA3                     	;# 
   165  0DA3                     	;# 
   166  0DA4                     	;# 
   167  0DA5                     	;# 
   168  0DA5                     	;# 
   169  0DA6                     	;# 
   170  0DA7                     	;# 
   171  0DA7                     	;# 
   172  0DA8                     	;# 
   173  0DA9                     	;# 
   174  0DA9                     	;# 
   175  0DAA                     	;# 
   176  0DAB                     	;# 
   177  0DAC                     	;# 
   178  0DAC                     	;# 
   179  0DAD                     	;# 
   180  0DAD                     	;# 
   181  0DAE                     	;# 
   182  0DAF                     	;# 
   183  0DB0                     	;# 
   184  0DB1                     	;# 
   185  0DB1                     	;# 
   186  0DB2                     	;# 
   187  0DB3                     	;# 
   188  0DB3                     	;# 
   189  0DB4                     	;# 
   190  0DB5                     	;# 
   191  0DB5                     	;# 
   192  0DB6                     	;# 
   193  0DB7                     	;# 
   194  0DB7                     	;# 
   195  0DB8                     	;# 
   196  0DB9                     	;# 
   197  0DB9                     	;# 
   198  0DBA                     	;# 
   199  0DBB                     	;# 
   200  0DBC                     	;# 
   201  0DBC                     	;# 
   202  0DBD                     	;# 
   203  0DBD                     	;# 
   204  0DBE                     	;# 
   205  0DBF                     	;# 
   206  0DC0                     	;# 
   207  0FE4                     	;# 
   208  0FE5                     	;# 
   209  0FE6                     	;# 
   210  0FE7                     	;# 
   211  0FE8                     	;# 
   212  0FE8                     	;# 
   213  0FE9                     	;# 
   214  0FEA                     	;# 
   215  0FEA                     	;# 
   216  0FEB                     	;# 
   217  0FED                     	;# 
   218  0FEE                     	;# 
   219  0FEE                     	;# 
   220  0FEF                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  0011                     	;# 
   235  0012                     	;# 
   236  0013                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0016                     	;# 
   240  0017                     	;# 
   241  0018                     	;# 
   242  0019                     	;# 
   243  001A                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  008C                     	;# 
   247  0091                     	;# 
   248  0092                     	;# 
   249  0093                     	;# 
   250  0095                     	;# 
   251  0096                     	;# 
   252  0097                     	;# 
   253  0098                     	;# 
   254  0099                     	;# 
   255  009A                     	;# 
   256  009B                     	;# 
   257  009B                     	;# 
   258  009C                     	;# 
   259  009D                     	;# 
   260  009E                     	;# 
   261  009F                     	;# 
   262  010C                     	;# 
   263  0111                     	;# 
   264  0112                     	;# 
   265  0115                     	;# 
   266  0116                     	;# 
   267  0117                     	;# 
   268  0118                     	;# 
   269  0119                     	;# 
   270  011D                     	;# 
   271  011D                     	;# 
   272  018C                     	;# 
   273  0191                     	;# 
   274  0191                     	;# 
   275  0192                     	;# 
   276  0193                     	;# 
   277  0193                     	;# 
   278  0194                     	;# 
   279  0195                     	;# 
   280  0196                     	;# 
   281  0197                     	;# 
   282  020C                     	;# 
   283  028C                     	;# 
   284  030C                     	;# 
   285  038C                     	;# 
   286  0391                     	;# 
   287  0392                     	;# 
   288  0393                     	;# 
   289  0691                     	;# 
   290  0692                     	;# 
   291  0693                     	;# 
   292  0694                     	;# 
   293  0695                     	;# 
   294  0D8E                     	;# 
   295  0D8F                     	;# 
   296  0D90                     	;# 
   297  0D91                     	;# 
   298  0D91                     	;# 
   299  0D92                     	;# 
   300  0D93                     	;# 
   301  0D93                     	;# 
   302  0D94                     	;# 
   303  0D95                     	;# 
   304  0D95                     	;# 
   305  0D96                     	;# 
   306  0D97                     	;# 
   307  0D97                     	;# 
   308  0D98                     	;# 
   309  0D99                     	;# 
   310  0D99                     	;# 
   311  0D9A                     	;# 
   312  0D9B                     	;# 
   313  0D9C                     	;# 
   314  0D9C                     	;# 
   315  0D9D                     	;# 
   316  0D9D                     	;# 
   317  0D9E                     	;# 
   318  0D9F                     	;# 
   319  0DA0                     	;# 
   320  0DA1                     	;# 
   321  0DA1                     	;# 
   322  0DA2                     	;# 
   323  0DA3                     	;# 
   324  0DA3                     	;# 
   325  0DA4                     	;# 
   326  0DA5                     	;# 
   327  0DA5                     	;# 
   328  0DA6                     	;# 
   329  0DA7                     	;# 
   330  0DA7                     	;# 
   331  0DA8                     	;# 
   332  0DA9                     	;# 
   333  0DA9                     	;# 
   334  0DAA                     	;# 
   335  0DAB                     	;# 
   336  0DAC                     	;# 
   337  0DAC                     	;# 
   338  0DAD                     	;# 
   339  0DAD                     	;# 
   340  0DAE                     	;# 
   341  0DAF                     	;# 
   342  0DB0                     	;# 
   343  0DB1                     	;# 
   344  0DB1                     	;# 
   345  0DB2                     	;# 
   346  0DB3                     	;# 
   347  0DB3                     	;# 
   348  0DB4                     	;# 
   349  0DB5                     	;# 
   350  0DB5                     	;# 
   351  0DB6                     	;# 
   352  0DB7                     	;# 
   353  0DB7                     	;# 
   354  0DB8                     	;# 
   355  0DB9                     	;# 
   356  0DB9                     	;# 
   357  0DBA                     	;# 
   358  0DBB                     	;# 
   359  0DBC                     	;# 
   360  0DBC                     	;# 
   361  0DBD                     	;# 
   362  0DBD                     	;# 
   363  0DBE                     	;# 
   364  0DBF                     	;# 
   365  0DC0                     	;# 
   366  0FE4                     	;# 
   367  0FE5                     	;# 
   368  0FE6                     	;# 
   369  0FE7                     	;# 
   370  0FE8                     	;# 
   371  0FE8                     	;# 
   372  0FE9                     	;# 
   373  0FEA                     	;# 
   374  0FEA                     	;# 
   375  0FEB                     	;# 
   376  0FED                     	;# 
   377  0FEE                     	;# 
   378  0FEE                     	;# 
   379  0FEF                     	;# 
   380  0000                     	;# 
   381  0001                     	;# 
   382  0002                     	;# 
   383  0003                     	;# 
   384  0004                     	;# 
   385  0005                     	;# 
   386  0006                     	;# 
   387  0007                     	;# 
   388  0008                     	;# 
   389  0009                     	;# 
   390  000A                     	;# 
   391  000B                     	;# 
   392  000C                     	;# 
   393  0011                     	;# 
   394  0012                     	;# 
   395  0013                     	;# 
   396  0015                     	;# 
   397  0016                     	;# 
   398  0016                     	;# 
   399  0017                     	;# 
   400  0018                     	;# 
   401  0019                     	;# 
   402  001A                     	;# 
   403  001B                     	;# 
   404  001C                     	;# 
   405  008C                     	;# 
   406  0091                     	;# 
   407  0092                     	;# 
   408  0093                     	;# 
   409  0095                     	;# 
   410  0096                     	;# 
   411  0097                     	;# 
   412  0098                     	;# 
   413  0099                     	;# 
   414  009A                     	;# 
   415  009B                     	;# 
   416  009B                     	;# 
   417  009C                     	;# 
   418  009D                     	;# 
   419  009E                     	;# 
   420  009F                     	;# 
   421  010C                     	;# 
   422  0111                     	;# 
   423  0112                     	;# 
   424  0115                     	;# 
   425  0116                     	;# 
   426  0117                     	;# 
   427  0118                     	;# 
   428  0119                     	;# 
   429  011D                     	;# 
   430  011D                     	;# 
   431  018C                     	;# 
   432  0191                     	;# 
   433  0191                     	;# 
   434  0192                     	;# 
   435  0193                     	;# 
   436  0193                     	;# 
   437  0194                     	;# 
   438  0195                     	;# 
   439  0196                     	;# 
   440  0197                     	;# 
   441  020C                     	;# 
   442  028C                     	;# 
   443  030C                     	;# 
   444  038C                     	;# 
   445  0391                     	;# 
   446  0392                     	;# 
   447  0393                     	;# 
   448  0691                     	;# 
   449  0692                     	;# 
   450  0693                     	;# 
   451  0694                     	;# 
   452  0695                     	;# 
   453  0D8E                     	;# 
   454  0D8F                     	;# 
   455  0D90                     	;# 
   456  0D91                     	;# 
   457  0D91                     	;# 
   458  0D92                     	;# 
   459  0D93                     	;# 
   460  0D93                     	;# 
   461  0D94                     	;# 
   462  0D95                     	;# 
   463  0D95                     	;# 
   464  0D96                     	;# 
   465  0D97                     	;# 
   466  0D97                     	;# 
   467  0D98                     	;# 
   468  0D99                     	;# 
   469  0D99                     	;# 
   470  0D9A                     	;# 
   471  0D9B                     	;# 
   472  0D9C                     	;# 
   473  0D9C                     	;# 
   474  0D9D                     	;# 
   475  0D9D                     	;# 
   476  0D9E                     	;# 
   477  0D9F                     	;# 
   478  0DA0                     	;# 
   479  0DA1                     	;# 
   480  0DA1                     	;# 
   481  0DA2                     	;# 
   482  0DA3                     	;# 
   483  0DA3                     	;# 
   484  0DA4                     	;# 
   485  0DA5                     	;# 
   486  0DA5                     	;# 
   487  0DA6                     	;# 
   488  0DA7                     	;# 
   489  0DA7                     	;# 
   490  0DA8                     	;# 
   491  0DA9                     	;# 
   492  0DA9                     	;# 
   493  0DAA                     	;# 
   494  0DAB                     	;# 
   495  0DAC                     	;# 
   496  0DAC                     	;# 
   497  0DAD                     	;# 
   498  0DAD                     	;# 
   499  0DAE                     	;# 
   500  0DAF                     	;# 
   501  0DB0                     	;# 
   502  0DB1                     	;# 
   503  0DB1                     	;# 
   504  0DB2                     	;# 
   505  0DB3                     	;# 
   506  0DB3                     	;# 
   507  0DB4                     	;# 
   508  0DB5                     	;# 
   509  0DB5                     	;# 
   510  0DB6                     	;# 
   511  0DB7                     	;# 
   512  0DB7                     	;# 
   513  0DB8                     	;# 
   514  0DB9                     	;# 
   515  0DB9                     	;# 
   516  0DBA                     	;# 
   517  0DBB                     	;# 
   518  0DBC                     	;# 
   519  0DBC                     	;# 
   520  0DBD                     	;# 
   521  0DBD                     	;# 
   522  0DBE                     	;# 
   523  0DBF                     	;# 
   524  0DC0                     	;# 
   525  0FE4                     	;# 
   526  0FE5                     	;# 
   527  0FE6                     	;# 
   528  0FE7                     	;# 
   529  0FE8                     	;# 
   530  0FE8                     	;# 
   531  0FE9                     	;# 
   532  0FEA                     	;# 
   533  0FEA                     	;# 
   534  0FEB                     	;# 
   535  0FED                     	;# 
   536  0FEE                     	;# 
   537  0FEE                     	;# 
   538  0FEF                     	;# 
   539  0000                     	;# 
   540  0001                     	;# 
   541  0002                     	;# 
   542  0003                     	;# 
   543  0004                     	;# 
   544  0005                     	;# 
   545  0006                     	;# 
   546  0007                     	;# 
   547  0008                     	;# 
   548  0009                     	;# 
   549  000A                     	;# 
   550  000B                     	;# 
   551  000C                     	;# 
   552  0011                     	;# 
   553  0012                     	;# 
   554  0013                     	;# 
   555  0015                     	;# 
   556  0016                     	;# 
   557  0016                     	;# 
   558  0017                     	;# 
   559  0018                     	;# 
   560  0019                     	;# 
   561  001A                     	;# 
   562  001B                     	;# 
   563  001C                     	;# 
   564  008C                     	;# 
   565  0091                     	;# 
   566  0092                     	;# 
   567  0093                     	;# 
   568  0095                     	;# 
   569  0096                     	;# 
   570  0097                     	;# 
   571  0098                     	;# 
   572  0099                     	;# 
   573  009A                     	;# 
   574  009B                     	;# 
   575  009B                     	;# 
   576  009C                     	;# 
   577  009D                     	;# 
   578  009E                     	;# 
   579  009F                     	;# 
   580  010C                     	;# 
   581  0111                     	;# 
   582  0112                     	;# 
   583  0115                     	;# 
   584  0116                     	;# 
   585  0117                     	;# 
   586  0118                     	;# 
   587  0119                     	;# 
   588  011D                     	;# 
   589  011D                     	;# 
   590  018C                     	;# 
   591  0191                     	;# 
   592  0191                     	;# 
   593  0192                     	;# 
   594  0193                     	;# 
   595  0193                     	;# 
   596  0194                     	;# 
   597  0195                     	;# 
   598  0196                     	;# 
   599  0197                     	;# 
   600  020C                     	;# 
   601  028C                     	;# 
   602  030C                     	;# 
   603  038C                     	;# 
   604  0391                     	;# 
   605  0392                     	;# 
   606  0393                     	;# 
   607  0691                     	;# 
   608  0692                     	;# 
   609  0693                     	;# 
   610  0694                     	;# 
   611  0695                     	;# 
   612  0D8E                     	;# 
   613  0D8F                     	;# 
   614  0D90                     	;# 
   615  0D91                     	;# 
   616  0D91                     	;# 
   617  0D92                     	;# 
   618  0D93                     	;# 
   619  0D93                     	;# 
   620  0D94                     	;# 
   621  0D95                     	;# 
   622  0D95                     	;# 
   623  0D96                     	;# 
   624  0D97                     	;# 
   625  0D97                     	;# 
   626  0D98                     	;# 
   627  0D99                     	;# 
   628  0D99                     	;# 
   629  0D9A                     	;# 
   630  0D9B                     	;# 
   631  0D9C                     	;# 
   632  0D9C                     	;# 
   633  0D9D                     	;# 
   634  0D9D                     	;# 
   635  0D9E                     	;# 
   636  0D9F                     	;# 
   637  0DA0                     	;# 
   638  0DA1                     	;# 
   639  0DA1                     	;# 
   640  0DA2                     	;# 
   641  0DA3                     	;# 
   642  0DA3                     	;# 
   643  0DA4                     	;# 
   644  0DA5                     	;# 
   645  0DA5                     	;# 
   646  0DA6                     	;# 
   647  0DA7                     	;# 
   648  0DA7                     	;# 
   649  0DA8                     	;# 
   650  0DA9                     	;# 
   651  0DA9                     	;# 
   652  0DAA                     	;# 
   653  0DAB                     	;# 
   654  0DAC                     	;# 
   655  0DAC                     	;# 
   656  0DAD                     	;# 
   657  0DAD                     	;# 
   658  0DAE                     	;# 
   659  0DAF                     	;# 
   660  0DB0                     	;# 
   661  0DB1                     	;# 
   662  0DB1                     	;# 
   663  0DB2                     	;# 
   664  0DB3                     	;# 
   665  0DB3                     	;# 
   666  0DB4                     	;# 
   667  0DB5                     	;# 
   668  0DB5                     	;# 
   669  0DB6                     	;# 
   670  0DB7                     	;# 
   671  0DB7                     	;# 
   672  0DB8                     	;# 
   673  0DB9                     	;# 
   674  0DB9                     	;# 
   675  0DBA                     	;# 
   676  0DBB                     	;# 
   677  0DBC                     	;# 
   678  0DBC                     	;# 
   679  0DBD                     	;# 
   680  0DBD                     	;# 
   681  0DBE                     	;# 
   682  0DBF                     	;# 
   683  0DC0                     	;# 
   684  0FE4                     	;# 
   685  0FE5                     	;# 
   686  0FE6                     	;# 
   687  0FE7                     	;# 
   688  0FE8                     	;# 
   689  0FE8                     	;# 
   690  0FE9                     	;# 
   691  0FEA                     	;# 
   692  0FEA                     	;# 
   693  0FEB                     	;# 
   694  0FED                     	;# 
   695  0FEE                     	;# 
   696  0FEE                     	;# 
   697  0FEF                     	;# 
   698  0000                     	;# 
   699  0001                     	;# 
   700  0002                     	;# 
   701  0003                     	;# 
   702  0004                     	;# 
   703  0005                     	;# 
   704  0006                     	;# 
   705  0007                     	;# 
   706  0008                     	;# 
   707  0009                     	;# 
   708  000A                     	;# 
   709  000B                     	;# 
   710  000C                     	;# 
   711  0011                     	;# 
   712  0012                     	;# 
   713  0013                     	;# 
   714  0015                     	;# 
   715  0016                     	;# 
   716  0016                     	;# 
   717  0017                     	;# 
   718  0018                     	;# 
   719  0019                     	;# 
   720  001A                     	;# 
   721  001B                     	;# 
   722  001C                     	;# 
   723  008C                     	;# 
   724  0091                     	;# 
   725  0092                     	;# 
   726  0093                     	;# 
   727  0095                     	;# 
   728  0096                     	;# 
   729  0097                     	;# 
   730  0098                     	;# 
   731  0099                     	;# 
   732  009A                     	;# 
   733  009B                     	;# 
   734  009B                     	;# 
   735  009C                     	;# 
   736  009D                     	;# 
   737  009E                     	;# 
   738  009F                     	;# 
   739  010C                     	;# 
   740  0111                     	;# 
   741  0112                     	;# 
   742  0115                     	;# 
   743  0116                     	;# 
   744  0117                     	;# 
   745  0118                     	;# 
   746  0119                     	;# 
   747  011D                     	;# 
   748  011D                     	;# 
   749  018C                     	;# 
   750  0191                     	;# 
   751  0191                     	;# 
   752  0192                     	;# 
   753  0193                     	;# 
   754  0193                     	;# 
   755  0194                     	;# 
   756  0195                     	;# 
   757  0196                     	;# 
   758  0197                     	;# 
   759  020C                     	;# 
   760  028C                     	;# 
   761  030C                     	;# 
   762  038C                     	;# 
   763  0391                     	;# 
   764  0392                     	;# 
   765  0393                     	;# 
   766  0691                     	;# 
   767  0692                     	;# 
   768  0693                     	;# 
   769  0694                     	;# 
   770  0695                     	;# 
   771  0D8E                     	;# 
   772  0D8F                     	;# 
   773  0D90                     	;# 
   774  0D91                     	;# 
   775  0D91                     	;# 
   776  0D92                     	;# 
   777  0D93                     	;# 
   778  0D93                     	;# 
   779  0D94                     	;# 
   780  0D95                     	;# 
   781  0D95                     	;# 
   782  0D96                     	;# 
   783  0D97                     	;# 
   784  0D97                     	;# 
   785  0D98                     	;# 
   786  0D99                     	;# 
   787  0D99                     	;# 
   788  0D9A                     	;# 
   789  0D9B                     	;# 
   790  0D9C                     	;# 
   791  0D9C                     	;# 
   792  0D9D                     	;# 
   793  0D9D                     	;# 
   794  0D9E                     	;# 
   795  0D9F                     	;# 
   796  0DA0                     	;# 
   797  0DA1                     	;# 
   798  0DA1                     	;# 
   799  0DA2                     	;# 
   800  0DA3                     	;# 
   801  0DA3                     	;# 
   802  0DA4                     	;# 
   803  0DA5                     	;# 
   804  0DA5                     	;# 
   805  0DA6                     	;# 
   806  0DA7                     	;# 
   807  0DA7                     	;# 
   808  0DA8                     	;# 
   809  0DA9                     	;# 
   810  0DA9                     	;# 
   811  0DAA                     	;# 
   812  0DAB                     	;# 
   813  0DAC                     	;# 
   814  0DAC                     	;# 
   815  0DAD                     	;# 
   816  0DAD                     	;# 
   817  0DAE                     	;# 
   818  0DAF                     	;# 
   819  0DB0                     	;# 
   820  0DB1                     	;# 
   821  0DB1                     	;# 
   822  0DB2                     	;# 
   823  0DB3                     	;# 
   824  0DB3                     	;# 
   825  0DB4                     	;# 
   826  0DB5                     	;# 
   827  0DB5                     	;# 
   828  0DB6                     	;# 
   829  0DB7                     	;# 
   830  0DB7                     	;# 
   831  0DB8                     	;# 
   832  0DB9                     	;# 
   833  0DB9                     	;# 
   834  0DBA                     	;# 
   835  0DBB                     	;# 
   836  0DBC                     	;# 
   837  0DBC                     	;# 
   838  0DBD                     	;# 
   839  0DBD                     	;# 
   840  0DBE                     	;# 
   841  0DBF                     	;# 
   842  0DC0                     	;# 
   843  0FE4                     	;# 
   844  0FE5                     	;# 
   845  0FE6                     	;# 
   846  0FE7                     	;# 
   847  0FE8                     	;# 
   848  0FE8                     	;# 
   849  0FE9                     	;# 
   850  0FEA                     	;# 
   851  0FEA                     	;# 
   852  0FEB                     	;# 
   853  0FED                     	;# 
   854  0FEE                     	;# 
   855  0FEE                     	;# 
   856  0FEF                     	;# 
   857                           
   858                           	psect	nvCOMMON
   859  007A                     __pnvCOMMON:
   860  007A                     _timer1ReloadVal:
   861  007A                     	ds	2
   862                           
   863                           	psect	nvBANK0
   864  0020                     __pnvBANK0:
   865  0020                     _TMR1_InterruptHandler:
   866  0020                     	ds	2
   867  000C                     _PORTAbits	set	12
   868  000B                     _INTCONbits	set	11
   869  0019                     _T1GCONbits	set	25
   870  0018                     _T1CONbits	set	24
   871  0018                     _T1CON	set	24
   872  0011                     _PIR1bits	set	17
   873  0016                     _TMR1L	set	22
   874  0017                     _TMR1H	set	23
   875  0019                     _T1GCON	set	25
   876  0091                     _PIE1bits	set	145
   877  0095                     _OPTION_REGbits	set	149
   878  008C                     _TRISA	set	140
   879  0097                     _WDTCON	set	151
   880  0098                     _OSCTUNE	set	152
   881  0099                     _OSCCON	set	153
   882  010C                     _LATAbits	set	268
   883  011D                     _APFCON	set	285
   884  010C                     _LATA	set	268
   885  0116                     _BORCON	set	278
   886  018C                     _ANSELA	set	396
   887  020C                     _WPUA	set	524
   888  028C                     _ODCONA	set	652
   889  030C                     _SLRCONA	set	780
   890  038C                     _INLVLA	set	908
   891                           
   892                           	psect	cinit
   893  001A                     start_initialization:	
   894                           ; #config settings
   895                           
   896  001A                     __initialization:
   897                           
   898                           ; Clear objects allocated to COMMON
   899  001A  01F0               	clrf	__pbssCOMMON& (0+127)
   900  001B  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   901  001C  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   902  001D  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   903  001E  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   904  001F                     end_of_initialization:	
   905                           ;End of C runtime variable initialization code
   906                           
   907  001F                     __end_of__initialization:
   908  001F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   909  0020  0020               	movlb	0
   910  0021  2822               	ljmp	_main	;jump to C main() function
   911                           
   912                           	psect	bssCOMMON
   913  0070                     __pbssCOMMON:
   914  0070                     _demandedSecondsTick:
   915  0070                     	ds	2
   916  0072                     _currentSecondsTick:
   917  0072                     	ds	2
   918  0074                     _currentState:
   919  0074                     	ds	1
   920                           
   921                           	psect	cstackCOMMON
   922  0075                     __pcstackCOMMON:
   923  0075                     ?_PIN_MANAGER_Initialize:
   924  0075                     ?_OSCILLATOR_Initialize:	
   925                           ; 1 bytes @ 0x0
   926                           
   927  0075                     ?_WDT_Initialize:	
   928                           ; 1 bytes @ 0x0
   929                           
   930  0075                     ?_TMR1_Initialize:	
   931                           ; 1 bytes @ 0x0
   932                           
   933  0075                     ?_TMR1_DefaultInterruptHandler:	
   934                           ; 1 bytes @ 0x0
   935                           
   936  0075                     ??_TMR1_DefaultInterruptHandler:	
   937                           ; 1 bytes @ 0x0
   938                           
   939  0075                     ?_TMR1_CallBack:	
   940                           ; 1 bytes @ 0x0
   941                           
   942  0075                     ??_TMR1_CallBack:	
   943                           ; 1 bytes @ 0x0
   944                           
   945  0075                     ?_secondsTick:	
   946                           ; 1 bytes @ 0x0
   947                           
   948  0075                     ??_secondsTick:	
   949                           ; 1 bytes @ 0x0
   950                           
   951  0075                     ?_setState:	
   952                           ; 1 bytes @ 0x0
   953                           
   954  0075                     ?_SYSTEM_Initialize:	
   955                           ; 1 bytes @ 0x0
   956                           
   957  0075                     ?_TMR1_StartTimer:	
   958                           ; 1 bytes @ 0x0
   959                           
   960  0075                     ?_TMR1_WriteTimer:	
   961                           ; 1 bytes @ 0x0
   962                           
   963  0075                     ?_TMR1_ISR:	
   964                           ; 1 bytes @ 0x0
   965                           
   966  0075                     ?_INTERRUPT_InterruptManager:	
   967                           ; 1 bytes @ 0x0
   968                           
   969  0075                     ?_main:	
   970                           ; 1 bytes @ 0x0
   971                           
   972  0075                     TMR1_WriteTimer@timerVal:	
   973                           ; 1 bytes @ 0x0
   974                           
   975                           
   976                           ; 2 bytes @ 0x0
   977  0075                     	ds	2
   978  0077                     ??_PIN_MANAGER_Initialize:
   979  0077                     ??_OSCILLATOR_Initialize:	
   980                           ; 1 bytes @ 0x2
   981                           
   982  0077                     ??_WDT_Initialize:	
   983                           ; 1 bytes @ 0x2
   984                           
   985  0077                     ?_TMR1_SetInterruptHandler:	
   986                           ; 1 bytes @ 0x2
   987                           
   988  0077                     ??_setState:	
   989                           ; 1 bytes @ 0x2
   990                           
   991  0077                     ??_TMR1_StartTimer:	
   992                           ; 1 bytes @ 0x2
   993                           
   994  0077                     ??_TMR1_WriteTimer:	
   995                           ; 1 bytes @ 0x2
   996                           
   997  0077                     ??_TMR1_ISR:	
   998                           ; 1 bytes @ 0x2
   999                           
  1000  0077                     ??_INTERRUPT_InterruptManager:	
  1001                           ; 1 bytes @ 0x2
  1002                           
  1003  0077                     TMR1_SetInterruptHandler@InterruptHandler:	
  1004                           ; 1 bytes @ 0x2
  1005                           
  1006                           
  1007                           ; 2 bytes @ 0x2
  1008  0077                     	ds	2
  1009  0079                     ??_TMR1_Initialize:
  1010  0079                     ??_TMR1_SetInterruptHandler:	
  1011                           ; 1 bytes @ 0x4
  1012                           
  1013  0079                     ??_SYSTEM_Initialize:	
  1014                           ; 1 bytes @ 0x4
  1015                           
  1016  0079                     setState@newState:	
  1017                           ; 1 bytes @ 0x4
  1018                           
  1019                           
  1020                           ; 1 bytes @ 0x4
  1021  0079                     	ds	1
  1022                           
  1023                           	psect	cstackBANK0
  1024  0022                     __pcstackBANK0:
  1025  0022                     ??_main:
  1026                           
  1027                           ; 1 bytes @ 0x0
  1028  0022                     	ds	2
  1029                           
  1030                           	psect	maintext
  1031  0022                     __pmaintext:	
  1032 ;;
  1033 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1034 ;;
  1035 ;; *************** function _main *****************
  1036 ;; Defined at:
  1037 ;;		line 68 in file "main.c"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;		None
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;		None
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  1    wreg      void 
  1044 ;; Registers used:
  1045 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1046 ;; Tracked objects:
  1047 ;;		On entry : B1F/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMMON   BANK0   BANK1
  1051 ;;      Params:         0       0       0
  1052 ;;      Locals:         0       0       0
  1053 ;;      Temps:          0       2       0
  1054 ;;      Totals:         0       2       0
  1055 ;;Total ram usage:        2 bytes
  1056 ;; Hardware stack levels required when called:    7
  1057 ;; This function calls:
  1058 ;;		_SYSTEM_Initialize
  1059 ;;		_TMR1_SetInterruptHandler
  1060 ;;		_TMR1_StartTimer
  1061 ;;		_setState
  1062 ;; This function is called by:
  1063 ;;		Startup code after reset
  1064 ;; This function uses a non-reentrant model
  1065 ;;
  1066                           
  1067                           
  1068                           ;psect for function _main
  1069  0022                     _main:
  1070  0022                     l1044:	
  1071                           ;incstack = 0
  1072                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1073                           
  1074                           
  1075                           ;main.c: 71:     SYSTEM_Initialize();
  1076  0022  3181  211A  3180   	fcall	_SYSTEM_Initialize
  1077  0025                     l1046:
  1078                           
  1079                           ;main.c: 77:     (INTCONbits.GIE = 1);
  1080  0025  178B               	bsf	11,7	;volatile
  1081  0026                     l1048:
  1082                           
  1083                           ;main.c: 80:     (INTCONbits.PEIE = 1);
  1084  0026  170B               	bsf	11,6	;volatile
  1085                           
  1086                           ;main.c: 89:     TMR1_SetInterruptHandler(secondsTick);
  1087  0027  304E               	movlw	low _secondsTick
  1088  0028  00F7               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  1089  0029  3001               	movlw	high _secondsTick
  1090  002A  00F8               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  1091  002B  3181  2148  3180   	fcall	_TMR1_SetInterruptHandler
  1092  002E                     l1050:
  1093                           
  1094                           ;main.c: 91:     TMR1_StartTimer();
  1095  002E  3181  2157  3180   	fcall	_TMR1_StartTimer
  1096  0031                     l1052:
  1097                           
  1098                           ;main.c: 93:     setState(STATE_WAIT_TIME);
  1099  0031  3001               	movlw	1
  1100  0032  3180  2092  3180   	fcall	_setState
  1101  0035  287A               	goto	l1072
  1102  0036                     l160:	
  1103                           ;main.c: 100:         {;main.c: 101:             case STATE_WAIT_TIME:
  1104                           
  1105                           
  1106                           ;main.c: 102:                 if(PORTAbits.RA5 && (currentSecondsTick >= demandedSeconds
      +                          Tick))
  1107  0036  1E8C               	btfss	12,5	;volatile
  1108  0037  2839               	goto	u241
  1109  0038  283A               	goto	u240
  1110  0039                     u241:
  1111  0039  287A               	goto	l1072
  1112  003A                     u240:
  1113  003A                     l1054:
  1114  003A  0871               	movf	_demandedSecondsTick+1,w
  1115  003B  0273               	subwf	_currentSecondsTick+1,w	;volatile
  1116  003C  1D03               	skipz
  1117  003D  2840               	goto	u255
  1118  003E  0870               	movf	_demandedSecondsTick,w
  1119  003F  0272               	subwf	_currentSecondsTick,w	;volatile
  1120  0040                     u255:
  1121  0040  1C03               	skipc
  1122  0041  2843               	goto	u251
  1123  0042  2844               	goto	u250
  1124  0043                     u251:
  1125  0043  287A               	goto	l1072
  1126  0044                     u250:
  1127  0044                     l1056:
  1128                           
  1129                           ;main.c: 103:                 {;main.c: 104:                     setState(STATE_OPEN_VAL
      +                          VE);
  1130  0044  3002               	movlw	2
  1131  0045  3180  2092  3180   	fcall	_setState
  1132  0048  287A               	goto	l1072
  1133  0049                     l1058:
  1134                           
  1135                           ;main.c: 110:                 if(currentSecondsTick >= demandedSecondsTick)
  1136  0049  0871               	movf	_demandedSecondsTick+1,w
  1137  004A  0273               	subwf	_currentSecondsTick+1,w	;volatile
  1138  004B  1D03               	skipz
  1139  004C  284F               	goto	u265
  1140  004D  0870               	movf	_demandedSecondsTick,w
  1141  004E  0272               	subwf	_currentSecondsTick,w	;volatile
  1142  004F                     u265:
  1143  004F  1C03               	skipc
  1144  0050  2852               	goto	u261
  1145  0051  2853               	goto	u260
  1146  0052                     u261:
  1147  0052  2858               	goto	l164
  1148  0053                     u260:
  1149  0053                     l1060:
  1150                           
  1151                           ;main.c: 111:                 {;main.c: 112:                     setState(STATE_END);
  1152  0053  3004               	movlw	4
  1153  0054  3180  2092  3180   	fcall	_setState
  1154                           
  1155                           ;main.c: 113:                 }
  1156  0057  287A               	goto	l1072
  1157  0058                     l164:	
  1158                           ;main.c: 114:                 else if(PORTAbits.RA4)
  1159                           
  1160  0058  1E0C               	btfss	12,4	;volatile
  1161  0059  285B               	goto	u271
  1162  005A  285C               	goto	u270
  1163  005B                     u271:
  1164  005B  287A               	goto	l159
  1165  005C                     u270:
  1166  005C                     l1062:
  1167                           
  1168                           ;main.c: 115:                 {;main.c: 116:                     setState(STATE_CLOSE_VA
      +                          LVE);
  1169  005C  3003               	movlw	3
  1170  005D  3180  2092  3180   	fcall	_setState
  1171  0060  287A               	goto	l1072
  1172  0061                     l167:	
  1173                           ;main.c: 121:             case STATE_CLOSE_VALVE:
  1174                           
  1175                           
  1176                           ;main.c: 122:                 if(PORTAbits.RA5)
  1177  0061  1E8C               	btfss	12,5	;volatile
  1178  0062  2864               	goto	u281
  1179  0063  2865               	goto	u280
  1180  0064                     u281:
  1181  0064  286A               	goto	l1066
  1182  0065                     u280:
  1183  0065                     l1064:
  1184                           
  1185                           ;main.c: 123:                 {;main.c: 124:                     setState(STATE_OPEN_VAL
      +                          VE);
  1186  0065  3002               	movlw	2
  1187  0066  3180  2092  3180   	fcall	_setState
  1188                           
  1189                           ;main.c: 125:                 }
  1190  0069  287A               	goto	l1072
  1191  006A                     l1066:
  1192  006A  0871               	movf	_demandedSecondsTick+1,w
  1193  006B  0273               	subwf	_currentSecondsTick+1,w	;volatile
  1194  006C  1D03               	skipz
  1195  006D  2870               	goto	u295
  1196  006E  0870               	movf	_demandedSecondsTick,w
  1197  006F  0272               	subwf	_currentSecondsTick,w	;volatile
  1198  0070                     u295:
  1199  0070  1C03               	skipc
  1200  0071  2873               	goto	u291
  1201  0072  2874               	goto	u290
  1202  0073                     u291:
  1203  0073  287A               	goto	l159
  1204  0074                     u290:
  1205  0074                     l1068:
  1206                           
  1207                           ;main.c: 127:                 {;main.c: 128:                     setState(STATE_END);
  1208  0074  3004               	movlw	4
  1209  0075  3180  2092  3180   	fcall	_setState
  1210  0078  287A               	goto	l1072
  1211  0079                     l172:	
  1212                           ;main.c: 133:                 while(1);
  1213                           
  1214  0079  2879               	goto	l172
  1215  007A                     l159:
  1216  007A                     l1072:
  1217  007A  0874               	movf	_currentState,w
  1218  007B  0020               	movlb	0	; select bank0
  1219  007C  00A2               	movwf	??_main
  1220  007D  01A3               	clrf	??_main+1
  1221                           
  1222                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1223                           ; Switch size 1, requested type "simple"
  1224                           ; Number of cases is 1, Range of values is 0 to 0
  1225                           ; switch strategies available:
  1226                           ; Name         Instructions Cycles
  1227                           ; simple_byte            4     3 (average)
  1228                           ; direct_byte            8     6 (fixed)
  1229                           ; jumptable            260     6 (fixed)
  1230                           ;	Chosen strategy is simple_byte
  1231  007E  0823               	movf	??_main+1,w
  1232  007F  3A00               	xorlw	0	; case 0
  1233  0080  1903               	skipnz
  1234  0081  2883               	goto	l1130
  1235  0082  287A               	goto	l1072
  1236  0083                     l1130:
  1237                           
  1238                           ; Switch size 1, requested type "simple"
  1239                           ; Number of cases is 4, Range of values is 1 to 4
  1240                           ; switch strategies available:
  1241                           ; Name         Instructions Cycles
  1242                           ; simple_byte           13     7 (average)
  1243                           ; direct_byte           17     9 (fixed)
  1244                           ; jumptable            263     9 (fixed)
  1245                           ;	Chosen strategy is simple_byte
  1246  0083  0822               	movf	??_main,w
  1247  0084  3A01               	xorlw	1	; case 1
  1248  0085  1903               	skipnz
  1249  0086  2836               	goto	l160
  1250  0087  3A03               	xorlw	3	; case 2
  1251  0088  1903               	skipnz
  1252  0089  2849               	goto	l1058
  1253  008A  3A01               	xorlw	1	; case 3
  1254  008B  1903               	skipnz
  1255  008C  2861               	goto	l167
  1256  008D  3A07               	xorlw	7	; case 4
  1257  008E  1903               	skipnz
  1258  008F  2879               	goto	l172
  1259  0090  287A               	goto	l1072
  1260  0091  2819               	ljmp	start
  1261  0092                     __end_of_main:
  1262                           
  1263                           	psect	text1
  1264  0092                     __ptext1:	
  1265 ;; *************** function _setState *****************
  1266 ;; Defined at:
  1267 ;;		line 146 in file "main.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;  newState        1    wreg     enum E2970
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;  newState        1    4[COMMON] enum E2970
  1272 ;; Return value:  Size  Location     Type
  1273 ;;                  1    wreg      void 
  1274 ;; Registers used:
  1275 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMMON   BANK0   BANK1
  1281 ;;      Params:         0       0       0
  1282 ;;      Locals:         1       0       0
  1283 ;;      Temps:          2       0       0
  1284 ;;      Totals:         3       0       0
  1285 ;;Total ram usage:        3 bytes
  1286 ;; Hardware stack levels used:    1
  1287 ;; Hardware stack levels required when called:    4
  1288 ;; This function calls:
  1289 ;;		Nothing
  1290 ;; This function is called by:
  1291 ;;		_main
  1292 ;; This function uses a non-reentrant model
  1293 ;;
  1294                           
  1295                           
  1296                           ;psect for function _setState
  1297  0092                     _setState:
  1298                           
  1299                           ;incstack = 0
  1300                           ; Regs used in _setState: [wreg-fsr0h+status,2+status,0]
  1301                           ;setState@newState stored from wreg
  1302  0092  00F9               	movwf	setState@newState
  1303  0093                     l798:
  1304                           
  1305                           ;main.c: 146: void setState(states_t newState);main.c: 147: {;main.c: 148:     if(newSta
      +                          te == currentState)
  1306  0093  0879               	movf	setState@newState,w
  1307  0094  0674               	xorwf	_currentState,w
  1308  0095  1D03               	skipz
  1309  0096  2898               	goto	u31
  1310  0097  2899               	goto	u30
  1311  0098                     u31:
  1312  0098  289A               	goto	l802
  1313  0099                     u30:
  1314  0099  28D9               	goto	l181
  1315  009A                     l802:
  1316                           
  1317                           ;main.c: 153:     currentSecondsTick = 0;
  1318  009A  01F2               	clrf	_currentSecondsTick	;volatile
  1319  009B  01F3               	clrf	_currentSecondsTick+1	;volatile
  1320                           
  1321                           ;main.c: 156:     switch(newState)
  1322  009C  28BF               	goto	l812
  1323  009D                     l184:	
  1324                           ;main.c: 159:             do { LATAbits.LATA1 = 0; } while(0);
  1325                           
  1326  009D  0022               	movlb	2	; select bank2
  1327  009E  108C               	bcf	12,1	;volatile
  1328  009F                     l186:	
  1329                           ;main.c: 160:             do { LATAbits.LATA2 = 0; } while(0);
  1330                           
  1331  009F  110C               	bcf	12,2	;volatile
  1332  00A0                     l804:
  1333                           
  1334                           ;main.c: 161:             demandedSecondsTick = currentSecondsTick + 1;
  1335  00A0  0872               	movf	_currentSecondsTick,w	;volatile
  1336  00A1  3E01               	addlw	1
  1337  00A2  00F0               	movwf	_demandedSecondsTick
  1338  00A3  3000               	movlw	0
  1339  00A4  3D73               	addwfc	_currentSecondsTick+1,w	;volatile
  1340  00A5  00F1               	movwf	_demandedSecondsTick+1
  1341                           
  1342                           ;main.c: 162:             break;
  1343  00A6  28D5               	goto	l814
  1344  00A7                     l190:	
  1345                           ;main.c: 165:             do { LATAbits.LATA1 = 1; } while(0);
  1346                           
  1347  00A7  0022               	movlb	2	; select bank2
  1348  00A8  148C               	bsf	12,1	;volatile
  1349  00A9                     l192:	
  1350                           ;main.c: 166:             do { LATAbits.LATA2 = 0; } while(0);
  1351                           
  1352  00A9  110C               	bcf	12,2	;volatile
  1353  00AA                     l806:
  1354                           
  1355                           ;main.c: 167:             demandedSecondsTick = currentSecondsTick + 60;
  1356  00AA  0872               	movf	_currentSecondsTick,w	;volatile
  1357  00AB  3E3C               	addlw	60
  1358  00AC  00F0               	movwf	_demandedSecondsTick
  1359  00AD  3000               	movlw	0
  1360  00AE  3D73               	addwfc	_currentSecondsTick+1,w	;volatile
  1361  00AF  00F1               	movwf	_demandedSecondsTick+1
  1362                           
  1363                           ;main.c: 168:             break;
  1364  00B0  28D5               	goto	l814
  1365  00B1                     l195:	
  1366                           ;main.c: 171:             do { LATAbits.LATA1 = 0; } while(0);
  1367                           
  1368  00B1  0022               	movlb	2	; select bank2
  1369  00B2  108C               	bcf	12,1	;volatile
  1370  00B3                     l197:	
  1371                           ;main.c: 172:             do { LATAbits.LATA2 = 1; } while(0);
  1372                           
  1373  00B3  150C               	bsf	12,2	;volatile
  1374  00B4                     l808:
  1375                           
  1376                           ;main.c: 173:             demandedSecondsTick = currentSecondsTick + 10;
  1377  00B4  0872               	movf	_currentSecondsTick,w	;volatile
  1378  00B5  3E0A               	addlw	10
  1379  00B6  00F0               	movwf	_demandedSecondsTick
  1380  00B7  3000               	movlw	0
  1381  00B8  3D73               	addwfc	_currentSecondsTick+1,w	;volatile
  1382  00B9  00F1               	movwf	_demandedSecondsTick+1
  1383                           
  1384                           ;main.c: 174:             break;
  1385  00BA  28D5               	goto	l814
  1386  00BB                     l200:	
  1387                           ;main.c: 177:             do { LATAbits.LATA1 = 0; } while(0);
  1388                           
  1389  00BB  0022               	movlb	2	; select bank2
  1390  00BC  108C               	bcf	12,1	;volatile
  1391  00BD                     l202:	
  1392                           ;main.c: 178:             do { LATAbits.LATA2 = 0; } while(0);
  1393                           
  1394  00BD  110C               	bcf	12,2	;volatile
  1395  00BE  28D5               	goto	l814
  1396  00BF                     l812:
  1397  00BF  0879               	movf	setState@newState,w
  1398  00C0  00F7               	movwf	??_setState
  1399  00C1  01F8               	clrf	??_setState+1
  1400                           
  1401                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1402                           ; Switch size 1, requested type "simple"
  1403                           ; Number of cases is 1, Range of values is 0 to 0
  1404                           ; switch strategies available:
  1405                           ; Name         Instructions Cycles
  1406                           ; simple_byte            4     3 (average)
  1407                           ; direct_byte            8     6 (fixed)
  1408                           ; jumptable            260     6 (fixed)
  1409                           ;	Chosen strategy is simple_byte
  1410  00C2  0878               	movf	??_setState+1,w
  1411  00C3  3A00               	xorlw	0	; case 0
  1412  00C4  1903               	skipnz
  1413  00C5  28C7               	goto	l1132
  1414  00C6  28D5               	goto	l814
  1415  00C7                     l1132:
  1416                           
  1417                           ; Switch size 1, requested type "simple"
  1418                           ; Number of cases is 4, Range of values is 1 to 4
  1419                           ; switch strategies available:
  1420                           ; Name         Instructions Cycles
  1421                           ; simple_byte           13     7 (average)
  1422                           ; direct_byte           17     9 (fixed)
  1423                           ; jumptable            263     9 (fixed)
  1424                           ;	Chosen strategy is simple_byte
  1425  00C7  0877               	movf	??_setState,w
  1426  00C8  3A01               	xorlw	1	; case 1
  1427  00C9  1903               	skipnz
  1428  00CA  289D               	goto	l184
  1429  00CB  3A03               	xorlw	3	; case 2
  1430  00CC  1903               	skipnz
  1431  00CD  28A7               	goto	l190
  1432  00CE  3A01               	xorlw	1	; case 3
  1433  00CF  1903               	skipnz
  1434  00D0  28B1               	goto	l195
  1435  00D1  3A07               	xorlw	7	; case 4
  1436  00D2  1903               	skipnz
  1437  00D3  28BB               	goto	l200
  1438  00D4  28D5               	goto	l814
  1439  00D5                     l814:
  1440                           
  1441                           ;main.c: 182:     currentState = newState;
  1442  00D5  0879               	movf	setState@newState,w
  1443  00D6  00F7               	movwf	??_setState
  1444  00D7  0877               	movf	??_setState,w
  1445  00D8  00F4               	movwf	_currentState
  1446  00D9                     l181:
  1447  00D9  0008               	return
  1448  00DA                     __end_of_setState:
  1449                           
  1450                           	psect	text2
  1451  0157                     __ptext2:	
  1452 ;; *************** function _TMR1_StartTimer *****************
  1453 ;; Defined at:
  1454 ;;		line 93 in file "mcc_generated_files/tmr1.c"
  1455 ;; Parameters:    Size  Location     Type
  1456 ;;		None
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;		None
  1459 ;; Return value:  Size  Location     Type
  1460 ;;                  1    wreg      void 
  1461 ;; Registers used:
  1462 ;;		None
  1463 ;; Tracked objects:
  1464 ;;		On entry : 0/0
  1465 ;;		On exit  : 0/0
  1466 ;;		Unchanged: 0/0
  1467 ;; Data sizes:     COMMON   BANK0   BANK1
  1468 ;;      Params:         0       0       0
  1469 ;;      Locals:         0       0       0
  1470 ;;      Temps:          0       0       0
  1471 ;;      Totals:         0       0       0
  1472 ;;Total ram usage:        0 bytes
  1473 ;; Hardware stack levels used:    1
  1474 ;; Hardware stack levels required when called:    4
  1475 ;; This function calls:
  1476 ;;		Nothing
  1477 ;; This function is called by:
  1478 ;;		_main
  1479 ;; This function uses a non-reentrant model
  1480 ;;
  1481                           
  1482                           
  1483                           ;psect for function _TMR1_StartTimer
  1484  0157                     _TMR1_StartTimer:
  1485  0157                     l792:	
  1486                           ;incstack = 0
  1487                           ; Regs used in _TMR1_StartTimer: []
  1488                           
  1489                           
  1490                           ;mcc_generated_files/tmr1.c: 96:     T1CONbits.TMR1ON = 1;
  1491  0157  0020               	movlb	0	; select bank0
  1492  0158  1418               	bsf	24,0	;volatile
  1493  0159                     l81:
  1494  0159  0008               	return
  1495  015A                     __end_of_TMR1_StartTimer:
  1496                           
  1497                           	psect	text3
  1498  011A                     __ptext3:	
  1499 ;; *************** function _SYSTEM_Initialize *****************
  1500 ;; Defined at:
  1501 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1502 ;; Parameters:    Size  Location     Type
  1503 ;;		None
  1504 ;; Auto vars:     Size  Location     Type
  1505 ;;		None
  1506 ;; Return value:  Size  Location     Type
  1507 ;;                  1    wreg      void 
  1508 ;; Registers used:
  1509 ;;		wreg, status,2, status,0, pclath, cstack
  1510 ;; Tracked objects:
  1511 ;;		On entry : 0/0
  1512 ;;		On exit  : 0/0
  1513 ;;		Unchanged: 0/0
  1514 ;; Data sizes:     COMMON   BANK0   BANK1
  1515 ;;      Params:         0       0       0
  1516 ;;      Locals:         0       0       0
  1517 ;;      Temps:          0       0       0
  1518 ;;      Totals:         0       0       0
  1519 ;;Total ram usage:        0 bytes
  1520 ;; Hardware stack levels used:    1
  1521 ;; Hardware stack levels required when called:    6
  1522 ;; This function calls:
  1523 ;;		_OSCILLATOR_Initialize
  1524 ;;		_PIN_MANAGER_Initialize
  1525 ;;		_TMR1_Initialize
  1526 ;;		_WDT_Initialize
  1527 ;; This function is called by:
  1528 ;;		_main
  1529 ;; This function uses a non-reentrant model
  1530 ;;
  1531                           
  1532                           
  1533                           ;psect for function _SYSTEM_Initialize
  1534  011A                     _SYSTEM_Initialize:
  1535  011A                     l954:	
  1536                           ;incstack = 0
  1537                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1538                           
  1539                           
  1540                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1541  011A  3180  20F2  3181   	fcall	_PIN_MANAGER_Initialize
  1542                           
  1543                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1544  011D  3181  2141  3181   	fcall	_OSCILLATOR_Initialize
  1545                           
  1546                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  1547  0120  3181  2153  3181   	fcall	_WDT_Initialize
  1548                           
  1549                           ;mcc_generated_files/mcc.c: 56:     TMR1_Initialize();
  1550  0123  3180  20DA  3181   	fcall	_TMR1_Initialize
  1551  0126                     l19:
  1552  0126  0008               	return
  1553  0127                     __end_of_SYSTEM_Initialize:
  1554                           
  1555                           	psect	text4
  1556  0153                     __ptext4:	
  1557 ;; *************** function _WDT_Initialize *****************
  1558 ;; Defined at:
  1559 ;;		line 69 in file "mcc_generated_files/mcc.c"
  1560 ;; Parameters:    Size  Location     Type
  1561 ;;		None
  1562 ;; Auto vars:     Size  Location     Type
  1563 ;;		None
  1564 ;; Return value:  Size  Location     Type
  1565 ;;                  1    wreg      void 
  1566 ;; Registers used:
  1567 ;;		wreg
  1568 ;; Tracked objects:
  1569 ;;		On entry : 0/0
  1570 ;;		On exit  : 0/0
  1571 ;;		Unchanged: 0/0
  1572 ;; Data sizes:     COMMON   BANK0   BANK1
  1573 ;;      Params:         0       0       0
  1574 ;;      Locals:         0       0       0
  1575 ;;      Temps:          0       0       0
  1576 ;;      Totals:         0       0       0
  1577 ;;Total ram usage:        0 bytes
  1578 ;; Hardware stack levels used:    1
  1579 ;; Hardware stack levels required when called:    4
  1580 ;; This function calls:
  1581 ;;		Nothing
  1582 ;; This function is called by:
  1583 ;;		_SYSTEM_Initialize
  1584 ;; This function uses a non-reentrant model
  1585 ;;
  1586                           
  1587                           
  1588                           ;psect for function _WDT_Initialize
  1589  0153                     _WDT_Initialize:
  1590  0153                     l754:	
  1591                           ;incstack = 0
  1592                           ; Regs used in _WDT_Initialize: [wreg]
  1593                           
  1594                           
  1595                           ;mcc_generated_files/mcc.c: 72:     WDTCON = 0x16;
  1596  0153  3016               	movlw	22
  1597  0154  0021               	movlb	1	; select bank1
  1598  0155  0097               	movwf	23	;volatile
  1599  0156                     l25:
  1600  0156  0008               	return
  1601  0157                     __end_of_WDT_Initialize:
  1602                           
  1603                           	psect	text5
  1604  00DA                     __ptext5:	
  1605 ;; *************** function _TMR1_Initialize *****************
  1606 ;; Defined at:
  1607 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  1608 ;; Parameters:    Size  Location     Type
  1609 ;;		None
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;		None
  1612 ;; Return value:  Size  Location     Type
  1613 ;;                  1    wreg      void 
  1614 ;; Registers used:
  1615 ;;		wreg, status,2, status,0, pclath, cstack
  1616 ;; Tracked objects:
  1617 ;;		On entry : 0/0
  1618 ;;		On exit  : 0/0
  1619 ;;		Unchanged: 0/0
  1620 ;; Data sizes:     COMMON   BANK0   BANK1
  1621 ;;      Params:         0       0       0
  1622 ;;      Locals:         0       0       0
  1623 ;;      Temps:          0       0       0
  1624 ;;      Totals:         0       0       0
  1625 ;;Total ram usage:        0 bytes
  1626 ;; Hardware stack levels used:    1
  1627 ;; Hardware stack levels required when called:    5
  1628 ;; This function calls:
  1629 ;;		_TMR1_SetInterruptHandler
  1630 ;; This function is called by:
  1631 ;;		_SYSTEM_Initialize
  1632 ;; This function uses a non-reentrant model
  1633 ;;
  1634                           
  1635                           
  1636                           ;psect for function _TMR1_Initialize
  1637  00DA                     _TMR1_Initialize:
  1638  00DA                     l920:	
  1639                           ;incstack = 0
  1640                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1641                           
  1642                           
  1643                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  1644  00DA  0020               	movlb	0	; select bank0
  1645  00DB  0199               	clrf	25	;volatile
  1646  00DC                     l922:
  1647                           
  1648                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x86;
  1649  00DC  3086               	movlw	134
  1650  00DD  0097               	movwf	23	;volatile
  1651  00DE                     l924:
  1652                           
  1653                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xE8;
  1654  00DE  30E8               	movlw	232
  1655  00DF  0096               	movwf	22	;volatile
  1656  00E0                     l926:
  1657                           
  1658                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  1659  00E0  1011               	bcf	17,0	;volatile
  1660  00E1                     l928:
  1661                           
  1662                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  1663  00E1  0817               	movf	23,w	;volatile
  1664  00E2  00FB               	movwf	_timer1ReloadVal+1	;volatile
  1665  00E3  0816               	movf	22,w	;volatile
  1666  00E4  00FA               	movwf	_timer1ReloadVal	;volatile
  1667  00E5                     l930:
  1668                           
  1669                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  1670  00E5  0021               	movlb	1	; select bank1
  1671  00E6  1411               	bsf	17,0	;volatile
  1672  00E7                     l932:
  1673                           
  1674                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  1675  00E7  305A               	movlw	low _TMR1_DefaultInterruptHandler
  1676  00E8  00F7               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  1677  00E9  3001               	movlw	high _TMR1_DefaultInterruptHandler
  1678  00EA  00F8               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  1679  00EB  3181  2148  3180   	fcall	_TMR1_SetInterruptHandler
  1680  00EE                     l934:
  1681                           
  1682                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x41;
  1683  00EE  3041               	movlw	65
  1684  00EF  0020               	movlb	0	; select bank0
  1685  00F0  0098               	movwf	24	;volatile
  1686  00F1                     l78:
  1687  00F1  0008               	return
  1688  00F2                     __end_of_TMR1_Initialize:
  1689                           
  1690                           	psect	text6
  1691  0148                     __ptext6:	
  1692 ;; *************** function _TMR1_SetInterruptHandler *****************
  1693 ;; Defined at:
  1694 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  1695 ;; Parameters:    Size  Location     Type
  1696 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  1697 ;;		 -> secondsTick(1), TMR1_DefaultInterruptHandler(1), 
  1698 ;; Auto vars:     Size  Location     Type
  1699 ;;		None
  1700 ;; Return value:  Size  Location     Type
  1701 ;;                  1    wreg      void 
  1702 ;; Registers used:
  1703 ;;		wreg
  1704 ;; Tracked objects:
  1705 ;;		On entry : 0/0
  1706 ;;		On exit  : 0/0
  1707 ;;		Unchanged: 0/0
  1708 ;; Data sizes:     COMMON   BANK0   BANK1
  1709 ;;      Params:         2       0       0
  1710 ;;      Locals:         0       0       0
  1711 ;;      Temps:          0       0       0
  1712 ;;      Totals:         2       0       0
  1713 ;;Total ram usage:        2 bytes
  1714 ;; Hardware stack levels used:    1
  1715 ;; Hardware stack levels required when called:    4
  1716 ;; This function calls:
  1717 ;;		Nothing
  1718 ;; This function is called by:
  1719 ;;		_TMR1_Initialize
  1720 ;;		_main
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724                           
  1725                           ;psect for function _TMR1_SetInterruptHandler
  1726  0148                     _TMR1_SetInterruptHandler:
  1727  0148                     l916:	
  1728                           ;incstack = 0
  1729                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  1730                           
  1731                           
  1732                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  1733  0148  0878               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  1734  0149  0020               	movlb	0	; select bank0
  1735  014A  00A1               	movwf	_TMR1_InterruptHandler+1
  1736  014B  0877               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  1737  014C  00A0               	movwf	_TMR1_InterruptHandler
  1738  014D                     l111:
  1739  014D  0008               	return
  1740  014E                     __end_of_TMR1_SetInterruptHandler:
  1741                           
  1742                           	psect	text7
  1743  00F2                     __ptext7:	
  1744 ;; *************** function _PIN_MANAGER_Initialize *****************
  1745 ;; Defined at:
  1746 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;		None
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;		None
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1    wreg      void 
  1753 ;; Registers used:
  1754 ;;		wreg, status,2
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMMON   BANK0   BANK1
  1760 ;;      Params:         0       0       0
  1761 ;;      Locals:         0       0       0
  1762 ;;      Temps:          0       0       0
  1763 ;;      Totals:         0       0       0
  1764 ;;Total ram usage:        0 bytes
  1765 ;; Hardware stack levels used:    1
  1766 ;; Hardware stack levels required when called:    4
  1767 ;; This function calls:
  1768 ;;		Nothing
  1769 ;; This function is called by:
  1770 ;;		_SYSTEM_Initialize
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774                           
  1775                           ;psect for function _PIN_MANAGER_Initialize
  1776  00F2                     _PIN_MANAGER_Initialize:
  1777  00F2                     l736:	
  1778                           ;incstack = 0
  1779                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1780                           
  1781                           
  1782                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1783  00F2  0022               	movlb	2	; select bank2
  1784  00F3  018C               	clrf	12	;volatile
  1785  00F4                     l738:
  1786                           
  1787                           ;mcc_generated_files/pin_manager.c: 65:     TRISA = 0x39;
  1788  00F4  3039               	movlw	57
  1789  00F5  0021               	movlb	1	; select bank1
  1790  00F6  008C               	movwf	12	;volatile
  1791  00F7                     l740:
  1792                           
  1793                           ;mcc_generated_files/pin_manager.c: 70:     ANSELA = 0x07;
  1794  00F7  3007               	movlw	7
  1795  00F8  0023               	movlb	3	; select bank3
  1796  00F9  008C               	movwf	12	;volatile
  1797                           
  1798                           ;mcc_generated_files/pin_manager.c: 75:     WPUA = 0x00;
  1799  00FA  0024               	movlb	4	; select bank4
  1800  00FB  018C               	clrf	12	;volatile
  1801  00FC                     l742:
  1802                           
  1803                           ;mcc_generated_files/pin_manager.c: 76:     OPTION_REGbits.nWPUEN = 1;
  1804  00FC  0021               	movlb	1	; select bank1
  1805  00FD  1795               	bsf	21,7	;volatile
  1806                           
  1807                           ;mcc_generated_files/pin_manager.c: 81:     ODCONA = 0x00;
  1808  00FE  0025               	movlb	5	; select bank5
  1809  00FF  018C               	clrf	12	;volatile
  1810  0100                     l744:
  1811                           
  1812                           ;mcc_generated_files/pin_manager.c: 86:     SLRCONA = 0x37;
  1813  0100  3037               	movlw	55
  1814  0101  0026               	movlb	6	; select bank6
  1815  0102  008C               	movwf	12	;volatile
  1816  0103                     l746:
  1817                           
  1818                           ;mcc_generated_files/pin_manager.c: 91:     INLVLA = 0x3F;
  1819  0103  303F               	movlw	63
  1820  0104  0027               	movlb	7	; select bank7
  1821  0105  008C               	movwf	12	;volatile
  1822                           
  1823                           ;mcc_generated_files/pin_manager.c: 96:     APFCON = 0x00;
  1824  0106  0022               	movlb	2	; select bank2
  1825  0107  019D               	clrf	29	;volatile
  1826  0108                     l46:
  1827  0108  0008               	return
  1828  0109                     __end_of_PIN_MANAGER_Initialize:
  1829                           
  1830                           	psect	text8
  1831  0141                     __ptext8:	
  1832 ;; *************** function _OSCILLATOR_Initialize *****************
  1833 ;; Defined at:
  1834 ;;		line 59 in file "mcc_generated_files/mcc.c"
  1835 ;; Parameters:    Size  Location     Type
  1836 ;;		None
  1837 ;; Auto vars:     Size  Location     Type
  1838 ;;		None
  1839 ;; Return value:  Size  Location     Type
  1840 ;;                  1    wreg      void 
  1841 ;; Registers used:
  1842 ;;		wreg, status,2
  1843 ;; Tracked objects:
  1844 ;;		On entry : 0/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMMON   BANK0   BANK1
  1848 ;;      Params:         0       0       0
  1849 ;;      Locals:         0       0       0
  1850 ;;      Temps:          0       0       0
  1851 ;;      Totals:         0       0       0
  1852 ;;Total ram usage:        0 bytes
  1853 ;; Hardware stack levels used:    1
  1854 ;; Hardware stack levels required when called:    4
  1855 ;; This function calls:
  1856 ;;		Nothing
  1857 ;; This function is called by:
  1858 ;;		_SYSTEM_Initialize
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           
  1862                           
  1863                           ;psect for function _OSCILLATOR_Initialize
  1864  0141                     _OSCILLATOR_Initialize:
  1865  0141                     l748:	
  1866                           ;incstack = 0
  1867                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1868                           
  1869                           
  1870                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x02;
  1871  0141  3002               	movlw	2
  1872  0142  0021               	movlb	1	; select bank1
  1873  0143  0099               	movwf	25	;volatile
  1874  0144                     l750:
  1875                           
  1876                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
  1877  0144  0198               	clrf	24	;volatile
  1878  0145                     l752:
  1879                           
  1880                           ;mcc_generated_files/mcc.c: 66:     BORCON = 0x00;
  1881  0145  0022               	movlb	2	; select bank2
  1882  0146  0196               	clrf	22	;volatile
  1883  0147                     l22:
  1884  0147  0008               	return
  1885  0148                     __end_of_OSCILLATOR_Initialize:
  1886                           
  1887                           	psect	intentry
  1888  0004                     __pintentry:	
  1889 ;; *************** function _INTERRUPT_InterruptManager *****************
  1890 ;; Defined at:
  1891 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1892 ;; Parameters:    Size  Location     Type
  1893 ;;		None
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;		None
  1896 ;; Return value:  Size  Location     Type
  1897 ;;                  1    wreg      void 
  1898 ;; Registers used:
  1899 ;;		wreg, status,2, status,0, pclath, cstack
  1900 ;; Tracked objects:
  1901 ;;		On entry : 0/0
  1902 ;;		On exit  : 0/0
  1903 ;;		Unchanged: 0/0
  1904 ;; Data sizes:     COMMON   BANK0   BANK1
  1905 ;;      Params:         0       0       0
  1906 ;;      Locals:         0       0       0
  1907 ;;      Temps:          0       0       0
  1908 ;;      Totals:         0       0       0
  1909 ;;Total ram usage:        0 bytes
  1910 ;; Hardware stack levels used:    1
  1911 ;; Hardware stack levels required when called:    3
  1912 ;; This function calls:
  1913 ;;		_TMR1_ISR
  1914 ;; This function is called by:
  1915 ;;		Interrupt level 1
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919  0004                     _INTERRUPT_InterruptManager:
  1920                           
  1921                           ;incstack = 0
  1922  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1923                           
  1924                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  1925  0005  3180               	pagesel	$
  1926  0006                     i1l962:
  1927                           
  1928                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  1929  0006  1F0B               	btfss	11,6	;volatile
  1930  0007  2809               	goto	u15_21
  1931  0008  280A               	goto	u15_20
  1932  0009                     u15_21:
  1933  0009  2817               	goto	i1l131
  1934  000A                     u15_20:
  1935  000A                     i1l964:
  1936                           
  1937                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  1938  000A  0021               	movlb	1	; select bank1
  1939  000B  1C11               	btfss	17,0	;volatile
  1940  000C  280E               	goto	u16_21
  1941  000D  280F               	goto	u16_20
  1942  000E                     u16_21:
  1943  000E  2817               	goto	i1l131
  1944  000F                     u16_20:
  1945  000F                     i1l966:
  1946  000F  0020               	movlb	0	; select bank0
  1947  0010  1C11               	btfss	17,0	;volatile
  1948  0011  2813               	goto	u17_21
  1949  0012  2814               	goto	u17_20
  1950  0013                     u17_21:
  1951  0013  2817               	goto	i1l131
  1952  0014                     u17_20:
  1953  0014                     i1l968:
  1954                           
  1955                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR1_ISR();
  1956  0014  3181  2127  3180   	fcall	_TMR1_ISR
  1957  0017                     i1l131:	
  1958                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  1959                           
  1960  0017  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1961  0018  0009               	retfie
  1962  0019                     __end_of_INTERRUPT_InterruptManager:
  1963                           
  1964                           	psect	text10
  1965  0127                     __ptext10:	
  1966 ;; *************** function _TMR1_ISR *****************
  1967 ;; Defined at:
  1968 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;		None
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;		None
  1973 ;; Return value:  Size  Location     Type
  1974 ;;                  1    wreg      void 
  1975 ;; Registers used:
  1976 ;;		wreg, status,2, status,0, pclath, cstack
  1977 ;; Tracked objects:
  1978 ;;		On entry : 0/0
  1979 ;;		On exit  : 0/0
  1980 ;;		Unchanged: 0/0
  1981 ;; Data sizes:     COMMON   BANK0   BANK1
  1982 ;;      Params:         0       0       0
  1983 ;;      Locals:         0       0       0
  1984 ;;      Temps:          0       0       0
  1985 ;;      Totals:         0       0       0
  1986 ;;Total ram usage:        0 bytes
  1987 ;; Hardware stack levels used:    1
  1988 ;; Hardware stack levels required when called:    2
  1989 ;; This function calls:
  1990 ;;		_TMR1_CallBack
  1991 ;;		_TMR1_WriteTimer
  1992 ;; This function is called by:
  1993 ;;		_INTERRUPT_InterruptManager
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           
  1997                           
  1998                           ;psect for function _TMR1_ISR
  1999  0127                     _TMR1_ISR:
  2000  0127                     i1l956:	
  2001                           ;incstack = 0
  2002                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  2003                           
  2004                           
  2005                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  2006  0127  0020               	movlb	0	; select bank0
  2007  0128  1011               	bcf	17,0	;volatile
  2008  0129                     i1l958:
  2009                           
  2010                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  2011  0129  087B               	movf	_timer1ReloadVal+1,w	;volatile
  2012  012A  00F6               	movwf	TMR1_WriteTimer@timerVal+1
  2013  012B  087A               	movf	_timer1ReloadVal,w	;volatile
  2014  012C  00F5               	movwf	TMR1_WriteTimer@timerVal
  2015  012D  3181  2109  3181   	fcall	_TMR1_WriteTimer
  2016                           
  2017                           ;mcc_generated_files/tmr1.c: 166:     TMR1_CallBack();
  2018  0130  3181  2134  3181   	fcall	_TMR1_CallBack
  2019  0133                     i1l104:
  2020  0133  0008               	return
  2021  0134                     __end_of_TMR1_ISR:
  2022                           
  2023                           	psect	text11
  2024  0109                     __ptext11:	
  2025 ;; *************** function _TMR1_WriteTimer *****************
  2026 ;; Defined at:
  2027 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  2028 ;; Parameters:    Size  Location     Type
  2029 ;;  timerVal        2    0[COMMON] unsigned short 
  2030 ;; Auto vars:     Size  Location     Type
  2031 ;;		None
  2032 ;; Return value:  Size  Location     Type
  2033 ;;                  1    wreg      void 
  2034 ;; Registers used:
  2035 ;;		wreg, status,2
  2036 ;; Tracked objects:
  2037 ;;		On entry : 0/0
  2038 ;;		On exit  : 0/0
  2039 ;;		Unchanged: 0/0
  2040 ;; Data sizes:     COMMON   BANK0   BANK1
  2041 ;;      Params:         2       0       0
  2042 ;;      Locals:         0       0       0
  2043 ;;      Temps:          0       0       0
  2044 ;;      Totals:         2       0       0
  2045 ;;Total ram usage:        2 bytes
  2046 ;; Hardware stack levels used:    1
  2047 ;; This function calls:
  2048 ;;		Nothing
  2049 ;; This function is called by:
  2050 ;;		_TMR1_ISR
  2051 ;;		_TMR1_Reload
  2052 ;; This function uses a non-reentrant model
  2053 ;;
  2054                           
  2055                           
  2056                           ;psect for function _TMR1_WriteTimer
  2057  0109                     _TMR1_WriteTimer:
  2058  0109                     i1l936:	
  2059                           ;incstack = 0
  2060                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  2061                           
  2062                           
  2063                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  2064  0109  0020               	movlb	0	; select bank0
  2065  010A  1D18               	btfss	24,2	;volatile
  2066  010B  290D               	goto	u13_21
  2067  010C  290E               	goto	u13_20
  2068  010D                     u13_21:
  2069  010D  2915               	goto	i1l946
  2070  010E                     u13_20:
  2071  010E                     i1l938:
  2072                           
  2073                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  2074  010E  1018               	bcf	24,0	;volatile
  2075  010F                     i1l940:
  2076                           
  2077                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (timerVal >> 8);
  2078  010F  0876               	movf	TMR1_WriteTimer@timerVal+1,w
  2079  0110  0097               	movwf	23	;volatile
  2080  0111                     i1l942:
  2081                           
  2082                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = timerVal;
  2083  0111  0875               	movf	TMR1_WriteTimer@timerVal,w
  2084  0112  0096               	movwf	22	;volatile
  2085  0113                     i1l944:
  2086                           
  2087                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  2088  0113  1418               	bsf	24,0	;volatile
  2089                           
  2090                           ;mcc_generated_files/tmr1.c: 133:     }
  2091  0114  2919               	goto	i1l92
  2092  0115                     i1l946:
  2093                           
  2094                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (timerVal >> 8);
  2095  0115  0876               	movf	TMR1_WriteTimer@timerVal+1,w
  2096  0116  0097               	movwf	23	;volatile
  2097  0117                     i1l948:
  2098                           
  2099                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = timerVal;
  2100  0117  0875               	movf	TMR1_WriteTimer@timerVal,w
  2101  0118  0096               	movwf	22	;volatile
  2102  0119                     i1l92:
  2103  0119  0008               	return
  2104  011A                     __end_of_TMR1_WriteTimer:
  2105                           
  2106                           	psect	text12
  2107  0134                     __ptext12:	
  2108 ;; *************** function _TMR1_CallBack *****************
  2109 ;; Defined at:
  2110 ;;		line 169 in file "mcc_generated_files/tmr1.c"
  2111 ;; Parameters:    Size  Location     Type
  2112 ;;		None
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;		None
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  1    wreg      void 
  2117 ;; Registers used:
  2118 ;;		wreg, status,2, status,0, pclath, cstack
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMMON   BANK0   BANK1
  2124 ;;      Params:         0       0       0
  2125 ;;      Locals:         0       0       0
  2126 ;;      Temps:          0       0       0
  2127 ;;      Totals:         0       0       0
  2128 ;;Total ram usage:        0 bytes
  2129 ;; Hardware stack levels used:    1
  2130 ;; Hardware stack levels required when called:    1
  2131 ;; This function calls:
  2132 ;;		Absolute function
  2133 ;;		_TMR1_DefaultInterruptHandler
  2134 ;;		_secondsTick
  2135 ;; This function is called by:
  2136 ;;		_TMR1_ISR
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139                           
  2140                           
  2141                           ;psect for function _TMR1_CallBack
  2142  0134                     _TMR1_CallBack:
  2143  0134                     i1l950:	
  2144                           ;incstack = 0
  2145                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
  2146                           
  2147                           
  2148                           ;mcc_generated_files/tmr1.c: 172:     if(TMR1_InterruptHandler)
  2149  0134  0020               	movlb	0	; select bank0
  2150  0135  0820               	movf	_TMR1_InterruptHandler,w
  2151  0136  0421               	iorwf	_TMR1_InterruptHandler+1,w
  2152  0137  1903               	btfsc	3,2
  2153  0138  293A               	goto	u14_21
  2154  0139  293B               	goto	u14_20
  2155  013A                     u14_21:
  2156  013A  2940               	goto	i1l108
  2157  013B                     u14_20:
  2158  013B                     i1l952:
  2159                           
  2160                           ;mcc_generated_files/tmr1.c: 173:     {;mcc_generated_files/tmr1.c: 174:         TMR1_In
      +                          terruptHandler();
  2161  013B  0821               	movf	_TMR1_InterruptHandler+1,w
  2162  013C  008A               	movwf	10
  2163  013D  0820               	movf	_TMR1_InterruptHandler,w
  2164  013E  000A               	callw
  2165  013F  3181               	pagesel	$
  2166  0140                     i1l108:
  2167  0140  0008               	return
  2168  0141                     __end_of_TMR1_CallBack:
  2169                           
  2170                           	psect	text13
  2171  015A                     __ptext13:	
  2172 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  2173 ;; Defined at:
  2174 ;;		line 182 in file "mcc_generated_files/tmr1.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;		None
  2177 ;; Auto vars:     Size  Location     Type
  2178 ;;		None
  2179 ;; Return value:  Size  Location     Type
  2180 ;;                  1    wreg      void 
  2181 ;; Registers used:
  2182 ;;		None
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMMON   BANK0   BANK1
  2188 ;;      Params:         0       0       0
  2189 ;;      Locals:         0       0       0
  2190 ;;      Temps:          0       0       0
  2191 ;;      Totals:         0       0       0
  2192 ;;Total ram usage:        0 bytes
  2193 ;; Hardware stack levels used:    1
  2194 ;; This function calls:
  2195 ;;		Nothing
  2196 ;; This function is called by:
  2197 ;;		_TMR1_Initialize
  2198 ;;		_TMR1_CallBack
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202                           
  2203                           ;psect for function _TMR1_DefaultInterruptHandler
  2204  015A                     _TMR1_DefaultInterruptHandler:
  2205  015A                     i1l114:	
  2206                           ;incstack = 0
  2207                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  2208                           
  2209  015A  0008               	return
  2210  015B                     __end_of_TMR1_DefaultInterruptHandler:
  2211                           
  2212                           	psect	text14
  2213  014E                     __ptext14:	
  2214 ;; *************** function _secondsTick *****************
  2215 ;; Defined at:
  2216 ;;		line 186 in file "main.c"
  2217 ;; Parameters:    Size  Location     Type
  2218 ;;		None
  2219 ;; Auto vars:     Size  Location     Type
  2220 ;;		None
  2221 ;; Return value:  Size  Location     Type
  2222 ;;                  1    wreg      void 
  2223 ;; Registers used:
  2224 ;;		wreg
  2225 ;; Tracked objects:
  2226 ;;		On entry : 0/0
  2227 ;;		On exit  : 0/0
  2228 ;;		Unchanged: 0/0
  2229 ;; Data sizes:     COMMON   BANK0   BANK1
  2230 ;;      Params:         0       0       0
  2231 ;;      Locals:         0       0       0
  2232 ;;      Temps:          0       0       0
  2233 ;;      Totals:         0       0       0
  2234 ;;Total ram usage:        0 bytes
  2235 ;; Hardware stack levels used:    1
  2236 ;; This function calls:
  2237 ;;		Nothing
  2238 ;; This function is called by:
  2239 ;;		_main
  2240 ;;		_TMR1_CallBack
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243                           
  2244                           
  2245                           ;psect for function _secondsTick
  2246  014E                     _secondsTick:
  2247  014E                     i1l918:	
  2248                           ;incstack = 0
  2249                           ; Regs used in _secondsTick: [wreg]
  2250                           
  2251                           
  2252                           ;main.c: 188:     currentSecondsTick++;
  2253  014E  3001               	movlw	1
  2254  014F  07F2               	addwf	_currentSecondsTick,f	;volatile
  2255  0150  3000               	movlw	0
  2256  0151  3DF3               	addwfc	_currentSecondsTick+1,f	;volatile
  2257  0152                     i1l206:
  2258  0152  0008               	return
  2259  0153                     __end_of_secondsTick:
  2260  007E                     btemp	set	126	;btemp
  2261  007E                     int$flags	set	126
  2262  007E                     wtemp0	set	126
  2263                           
  2264                           	psect	config
  2265                           
  2266                           ;Config register CONFIG1 @ 0x8007
  2267                           ;	
  2268                           ;	FOSC = INTOSC, INTOSC oscillator; I/O function on CLKIN pin
  2269                           ;	Watchdog Timer Enable
  2270                           ;	WDTE = OFF, WDT disabled
  2271                           ;	Power-up Timer Enable
  2272                           ;	PWRTE = OFF, PWRT disabled
  2273                           ;	MCLR Pin Function Select
  2274                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2275                           ;	Flash Program Memory Code Protection
  2276                           ;	CP = OFF, Program memory code protection is disabled
  2277                           ;	Brown-out Reset Enable
  2278                           ;	BOREN = ON, Brown-out Reset enabled
  2279                           ;	Clock Out Enable
  2280                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2281  8007                     	org	32775
  2282  8007  3FE4               	dw	16356
  2283                           
  2284                           ;Config register CONFIG2 @ 0x8008
  2285                           ;	Flash Memory Self-Write Protection
  2286                           ;	WRT = OFF, Write protection off
  2287                           ;	PLL Enable
  2288                           ;	PLLEN = OFF, 4x PLL disabled
  2289                           ;	Stack Overflow/Underflow Reset Enable
  2290                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2291                           ;	Brown-out Reset Voltage Selection
  2292                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2293                           ;	Low Power Brown-out Reset enable bit
  2294                           ;	LPBOREN = OFF, LPBOR is disabled
  2295                           ;	Low-Voltage Programming Enable
  2296                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  2297  8008                     	org	32776
  2298  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      12
    BANK0            80      2       4
    BANK1            32      0       0

Pointer List with Targets:

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> secondsTick(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> secondsTick(), Absolute function(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_setState
    _TMR1_Initialize->_TMR1_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     393
                                              0 BANK0      2     2      0
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
                           _setState
 ---------------------------------------------------------------------------------
 (1) _setState                                             3     3      0      45
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0     240
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     240
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                        _secondsTick *
 ---------------------------------------------------------------------------------
 (7) _secondsTick                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize
   _TMR1_SetInterruptHandler
   _TMR1_StartTimer
   _setState

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _secondsTick *
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      10       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2       4       6        5.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      10       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Fri Aug 14 11:02:32 2020

                                      l22 0147                                        l25 0156  
                                      l19 0126                                        l46 0108  
                                      l81 0159                                        l78 00F1  
                                      u30 0099                                        u31 0098  
                                     l111 014D                                       l200 00BB  
                                     l202 00BD                                       l160 0036  
                                     l172 0079                                       l164 0058  
                                     l181 00D9                                       l190 00A7  
                                     l167 0061                                       l159 007A  
                                     l192 00A9                                       l184 009D  
                                     l186 009F                                       l195 00B1  
                                     l197 00B3                                       l802 009A  
                                     l740 00F7                                       l804 00A0  
                                     l812 00BF                                       l750 0144  
                                     l742 00FC                                       l806 00AA  
                                     l814 00D5                                       l752 0145  
                                     l744 0100                                       l736 00F2  
                                     l920 00DA                                       l808 00B4  
                                     l746 0103                                       l738 00F4  
                                     l930 00E5                                       l922 00DC  
                                     l754 0153                                       l748 0141  
                                     l916 0148                                       l932 00E7  
                                     l924 00DE                                       l934 00EE  
                                     l926 00E0                                       l928 00E1  
                                     l792 0157                                       l954 011A  
                                     l798 0093                                       u240 003A  
                                     u241 0039                                       u250 0044  
                                     u251 0043                                       u260 0053  
                                     u261 0052                                       u270 005C  
                                     u271 005B                                       u255 0040  
                                     u280 0065                                       u281 0064  
                                     u265 004F                                       u290 0074  
                                     u291 0073                                       u295 0070  
                         _timer1ReloadVal 007A                                      l1130 0083  
                                    l1050 002E                                      l1132 00C7  
                                    l1060 0053                                      l1052 0031  
                                    l1044 0022                                      l1062 005C  
                                    l1054 003A                                      l1046 0025  
                                    l1064 0065                                      l1056 0044  
                                    l1072 007A                                      l1048 0026  
                                    l1066 006A                                      l1058 0049  
                                    l1068 0074                                      _LATA 010C  
                                    i1l92 0119                                      _WPUA 020C  
                                    _main 0022                                      btemp 007E  
                                    start 0019                ??_TMR1_SetInterruptHandler 0079  
          __size_of_OSCILLATOR_Initialize 0007             __end_of_OSCILLATOR_Initialize 0148  
                                   ?_main 0075                           _TMR1_StartTimer 0157  
                                   _T1CON 0018                                     i1l104 0133  
                                   i1l114 015A                                     i1l131 0017  
                                   i1l108 0140                                     i1l206 0152  
                                   i1l940 010F                                     i1l918 014E  
                                   i1l950 0134                                     i1l942 0111  
                                   i1l952 013B                                     i1l944 0113  
                                   i1l936 0109                                     i1l938 010E  
                                   i1l946 0115                                     i1l962 0006  
                                   i1l948 0117                                     i1l956 0127  
                                   i1l964 000A                                     i1l958 0129  
                                   i1l966 000F                                     i1l968 0014  
                                   u13_20 010E                                     u13_21 010D  
                                   u14_20 013B                                     u14_21 013A  
                                   u15_20 000A                                     u15_21 0009  
                                   u16_20 000F                                     u16_21 000E  
                                   u17_20 0014                                     u17_21 0013  
                                   _TMR1H 0017                                     _TMR1L 0016  
                                   _TRISA 008C                          __end_of_TMR1_ISR 0134  
                          _WDT_Initialize 0153                   __end_of_TMR1_Initialize 00F2  
                                   pclath 000A                                     status 0003  
                                   wtemp0 007E                           _TMR1_WriteTimer 0109  
                         __initialization 001A                              __end_of_main 0092  
             ?_INTERRUPT_InterruptManager 0075                                    ??_main 0022  
                            ?_secondsTick 0075                    __end_of_WDT_Initialize 0157  
                                  _APFCON 011D                                    _ANSELA 018C  
                                  _BORCON 0116                                    _T1GCON 0019  
                 TMR1_WriteTimer@timerVal 0075                                    _ODCONA 028C  
                                  _INLVLA 038C                                    _OSCCON 0099  
                                  _WDTCON 0097      __end_of_TMR1_DefaultInterruptHandler 015B  
   __size_of_TMR1_DefaultInterruptHandler 0001              _TMR1_DefaultInterruptHandler 015A  
                 __end_of_TMR1_StartTimer 015A                          __end_of_setState 00DA  
                         ?_WDT_Initialize 0075  TMR1_SetInterruptHandler@InterruptHandler 0077  
                 __end_of_TMR1_WriteTimer 011A                     __end_of_TMR1_CallBack 0141  
                        ?_TMR1_Initialize 0075                         _SYSTEM_Initialize 011A  
                 __end_of__initialization 001F                        ?_SYSTEM_Initialize 0075  
                          __pcstackCOMMON 0075                       ??_SYSTEM_Initialize 0079  
                               ?_TMR1_ISR 0075             ?_TMR1_DefaultInterruptHandler 0075  
                          _OPTION_REGbits 0095                 __end_of_SYSTEM_Initialize 0127  
                              __pnvCOMMON 007A                                __pmaintext 0022  
                        ?_TMR1_StartTimer 0075                                ??_TMR1_ISR 0077  
                              __pintentry 0004                                   _OSCTUNE 0098  
                                 _SLRCONA 030C                      __size_of_secondsTick 0005  
                        ?_TMR1_WriteTimer 0075                                 ?_setState 0075  
                                 __ptext1 0092                                   __ptext2 0157  
                                 __ptext3 011A                                   __ptext4 0153  
                                 __ptext5 00DA                                   __ptext6 0148  
                                 __ptext7 00F2                                   __ptext8 0141  
          ??_TMR1_DefaultInterruptHandler 0075                                 _T1CONbits 0018  
                   _OSCILLATOR_Initialize 0141         __size_of_TMR1_SetInterruptHandler 0006  
                ??_PIN_MANAGER_Initialize 0077                 ?_TMR1_SetInterruptHandler 0077  
              __size_of_SYSTEM_Initialize 000D                      end_of_initialization 001F  
                              ??_setState 0077                          ??_WDT_Initialize 0077  
                               _PORTAbits 000C                         __size_of_TMR1_ISR 000D  
                  ?_OSCILLATOR_Initialize 0075                       start_initialization 001A  
         __size_of_PIN_MANAGER_Initialize 0017                  __size_of_TMR1_Initialize 0018  
                  __size_of_TMR1_CallBack 000D                               __pbssCOMMON 0070  
                               ___latbits 0000                             __pcstackBANK0 0022  
                        setState@newState 0079                              _currentState 0074  
                               __pnvBANK0 0020                    _PIN_MANAGER_Initialize 00F2  
        __end_of_TMR1_SetInterruptHandler 014E                         __size_of_setState 0048  
            ??_INTERRUPT_InterruptManager 0077                  __size_of_TMR1_StartTimer 0003  
                           ??_secondsTick 0075                             _TMR1_CallBack 0134  
                                _LATAbits 010C                                  _PIE1bits 0091  
                __size_of_TMR1_WriteTimer 0011       __size_of_INTERRUPT_InterruptManager 0015  
                                _PIR1bits 0011                                  _TMR1_ISR 0127  
                       ??_TMR1_Initialize 0079                        _currentSecondsTick 0072  
                     __end_of_secondsTick 0153                            ?_TMR1_CallBack 0075  
                 ??_OSCILLATOR_Initialize 0077                  _TMR1_SetInterruptHandler 0148  
                   _TMR1_InterruptHandler 0020                                  __ptext10 0127  
                                __ptext11 0109                                  __ptext12 0134  
                                __ptext13 015A                                _T1GCONbits 0019  
                                __ptext14 014E                         ??_TMR1_StartTimer 0077  
                           __size_of_main 0070                                  _setState 0092  
                     _demandedSecondsTick 0070                                  int$flags 007E  
      __end_of_INTERRUPT_InterruptManager 0019                _INTERRUPT_InterruptManager 0004  
                       ??_TMR1_WriteTimer 0077                                _INTCONbits 000B  
                             _secondsTick 014E                           ??_TMR1_CallBack 0075  
                 __size_of_WDT_Initialize 0004                                  intlevel1 0000  
                 ?_PIN_MANAGER_Initialize 0075            __end_of_PIN_MANAGER_Initialize 0109  
                         _TMR1_Initialize 00DA  
