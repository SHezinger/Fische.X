

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Fri Oct 30 14:42:44 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	12F1571
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 09/04/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC12F1571 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  008C                     	;# 
    89  0091                     	;# 
    90  0092                     	;# 
    91  0093                     	;# 
    92  0095                     	;# 
    93  0096                     	;# 
    94  0097                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009A                     	;# 
    98  009B                     	;# 
    99  009B                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009E                     	;# 
   103  009F                     	;# 
   104  010C                     	;# 
   105  0111                     	;# 
   106  0112                     	;# 
   107  0115                     	;# 
   108  0116                     	;# 
   109  0117                     	;# 
   110  0118                     	;# 
   111  0119                     	;# 
   112  011D                     	;# 
   113  011D                     	;# 
   114  018C                     	;# 
   115  0191                     	;# 
   116  0191                     	;# 
   117  0192                     	;# 
   118  0193                     	;# 
   119  0193                     	;# 
   120  0194                     	;# 
   121  0195                     	;# 
   122  0196                     	;# 
   123  0197                     	;# 
   124  020C                     	;# 
   125  028C                     	;# 
   126  030C                     	;# 
   127  038C                     	;# 
   128  0391                     	;# 
   129  0392                     	;# 
   130  0393                     	;# 
   131  0691                     	;# 
   132  0692                     	;# 
   133  0693                     	;# 
   134  0694                     	;# 
   135  0695                     	;# 
   136  0D8E                     	;# 
   137  0D8F                     	;# 
   138  0D90                     	;# 
   139  0D91                     	;# 
   140  0D91                     	;# 
   141  0D92                     	;# 
   142  0D93                     	;# 
   143  0D93                     	;# 
   144  0D94                     	;# 
   145  0D95                     	;# 
   146  0D95                     	;# 
   147  0D96                     	;# 
   148  0D97                     	;# 
   149  0D97                     	;# 
   150  0D98                     	;# 
   151  0D99                     	;# 
   152  0D99                     	;# 
   153  0D9A                     	;# 
   154  0D9B                     	;# 
   155  0D9C                     	;# 
   156  0D9C                     	;# 
   157  0D9D                     	;# 
   158  0D9D                     	;# 
   159  0D9E                     	;# 
   160  0D9F                     	;# 
   161  0DA0                     	;# 
   162  0DA1                     	;# 
   163  0DA1                     	;# 
   164  0DA2                     	;# 
   165  0DA3                     	;# 
   166  0DA3                     	;# 
   167  0DA4                     	;# 
   168  0DA5                     	;# 
   169  0DA5                     	;# 
   170  0DA6                     	;# 
   171  0DA7                     	;# 
   172  0DA7                     	;# 
   173  0DA8                     	;# 
   174  0DA9                     	;# 
   175  0DA9                     	;# 
   176  0DAA                     	;# 
   177  0DAB                     	;# 
   178  0DAC                     	;# 
   179  0DAC                     	;# 
   180  0DAD                     	;# 
   181  0DAD                     	;# 
   182  0DAE                     	;# 
   183  0DAF                     	;# 
   184  0DB0                     	;# 
   185  0DB1                     	;# 
   186  0DB1                     	;# 
   187  0DB2                     	;# 
   188  0DB3                     	;# 
   189  0DB3                     	;# 
   190  0DB4                     	;# 
   191  0DB5                     	;# 
   192  0DB5                     	;# 
   193  0DB6                     	;# 
   194  0DB7                     	;# 
   195  0DB7                     	;# 
   196  0DB8                     	;# 
   197  0DB9                     	;# 
   198  0DB9                     	;# 
   199  0DBA                     	;# 
   200  0DBB                     	;# 
   201  0DBC                     	;# 
   202  0DBC                     	;# 
   203  0DBD                     	;# 
   204  0DBD                     	;# 
   205  0DBE                     	;# 
   206  0DBF                     	;# 
   207  0DC0                     	;# 
   208  0FE4                     	;# 
   209  0FE5                     	;# 
   210  0FE6                     	;# 
   211  0FE7                     	;# 
   212  0FE8                     	;# 
   213  0FE8                     	;# 
   214  0FE9                     	;# 
   215  0FEA                     	;# 
   216  0FEA                     	;# 
   217  0FEB                     	;# 
   218  0FED                     	;# 
   219  0FEE                     	;# 
   220  0FEE                     	;# 
   221  0FEF                     	;# 
   222  0000                     	;# 
   223  0001                     	;# 
   224  0002                     	;# 
   225  0003                     	;# 
   226  0004                     	;# 
   227  0005                     	;# 
   228  0006                     	;# 
   229  0007                     	;# 
   230  0008                     	;# 
   231  0009                     	;# 
   232  000A                     	;# 
   233  000B                     	;# 
   234  000C                     	;# 
   235  0011                     	;# 
   236  0012                     	;# 
   237  0013                     	;# 
   238  0015                     	;# 
   239  0016                     	;# 
   240  0016                     	;# 
   241  0017                     	;# 
   242  0018                     	;# 
   243  0019                     	;# 
   244  001A                     	;# 
   245  001B                     	;# 
   246  001C                     	;# 
   247  008C                     	;# 
   248  0091                     	;# 
   249  0092                     	;# 
   250  0093                     	;# 
   251  0095                     	;# 
   252  0096                     	;# 
   253  0097                     	;# 
   254  0098                     	;# 
   255  0099                     	;# 
   256  009A                     	;# 
   257  009B                     	;# 
   258  009B                     	;# 
   259  009C                     	;# 
   260  009D                     	;# 
   261  009E                     	;# 
   262  009F                     	;# 
   263  010C                     	;# 
   264  0111                     	;# 
   265  0112                     	;# 
   266  0115                     	;# 
   267  0116                     	;# 
   268  0117                     	;# 
   269  0118                     	;# 
   270  0119                     	;# 
   271  011D                     	;# 
   272  011D                     	;# 
   273  018C                     	;# 
   274  0191                     	;# 
   275  0191                     	;# 
   276  0192                     	;# 
   277  0193                     	;# 
   278  0193                     	;# 
   279  0194                     	;# 
   280  0195                     	;# 
   281  0196                     	;# 
   282  0197                     	;# 
   283  020C                     	;# 
   284  028C                     	;# 
   285  030C                     	;# 
   286  038C                     	;# 
   287  0391                     	;# 
   288  0392                     	;# 
   289  0393                     	;# 
   290  0691                     	;# 
   291  0692                     	;# 
   292  0693                     	;# 
   293  0694                     	;# 
   294  0695                     	;# 
   295  0D8E                     	;# 
   296  0D8F                     	;# 
   297  0D90                     	;# 
   298  0D91                     	;# 
   299  0D91                     	;# 
   300  0D92                     	;# 
   301  0D93                     	;# 
   302  0D93                     	;# 
   303  0D94                     	;# 
   304  0D95                     	;# 
   305  0D95                     	;# 
   306  0D96                     	;# 
   307  0D97                     	;# 
   308  0D97                     	;# 
   309  0D98                     	;# 
   310  0D99                     	;# 
   311  0D99                     	;# 
   312  0D9A                     	;# 
   313  0D9B                     	;# 
   314  0D9C                     	;# 
   315  0D9C                     	;# 
   316  0D9D                     	;# 
   317  0D9D                     	;# 
   318  0D9E                     	;# 
   319  0D9F                     	;# 
   320  0DA0                     	;# 
   321  0DA1                     	;# 
   322  0DA1                     	;# 
   323  0DA2                     	;# 
   324  0DA3                     	;# 
   325  0DA3                     	;# 
   326  0DA4                     	;# 
   327  0DA5                     	;# 
   328  0DA5                     	;# 
   329  0DA6                     	;# 
   330  0DA7                     	;# 
   331  0DA7                     	;# 
   332  0DA8                     	;# 
   333  0DA9                     	;# 
   334  0DA9                     	;# 
   335  0DAA                     	;# 
   336  0DAB                     	;# 
   337  0DAC                     	;# 
   338  0DAC                     	;# 
   339  0DAD                     	;# 
   340  0DAD                     	;# 
   341  0DAE                     	;# 
   342  0DAF                     	;# 
   343  0DB0                     	;# 
   344  0DB1                     	;# 
   345  0DB1                     	;# 
   346  0DB2                     	;# 
   347  0DB3                     	;# 
   348  0DB3                     	;# 
   349  0DB4                     	;# 
   350  0DB5                     	;# 
   351  0DB5                     	;# 
   352  0DB6                     	;# 
   353  0DB7                     	;# 
   354  0DB7                     	;# 
   355  0DB8                     	;# 
   356  0DB9                     	;# 
   357  0DB9                     	;# 
   358  0DBA                     	;# 
   359  0DBB                     	;# 
   360  0DBC                     	;# 
   361  0DBC                     	;# 
   362  0DBD                     	;# 
   363  0DBD                     	;# 
   364  0DBE                     	;# 
   365  0DBF                     	;# 
   366  0DC0                     	;# 
   367  0FE4                     	;# 
   368  0FE5                     	;# 
   369  0FE6                     	;# 
   370  0FE7                     	;# 
   371  0FE8                     	;# 
   372  0FE8                     	;# 
   373  0FE9                     	;# 
   374  0FEA                     	;# 
   375  0FEA                     	;# 
   376  0FEB                     	;# 
   377  0FED                     	;# 
   378  0FEE                     	;# 
   379  0FEE                     	;# 
   380  0FEF                     	;# 
   381  0000                     	;# 
   382  0001                     	;# 
   383  0002                     	;# 
   384  0003                     	;# 
   385  0004                     	;# 
   386  0005                     	;# 
   387  0006                     	;# 
   388  0007                     	;# 
   389  0008                     	;# 
   390  0009                     	;# 
   391  000A                     	;# 
   392  000B                     	;# 
   393  000C                     	;# 
   394  0011                     	;# 
   395  0012                     	;# 
   396  0013                     	;# 
   397  0015                     	;# 
   398  0016                     	;# 
   399  0016                     	;# 
   400  0017                     	;# 
   401  0018                     	;# 
   402  0019                     	;# 
   403  001A                     	;# 
   404  001B                     	;# 
   405  001C                     	;# 
   406  008C                     	;# 
   407  0091                     	;# 
   408  0092                     	;# 
   409  0093                     	;# 
   410  0095                     	;# 
   411  0096                     	;# 
   412  0097                     	;# 
   413  0098                     	;# 
   414  0099                     	;# 
   415  009A                     	;# 
   416  009B                     	;# 
   417  009B                     	;# 
   418  009C                     	;# 
   419  009D                     	;# 
   420  009E                     	;# 
   421  009F                     	;# 
   422  010C                     	;# 
   423  0111                     	;# 
   424  0112                     	;# 
   425  0115                     	;# 
   426  0116                     	;# 
   427  0117                     	;# 
   428  0118                     	;# 
   429  0119                     	;# 
   430  011D                     	;# 
   431  011D                     	;# 
   432  018C                     	;# 
   433  0191                     	;# 
   434  0191                     	;# 
   435  0192                     	;# 
   436  0193                     	;# 
   437  0193                     	;# 
   438  0194                     	;# 
   439  0195                     	;# 
   440  0196                     	;# 
   441  0197                     	;# 
   442  020C                     	;# 
   443  028C                     	;# 
   444  030C                     	;# 
   445  038C                     	;# 
   446  0391                     	;# 
   447  0392                     	;# 
   448  0393                     	;# 
   449  0691                     	;# 
   450  0692                     	;# 
   451  0693                     	;# 
   452  0694                     	;# 
   453  0695                     	;# 
   454  0D8E                     	;# 
   455  0D8F                     	;# 
   456  0D90                     	;# 
   457  0D91                     	;# 
   458  0D91                     	;# 
   459  0D92                     	;# 
   460  0D93                     	;# 
   461  0D93                     	;# 
   462  0D94                     	;# 
   463  0D95                     	;# 
   464  0D95                     	;# 
   465  0D96                     	;# 
   466  0D97                     	;# 
   467  0D97                     	;# 
   468  0D98                     	;# 
   469  0D99                     	;# 
   470  0D99                     	;# 
   471  0D9A                     	;# 
   472  0D9B                     	;# 
   473  0D9C                     	;# 
   474  0D9C                     	;# 
   475  0D9D                     	;# 
   476  0D9D                     	;# 
   477  0D9E                     	;# 
   478  0D9F                     	;# 
   479  0DA0                     	;# 
   480  0DA1                     	;# 
   481  0DA1                     	;# 
   482  0DA2                     	;# 
   483  0DA3                     	;# 
   484  0DA3                     	;# 
   485  0DA4                     	;# 
   486  0DA5                     	;# 
   487  0DA5                     	;# 
   488  0DA6                     	;# 
   489  0DA7                     	;# 
   490  0DA7                     	;# 
   491  0DA8                     	;# 
   492  0DA9                     	;# 
   493  0DA9                     	;# 
   494  0DAA                     	;# 
   495  0DAB                     	;# 
   496  0DAC                     	;# 
   497  0DAC                     	;# 
   498  0DAD                     	;# 
   499  0DAD                     	;# 
   500  0DAE                     	;# 
   501  0DAF                     	;# 
   502  0DB0                     	;# 
   503  0DB1                     	;# 
   504  0DB1                     	;# 
   505  0DB2                     	;# 
   506  0DB3                     	;# 
   507  0DB3                     	;# 
   508  0DB4                     	;# 
   509  0DB5                     	;# 
   510  0DB5                     	;# 
   511  0DB6                     	;# 
   512  0DB7                     	;# 
   513  0DB7                     	;# 
   514  0DB8                     	;# 
   515  0DB9                     	;# 
   516  0DB9                     	;# 
   517  0DBA                     	;# 
   518  0DBB                     	;# 
   519  0DBC                     	;# 
   520  0DBC                     	;# 
   521  0DBD                     	;# 
   522  0DBD                     	;# 
   523  0DBE                     	;# 
   524  0DBF                     	;# 
   525  0DC0                     	;# 
   526  0FE4                     	;# 
   527  0FE5                     	;# 
   528  0FE6                     	;# 
   529  0FE7                     	;# 
   530  0FE8                     	;# 
   531  0FE8                     	;# 
   532  0FE9                     	;# 
   533  0FEA                     	;# 
   534  0FEA                     	;# 
   535  0FEB                     	;# 
   536  0FED                     	;# 
   537  0FEE                     	;# 
   538  0FEE                     	;# 
   539  0FEF                     	;# 
   540  0000                     	;# 
   541  0001                     	;# 
   542  0002                     	;# 
   543  0003                     	;# 
   544  0004                     	;# 
   545  0005                     	;# 
   546  0006                     	;# 
   547  0007                     	;# 
   548  0008                     	;# 
   549  0009                     	;# 
   550  000A                     	;# 
   551  000B                     	;# 
   552  000C                     	;# 
   553  0011                     	;# 
   554  0012                     	;# 
   555  0013                     	;# 
   556  0015                     	;# 
   557  0016                     	;# 
   558  0016                     	;# 
   559  0017                     	;# 
   560  0018                     	;# 
   561  0019                     	;# 
   562  001A                     	;# 
   563  001B                     	;# 
   564  001C                     	;# 
   565  008C                     	;# 
   566  0091                     	;# 
   567  0092                     	;# 
   568  0093                     	;# 
   569  0095                     	;# 
   570  0096                     	;# 
   571  0097                     	;# 
   572  0098                     	;# 
   573  0099                     	;# 
   574  009A                     	;# 
   575  009B                     	;# 
   576  009B                     	;# 
   577  009C                     	;# 
   578  009D                     	;# 
   579  009E                     	;# 
   580  009F                     	;# 
   581  010C                     	;# 
   582  0111                     	;# 
   583  0112                     	;# 
   584  0115                     	;# 
   585  0116                     	;# 
   586  0117                     	;# 
   587  0118                     	;# 
   588  0119                     	;# 
   589  011D                     	;# 
   590  011D                     	;# 
   591  018C                     	;# 
   592  0191                     	;# 
   593  0191                     	;# 
   594  0192                     	;# 
   595  0193                     	;# 
   596  0193                     	;# 
   597  0194                     	;# 
   598  0195                     	;# 
   599  0196                     	;# 
   600  0197                     	;# 
   601  020C                     	;# 
   602  028C                     	;# 
   603  030C                     	;# 
   604  038C                     	;# 
   605  0391                     	;# 
   606  0392                     	;# 
   607  0393                     	;# 
   608  0691                     	;# 
   609  0692                     	;# 
   610  0693                     	;# 
   611  0694                     	;# 
   612  0695                     	;# 
   613  0D8E                     	;# 
   614  0D8F                     	;# 
   615  0D90                     	;# 
   616  0D91                     	;# 
   617  0D91                     	;# 
   618  0D92                     	;# 
   619  0D93                     	;# 
   620  0D93                     	;# 
   621  0D94                     	;# 
   622  0D95                     	;# 
   623  0D95                     	;# 
   624  0D96                     	;# 
   625  0D97                     	;# 
   626  0D97                     	;# 
   627  0D98                     	;# 
   628  0D99                     	;# 
   629  0D99                     	;# 
   630  0D9A                     	;# 
   631  0D9B                     	;# 
   632  0D9C                     	;# 
   633  0D9C                     	;# 
   634  0D9D                     	;# 
   635  0D9D                     	;# 
   636  0D9E                     	;# 
   637  0D9F                     	;# 
   638  0DA0                     	;# 
   639  0DA1                     	;# 
   640  0DA1                     	;# 
   641  0DA2                     	;# 
   642  0DA3                     	;# 
   643  0DA3                     	;# 
   644  0DA4                     	;# 
   645  0DA5                     	;# 
   646  0DA5                     	;# 
   647  0DA6                     	;# 
   648  0DA7                     	;# 
   649  0DA7                     	;# 
   650  0DA8                     	;# 
   651  0DA9                     	;# 
   652  0DA9                     	;# 
   653  0DAA                     	;# 
   654  0DAB                     	;# 
   655  0DAC                     	;# 
   656  0DAC                     	;# 
   657  0DAD                     	;# 
   658  0DAD                     	;# 
   659  0DAE                     	;# 
   660  0DAF                     	;# 
   661  0DB0                     	;# 
   662  0DB1                     	;# 
   663  0DB1                     	;# 
   664  0DB2                     	;# 
   665  0DB3                     	;# 
   666  0DB3                     	;# 
   667  0DB4                     	;# 
   668  0DB5                     	;# 
   669  0DB5                     	;# 
   670  0DB6                     	;# 
   671  0DB7                     	;# 
   672  0DB7                     	;# 
   673  0DB8                     	;# 
   674  0DB9                     	;# 
   675  0DB9                     	;# 
   676  0DBA                     	;# 
   677  0DBB                     	;# 
   678  0DBC                     	;# 
   679  0DBC                     	;# 
   680  0DBD                     	;# 
   681  0DBD                     	;# 
   682  0DBE                     	;# 
   683  0DBF                     	;# 
   684  0DC0                     	;# 
   685  0FE4                     	;# 
   686  0FE5                     	;# 
   687  0FE6                     	;# 
   688  0FE7                     	;# 
   689  0FE8                     	;# 
   690  0FE8                     	;# 
   691  0FE9                     	;# 
   692  0FEA                     	;# 
   693  0FEA                     	;# 
   694  0FEB                     	;# 
   695  0FED                     	;# 
   696  0FEE                     	;# 
   697  0FEE                     	;# 
   698  0FEF                     	;# 
   699  0000                     	;# 
   700  0001                     	;# 
   701  0002                     	;# 
   702  0003                     	;# 
   703  0004                     	;# 
   704  0005                     	;# 
   705  0006                     	;# 
   706  0007                     	;# 
   707  0008                     	;# 
   708  0009                     	;# 
   709  000A                     	;# 
   710  000B                     	;# 
   711  000C                     	;# 
   712  0011                     	;# 
   713  0012                     	;# 
   714  0013                     	;# 
   715  0015                     	;# 
   716  0016                     	;# 
   717  0016                     	;# 
   718  0017                     	;# 
   719  0018                     	;# 
   720  0019                     	;# 
   721  001A                     	;# 
   722  001B                     	;# 
   723  001C                     	;# 
   724  008C                     	;# 
   725  0091                     	;# 
   726  0092                     	;# 
   727  0093                     	;# 
   728  0095                     	;# 
   729  0096                     	;# 
   730  0097                     	;# 
   731  0098                     	;# 
   732  0099                     	;# 
   733  009A                     	;# 
   734  009B                     	;# 
   735  009B                     	;# 
   736  009C                     	;# 
   737  009D                     	;# 
   738  009E                     	;# 
   739  009F                     	;# 
   740  010C                     	;# 
   741  0111                     	;# 
   742  0112                     	;# 
   743  0115                     	;# 
   744  0116                     	;# 
   745  0117                     	;# 
   746  0118                     	;# 
   747  0119                     	;# 
   748  011D                     	;# 
   749  011D                     	;# 
   750  018C                     	;# 
   751  0191                     	;# 
   752  0191                     	;# 
   753  0192                     	;# 
   754  0193                     	;# 
   755  0193                     	;# 
   756  0194                     	;# 
   757  0195                     	;# 
   758  0196                     	;# 
   759  0197                     	;# 
   760  020C                     	;# 
   761  028C                     	;# 
   762  030C                     	;# 
   763  038C                     	;# 
   764  0391                     	;# 
   765  0392                     	;# 
   766  0393                     	;# 
   767  0691                     	;# 
   768  0692                     	;# 
   769  0693                     	;# 
   770  0694                     	;# 
   771  0695                     	;# 
   772  0D8E                     	;# 
   773  0D8F                     	;# 
   774  0D90                     	;# 
   775  0D91                     	;# 
   776  0D91                     	;# 
   777  0D92                     	;# 
   778  0D93                     	;# 
   779  0D93                     	;# 
   780  0D94                     	;# 
   781  0D95                     	;# 
   782  0D95                     	;# 
   783  0D96                     	;# 
   784  0D97                     	;# 
   785  0D97                     	;# 
   786  0D98                     	;# 
   787  0D99                     	;# 
   788  0D99                     	;# 
   789  0D9A                     	;# 
   790  0D9B                     	;# 
   791  0D9C                     	;# 
   792  0D9C                     	;# 
   793  0D9D                     	;# 
   794  0D9D                     	;# 
   795  0D9E                     	;# 
   796  0D9F                     	;# 
   797  0DA0                     	;# 
   798  0DA1                     	;# 
   799  0DA1                     	;# 
   800  0DA2                     	;# 
   801  0DA3                     	;# 
   802  0DA3                     	;# 
   803  0DA4                     	;# 
   804  0DA5                     	;# 
   805  0DA5                     	;# 
   806  0DA6                     	;# 
   807  0DA7                     	;# 
   808  0DA7                     	;# 
   809  0DA8                     	;# 
   810  0DA9                     	;# 
   811  0DA9                     	;# 
   812  0DAA                     	;# 
   813  0DAB                     	;# 
   814  0DAC                     	;# 
   815  0DAC                     	;# 
   816  0DAD                     	;# 
   817  0DAD                     	;# 
   818  0DAE                     	;# 
   819  0DAF                     	;# 
   820  0DB0                     	;# 
   821  0DB1                     	;# 
   822  0DB1                     	;# 
   823  0DB2                     	;# 
   824  0DB3                     	;# 
   825  0DB3                     	;# 
   826  0DB4                     	;# 
   827  0DB5                     	;# 
   828  0DB5                     	;# 
   829  0DB6                     	;# 
   830  0DB7                     	;# 
   831  0DB7                     	;# 
   832  0DB8                     	;# 
   833  0DB9                     	;# 
   834  0DB9                     	;# 
   835  0DBA                     	;# 
   836  0DBB                     	;# 
   837  0DBC                     	;# 
   838  0DBC                     	;# 
   839  0DBD                     	;# 
   840  0DBD                     	;# 
   841  0DBE                     	;# 
   842  0DBF                     	;# 
   843  0DC0                     	;# 
   844  0FE4                     	;# 
   845  0FE5                     	;# 
   846  0FE6                     	;# 
   847  0FE7                     	;# 
   848  0FE8                     	;# 
   849  0FE8                     	;# 
   850  0FE9                     	;# 
   851  0FEA                     	;# 
   852  0FEA                     	;# 
   853  0FEB                     	;# 
   854  0FED                     	;# 
   855  0FEE                     	;# 
   856  0FEE                     	;# 
   857  0FEF                     	;# 
   858                           
   859                           	psect	nvCOMMON
   860  007A                     __pnvCOMMON:
   861  007A                     _timer1ReloadVal:
   862  007A                     	ds	2
   863                           
   864                           	psect	nvBANK0
   865  0020                     __pnvBANK0:
   866  0020                     _TMR1_InterruptHandler:
   867  0020                     	ds	2
   868  000C                     _PORTAbits	set	12
   869  0019                     _T1GCONbits	set	25
   870  0018                     _T1CONbits	set	24
   871  0018                     _T1CON	set	24
   872  0011                     _PIR1bits	set	17
   873  0016                     _TMR1L	set	22
   874  0017                     _TMR1H	set	23
   875  0019                     _T1GCON	set	25
   876  000B                     _INTCONbits	set	11
   877  0091                     _PIE1bits	set	145
   878  0095                     _OPTION_REGbits	set	149
   879  008C                     _TRISA	set	140
   880  0097                     _WDTCON	set	151
   881  0098                     _OSCTUNE	set	152
   882  0099                     _OSCCON	set	153
   883  010C                     _LATAbits	set	268
   884  011D                     _APFCON	set	285
   885  010C                     _LATA	set	268
   886  0116                     _BORCON	set	278
   887  018C                     _ANSELA	set	396
   888  020C                     _WPUA	set	524
   889  028C                     _ODCONA	set	652
   890  030C                     _SLRCONA	set	780
   891  0391                     _IOCAPbits	set	913
   892  038C                     _INLVLA	set	908
   893                           
   894                           	psect	cinit
   895  0027                     start_initialization:	
   896                           ; #config settings
   897                           
   898  0027                     __initialization:
   899                           
   900                           ; Clear objects allocated to COMMON
   901  0027  01F0               	clrf	__pbssCOMMON& (0+127)
   902  0028  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   903  0029  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   904  002A  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   905  002B  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   906  002C                     end_of_initialization:	
   907                           ;End of C runtime variable initialization code
   908                           
   909  002C                     __end_of__initialization:
   910  002C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   911  002D  0020               	movlb	0
   912  002E  282F               	ljmp	_main	;jump to C main() function
   913                           
   914                           	psect	bssCOMMON
   915  0070                     __pbssCOMMON:
   916  0070                     _demandedSecondsTick:
   917  0070                     	ds	2
   918  0072                     _currentSecondsTick:
   919  0072                     	ds	2
   920  0074                     _currentState:
   921  0074                     	ds	1
   922                           
   923                           	psect	cstackCOMMON
   924  0075                     __pcstackCOMMON:
   925  0075                     ?_PIN_MANAGER_Initialize:
   926  0075                     ?_OSCILLATOR_Initialize:	
   927                           ; 1 bytes @ 0x0
   928                           
   929  0075                     ?_WDT_Initialize:	
   930                           ; 1 bytes @ 0x0
   931                           
   932  0075                     ?_TMR1_Initialize:	
   933                           ; 1 bytes @ 0x0
   934                           
   935  0075                     ?_TMR1_DefaultInterruptHandler:	
   936                           ; 1 bytes @ 0x0
   937                           
   938  0075                     ??_TMR1_DefaultInterruptHandler:	
   939                           ; 1 bytes @ 0x0
   940                           
   941  0075                     ?_TMR1_CallBack:	
   942                           ; 1 bytes @ 0x0
   943                           
   944  0075                     ??_TMR1_CallBack:	
   945                           ; 1 bytes @ 0x0
   946                           
   947  0075                     ?_secondsTick:	
   948                           ; 1 bytes @ 0x0
   949                           
   950  0075                     ??_secondsTick:	
   951                           ; 1 bytes @ 0x0
   952                           
   953  0075                     ?_setState:	
   954                           ; 1 bytes @ 0x0
   955                           
   956  0075                     ?_SYSTEM_Initialize:	
   957                           ; 1 bytes @ 0x0
   958                           
   959  0075                     ?_PIN_MANAGER_IOC:	
   960                           ; 1 bytes @ 0x0
   961                           
   962  0075                     ??_PIN_MANAGER_IOC:	
   963                           ; 1 bytes @ 0x0
   964                           
   965  0075                     ?_TMR1_StartTimer:	
   966                           ; 1 bytes @ 0x0
   967                           
   968  0075                     ?_TMR1_WriteTimer:	
   969                           ; 1 bytes @ 0x0
   970                           
   971  0075                     ?_TMR1_ISR:	
   972                           ; 1 bytes @ 0x0
   973                           
   974  0075                     ?_INTERRUPT_InterruptManager:	
   975                           ; 1 bytes @ 0x0
   976                           
   977  0075                     ?_main:	
   978                           ; 1 bytes @ 0x0
   979                           
   980  0075                     TMR1_WriteTimer@timerVal:	
   981                           ; 1 bytes @ 0x0
   982                           
   983                           
   984                           ; 2 bytes @ 0x0
   985  0075                     	ds	2
   986  0077                     ??_PIN_MANAGER_Initialize:
   987  0077                     ??_OSCILLATOR_Initialize:	
   988                           ; 1 bytes @ 0x2
   989                           
   990  0077                     ??_WDT_Initialize:	
   991                           ; 1 bytes @ 0x2
   992                           
   993  0077                     ?_TMR1_SetInterruptHandler:	
   994                           ; 1 bytes @ 0x2
   995                           
   996  0077                     ??_setState:	
   997                           ; 1 bytes @ 0x2
   998                           
   999  0077                     ??_TMR1_StartTimer:	
  1000                           ; 1 bytes @ 0x2
  1001                           
  1002  0077                     ??_TMR1_WriteTimer:	
  1003                           ; 1 bytes @ 0x2
  1004                           
  1005  0077                     ??_TMR1_ISR:	
  1006                           ; 1 bytes @ 0x2
  1007                           
  1008  0077                     ??_INTERRUPT_InterruptManager:	
  1009                           ; 1 bytes @ 0x2
  1010                           
  1011  0077                     TMR1_SetInterruptHandler@InterruptHandler:	
  1012                           ; 1 bytes @ 0x2
  1013                           
  1014                           
  1015                           ; 2 bytes @ 0x2
  1016  0077                     	ds	2
  1017  0079                     ??_TMR1_Initialize:
  1018  0079                     ??_TMR1_SetInterruptHandler:	
  1019                           ; 1 bytes @ 0x4
  1020                           
  1021  0079                     ??_SYSTEM_Initialize:	
  1022                           ; 1 bytes @ 0x4
  1023                           
  1024  0079                     setState@newState:	
  1025                           ; 1 bytes @ 0x4
  1026                           
  1027                           
  1028                           ; 1 bytes @ 0x4
  1029  0079                     	ds	1
  1030                           
  1031                           	psect	cstackBANK0
  1032  0022                     __pcstackBANK0:
  1033  0022                     ??_main:
  1034                           
  1035                           ; 1 bytes @ 0x0
  1036  0022                     	ds	2
  1037                           
  1038                           	psect	maintext
  1039  002F                     __pmaintext:	
  1040 ;;
  1041 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1042 ;;
  1043 ;; *************** function _main *****************
  1044 ;; Defined at:
  1045 ;;		line 66 in file "main.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;		None
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;		None
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  1    wreg      void 
  1052 ;; Registers used:
  1053 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1054 ;; Tracked objects:
  1055 ;;		On entry : B1F/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMMON   BANK0   BANK1
  1059 ;;      Params:         0       0       0
  1060 ;;      Locals:         0       0       0
  1061 ;;      Temps:          0       2       0
  1062 ;;      Totals:         0       2       0
  1063 ;;Total ram usage:        2 bytes
  1064 ;; Hardware stack levels required when called:    7
  1065 ;; This function calls:
  1066 ;;		_SYSTEM_Initialize
  1067 ;;		_TMR1_SetInterruptHandler
  1068 ;;		_TMR1_StartTimer
  1069 ;;		_setState
  1070 ;; This function is called by:
  1071 ;;		Startup code after reset
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075                           
  1076                           ;psect for function _main
  1077  002F                     _main:
  1078  002F                     l1065:	
  1079                           ;incstack = 0
  1080                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1081                           
  1082                           
  1083                           ;main.c: 69:     SYSTEM_Initialize();
  1084  002F  3181  2135  3180   	fcall	_SYSTEM_Initialize
  1085  0032                     l1067:
  1086                           
  1087                           ;main.c: 75:     (INTCONbits.GIE = 1);
  1088  0032  178B               	bsf	11,7	;volatile
  1089  0033                     l1069:
  1090                           
  1091                           ;main.c: 78:     (INTCONbits.PEIE = 1);
  1092  0033  170B               	bsf	11,6	;volatile
  1093                           
  1094                           ;main.c: 87:     TMR1_SetInterruptHandler(secondsTick);
  1095  0034  3069               	movlw	low _secondsTick
  1096  0035  00F7               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  1097  0036  3001               	movlw	high _secondsTick
  1098  0037  00F8               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  1099  0038  3181  2163  3180   	fcall	_TMR1_SetInterruptHandler
  1100  003B                     l1071:
  1101                           
  1102                           ;main.c: 90:     TMR1_StartTimer();
  1103  003B  3181  2172  3180   	fcall	_TMR1_StartTimer
  1104  003E                     l1073:
  1105                           
  1106                           ;main.c: 92:     setState(STATE_WAIT_TIME);
  1107  003E  3001               	movlw	1
  1108  003F  3180  20AC  3180   	fcall	_setState
  1109  0042  2894               	goto	l1095
  1110  0043                     l168:	
  1111                           ;main.c: 99:         {;main.c: 100:             case STATE_WAIT_TIME:
  1112                           
  1113                           
  1114                           ;main.c: 101:                 if(PORTAbits.RA5 && (currentSecondsTick >= demandedSeconds
      +                          Tick))
  1115  0043  1E8C               	btfss	12,5	;volatile
  1116  0044  2846               	goto	u301
  1117  0045  2847               	goto	u300
  1118  0046                     u301:
  1119  0046  2856               	goto	l169
  1120  0047                     u300:
  1121  0047                     l1075:
  1122  0047  0871               	movf	_demandedSecondsTick+1,w
  1123  0048  0273               	subwf	_currentSecondsTick+1,w	;volatile
  1124  0049  1D03               	skipz
  1125  004A  284D               	goto	u315
  1126  004B  0870               	movf	_demandedSecondsTick,w
  1127  004C  0272               	subwf	_currentSecondsTick,w	;volatile
  1128  004D                     u315:
  1129  004D  1C03               	skipc
  1130  004E  2850               	goto	u311
  1131  004F  2851               	goto	u310
  1132  0050                     u311:
  1133  0050  2856               	goto	l169
  1134  0051                     u310:
  1135  0051                     l1077:
  1136                           
  1137                           ;main.c: 102:                 {;main.c: 103:                     setState(STATE_OPEN_VAL
      +                          VE);
  1138  0051  3002               	movlw	2
  1139  0052  3180  20AC  3180   	fcall	_setState
  1140                           
  1141                           ;main.c: 104:                 }
  1142  0055  2894               	goto	l1095
  1143  0056                     l169:	
  1144                           ;main.c: 105:                 else if(PORTAbits.RA4)
  1145                           
  1146  0056  1E0C               	btfss	12,4	;volatile
  1147  0057  2859               	goto	u321
  1148  0058  285A               	goto	u320
  1149  0059                     u321:
  1150  0059  2894               	goto	l167
  1151  005A                     u320:
  1152  005A                     l1079:
  1153                           
  1154                           ;main.c: 106:                 {;main.c: 107:                     setState(STATE_CLOSE_VA
      +                          LVE);
  1155  005A  3003               	movlw	3
  1156  005B  3180  20AC  3180   	fcall	_setState
  1157  005E  2894               	goto	l1095
  1158  005F                     l173:	
  1159                           ;main.c: 111:             case STATE_OPEN_VALVE:
  1160                           
  1161                           
  1162                           ;main.c: 113:                 if(PORTAbits.RA4 || (currentSecondsTick >= demandedSeconds
      +                          Tick))
  1163  005F  1A0C               	btfsc	12,4	;volatile
  1164  0060  2862               	goto	u331
  1165  0061  2863               	goto	u330
  1166  0062                     u331:
  1167  0062  286D               	goto	l1083
  1168  0063                     u330:
  1169  0063                     l1081:
  1170  0063  0871               	movf	_demandedSecondsTick+1,w
  1171  0064  0273               	subwf	_currentSecondsTick+1,w	;volatile
  1172  0065  1D03               	skipz
  1173  0066  2869               	goto	u345
  1174  0067  0870               	movf	_demandedSecondsTick,w
  1175  0068  0272               	subwf	_currentSecondsTick,w	;volatile
  1176  0069                     u345:
  1177  0069  1C03               	skipc
  1178  006A  286C               	goto	u341
  1179  006B  286D               	goto	u340
  1180  006C                     u341:
  1181  006C  2894               	goto	l167
  1182  006D                     u340:
  1183  006D                     l1083:
  1184                           
  1185                           ;main.c: 114:                 {;main.c: 115:                     setState(STATE_CLOSE_VA
      +                          LVE);
  1186  006D  3003               	movlw	3
  1187  006E  3180  20AC  3180   	fcall	_setState
  1188  0071  2894               	goto	l1095
  1189  0072                     l177:	
  1190                           ;main.c: 119:             case STATE_CLOSE_VALVE:
  1191                           
  1192                           
  1193                           ;main.c: 120:                 if(PORTAbits.RA5)
  1194  0072  1E8C               	btfss	12,5	;volatile
  1195  0073  2875               	goto	u351
  1196  0074  2876               	goto	u350
  1197  0075                     u351:
  1198  0075  287B               	goto	l1087
  1199  0076                     u350:
  1200  0076                     l1085:
  1201                           
  1202                           ;main.c: 121:                 {;main.c: 122:                     setState(STATE_OPEN_VAL
      +                          VE);
  1203  0076  3002               	movlw	2
  1204  0077  3180  20AC  3180   	fcall	_setState
  1205                           
  1206                           ;main.c: 123:                 }
  1207  007A  2894               	goto	l1095
  1208  007B                     l1087:
  1209  007B  0871               	movf	_demandedSecondsTick+1,w
  1210  007C  0273               	subwf	_currentSecondsTick+1,w	;volatile
  1211  007D  1D03               	skipz
  1212  007E  2881               	goto	u365
  1213  007F  0870               	movf	_demandedSecondsTick,w
  1214  0080  0272               	subwf	_currentSecondsTick,w	;volatile
  1215  0081                     u365:
  1216  0081  1C03               	skipc
  1217  0082  2884               	goto	u361
  1218  0083  2885               	goto	u360
  1219  0084                     u361:
  1220  0084  2894               	goto	l167
  1221  0085                     u360:
  1222  0085                     l1089:
  1223                           
  1224                           ;main.c: 125:                 {;main.c: 126:                     setState(STATE_END);
  1225  0085  3004               	movlw	4
  1226  0086  3180  20AC  3180   	fcall	_setState
  1227  0089  2894               	goto	l1095
  1228  008A                     l181:	
  1229                           ;main.c: 130:             case STATE_END:
  1230                           
  1231                           
  1232                           ;main.c: 133:                 IOCAPbits.IOCAP5 = 1;
  1233  008A  0027               	movlb	7	; select bank7
  1234  008B  1691               	bsf	17,5	;volatile
  1235  008C  0063               	sleep	;# 
  1236                           
  1237                           ;main.c: 139:                 IOCAPbits.IOCAP5 = 0;
  1238  008D  0027               	movlb	7	; select bank7
  1239  008E  1291               	bcf	17,5	;volatile
  1240  008F                     l1091:
  1241                           
  1242                           ;main.c: 142:                 setState(STATE_WAIT_TIME);
  1243  008F  3001               	movlw	1
  1244  0090  3180  20AC  3180   	fcall	_setState
  1245                           
  1246                           ;main.c: 145:                 break;
  1247  0093  2894               	goto	l1095
  1248  0094                     l167:
  1249  0094                     l1095:
  1250  0094  0874               	movf	_currentState,w
  1251  0095  0020               	movlb	0	; select bank0
  1252  0096  00A2               	movwf	??_main
  1253  0097  01A3               	clrf	??_main+1
  1254                           
  1255                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1256                           ; Switch size 1, requested type "simple"
  1257                           ; Number of cases is 1, Range of values is 0 to 0
  1258                           ; switch strategies available:
  1259                           ; Name         Instructions Cycles
  1260                           ; simple_byte            4     3 (average)
  1261                           ; direct_byte            8     6 (fixed)
  1262                           ; jumptable            260     6 (fixed)
  1263                           ;	Chosen strategy is simple_byte
  1264  0098  0823               	movf	??_main+1,w
  1265  0099  3A00               	xorlw	0	; case 0
  1266  009A  1903               	skipnz
  1267  009B  289D               	goto	l1141
  1268  009C  2894               	goto	l1095
  1269  009D                     l1141:
  1270                           
  1271                           ; Switch size 1, requested type "simple"
  1272                           ; Number of cases is 4, Range of values is 1 to 4
  1273                           ; switch strategies available:
  1274                           ; Name         Instructions Cycles
  1275                           ; simple_byte           13     7 (average)
  1276                           ; direct_byte           17     9 (fixed)
  1277                           ; jumptable            263     9 (fixed)
  1278                           ;	Chosen strategy is simple_byte
  1279  009D  0822               	movf	??_main,w
  1280  009E  3A01               	xorlw	1	; case 1
  1281  009F  1903               	skipnz
  1282  00A0  2843               	goto	l168
  1283  00A1  3A03               	xorlw	3	; case 2
  1284  00A2  1903               	skipnz
  1285  00A3  285F               	goto	l173
  1286  00A4  3A01               	xorlw	1	; case 3
  1287  00A5  1903               	skipnz
  1288  00A6  2872               	goto	l177
  1289  00A7  3A07               	xorlw	7	; case 4
  1290  00A8  1903               	skipnz
  1291  00A9  288A               	goto	l181
  1292  00AA  2894               	goto	l1095
  1293  00AB  2826               	ljmp	start
  1294  00AC                     __end_of_main:
  1295                           
  1296                           	psect	text1
  1297  00AC                     __ptext1:	
  1298 ;; *************** function _setState *****************
  1299 ;; Defined at:
  1300 ;;		line 157 in file "main.c"
  1301 ;; Parameters:    Size  Location     Type
  1302 ;;  newState        1    wreg     enum E2970
  1303 ;; Auto vars:     Size  Location     Type
  1304 ;;  newState        1    4[COMMON] enum E2970
  1305 ;; Return value:  Size  Location     Type
  1306 ;;                  1    wreg      void 
  1307 ;; Registers used:
  1308 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1309 ;; Tracked objects:
  1310 ;;		On entry : 0/0
  1311 ;;		On exit  : 0/0
  1312 ;;		Unchanged: 0/0
  1313 ;; Data sizes:     COMMON   BANK0   BANK1
  1314 ;;      Params:         0       0       0
  1315 ;;      Locals:         1       0       0
  1316 ;;      Temps:          2       0       0
  1317 ;;      Totals:         3       0       0
  1318 ;;Total ram usage:        3 bytes
  1319 ;; Hardware stack levels used:    1
  1320 ;; Hardware stack levels required when called:    4
  1321 ;; This function calls:
  1322 ;;		Nothing
  1323 ;; This function is called by:
  1324 ;;		_main
  1325 ;; This function uses a non-reentrant model
  1326 ;;
  1327                           
  1328                           
  1329                           ;psect for function _setState
  1330  00AC                     _setState:
  1331                           
  1332                           ;incstack = 0
  1333                           ; Regs used in _setState: [wreg-fsr0h+status,2+status,0]
  1334                           ;setState@newState stored from wreg
  1335  00AC  00F9               	movwf	setState@newState
  1336  00AD                     l807:
  1337                           
  1338                           ;main.c: 157: void setState(states_t newState);main.c: 158: {;main.c: 159:     if(newSta
      +                          te == currentState)
  1339  00AD  0879               	movf	setState@newState,w
  1340  00AE  0674               	xorwf	_currentState,w
  1341  00AF  1D03               	skipz
  1342  00B0  28B2               	goto	u31
  1343  00B1  28B3               	goto	u30
  1344  00B2                     u31:
  1345  00B2  28B4               	goto	l811
  1346  00B3                     u30:
  1347  00B3  28F3               	goto	l188
  1348  00B4                     l811:
  1349                           
  1350                           ;main.c: 164:     currentSecondsTick = 0;
  1351  00B4  01F2               	clrf	_currentSecondsTick	;volatile
  1352  00B5  01F3               	clrf	_currentSecondsTick+1	;volatile
  1353                           
  1354                           ;main.c: 167:     switch(newState)
  1355  00B6  28D9               	goto	l821
  1356  00B7                     l191:	
  1357                           ;main.c: 170:             do { LATAbits.LATA1 = 0; } while(0);
  1358                           
  1359  00B7  0022               	movlb	2	; select bank2
  1360  00B8  108C               	bcf	12,1	;volatile
  1361  00B9                     l193:	
  1362                           ;main.c: 171:             do { LATAbits.LATA2 = 0; } while(0);
  1363                           
  1364  00B9  110C               	bcf	12,2	;volatile
  1365  00BA                     l813:
  1366                           
  1367                           ;main.c: 172:             demandedSecondsTick = currentSecondsTick + 1;
  1368  00BA  0872               	movf	_currentSecondsTick,w	;volatile
  1369  00BB  3E01               	addlw	1
  1370  00BC  00F0               	movwf	_demandedSecondsTick
  1371  00BD  3000               	movlw	0
  1372  00BE  3D73               	addwfc	_currentSecondsTick+1,w	;volatile
  1373  00BF  00F1               	movwf	_demandedSecondsTick+1
  1374                           
  1375                           ;main.c: 173:             break;
  1376  00C0  28EF               	goto	l823
  1377  00C1                     l197:	
  1378                           ;main.c: 176:             do { LATAbits.LATA1 = 1; } while(0);
  1379                           
  1380  00C1  0022               	movlb	2	; select bank2
  1381  00C2  148C               	bsf	12,1	;volatile
  1382  00C3                     l199:	
  1383                           ;main.c: 177:             do { LATAbits.LATA2 = 0; } while(0);
  1384                           
  1385  00C3  110C               	bcf	12,2	;volatile
  1386  00C4                     l815:
  1387                           
  1388                           ;main.c: 178:             demandedSecondsTick = currentSecondsTick + 1200;
  1389  00C4  0872               	movf	_currentSecondsTick,w	;volatile
  1390  00C5  3EB0               	addlw	176
  1391  00C6  00F0               	movwf	_demandedSecondsTick
  1392  00C7  3004               	movlw	4
  1393  00C8  3D73               	addwfc	_currentSecondsTick+1,w	;volatile
  1394  00C9  00F1               	movwf	_demandedSecondsTick+1
  1395                           
  1396                           ;main.c: 179:             break;
  1397  00CA  28EF               	goto	l823
  1398  00CB                     l202:	
  1399                           ;main.c: 182:             do { LATAbits.LATA1 = 0; } while(0);
  1400                           
  1401  00CB  0022               	movlb	2	; select bank2
  1402  00CC  108C               	bcf	12,1	;volatile
  1403  00CD                     l204:	
  1404                           ;main.c: 183:             do { LATAbits.LATA2 = 1; } while(0);
  1405                           
  1406  00CD  150C               	bsf	12,2	;volatile
  1407  00CE                     l817:
  1408                           
  1409                           ;main.c: 184:             demandedSecondsTick = currentSecondsTick + 10;
  1410  00CE  0872               	movf	_currentSecondsTick,w	;volatile
  1411  00CF  3E0A               	addlw	10
  1412  00D0  00F0               	movwf	_demandedSecondsTick
  1413  00D1  3000               	movlw	0
  1414  00D2  3D73               	addwfc	_currentSecondsTick+1,w	;volatile
  1415  00D3  00F1               	movwf	_demandedSecondsTick+1
  1416                           
  1417                           ;main.c: 185:             break;
  1418  00D4  28EF               	goto	l823
  1419  00D5                     l207:	
  1420                           ;main.c: 188:             do { LATAbits.LATA1 = 0; } while(0);
  1421                           
  1422  00D5  0022               	movlb	2	; select bank2
  1423  00D6  108C               	bcf	12,1	;volatile
  1424  00D7                     l209:	
  1425                           ;main.c: 189:             do { LATAbits.LATA2 = 0; } while(0);
  1426                           
  1427  00D7  110C               	bcf	12,2	;volatile
  1428  00D8  28EF               	goto	l823
  1429  00D9                     l821:
  1430  00D9  0879               	movf	setState@newState,w
  1431  00DA  00F7               	movwf	??_setState
  1432  00DB  01F8               	clrf	??_setState+1
  1433                           
  1434                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1435                           ; Switch size 1, requested type "simple"
  1436                           ; Number of cases is 1, Range of values is 0 to 0
  1437                           ; switch strategies available:
  1438                           ; Name         Instructions Cycles
  1439                           ; simple_byte            4     3 (average)
  1440                           ; direct_byte            8     6 (fixed)
  1441                           ; jumptable            260     6 (fixed)
  1442                           ;	Chosen strategy is simple_byte
  1443  00DC  0878               	movf	??_setState+1,w
  1444  00DD  3A00               	xorlw	0	; case 0
  1445  00DE  1903               	skipnz
  1446  00DF  28E1               	goto	l1143
  1447  00E0  28EF               	goto	l823
  1448  00E1                     l1143:
  1449                           
  1450                           ; Switch size 1, requested type "simple"
  1451                           ; Number of cases is 4, Range of values is 1 to 4
  1452                           ; switch strategies available:
  1453                           ; Name         Instructions Cycles
  1454                           ; simple_byte           13     7 (average)
  1455                           ; direct_byte           17     9 (fixed)
  1456                           ; jumptable            263     9 (fixed)
  1457                           ;	Chosen strategy is simple_byte
  1458  00E1  0877               	movf	??_setState,w
  1459  00E2  3A01               	xorlw	1	; case 1
  1460  00E3  1903               	skipnz
  1461  00E4  28B7               	goto	l191
  1462  00E5  3A03               	xorlw	3	; case 2
  1463  00E6  1903               	skipnz
  1464  00E7  28C1               	goto	l197
  1465  00E8  3A01               	xorlw	1	; case 3
  1466  00E9  1903               	skipnz
  1467  00EA  28CB               	goto	l202
  1468  00EB  3A07               	xorlw	7	; case 4
  1469  00EC  1903               	skipnz
  1470  00ED  28D5               	goto	l207
  1471  00EE  28EF               	goto	l823
  1472  00EF                     l823:
  1473                           
  1474                           ;main.c: 193:     currentState = newState;
  1475  00EF  0879               	movf	setState@newState,w
  1476  00F0  00F7               	movwf	??_setState
  1477  00F1  0877               	movf	??_setState,w
  1478  00F2  00F4               	movwf	_currentState
  1479  00F3                     l188:
  1480  00F3  0008               	return
  1481  00F4                     __end_of_setState:
  1482                           
  1483                           	psect	text2
  1484  0172                     __ptext2:	
  1485 ;; *************** function _TMR1_StartTimer *****************
  1486 ;; Defined at:
  1487 ;;		line 93 in file "mcc_generated_files/tmr1.c"
  1488 ;; Parameters:    Size  Location     Type
  1489 ;;		None
  1490 ;; Auto vars:     Size  Location     Type
  1491 ;;		None
  1492 ;; Return value:  Size  Location     Type
  1493 ;;                  1    wreg      void 
  1494 ;; Registers used:
  1495 ;;		None
  1496 ;; Tracked objects:
  1497 ;;		On entry : 0/0
  1498 ;;		On exit  : 0/0
  1499 ;;		Unchanged: 0/0
  1500 ;; Data sizes:     COMMON   BANK0   BANK1
  1501 ;;      Params:         0       0       0
  1502 ;;      Locals:         0       0       0
  1503 ;;      Temps:          0       0       0
  1504 ;;      Totals:         0       0       0
  1505 ;;Total ram usage:        0 bytes
  1506 ;; Hardware stack levels used:    1
  1507 ;; Hardware stack levels required when called:    4
  1508 ;; This function calls:
  1509 ;;		Nothing
  1510 ;; This function is called by:
  1511 ;;		_main
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515                           
  1516                           ;psect for function _TMR1_StartTimer
  1517  0172                     _TMR1_StartTimer:
  1518  0172                     l801:	
  1519                           ;incstack = 0
  1520                           ; Regs used in _TMR1_StartTimer: []
  1521                           
  1522                           
  1523                           ;mcc_generated_files/tmr1.c: 96:     T1CONbits.TMR1ON = 1;
  1524  0172  0020               	movlb	0	; select bank0
  1525  0173  1418               	bsf	24,0	;volatile
  1526  0174                     l83:
  1527  0174  0008               	return
  1528  0175                     __end_of_TMR1_StartTimer:
  1529                           
  1530                           	psect	text3
  1531  0135                     __ptext3:	
  1532 ;; *************** function _SYSTEM_Initialize *****************
  1533 ;; Defined at:
  1534 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1535 ;; Parameters:    Size  Location     Type
  1536 ;;		None
  1537 ;; Auto vars:     Size  Location     Type
  1538 ;;		None
  1539 ;; Return value:  Size  Location     Type
  1540 ;;                  1    wreg      void 
  1541 ;; Registers used:
  1542 ;;		wreg, status,2, status,0, pclath, cstack
  1543 ;; Tracked objects:
  1544 ;;		On entry : 0/0
  1545 ;;		On exit  : 0/0
  1546 ;;		Unchanged: 0/0
  1547 ;; Data sizes:     COMMON   BANK0   BANK1
  1548 ;;      Params:         0       0       0
  1549 ;;      Locals:         0       0       0
  1550 ;;      Temps:          0       0       0
  1551 ;;      Totals:         0       0       0
  1552 ;;Total ram usage:        0 bytes
  1553 ;; Hardware stack levels used:    1
  1554 ;; Hardware stack levels required when called:    6
  1555 ;; This function calls:
  1556 ;;		_OSCILLATOR_Initialize
  1557 ;;		_PIN_MANAGER_Initialize
  1558 ;;		_TMR1_Initialize
  1559 ;;		_WDT_Initialize
  1560 ;; This function is called by:
  1561 ;;		_main
  1562 ;; This function uses a non-reentrant model
  1563 ;;
  1564                           
  1565                           
  1566                           ;psect for function _SYSTEM_Initialize
  1567  0135                     _SYSTEM_Initialize:
  1568  0135                     l969:	
  1569                           ;incstack = 0
  1570                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1571                           
  1572                           
  1573                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1574  0135  3181  210C  3181   	fcall	_PIN_MANAGER_Initialize
  1575                           
  1576                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1577  0138  3181  215C  3181   	fcall	_OSCILLATOR_Initialize
  1578                           
  1579                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  1580  013B  3181  216E  3181   	fcall	_WDT_Initialize
  1581                           
  1582                           ;mcc_generated_files/mcc.c: 56:     TMR1_Initialize();
  1583  013E  3180  20F4  3181   	fcall	_TMR1_Initialize
  1584  0141                     l19:
  1585  0141  0008               	return
  1586  0142                     __end_of_SYSTEM_Initialize:
  1587                           
  1588                           	psect	text4
  1589  016E                     __ptext4:	
  1590 ;; *************** function _WDT_Initialize *****************
  1591 ;; Defined at:
  1592 ;;		line 69 in file "mcc_generated_files/mcc.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;		None
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;		None
  1597 ;; Return value:  Size  Location     Type
  1598 ;;                  1    wreg      void 
  1599 ;; Registers used:
  1600 ;;		wreg
  1601 ;; Tracked objects:
  1602 ;;		On entry : 0/0
  1603 ;;		On exit  : 0/0
  1604 ;;		Unchanged: 0/0
  1605 ;; Data sizes:     COMMON   BANK0   BANK1
  1606 ;;      Params:         0       0       0
  1607 ;;      Locals:         0       0       0
  1608 ;;      Temps:          0       0       0
  1609 ;;      Totals:         0       0       0
  1610 ;;Total ram usage:        0 bytes
  1611 ;; Hardware stack levels used:    1
  1612 ;; Hardware stack levels required when called:    4
  1613 ;; This function calls:
  1614 ;;		Nothing
  1615 ;; This function is called by:
  1616 ;;		_SYSTEM_Initialize
  1617 ;; This function uses a non-reentrant model
  1618 ;;
  1619                           
  1620                           
  1621                           ;psect for function _WDT_Initialize
  1622  016E                     _WDT_Initialize:
  1623  016E                     l763:	
  1624                           ;incstack = 0
  1625                           ; Regs used in _WDT_Initialize: [wreg]
  1626                           
  1627                           
  1628                           ;mcc_generated_files/mcc.c: 72:     WDTCON = 0x16;
  1629  016E  3016               	movlw	22
  1630  016F  0021               	movlb	1	; select bank1
  1631  0170  0097               	movwf	23	;volatile
  1632  0171                     l25:
  1633  0171  0008               	return
  1634  0172                     __end_of_WDT_Initialize:
  1635                           
  1636                           	psect	text5
  1637  00F4                     __ptext5:	
  1638 ;; *************** function _TMR1_Initialize *****************
  1639 ;; Defined at:
  1640 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  1641 ;; Parameters:    Size  Location     Type
  1642 ;;		None
  1643 ;; Auto vars:     Size  Location     Type
  1644 ;;		None
  1645 ;; Return value:  Size  Location     Type
  1646 ;;                  1    wreg      void 
  1647 ;; Registers used:
  1648 ;;		wreg, status,2, status,0, pclath, cstack
  1649 ;; Tracked objects:
  1650 ;;		On entry : 0/0
  1651 ;;		On exit  : 0/0
  1652 ;;		Unchanged: 0/0
  1653 ;; Data sizes:     COMMON   BANK0   BANK1
  1654 ;;      Params:         0       0       0
  1655 ;;      Locals:         0       0       0
  1656 ;;      Temps:          0       0       0
  1657 ;;      Totals:         0       0       0
  1658 ;;Total ram usage:        0 bytes
  1659 ;; Hardware stack levels used:    1
  1660 ;; Hardware stack levels required when called:    5
  1661 ;; This function calls:
  1662 ;;		_TMR1_SetInterruptHandler
  1663 ;; This function is called by:
  1664 ;;		_SYSTEM_Initialize
  1665 ;; This function uses a non-reentrant model
  1666 ;;
  1667                           
  1668                           
  1669                           ;psect for function _TMR1_Initialize
  1670  00F4                     _TMR1_Initialize:
  1671  00F4                     l935:	
  1672                           ;incstack = 0
  1673                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1674                           
  1675                           
  1676                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  1677  00F4  0020               	movlb	0	; select bank0
  1678  00F5  0199               	clrf	25	;volatile
  1679  00F6                     l937:
  1680                           
  1681                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x86;
  1682  00F6  3086               	movlw	134
  1683  00F7  0097               	movwf	23	;volatile
  1684  00F8                     l939:
  1685                           
  1686                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xE8;
  1687  00F8  30E8               	movlw	232
  1688  00F9  0096               	movwf	22	;volatile
  1689  00FA                     l941:
  1690                           
  1691                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  1692  00FA  1011               	bcf	17,0	;volatile
  1693  00FB                     l943:
  1694                           
  1695                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  1696  00FB  0817               	movf	23,w	;volatile
  1697  00FC  00FB               	movwf	_timer1ReloadVal+1	;volatile
  1698  00FD  0816               	movf	22,w	;volatile
  1699  00FE  00FA               	movwf	_timer1ReloadVal	;volatile
  1700  00FF                     l945:
  1701                           
  1702                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  1703  00FF  0021               	movlb	1	; select bank1
  1704  0100  1411               	bsf	17,0	;volatile
  1705  0101                     l947:
  1706                           
  1707                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  1708  0101  3075               	movlw	low _TMR1_DefaultInterruptHandler
  1709  0102  00F7               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  1710  0103  3001               	movlw	high _TMR1_DefaultInterruptHandler
  1711  0104  00F8               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  1712  0105  3181  2163  3180   	fcall	_TMR1_SetInterruptHandler
  1713  0108                     l949:
  1714                           
  1715                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x41;
  1716  0108  3041               	movlw	65
  1717  0109  0020               	movlb	0	; select bank0
  1718  010A  0098               	movwf	24	;volatile
  1719  010B                     l80:
  1720  010B  0008               	return
  1721  010C                     __end_of_TMR1_Initialize:
  1722                           
  1723                           	psect	text6
  1724  0163                     __ptext6:	
  1725 ;; *************** function _TMR1_SetInterruptHandler *****************
  1726 ;; Defined at:
  1727 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  1728 ;; Parameters:    Size  Location     Type
  1729 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  1730 ;;		 -> secondsTick(1), TMR1_DefaultInterruptHandler(1), 
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;		None
  1733 ;; Return value:  Size  Location     Type
  1734 ;;                  1    wreg      void 
  1735 ;; Registers used:
  1736 ;;		wreg
  1737 ;; Tracked objects:
  1738 ;;		On entry : 0/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMMON   BANK0   BANK1
  1742 ;;      Params:         2       0       0
  1743 ;;      Locals:         0       0       0
  1744 ;;      Temps:          0       0       0
  1745 ;;      Totals:         2       0       0
  1746 ;;Total ram usage:        2 bytes
  1747 ;; Hardware stack levels used:    1
  1748 ;; Hardware stack levels required when called:    4
  1749 ;; This function calls:
  1750 ;;		Nothing
  1751 ;; This function is called by:
  1752 ;;		_TMR1_Initialize
  1753 ;;		_main
  1754 ;; This function uses a non-reentrant model
  1755 ;;
  1756                           
  1757                           
  1758                           ;psect for function _TMR1_SetInterruptHandler
  1759  0163                     _TMR1_SetInterruptHandler:
  1760  0163                     l931:	
  1761                           ;incstack = 0
  1762                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  1763                           
  1764                           
  1765                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  1766  0163  0878               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  1767  0164  0020               	movlb	0	; select bank0
  1768  0165  00A1               	movwf	_TMR1_InterruptHandler+1
  1769  0166  0877               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  1770  0167  00A0               	movwf	_TMR1_InterruptHandler
  1771  0168                     l113:
  1772  0168  0008               	return
  1773  0169                     __end_of_TMR1_SetInterruptHandler:
  1774                           
  1775                           	psect	text7
  1776  010C                     __ptext7:	
  1777 ;; *************** function _PIN_MANAGER_Initialize *****************
  1778 ;; Defined at:
  1779 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1780 ;; Parameters:    Size  Location     Type
  1781 ;;		None
  1782 ;; Auto vars:     Size  Location     Type
  1783 ;;		None
  1784 ;; Return value:  Size  Location     Type
  1785 ;;                  1    wreg      void 
  1786 ;; Registers used:
  1787 ;;		wreg, status,2
  1788 ;; Tracked objects:
  1789 ;;		On entry : 0/0
  1790 ;;		On exit  : 0/0
  1791 ;;		Unchanged: 0/0
  1792 ;; Data sizes:     COMMON   BANK0   BANK1
  1793 ;;      Params:         0       0       0
  1794 ;;      Locals:         0       0       0
  1795 ;;      Temps:          0       0       0
  1796 ;;      Totals:         0       0       0
  1797 ;;Total ram usage:        0 bytes
  1798 ;; Hardware stack levels used:    1
  1799 ;; Hardware stack levels required when called:    4
  1800 ;; This function calls:
  1801 ;;		Nothing
  1802 ;; This function is called by:
  1803 ;;		_SYSTEM_Initialize
  1804 ;; This function uses a non-reentrant model
  1805 ;;
  1806                           
  1807                           
  1808                           ;psect for function _PIN_MANAGER_Initialize
  1809  010C                     _PIN_MANAGER_Initialize:
  1810  010C                     l743:	
  1811                           ;incstack = 0
  1812                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1813                           
  1814                           
  1815                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1816  010C  0022               	movlb	2	; select bank2
  1817  010D  018C               	clrf	12	;volatile
  1818  010E                     l745:
  1819                           
  1820                           ;mcc_generated_files/pin_manager.c: 65:     TRISA = 0x39;
  1821  010E  3039               	movlw	57
  1822  010F  0021               	movlb	1	; select bank1
  1823  0110  008C               	movwf	12	;volatile
  1824  0111                     l747:
  1825                           
  1826                           ;mcc_generated_files/pin_manager.c: 70:     ANSELA = 0x07;
  1827  0111  3007               	movlw	7
  1828  0112  0023               	movlb	3	; select bank3
  1829  0113  008C               	movwf	12	;volatile
  1830                           
  1831                           ;mcc_generated_files/pin_manager.c: 75:     WPUA = 0x00;
  1832  0114  0024               	movlb	4	; select bank4
  1833  0115  018C               	clrf	12	;volatile
  1834  0116                     l749:
  1835                           
  1836                           ;mcc_generated_files/pin_manager.c: 76:     OPTION_REGbits.nWPUEN = 1;
  1837  0116  0021               	movlb	1	; select bank1
  1838  0117  1795               	bsf	21,7	;volatile
  1839                           
  1840                           ;mcc_generated_files/pin_manager.c: 81:     ODCONA = 0x00;
  1841  0118  0025               	movlb	5	; select bank5
  1842  0119  018C               	clrf	12	;volatile
  1843  011A                     l751:
  1844                           
  1845                           ;mcc_generated_files/pin_manager.c: 86:     SLRCONA = 0x37;
  1846  011A  3037               	movlw	55
  1847  011B  0026               	movlb	6	; select bank6
  1848  011C  008C               	movwf	12	;volatile
  1849  011D                     l753:
  1850                           
  1851                           ;mcc_generated_files/pin_manager.c: 91:     INLVLA = 0x3F;
  1852  011D  303F               	movlw	63
  1853  011E  0027               	movlb	7	; select bank7
  1854  011F  008C               	movwf	12	;volatile
  1855                           
  1856                           ;mcc_generated_files/pin_manager.c: 96:     APFCON = 0x00;
  1857  0120  0022               	movlb	2	; select bank2
  1858  0121  019D               	clrf	29	;volatile
  1859  0122                     l755:
  1860                           
  1861                           ;mcc_generated_files/pin_manager.c: 103:     INTCONbits.IOCIE = 1;
  1862  0122  158B               	bsf	11,3	;volatile
  1863  0123                     l48:
  1864  0123  0008               	return
  1865  0124                     __end_of_PIN_MANAGER_Initialize:
  1866                           
  1867                           	psect	text8
  1868  015C                     __ptext8:	
  1869 ;; *************** function _OSCILLATOR_Initialize *****************
  1870 ;; Defined at:
  1871 ;;		line 59 in file "mcc_generated_files/mcc.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;		None
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;		None
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  1    wreg      void 
  1878 ;; Registers used:
  1879 ;;		wreg, status,2
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMMON   BANK0   BANK1
  1885 ;;      Params:         0       0       0
  1886 ;;      Locals:         0       0       0
  1887 ;;      Temps:          0       0       0
  1888 ;;      Totals:         0       0       0
  1889 ;;Total ram usage:        0 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; Hardware stack levels required when called:    4
  1892 ;; This function calls:
  1893 ;;		Nothing
  1894 ;; This function is called by:
  1895 ;;		_SYSTEM_Initialize
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899                           
  1900                           ;psect for function _OSCILLATOR_Initialize
  1901  015C                     _OSCILLATOR_Initialize:
  1902  015C                     l757:	
  1903                           ;incstack = 0
  1904                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1905                           
  1906                           
  1907                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x02;
  1908  015C  3002               	movlw	2
  1909  015D  0021               	movlb	1	; select bank1
  1910  015E  0099               	movwf	25	;volatile
  1911  015F                     l759:
  1912                           
  1913                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
  1914  015F  0198               	clrf	24	;volatile
  1915  0160                     l761:
  1916                           
  1917                           ;mcc_generated_files/mcc.c: 66:     BORCON = 0x00;
  1918  0160  0022               	movlb	2	; select bank2
  1919  0161  0196               	clrf	22	;volatile
  1920  0162                     l22:
  1921  0162  0008               	return
  1922  0163                     __end_of_OSCILLATOR_Initialize:
  1923                           
  1924                           	psect	intentry
  1925  0004                     __pintentry:	
  1926 ;; *************** function _INTERRUPT_InterruptManager *****************
  1927 ;; Defined at:
  1928 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1929 ;; Parameters:    Size  Location     Type
  1930 ;;		None
  1931 ;; Auto vars:     Size  Location     Type
  1932 ;;		None
  1933 ;; Return value:  Size  Location     Type
  1934 ;;                  1    wreg      void 
  1935 ;; Registers used:
  1936 ;;		wreg, status,2, status,0, pclath, cstack
  1937 ;; Tracked objects:
  1938 ;;		On entry : 0/0
  1939 ;;		On exit  : 0/0
  1940 ;;		Unchanged: 0/0
  1941 ;; Data sizes:     COMMON   BANK0   BANK1
  1942 ;;      Params:         0       0       0
  1943 ;;      Locals:         0       0       0
  1944 ;;      Temps:          0       0       0
  1945 ;;      Totals:         0       0       0
  1946 ;;Total ram usage:        0 bytes
  1947 ;; Hardware stack levels used:    1
  1948 ;; Hardware stack levels required when called:    3
  1949 ;; This function calls:
  1950 ;;		_PIN_MANAGER_IOC
  1951 ;;		_TMR1_ISR
  1952 ;; This function is called by:
  1953 ;;		Interrupt level 1
  1954 ;; This function uses a non-reentrant model
  1955 ;;
  1956                           
  1957  0004                     _INTERRUPT_InterruptManager:
  1958                           
  1959                           ;incstack = 0
  1960  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1961                           
  1962                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  1963  0005  3180               	pagesel	$
  1964  0006                     i1l977:
  1965                           
  1966                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
  1967  0006  1D8B               	btfss	11,3	;volatile
  1968  0007  2809               	goto	u18_21
  1969  0008  280A               	goto	u18_20
  1970  0009                     u18_21:
  1971  0009  2812               	goto	i1l131
  1972  000A                     u18_20:
  1973  000A                     i1l979:
  1974  000A  1C0B               	btfss	11,0	;volatile
  1975  000B  280D               	goto	u19_21
  1976  000C  280E               	goto	u19_20
  1977  000D                     u19_21:
  1978  000D  2812               	goto	i1l131
  1979  000E                     u19_20:
  1980  000E                     i1l981:
  1981                           
  1982                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
  1983  000E  3181  2176  3180   	fcall	_PIN_MANAGER_IOC
  1984                           
  1985                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  1986  0011  2824               	goto	i1l137
  1987  0012                     i1l131:	
  1988                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  1989                           
  1990  0012  1F0B               	btfss	11,6	;volatile
  1991  0013  2815               	goto	u20_21
  1992  0014  2816               	goto	u20_20
  1993  0015                     u20_21:
  1994  0015  2824               	goto	i1l137
  1995  0016                     u20_20:
  1996  0016                     i1l983:
  1997                           
  1998                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  1999  0016  0021               	movlb	1	; select bank1
  2000  0017  1C11               	btfss	17,0	;volatile
  2001  0018  281A               	goto	u21_21
  2002  0019  281B               	goto	u21_20
  2003  001A                     u21_21:
  2004  001A  2824               	goto	i1l136
  2005  001B                     u21_20:
  2006  001B                     i1l985:
  2007  001B  0020               	movlb	0	; select bank0
  2008  001C  1C11               	btfss	17,0	;volatile
  2009  001D  281F               	goto	u22_21
  2010  001E  2820               	goto	u22_20
  2011  001F                     u22_21:
  2012  001F  2824               	goto	i1l136
  2013  0020                     u22_20:
  2014  0020                     i1l987:
  2015                           
  2016                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR1_ISR();
  2017  0020  3181  2142  3180   	fcall	_TMR1_ISR
  2018                           
  2019                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  2020  0023  2824               	goto	i1l137
  2021  0024                     i1l136:	
  2022                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
  2023                           
  2024  0024                     i1l137:
  2025  0024  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2026  0025  0009               	retfie
  2027  0026                     __end_of_INTERRUPT_InterruptManager:
  2028                           
  2029                           	psect	text10
  2030  0142                     __ptext10:	
  2031 ;; *************** function _TMR1_ISR *****************
  2032 ;; Defined at:
  2033 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  2034 ;; Parameters:    Size  Location     Type
  2035 ;;		None
  2036 ;; Auto vars:     Size  Location     Type
  2037 ;;		None
  2038 ;; Return value:  Size  Location     Type
  2039 ;;                  1    wreg      void 
  2040 ;; Registers used:
  2041 ;;		wreg, status,2, status,0, pclath, cstack
  2042 ;; Tracked objects:
  2043 ;;		On entry : 0/0
  2044 ;;		On exit  : 0/0
  2045 ;;		Unchanged: 0/0
  2046 ;; Data sizes:     COMMON   BANK0   BANK1
  2047 ;;      Params:         0       0       0
  2048 ;;      Locals:         0       0       0
  2049 ;;      Temps:          0       0       0
  2050 ;;      Totals:         0       0       0
  2051 ;;Total ram usage:        0 bytes
  2052 ;; Hardware stack levels used:    1
  2053 ;; Hardware stack levels required when called:    2
  2054 ;; This function calls:
  2055 ;;		_TMR1_CallBack
  2056 ;;		_TMR1_WriteTimer
  2057 ;; This function is called by:
  2058 ;;		_INTERRUPT_InterruptManager
  2059 ;; This function uses a non-reentrant model
  2060 ;;
  2061                           
  2062                           
  2063                           ;psect for function _TMR1_ISR
  2064  0142                     _TMR1_ISR:
  2065  0142                     i1l971:	
  2066                           ;incstack = 0
  2067                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  2068                           
  2069                           
  2070                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  2071  0142  0020               	movlb	0	; select bank0
  2072  0143  1011               	bcf	17,0	;volatile
  2073  0144                     i1l973:
  2074                           
  2075                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  2076  0144  087B               	movf	_timer1ReloadVal+1,w	;volatile
  2077  0145  00F6               	movwf	TMR1_WriteTimer@timerVal+1
  2078  0146  087A               	movf	_timer1ReloadVal,w	;volatile
  2079  0147  00F5               	movwf	TMR1_WriteTimer@timerVal
  2080  0148  3181  2124  3181   	fcall	_TMR1_WriteTimer
  2081                           
  2082                           ;mcc_generated_files/tmr1.c: 166:     TMR1_CallBack();
  2083  014B  3181  214F  3181   	fcall	_TMR1_CallBack
  2084  014E                     i1l106:
  2085  014E  0008               	return
  2086  014F                     __end_of_TMR1_ISR:
  2087                           
  2088                           	psect	text11
  2089  0124                     __ptext11:	
  2090 ;; *************** function _TMR1_WriteTimer *****************
  2091 ;; Defined at:
  2092 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;  timerVal        2    0[COMMON] unsigned short 
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;		None
  2097 ;; Return value:  Size  Location     Type
  2098 ;;                  1    wreg      void 
  2099 ;; Registers used:
  2100 ;;		wreg, status,2
  2101 ;; Tracked objects:
  2102 ;;		On entry : 0/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMMON   BANK0   BANK1
  2106 ;;      Params:         2       0       0
  2107 ;;      Locals:         0       0       0
  2108 ;;      Temps:          0       0       0
  2109 ;;      Totals:         2       0       0
  2110 ;;Total ram usage:        2 bytes
  2111 ;; Hardware stack levels used:    1
  2112 ;; This function calls:
  2113 ;;		Nothing
  2114 ;; This function is called by:
  2115 ;;		_TMR1_ISR
  2116 ;;		_TMR1_Reload
  2117 ;; This function uses a non-reentrant model
  2118 ;;
  2119                           
  2120                           
  2121                           ;psect for function _TMR1_WriteTimer
  2122  0124                     _TMR1_WriteTimer:
  2123  0124                     i1l951:	
  2124                           ;incstack = 0
  2125                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  2126                           
  2127                           
  2128                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  2129  0124  0020               	movlb	0	; select bank0
  2130  0125  1D18               	btfss	24,2	;volatile
  2131  0126  2928               	goto	u16_21
  2132  0127  2929               	goto	u16_20
  2133  0128                     u16_21:
  2134  0128  2930               	goto	i1l961
  2135  0129                     u16_20:
  2136  0129                     i1l953:
  2137                           
  2138                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  2139  0129  1018               	bcf	24,0	;volatile
  2140  012A                     i1l955:
  2141                           
  2142                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (timerVal >> 8);
  2143  012A  0876               	movf	TMR1_WriteTimer@timerVal+1,w
  2144  012B  0097               	movwf	23	;volatile
  2145  012C                     i1l957:
  2146                           
  2147                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = timerVal;
  2148  012C  0875               	movf	TMR1_WriteTimer@timerVal,w
  2149  012D  0096               	movwf	22	;volatile
  2150  012E                     i1l959:
  2151                           
  2152                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  2153  012E  1418               	bsf	24,0	;volatile
  2154                           
  2155                           ;mcc_generated_files/tmr1.c: 133:     }
  2156  012F  2934               	goto	i1l94
  2157  0130                     i1l961:
  2158                           
  2159                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (timerVal >> 8);
  2160  0130  0876               	movf	TMR1_WriteTimer@timerVal+1,w
  2161  0131  0097               	movwf	23	;volatile
  2162  0132                     i1l963:
  2163                           
  2164                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = timerVal;
  2165  0132  0875               	movf	TMR1_WriteTimer@timerVal,w
  2166  0133  0096               	movwf	22	;volatile
  2167  0134                     i1l94:
  2168  0134  0008               	return
  2169  0135                     __end_of_TMR1_WriteTimer:
  2170                           
  2171                           	psect	text12
  2172  014F                     __ptext12:	
  2173 ;; *************** function _TMR1_CallBack *****************
  2174 ;; Defined at:
  2175 ;;		line 169 in file "mcc_generated_files/tmr1.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;		None
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;		None
  2180 ;; Return value:  Size  Location     Type
  2181 ;;                  1    wreg      void 
  2182 ;; Registers used:
  2183 ;;		wreg, status,2, status,0, pclath, cstack
  2184 ;; Tracked objects:
  2185 ;;		On entry : 0/0
  2186 ;;		On exit  : 0/0
  2187 ;;		Unchanged: 0/0
  2188 ;; Data sizes:     COMMON   BANK0   BANK1
  2189 ;;      Params:         0       0       0
  2190 ;;      Locals:         0       0       0
  2191 ;;      Temps:          0       0       0
  2192 ;;      Totals:         0       0       0
  2193 ;;Total ram usage:        0 bytes
  2194 ;; Hardware stack levels used:    1
  2195 ;; Hardware stack levels required when called:    1
  2196 ;; This function calls:
  2197 ;;		Absolute function
  2198 ;;		_TMR1_DefaultInterruptHandler
  2199 ;;		_secondsTick
  2200 ;; This function is called by:
  2201 ;;		_TMR1_ISR
  2202 ;; This function uses a non-reentrant model
  2203 ;;
  2204                           
  2205                           
  2206                           ;psect for function _TMR1_CallBack
  2207  014F                     _TMR1_CallBack:
  2208  014F                     i1l965:	
  2209                           ;incstack = 0
  2210                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
  2211                           
  2212                           
  2213                           ;mcc_generated_files/tmr1.c: 172:     if(TMR1_InterruptHandler)
  2214  014F  0020               	movlb	0	; select bank0
  2215  0150  0820               	movf	_TMR1_InterruptHandler,w
  2216  0151  0421               	iorwf	_TMR1_InterruptHandler+1,w
  2217  0152  1903               	btfsc	3,2
  2218  0153  2955               	goto	u17_21
  2219  0154  2956               	goto	u17_20
  2220  0155                     u17_21:
  2221  0155  295B               	goto	i1l110
  2222  0156                     u17_20:
  2223  0156                     i1l967:
  2224                           
  2225                           ;mcc_generated_files/tmr1.c: 173:     {;mcc_generated_files/tmr1.c: 174:         TMR1_In
      +                          terruptHandler();
  2226  0156  0821               	movf	_TMR1_InterruptHandler+1,w
  2227  0157  008A               	movwf	10
  2228  0158  0820               	movf	_TMR1_InterruptHandler,w
  2229  0159  000A               	callw
  2230  015A  3181               	pagesel	$
  2231  015B                     i1l110:
  2232  015B  0008               	return
  2233  015C                     __end_of_TMR1_CallBack:
  2234                           
  2235                           	psect	text13
  2236  0175                     __ptext13:	
  2237 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  2238 ;; Defined at:
  2239 ;;		line 182 in file "mcc_generated_files/tmr1.c"
  2240 ;; Parameters:    Size  Location     Type
  2241 ;;		None
  2242 ;; Auto vars:     Size  Location     Type
  2243 ;;		None
  2244 ;; Return value:  Size  Location     Type
  2245 ;;                  1    wreg      void 
  2246 ;; Registers used:
  2247 ;;		None
  2248 ;; Tracked objects:
  2249 ;;		On entry : 0/0
  2250 ;;		On exit  : 0/0
  2251 ;;		Unchanged: 0/0
  2252 ;; Data sizes:     COMMON   BANK0   BANK1
  2253 ;;      Params:         0       0       0
  2254 ;;      Locals:         0       0       0
  2255 ;;      Temps:          0       0       0
  2256 ;;      Totals:         0       0       0
  2257 ;;Total ram usage:        0 bytes
  2258 ;; Hardware stack levels used:    1
  2259 ;; This function calls:
  2260 ;;		Nothing
  2261 ;; This function is called by:
  2262 ;;		_TMR1_Initialize
  2263 ;;		_TMR1_CallBack
  2264 ;; This function uses a non-reentrant model
  2265 ;;
  2266                           
  2267                           
  2268                           ;psect for function _TMR1_DefaultInterruptHandler
  2269  0175                     _TMR1_DefaultInterruptHandler:
  2270  0175                     i1l116:	
  2271                           ;incstack = 0
  2272                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  2273                           
  2274  0175  0008               	return
  2275  0176                     __end_of_TMR1_DefaultInterruptHandler:
  2276                           
  2277                           	psect	text14
  2278  0169                     __ptext14:	
  2279 ;; *************** function _secondsTick *****************
  2280 ;; Defined at:
  2281 ;;		line 197 in file "main.c"
  2282 ;; Parameters:    Size  Location     Type
  2283 ;;		None
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;		None
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  1    wreg      void 
  2288 ;; Registers used:
  2289 ;;		wreg
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMMON   BANK0   BANK1
  2295 ;;      Params:         0       0       0
  2296 ;;      Locals:         0       0       0
  2297 ;;      Temps:          0       0       0
  2298 ;;      Totals:         0       0       0
  2299 ;;Total ram usage:        0 bytes
  2300 ;; Hardware stack levels used:    1
  2301 ;; This function calls:
  2302 ;;		Nothing
  2303 ;; This function is called by:
  2304 ;;		_main
  2305 ;;		_TMR1_CallBack
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           
  2309                           
  2310                           ;psect for function _secondsTick
  2311  0169                     _secondsTick:
  2312  0169                     i1l933:	
  2313                           ;incstack = 0
  2314                           ; Regs used in _secondsTick: [wreg]
  2315                           
  2316                           
  2317                           ;main.c: 199:     currentSecondsTick++;
  2318  0169  3001               	movlw	1
  2319  016A  07F2               	addwf	_currentSecondsTick,f	;volatile
  2320  016B  3000               	movlw	0
  2321  016C  3DF3               	addwfc	_currentSecondsTick+1,f	;volatile
  2322  016D                     i1l213:
  2323  016D  0008               	return
  2324  016E                     __end_of_secondsTick:
  2325                           
  2326                           	psect	text15
  2327  0176                     __ptext15:	
  2328 ;; *************** function _PIN_MANAGER_IOC *****************
  2329 ;; Defined at:
  2330 ;;		line 107 in file "mcc_generated_files/pin_manager.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;		None
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;		None
  2335 ;; Return value:  Size  Location     Type
  2336 ;;                  1    wreg      void 
  2337 ;; Registers used:
  2338 ;;		None
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMMON   BANK0   BANK1
  2344 ;;      Params:         0       0       0
  2345 ;;      Locals:         0       0       0
  2346 ;;      Temps:          0       0       0
  2347 ;;      Totals:         0       0       0
  2348 ;;Total ram usage:        0 bytes
  2349 ;; Hardware stack levels used:    1
  2350 ;; This function calls:
  2351 ;;		Nothing
  2352 ;; This function is called by:
  2353 ;;		_INTERRUPT_InterruptManager
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357                           
  2358                           ;psect for function _PIN_MANAGER_IOC
  2359  0176                     _PIN_MANAGER_IOC:
  2360  0176                     i1l51:	
  2361                           ;incstack = 0
  2362                           ; Regs used in _PIN_MANAGER_IOC: []
  2363                           
  2364  0176  0008               	return
  2365  0177                     __end_of_PIN_MANAGER_IOC:
  2366  007E                     btemp	set	126	;btemp
  2367  007E                     int$flags	set	126
  2368  007E                     wtemp0	set	126
  2369                           
  2370                           	psect	config
  2371                           
  2372                           ;Config register CONFIG1 @ 0x8007
  2373                           ;	
  2374                           ;	FOSC = INTOSC, INTOSC oscillator; I/O function on CLKIN pin
  2375                           ;	Watchdog Timer Enable
  2376                           ;	WDTE = OFF, WDT disabled
  2377                           ;	Power-up Timer Enable
  2378                           ;	PWRTE = OFF, PWRT disabled
  2379                           ;	MCLR Pin Function Select
  2380                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2381                           ;	Flash Program Memory Code Protection
  2382                           ;	CP = ON, Program memory code protection is enabled
  2383                           ;	Brown-out Reset Enable
  2384                           ;	BOREN = ON, Brown-out Reset enabled
  2385                           ;	Clock Out Enable
  2386                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2387  8007                     	org	32775
  2388  8007  3F64               	dw	16228
  2389                           
  2390                           ;Config register CONFIG2 @ 0x8008
  2391                           ;	Flash Memory Self-Write Protection
  2392                           ;	WRT = OFF, Write protection off
  2393                           ;	PLL Enable
  2394                           ;	PLLEN = OFF, 4x PLL disabled
  2395                           ;	Stack Overflow/Underflow Reset Enable
  2396                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2397                           ;	Brown-out Reset Voltage Selection
  2398                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2399                           ;	Low Power Brown-out Reset enable bit
  2400                           ;	LPBOREN = OFF, LPBOR is disabled
  2401                           ;	Low-Voltage Programming Enable
  2402                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  2403  8008                     	org	32776
  2404  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      12
    BANK0            80      2       4
    BANK1            32      0       0

Pointer List with Targets:

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> secondsTick(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> secondsTick(), Absolute function(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_setState
    _TMR1_Initialize->_TMR1_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     393
                                              0 BANK0      2     2      0
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
                           _setState
 ---------------------------------------------------------------------------------
 (1) _setState                                             3     3      0      45
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0     240
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     240
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                        _secondsTick *
 ---------------------------------------------------------------------------------
 (7) _secondsTick                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _PIN_MANAGER_IOC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize
   _TMR1_SetInterruptHandler
   _TMR1_StartTimer
   _setState

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _secondsTick *
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      10       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2       4       6        5.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      10       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Fri Oct 30 14:42:44 2020

                                      l22 0162                                        l25 0171  
                                      l19 0141                                        l48 0123  
                                      l80 010B                                        l83 0174  
                                      u30 00B3                                        u31 00B2  
                                     l113 0168                                       l202 00CB  
                                     l204 00CD                                       l207 00D5  
                                     l209 00D7                                       l181 008A  
                                     l173 005F                                       l191 00B7  
                                     l167 0094                                       l168 0043  
                                     l193 00B9                                       l177 0072  
                                     l169 0056                                       l188 00F3  
                                     l197 00C1                                       l199 00C3  
                                     l801 0172                                       l811 00B4  
                                     l813 00BA                                       l821 00D9  
                                     l751 011A                                       l743 010C  
                                     l815 00C4                                       l823 00EF  
                                     l807 00AD                                       l761 0160  
                                     l753 011D                                       l745 010E  
                                     l817 00CE                                       l755 0122  
                                     l747 0111                                       l931 0163  
                                     l763 016E                                       l757 015C  
                                     l749 0116                                       l941 00FA  
                                     l759 015F                                       l943 00FB  
                                     l935 00F4                                       l945 00FF  
                                     l937 00F6                                       l947 0101  
                                     l939 00F8                                       l949 0108  
                                     l969 0135                                       u300 0047  
                                     u301 0046                                       u310 0051  
                                     u311 0050                                       u320 005A  
                                     u321 0059                                       u330 0063  
                                     u331 0062                                       u315 004D  
                                     u340 006D                                       u341 006C  
                                     u350 0076                                       u351 0075  
                                     u360 0085                                       u361 0084  
                                     u345 0069                                       u365 0081  
                         _timer1ReloadVal 007A                                      l1141 009D  
                                    l1143 00E1                                      l1071 003B  
                                    l1081 0063                                      l1073 003E  
                                    l1065 002F                                      l1091 008F  
                                    l1083 006D                                      l1075 0047  
                                    l1067 0032                                      l1085 0076  
                                    l1077 0051                                      l1069 0033  
                                    l1087 007B                                      l1079 005A  
                                    l1095 0094                                      l1089 0085  
                                    _LATA 010C                                      i1l51 0176  
                                    i1l94 0134                                      _WPUA 020C  
                                    _main 002F                                      btemp 007E  
                                    start 0026                ??_TMR1_SetInterruptHandler 0079  
          __size_of_OSCILLATOR_Initialize 0007             __end_of_OSCILLATOR_Initialize 0163  
                                   ?_main 0075                           _TMR1_StartTimer 0172  
                                   _T1CON 0018                                     i1l110 015B  
                                   i1l106 014E                                     i1l131 0012  
                                   i1l116 0175                                     i1l213 016D  
                                   i1l136 0024                                     i1l137 0024  
                                   i1l933 0169                                     i1l951 0124  
                                   i1l953 0129                                     i1l961 0130  
                                   i1l963 0132                                     i1l955 012A  
                                   i1l971 0142                                     i1l965 014F  
                                   i1l957 012C                                     i1l973 0144  
                                   i1l981 000E                                     i1l967 0156  
                                   i1l959 012E                                     i1l983 0016  
                                   i1l985 001B                                     i1l977 0006  
                                   i1l987 0020                                     i1l979 000A  
                                   u20_20 0016                                     u20_21 0015  
                                   u21_20 001B                                     u21_21 001A  
                                   u22_20 0020                                     u22_21 001F  
                                   u16_20 0129                                     u16_21 0128  
                                   u17_20 0156                                     u17_21 0155  
                                   _TMR1H 0017                                     _TMR1L 0016  
                                   u18_20 000A                                     u18_21 0009  
                                   u19_20 000E                                     u19_21 000D  
                                   _TRISA 008C                          __end_of_TMR1_ISR 014F  
                 __end_of_PIN_MANAGER_IOC 0177                            _WDT_Initialize 016E  
                 __end_of_TMR1_Initialize 010C                                     pclath 000A  
                                   status 0003                                     wtemp0 007E  
                         _TMR1_WriteTimer 0124                           __initialization 0027  
                            __end_of_main 00AC               ?_INTERRUPT_InterruptManager 0075  
                                  ??_main 0022                              ?_secondsTick 0075  
                  __end_of_WDT_Initialize 0172                                    _APFCON 011D  
                                  _ANSELA 018C                                    _BORCON 0116  
                                  _T1GCON 0019                   TMR1_WriteTimer@timerVal 0075  
                                  _ODCONA 028C                                    _INLVLA 038C  
                                  _OSCCON 0099                                    _WDTCON 0097  
    __end_of_TMR1_DefaultInterruptHandler 0176     __size_of_TMR1_DefaultInterruptHandler 0001  
            _TMR1_DefaultInterruptHandler 0175                   __end_of_TMR1_StartTimer 0175  
                        __end_of_setState 00F4                           ?_WDT_Initialize 0075  
TMR1_SetInterruptHandler@InterruptHandler 0077                          ?_PIN_MANAGER_IOC 0075  
                 __end_of_TMR1_WriteTimer 0135                     __end_of_TMR1_CallBack 015C  
                        ?_TMR1_Initialize 0075                         _SYSTEM_Initialize 0135  
                 __end_of__initialization 002C                        ?_SYSTEM_Initialize 0075  
                          __pcstackCOMMON 0075                       ??_SYSTEM_Initialize 0079  
                               ?_TMR1_ISR 0075             ?_TMR1_DefaultInterruptHandler 0075  
                          _OPTION_REGbits 0095                 __end_of_SYSTEM_Initialize 0142  
                              __pnvCOMMON 007A                                __pmaintext 002F  
                        ?_TMR1_StartTimer 0075                                ??_TMR1_ISR 0077  
                              __pintentry 0004                                   _OSCTUNE 0098  
                                 _SLRCONA 030C                      __size_of_secondsTick 0005  
                        ?_TMR1_WriteTimer 0075                                 ?_setState 0075  
                                 __ptext1 00AC                                   __ptext2 0172  
                                 __ptext3 0135                                   __ptext4 016E  
                                 __ptext5 00F4                                   __ptext6 0163  
                                 __ptext7 010C                                   __ptext8 015C  
          ??_TMR1_DefaultInterruptHandler 0075                                 _T1CONbits 0018  
                   _OSCILLATOR_Initialize 015C         __size_of_TMR1_SetInterruptHandler 0006  
                ??_PIN_MANAGER_Initialize 0077                 ?_TMR1_SetInterruptHandler 0077  
                               _IOCAPbits 0391                __size_of_SYSTEM_Initialize 000D  
                    end_of_initialization 002C                                ??_setState 0077  
                        ??_WDT_Initialize 0077                                 _PORTAbits 000C  
                       __size_of_TMR1_ISR 000D                    ?_OSCILLATOR_Initialize 0075  
                     start_initialization 0027           __size_of_PIN_MANAGER_Initialize 0018  
                __size_of_PIN_MANAGER_IOC 0001                  __size_of_TMR1_Initialize 0018  
                  __size_of_TMR1_CallBack 000D                               __pbssCOMMON 0070  
                               ___latbits 0000                             __pcstackBANK0 0022  
                        setState@newState 0079                              _currentState 0074  
                               __pnvBANK0 0020                    _PIN_MANAGER_Initialize 010C  
        __end_of_TMR1_SetInterruptHandler 0169                         __size_of_setState 0048  
            ??_INTERRUPT_InterruptManager 0077                  __size_of_TMR1_StartTimer 0003  
                           ??_secondsTick 0075                             _TMR1_CallBack 014F  
                                _LATAbits 010C                                  _PIE1bits 0091  
                __size_of_TMR1_WriteTimer 0011       __size_of_INTERRUPT_InterruptManager 0022  
                                _PIR1bits 0011                                  _TMR1_ISR 0142  
                       ??_PIN_MANAGER_IOC 0075                         ??_TMR1_Initialize 0079  
                      _currentSecondsTick 0072                       __end_of_secondsTick 016E  
                          ?_TMR1_CallBack 0075                   ??_OSCILLATOR_Initialize 0077  
                _TMR1_SetInterruptHandler 0163                     _TMR1_InterruptHandler 0020  
                                __ptext10 0142                                  __ptext11 0124  
                                __ptext12 014F                                  __ptext13 0175  
                              _T1GCONbits 0019                                  __ptext14 0169  
                                __ptext15 0176                         ??_TMR1_StartTimer 0077  
                           __size_of_main 007D                                  _setState 00AC  
                     _demandedSecondsTick 0070                                  int$flags 007E  
      __end_of_INTERRUPT_InterruptManager 0026                _INTERRUPT_InterruptManager 0004  
                       ??_TMR1_WriteTimer 0077                                _INTCONbits 000B  
                             _secondsTick 0169                           ??_TMR1_CallBack 0075  
                 __size_of_WDT_Initialize 0004                                  intlevel1 0000  
                 ?_PIN_MANAGER_Initialize 0075            __end_of_PIN_MANAGER_Initialize 0124  
                         _PIN_MANAGER_IOC 0176                           _TMR1_Initialize 00F4  
