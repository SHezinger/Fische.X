

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Aug 11 22:57:43 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	12F1571
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.10
    27                           ; Generated 31/07/2019 GMT
    28                           ; 
    29                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC12F1571 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  008C                     	;# 
    86  0091                     	;# 
    87  0092                     	;# 
    88  0093                     	;# 
    89  0095                     	;# 
    90  0096                     	;# 
    91  0097                     	;# 
    92  0098                     	;# 
    93  0099                     	;# 
    94  009A                     	;# 
    95  009B                     	;# 
    96  009B                     	;# 
    97  009C                     	;# 
    98  009D                     	;# 
    99  009E                     	;# 
   100  009F                     	;# 
   101  010C                     	;# 
   102  0111                     	;# 
   103  0112                     	;# 
   104  0115                     	;# 
   105  0116                     	;# 
   106  0117                     	;# 
   107  0118                     	;# 
   108  0119                     	;# 
   109  011D                     	;# 
   110  011D                     	;# 
   111  018C                     	;# 
   112  0191                     	;# 
   113  0191                     	;# 
   114  0192                     	;# 
   115  0193                     	;# 
   116  0193                     	;# 
   117  0194                     	;# 
   118  0195                     	;# 
   119  0196                     	;# 
   120  0197                     	;# 
   121  020C                     	;# 
   122  028C                     	;# 
   123  030C                     	;# 
   124  038C                     	;# 
   125  0391                     	;# 
   126  0392                     	;# 
   127  0393                     	;# 
   128  0691                     	;# 
   129  0692                     	;# 
   130  0693                     	;# 
   131  0694                     	;# 
   132  0695                     	;# 
   133  0D8E                     	;# 
   134  0D8F                     	;# 
   135  0D90                     	;# 
   136  0D91                     	;# 
   137  0D91                     	;# 
   138  0D92                     	;# 
   139  0D93                     	;# 
   140  0D93                     	;# 
   141  0D94                     	;# 
   142  0D95                     	;# 
   143  0D95                     	;# 
   144  0D96                     	;# 
   145  0D97                     	;# 
   146  0D97                     	;# 
   147  0D98                     	;# 
   148  0D99                     	;# 
   149  0D99                     	;# 
   150  0D9A                     	;# 
   151  0D9B                     	;# 
   152  0D9C                     	;# 
   153  0D9C                     	;# 
   154  0D9D                     	;# 
   155  0D9D                     	;# 
   156  0D9E                     	;# 
   157  0D9F                     	;# 
   158  0DA0                     	;# 
   159  0DA1                     	;# 
   160  0DA1                     	;# 
   161  0DA2                     	;# 
   162  0DA3                     	;# 
   163  0DA3                     	;# 
   164  0DA4                     	;# 
   165  0DA5                     	;# 
   166  0DA5                     	;# 
   167  0DA6                     	;# 
   168  0DA7                     	;# 
   169  0DA7                     	;# 
   170  0DA8                     	;# 
   171  0DA9                     	;# 
   172  0DA9                     	;# 
   173  0DAA                     	;# 
   174  0DAB                     	;# 
   175  0DAC                     	;# 
   176  0DAC                     	;# 
   177  0DAD                     	;# 
   178  0DAD                     	;# 
   179  0DAE                     	;# 
   180  0DAF                     	;# 
   181  0DB0                     	;# 
   182  0DB1                     	;# 
   183  0DB1                     	;# 
   184  0DB2                     	;# 
   185  0DB3                     	;# 
   186  0DB3                     	;# 
   187  0DB4                     	;# 
   188  0DB5                     	;# 
   189  0DB5                     	;# 
   190  0DB6                     	;# 
   191  0DB7                     	;# 
   192  0DB7                     	;# 
   193  0DB8                     	;# 
   194  0DB9                     	;# 
   195  0DB9                     	;# 
   196  0DBA                     	;# 
   197  0DBB                     	;# 
   198  0DBC                     	;# 
   199  0DBC                     	;# 
   200  0DBD                     	;# 
   201  0DBD                     	;# 
   202  0DBE                     	;# 
   203  0DBF                     	;# 
   204  0DC0                     	;# 
   205  0FE4                     	;# 
   206  0FE5                     	;# 
   207  0FE6                     	;# 
   208  0FE7                     	;# 
   209  0FE8                     	;# 
   210  0FE8                     	;# 
   211  0FE9                     	;# 
   212  0FEA                     	;# 
   213  0FEA                     	;# 
   214  0FEB                     	;# 
   215  0FED                     	;# 
   216  0FEE                     	;# 
   217  0FEE                     	;# 
   218  0FEF                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0008                     	;# 
   228  0009                     	;# 
   229  000A                     	;# 
   230  000B                     	;# 
   231  000C                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  008C                     	;# 
   245  0091                     	;# 
   246  0092                     	;# 
   247  0093                     	;# 
   248  0095                     	;# 
   249  0096                     	;# 
   250  0097                     	;# 
   251  0098                     	;# 
   252  0099                     	;# 
   253  009A                     	;# 
   254  009B                     	;# 
   255  009B                     	;# 
   256  009C                     	;# 
   257  009D                     	;# 
   258  009E                     	;# 
   259  009F                     	;# 
   260  010C                     	;# 
   261  0111                     	;# 
   262  0112                     	;# 
   263  0115                     	;# 
   264  0116                     	;# 
   265  0117                     	;# 
   266  0118                     	;# 
   267  0119                     	;# 
   268  011D                     	;# 
   269  011D                     	;# 
   270  018C                     	;# 
   271  0191                     	;# 
   272  0191                     	;# 
   273  0192                     	;# 
   274  0193                     	;# 
   275  0193                     	;# 
   276  0194                     	;# 
   277  0195                     	;# 
   278  0196                     	;# 
   279  0197                     	;# 
   280  020C                     	;# 
   281  028C                     	;# 
   282  030C                     	;# 
   283  038C                     	;# 
   284  0391                     	;# 
   285  0392                     	;# 
   286  0393                     	;# 
   287  0691                     	;# 
   288  0692                     	;# 
   289  0693                     	;# 
   290  0694                     	;# 
   291  0695                     	;# 
   292  0D8E                     	;# 
   293  0D8F                     	;# 
   294  0D90                     	;# 
   295  0D91                     	;# 
   296  0D91                     	;# 
   297  0D92                     	;# 
   298  0D93                     	;# 
   299  0D93                     	;# 
   300  0D94                     	;# 
   301  0D95                     	;# 
   302  0D95                     	;# 
   303  0D96                     	;# 
   304  0D97                     	;# 
   305  0D97                     	;# 
   306  0D98                     	;# 
   307  0D99                     	;# 
   308  0D99                     	;# 
   309  0D9A                     	;# 
   310  0D9B                     	;# 
   311  0D9C                     	;# 
   312  0D9C                     	;# 
   313  0D9D                     	;# 
   314  0D9D                     	;# 
   315  0D9E                     	;# 
   316  0D9F                     	;# 
   317  0DA0                     	;# 
   318  0DA1                     	;# 
   319  0DA1                     	;# 
   320  0DA2                     	;# 
   321  0DA3                     	;# 
   322  0DA3                     	;# 
   323  0DA4                     	;# 
   324  0DA5                     	;# 
   325  0DA5                     	;# 
   326  0DA6                     	;# 
   327  0DA7                     	;# 
   328  0DA7                     	;# 
   329  0DA8                     	;# 
   330  0DA9                     	;# 
   331  0DA9                     	;# 
   332  0DAA                     	;# 
   333  0DAB                     	;# 
   334  0DAC                     	;# 
   335  0DAC                     	;# 
   336  0DAD                     	;# 
   337  0DAD                     	;# 
   338  0DAE                     	;# 
   339  0DAF                     	;# 
   340  0DB0                     	;# 
   341  0DB1                     	;# 
   342  0DB1                     	;# 
   343  0DB2                     	;# 
   344  0DB3                     	;# 
   345  0DB3                     	;# 
   346  0DB4                     	;# 
   347  0DB5                     	;# 
   348  0DB5                     	;# 
   349  0DB6                     	;# 
   350  0DB7                     	;# 
   351  0DB7                     	;# 
   352  0DB8                     	;# 
   353  0DB9                     	;# 
   354  0DB9                     	;# 
   355  0DBA                     	;# 
   356  0DBB                     	;# 
   357  0DBC                     	;# 
   358  0DBC                     	;# 
   359  0DBD                     	;# 
   360  0DBD                     	;# 
   361  0DBE                     	;# 
   362  0DBF                     	;# 
   363  0DC0                     	;# 
   364  0FE4                     	;# 
   365  0FE5                     	;# 
   366  0FE6                     	;# 
   367  0FE7                     	;# 
   368  0FE8                     	;# 
   369  0FE8                     	;# 
   370  0FE9                     	;# 
   371  0FEA                     	;# 
   372  0FEA                     	;# 
   373  0FEB                     	;# 
   374  0FED                     	;# 
   375  0FEE                     	;# 
   376  0FEE                     	;# 
   377  0FEF                     	;# 
   378  0000                     	;# 
   379  0001                     	;# 
   380  0002                     	;# 
   381  0003                     	;# 
   382  0004                     	;# 
   383  0005                     	;# 
   384  0006                     	;# 
   385  0007                     	;# 
   386  0008                     	;# 
   387  0009                     	;# 
   388  000A                     	;# 
   389  000B                     	;# 
   390  000C                     	;# 
   391  0011                     	;# 
   392  0012                     	;# 
   393  0013                     	;# 
   394  0015                     	;# 
   395  0016                     	;# 
   396  0016                     	;# 
   397  0017                     	;# 
   398  0018                     	;# 
   399  0019                     	;# 
   400  001A                     	;# 
   401  001B                     	;# 
   402  001C                     	;# 
   403  008C                     	;# 
   404  0091                     	;# 
   405  0092                     	;# 
   406  0093                     	;# 
   407  0095                     	;# 
   408  0096                     	;# 
   409  0097                     	;# 
   410  0098                     	;# 
   411  0099                     	;# 
   412  009A                     	;# 
   413  009B                     	;# 
   414  009B                     	;# 
   415  009C                     	;# 
   416  009D                     	;# 
   417  009E                     	;# 
   418  009F                     	;# 
   419  010C                     	;# 
   420  0111                     	;# 
   421  0112                     	;# 
   422  0115                     	;# 
   423  0116                     	;# 
   424  0117                     	;# 
   425  0118                     	;# 
   426  0119                     	;# 
   427  011D                     	;# 
   428  011D                     	;# 
   429  018C                     	;# 
   430  0191                     	;# 
   431  0191                     	;# 
   432  0192                     	;# 
   433  0193                     	;# 
   434  0193                     	;# 
   435  0194                     	;# 
   436  0195                     	;# 
   437  0196                     	;# 
   438  0197                     	;# 
   439  020C                     	;# 
   440  028C                     	;# 
   441  030C                     	;# 
   442  038C                     	;# 
   443  0391                     	;# 
   444  0392                     	;# 
   445  0393                     	;# 
   446  0691                     	;# 
   447  0692                     	;# 
   448  0693                     	;# 
   449  0694                     	;# 
   450  0695                     	;# 
   451  0D8E                     	;# 
   452  0D8F                     	;# 
   453  0D90                     	;# 
   454  0D91                     	;# 
   455  0D91                     	;# 
   456  0D92                     	;# 
   457  0D93                     	;# 
   458  0D93                     	;# 
   459  0D94                     	;# 
   460  0D95                     	;# 
   461  0D95                     	;# 
   462  0D96                     	;# 
   463  0D97                     	;# 
   464  0D97                     	;# 
   465  0D98                     	;# 
   466  0D99                     	;# 
   467  0D99                     	;# 
   468  0D9A                     	;# 
   469  0D9B                     	;# 
   470  0D9C                     	;# 
   471  0D9C                     	;# 
   472  0D9D                     	;# 
   473  0D9D                     	;# 
   474  0D9E                     	;# 
   475  0D9F                     	;# 
   476  0DA0                     	;# 
   477  0DA1                     	;# 
   478  0DA1                     	;# 
   479  0DA2                     	;# 
   480  0DA3                     	;# 
   481  0DA3                     	;# 
   482  0DA4                     	;# 
   483  0DA5                     	;# 
   484  0DA5                     	;# 
   485  0DA6                     	;# 
   486  0DA7                     	;# 
   487  0DA7                     	;# 
   488  0DA8                     	;# 
   489  0DA9                     	;# 
   490  0DA9                     	;# 
   491  0DAA                     	;# 
   492  0DAB                     	;# 
   493  0DAC                     	;# 
   494  0DAC                     	;# 
   495  0DAD                     	;# 
   496  0DAD                     	;# 
   497  0DAE                     	;# 
   498  0DAF                     	;# 
   499  0DB0                     	;# 
   500  0DB1                     	;# 
   501  0DB1                     	;# 
   502  0DB2                     	;# 
   503  0DB3                     	;# 
   504  0DB3                     	;# 
   505  0DB4                     	;# 
   506  0DB5                     	;# 
   507  0DB5                     	;# 
   508  0DB6                     	;# 
   509  0DB7                     	;# 
   510  0DB7                     	;# 
   511  0DB8                     	;# 
   512  0DB9                     	;# 
   513  0DB9                     	;# 
   514  0DBA                     	;# 
   515  0DBB                     	;# 
   516  0DBC                     	;# 
   517  0DBC                     	;# 
   518  0DBD                     	;# 
   519  0DBD                     	;# 
   520  0DBE                     	;# 
   521  0DBF                     	;# 
   522  0DC0                     	;# 
   523  0FE4                     	;# 
   524  0FE5                     	;# 
   525  0FE6                     	;# 
   526  0FE7                     	;# 
   527  0FE8                     	;# 
   528  0FE8                     	;# 
   529  0FE9                     	;# 
   530  0FEA                     	;# 
   531  0FEA                     	;# 
   532  0FEB                     	;# 
   533  0FED                     	;# 
   534  0FEE                     	;# 
   535  0FEE                     	;# 
   536  0FEF                     	;# 
   537  0000                     	;# 
   538  0001                     	;# 
   539  0002                     	;# 
   540  0003                     	;# 
   541  0004                     	;# 
   542  0005                     	;# 
   543  0006                     	;# 
   544  0007                     	;# 
   545  0008                     	;# 
   546  0009                     	;# 
   547  000A                     	;# 
   548  000B                     	;# 
   549  000C                     	;# 
   550  0011                     	;# 
   551  0012                     	;# 
   552  0013                     	;# 
   553  0015                     	;# 
   554  0016                     	;# 
   555  0016                     	;# 
   556  0017                     	;# 
   557  0018                     	;# 
   558  0019                     	;# 
   559  001A                     	;# 
   560  001B                     	;# 
   561  001C                     	;# 
   562  008C                     	;# 
   563  0091                     	;# 
   564  0092                     	;# 
   565  0093                     	;# 
   566  0095                     	;# 
   567  0096                     	;# 
   568  0097                     	;# 
   569  0098                     	;# 
   570  0099                     	;# 
   571  009A                     	;# 
   572  009B                     	;# 
   573  009B                     	;# 
   574  009C                     	;# 
   575  009D                     	;# 
   576  009E                     	;# 
   577  009F                     	;# 
   578  010C                     	;# 
   579  0111                     	;# 
   580  0112                     	;# 
   581  0115                     	;# 
   582  0116                     	;# 
   583  0117                     	;# 
   584  0118                     	;# 
   585  0119                     	;# 
   586  011D                     	;# 
   587  011D                     	;# 
   588  018C                     	;# 
   589  0191                     	;# 
   590  0191                     	;# 
   591  0192                     	;# 
   592  0193                     	;# 
   593  0193                     	;# 
   594  0194                     	;# 
   595  0195                     	;# 
   596  0196                     	;# 
   597  0197                     	;# 
   598  020C                     	;# 
   599  028C                     	;# 
   600  030C                     	;# 
   601  038C                     	;# 
   602  0391                     	;# 
   603  0392                     	;# 
   604  0393                     	;# 
   605  0691                     	;# 
   606  0692                     	;# 
   607  0693                     	;# 
   608  0694                     	;# 
   609  0695                     	;# 
   610  0D8E                     	;# 
   611  0D8F                     	;# 
   612  0D90                     	;# 
   613  0D91                     	;# 
   614  0D91                     	;# 
   615  0D92                     	;# 
   616  0D93                     	;# 
   617  0D93                     	;# 
   618  0D94                     	;# 
   619  0D95                     	;# 
   620  0D95                     	;# 
   621  0D96                     	;# 
   622  0D97                     	;# 
   623  0D97                     	;# 
   624  0D98                     	;# 
   625  0D99                     	;# 
   626  0D99                     	;# 
   627  0D9A                     	;# 
   628  0D9B                     	;# 
   629  0D9C                     	;# 
   630  0D9C                     	;# 
   631  0D9D                     	;# 
   632  0D9D                     	;# 
   633  0D9E                     	;# 
   634  0D9F                     	;# 
   635  0DA0                     	;# 
   636  0DA1                     	;# 
   637  0DA1                     	;# 
   638  0DA2                     	;# 
   639  0DA3                     	;# 
   640  0DA3                     	;# 
   641  0DA4                     	;# 
   642  0DA5                     	;# 
   643  0DA5                     	;# 
   644  0DA6                     	;# 
   645  0DA7                     	;# 
   646  0DA7                     	;# 
   647  0DA8                     	;# 
   648  0DA9                     	;# 
   649  0DA9                     	;# 
   650  0DAA                     	;# 
   651  0DAB                     	;# 
   652  0DAC                     	;# 
   653  0DAC                     	;# 
   654  0DAD                     	;# 
   655  0DAD                     	;# 
   656  0DAE                     	;# 
   657  0DAF                     	;# 
   658  0DB0                     	;# 
   659  0DB1                     	;# 
   660  0DB1                     	;# 
   661  0DB2                     	;# 
   662  0DB3                     	;# 
   663  0DB3                     	;# 
   664  0DB4                     	;# 
   665  0DB5                     	;# 
   666  0DB5                     	;# 
   667  0DB6                     	;# 
   668  0DB7                     	;# 
   669  0DB7                     	;# 
   670  0DB8                     	;# 
   671  0DB9                     	;# 
   672  0DB9                     	;# 
   673  0DBA                     	;# 
   674  0DBB                     	;# 
   675  0DBC                     	;# 
   676  0DBC                     	;# 
   677  0DBD                     	;# 
   678  0DBD                     	;# 
   679  0DBE                     	;# 
   680  0DBF                     	;# 
   681  0DC0                     	;# 
   682  0FE4                     	;# 
   683  0FE5                     	;# 
   684  0FE6                     	;# 
   685  0FE7                     	;# 
   686  0FE8                     	;# 
   687  0FE8                     	;# 
   688  0FE9                     	;# 
   689  0FEA                     	;# 
   690  0FEA                     	;# 
   691  0FEB                     	;# 
   692  0FED                     	;# 
   693  0FEE                     	;# 
   694  0FEE                     	;# 
   695  0FEF                     	;# 
   696  0000                     	;# 
   697  0001                     	;# 
   698  0002                     	;# 
   699  0003                     	;# 
   700  0004                     	;# 
   701  0005                     	;# 
   702  0006                     	;# 
   703  0007                     	;# 
   704  0008                     	;# 
   705  0009                     	;# 
   706  000A                     	;# 
   707  000B                     	;# 
   708  000C                     	;# 
   709  0011                     	;# 
   710  0012                     	;# 
   711  0013                     	;# 
   712  0015                     	;# 
   713  0016                     	;# 
   714  0016                     	;# 
   715  0017                     	;# 
   716  0018                     	;# 
   717  0019                     	;# 
   718  001A                     	;# 
   719  001B                     	;# 
   720  001C                     	;# 
   721  008C                     	;# 
   722  0091                     	;# 
   723  0092                     	;# 
   724  0093                     	;# 
   725  0095                     	;# 
   726  0096                     	;# 
   727  0097                     	;# 
   728  0098                     	;# 
   729  0099                     	;# 
   730  009A                     	;# 
   731  009B                     	;# 
   732  009B                     	;# 
   733  009C                     	;# 
   734  009D                     	;# 
   735  009E                     	;# 
   736  009F                     	;# 
   737  010C                     	;# 
   738  0111                     	;# 
   739  0112                     	;# 
   740  0115                     	;# 
   741  0116                     	;# 
   742  0117                     	;# 
   743  0118                     	;# 
   744  0119                     	;# 
   745  011D                     	;# 
   746  011D                     	;# 
   747  018C                     	;# 
   748  0191                     	;# 
   749  0191                     	;# 
   750  0192                     	;# 
   751  0193                     	;# 
   752  0193                     	;# 
   753  0194                     	;# 
   754  0195                     	;# 
   755  0196                     	;# 
   756  0197                     	;# 
   757  020C                     	;# 
   758  028C                     	;# 
   759  030C                     	;# 
   760  038C                     	;# 
   761  0391                     	;# 
   762  0392                     	;# 
   763  0393                     	;# 
   764  0691                     	;# 
   765  0692                     	;# 
   766  0693                     	;# 
   767  0694                     	;# 
   768  0695                     	;# 
   769  0D8E                     	;# 
   770  0D8F                     	;# 
   771  0D90                     	;# 
   772  0D91                     	;# 
   773  0D91                     	;# 
   774  0D92                     	;# 
   775  0D93                     	;# 
   776  0D93                     	;# 
   777  0D94                     	;# 
   778  0D95                     	;# 
   779  0D95                     	;# 
   780  0D96                     	;# 
   781  0D97                     	;# 
   782  0D97                     	;# 
   783  0D98                     	;# 
   784  0D99                     	;# 
   785  0D99                     	;# 
   786  0D9A                     	;# 
   787  0D9B                     	;# 
   788  0D9C                     	;# 
   789  0D9C                     	;# 
   790  0D9D                     	;# 
   791  0D9D                     	;# 
   792  0D9E                     	;# 
   793  0D9F                     	;# 
   794  0DA0                     	;# 
   795  0DA1                     	;# 
   796  0DA1                     	;# 
   797  0DA2                     	;# 
   798  0DA3                     	;# 
   799  0DA3                     	;# 
   800  0DA4                     	;# 
   801  0DA5                     	;# 
   802  0DA5                     	;# 
   803  0DA6                     	;# 
   804  0DA7                     	;# 
   805  0DA7                     	;# 
   806  0DA8                     	;# 
   807  0DA9                     	;# 
   808  0DA9                     	;# 
   809  0DAA                     	;# 
   810  0DAB                     	;# 
   811  0DAC                     	;# 
   812  0DAC                     	;# 
   813  0DAD                     	;# 
   814  0DAD                     	;# 
   815  0DAE                     	;# 
   816  0DAF                     	;# 
   817  0DB0                     	;# 
   818  0DB1                     	;# 
   819  0DB1                     	;# 
   820  0DB2                     	;# 
   821  0DB3                     	;# 
   822  0DB3                     	;# 
   823  0DB4                     	;# 
   824  0DB5                     	;# 
   825  0DB5                     	;# 
   826  0DB6                     	;# 
   827  0DB7                     	;# 
   828  0DB7                     	;# 
   829  0DB8                     	;# 
   830  0DB9                     	;# 
   831  0DB9                     	;# 
   832  0DBA                     	;# 
   833  0DBB                     	;# 
   834  0DBC                     	;# 
   835  0DBC                     	;# 
   836  0DBD                     	;# 
   837  0DBD                     	;# 
   838  0DBE                     	;# 
   839  0DBF                     	;# 
   840  0DC0                     	;# 
   841  0FE4                     	;# 
   842  0FE5                     	;# 
   843  0FE6                     	;# 
   844  0FE7                     	;# 
   845  0FE8                     	;# 
   846  0FE8                     	;# 
   847  0FE9                     	;# 
   848  0FEA                     	;# 
   849  0FEA                     	;# 
   850  0FEB                     	;# 
   851  0FED                     	;# 
   852  0FEE                     	;# 
   853  0FEE                     	;# 
   854  0FEF                     	;# 
   855                           
   856                           	psect	nvCOMMON
   857  0075                     __pnvCOMMON:	
   858  0075                     _TMR1_InterruptHandler:	
   859  0075                     	ds	2
   860  0077                     _timer1ReloadVal:	
   861  0077                     	ds	2
   862  000C                     _PORTAbits	set	12
   863  000B                     _INTCONbits	set	11
   864  0019                     _T1GCONbits	set	25
   865  0018                     _T1CONbits	set	24
   866  0018                     _T1CON	set	24
   867  0011                     _PIR1bits	set	17
   868  0016                     _TMR1L	set	22
   869  0017                     _TMR1H	set	23
   870  0019                     _T1GCON	set	25
   871  0091                     _PIE1bits	set	145
   872  0095                     _OPTION_REGbits	set	149
   873  008C                     _TRISA	set	140
   874  0097                     _WDTCON	set	151
   875  0098                     _OSCTUNE	set	152
   876  0099                     _OSCCON	set	153
   877  010C                     _LATAbits	set	268
   878  011D                     _APFCON	set	285
   879  010C                     _LATA	set	268
   880  0116                     _BORCON	set	278
   881  018C                     _ANSELA	set	396
   882  020C                     _WPUA	set	524
   883  028C                     _ODCONA	set	652
   884  030C                     _SLRCONA	set	780
   885  038C                     _INLVLA	set	908
   886                           
   887                           ; #config settings
   888  0000                     
   889                           	psect	cinit
   890  001A                     start_initialization:	
   891  001A                     __initialization:	
   892                           
   893                           ; Clear objects allocated to COMMON
   894  001A  01F0               	clrf	__pbssCOMMON& (0+127)
   895  001B  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   896  001C  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   897  001D  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   898  001E  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   899  001F                     end_of_initialization:	
   900                           ;End of C runtime variable initialization code
   901                           
   902  001F                     __end_of__initialization:	
   903  001F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   904  0020  0020               	movlb	0
   905  0021  2863               	ljmp	_main	;jump to C main() function
   906                           
   907                           	psect	bssCOMMON
   908  0070                     __pbssCOMMON:	
   909  0070                     _demandedSecondsTick:	
   910  0070                     	ds	2
   911  0072                     _currentSecondsTick:	
   912  0072                     	ds	2
   913  0074                     _currentState:	
   914  0074                     	ds	1
   915                           
   916                           	psect	cstackCOMMON
   917  0079                     __pcstackCOMMON:	
   918  0079                     ?_PIN_MANAGER_Initialize:	
   919  0079                     ?_OSCILLATOR_Initialize:	
   920                           ; 1 bytes @ 0x0
   921                           
   922  0079                     ?_WDT_Initialize:	
   923                           ; 1 bytes @ 0x0
   924                           
   925  0079                     ?_TMR1_Initialize:	
   926                           ; 1 bytes @ 0x0
   927                           
   928  0079                     ?_TMR1_DefaultInterruptHandler:	
   929                           ; 1 bytes @ 0x0
   930                           
   931  0079                     ??_TMR1_DefaultInterruptHandler:	
   932                           ; 1 bytes @ 0x0
   933                           
   934  0079                     ?_TMR1_CallBack:	
   935                           ; 1 bytes @ 0x0
   936                           
   937  0079                     ??_TMR1_CallBack:	
   938                           ; 1 bytes @ 0x0
   939                           
   940  0079                     ?_secondsTick:	
   941                           ; 1 bytes @ 0x0
   942                           
   943  0079                     ??_secondsTick:	
   944                           ; 1 bytes @ 0x0
   945                           
   946  0079                     ?_setState:	
   947                           ; 1 bytes @ 0x0
   948                           
   949  0079                     ?_SYSTEM_Initialize:	
   950                           ; 1 bytes @ 0x0
   951                           
   952  0079                     ?_TMR1_StartTimer:	
   953                           ; 1 bytes @ 0x0
   954                           
   955  0079                     ?_TMR1_WriteTimer:	
   956                           ; 1 bytes @ 0x0
   957                           
   958  0079                     ?_TMR1_ISR:	
   959                           ; 1 bytes @ 0x0
   960                           
   961  0079                     ?_INTERRUPT_InterruptManager:	
   962                           ; 1 bytes @ 0x0
   963                           
   964  0079                     ?_main:	
   965                           ; 1 bytes @ 0x0
   966                           
   967  0079                     TMR1_WriteTimer@timerVal:	
   968                           ; 1 bytes @ 0x0
   969                           
   970                           
   971                           ; 2 bytes @ 0x0
   972  0079                     	ds	2
   973  007B                     ??_PIN_MANAGER_Initialize:	
   974  007B                     ??_OSCILLATOR_Initialize:	
   975                           ; 1 bytes @ 0x2
   976                           
   977  007B                     ??_WDT_Initialize:	
   978                           ; 1 bytes @ 0x2
   979                           
   980  007B                     ??_TMR1_Initialize:	
   981                           ; 1 bytes @ 0x2
   982                           
   983  007B                     ??_TMR1_SetInterruptHandler:	
   984                           ; 1 bytes @ 0x2
   985                           
   986  007B                     ??_SYSTEM_Initialize:	
   987                           ; 1 bytes @ 0x2
   988                           
   989  007B                     ??_TMR1_StartTimer:	
   990                           ; 1 bytes @ 0x2
   991                           
   992  007B                     ??_TMR1_WriteTimer:	
   993                           ; 1 bytes @ 0x2
   994                           
   995  007B                     ??_TMR1_ISR:	
   996                           ; 1 bytes @ 0x2
   997                           
   998  007B                     ??_INTERRUPT_InterruptManager:	
   999                           ; 1 bytes @ 0x2
  1000                           
  1001  007B                     setState@newState:	
  1002                           ; 1 bytes @ 0x2
  1003                           
  1004                           
  1005                           ; 1 bytes @ 0x2
  1006  007B                     	ds	1
  1007  007C                     ??_main:	
  1008                           
  1009                           	psect	cstackBANK0
  1010  0020                     __pcstackBANK0:	
  1011                           ; 1 bytes @ 0x3
  1012                           
  1013  0020                     ?_TMR1_SetInterruptHandler:	
  1014  0020                     ??_setState:	
  1015                           ; 1 bytes @ 0x0
  1016                           
  1017  0020                     TMR1_SetInterruptHandler@InterruptHandler:	
  1018                           ; 1 bytes @ 0x0
  1019                           
  1020                           
  1021                           ; 2 bytes @ 0x0
  1022  0020                     	ds	2
  1023                           
  1024                           	psect	maintext
  1025  0063                     __pmaintext:	
  1026 ;;
  1027 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1028 ;;
  1029 ;; *************** function _main *****************
  1030 ;; Defined at:
  1031 ;;		line 68 in file "main.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;		None
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;		None
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  1    wreg      void 
  1038 ;; Registers used:
  1039 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1040 ;; Tracked objects:
  1041 ;;		On entry : B1F/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMMON   BANK0   BANK1
  1045 ;;      Params:         0       0       0
  1046 ;;      Locals:         0       0       0
  1047 ;;      Temps:          0       0       0
  1048 ;;      Totals:         0       0       0
  1049 ;;Total ram usage:        0 bytes
  1050 ;; Hardware stack levels required when called:    7
  1051 ;; This function calls:
  1052 ;;		_SYSTEM_Initialize
  1053 ;;		_TMR1_SetInterruptHandler
  1054 ;;		_TMR1_StartTimer
  1055 ;;		_setState
  1056 ;; This function is called by:
  1057 ;;		Startup code after reset
  1058 ;; This function uses a non-reentrant model
  1059 ;;
  1060                           
  1061                           
  1062                           ;psect for function _main
  1063  0063                     _main:	
  1064  0063                     l1027:	
  1065                           ;incstack = 0
  1066                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1067                           
  1068                           
  1069                           ;main.c: 71:     SYSTEM_Initialize();
  1070  0063  3180  20C4  3180   	fcall	_SYSTEM_Initialize
  1071  0066                     l1029:	
  1072                           
  1073                           ;main.c: 77:     (INTCONbits.GIE = 1);
  1074  0066  178B               	bsf	11,7	;volatile
  1075  0067                     l1031:	
  1076                           
  1077                           ;main.c: 80:     (INTCONbits.PEIE = 1);
  1078  0067  170B               	bsf	11,6	;volatile
  1079                           
  1080                           ;main.c: 89:     TMR1_SetInterruptHandler(secondsTick);
  1081  0068  30F7               	movlw	low _secondsTick
  1082  0069  0020               	movlb	0	; select bank0
  1083  006A  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  1084  006B  3000               	movlw	high _secondsTick
  1085  006C  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  1086  006D  3180  20F1  3180   	fcall	_TMR1_SetInterruptHandler
  1087  0070                     l1033:	
  1088                           
  1089                           ;main.c: 91:     TMR1_StartTimer();
  1090  0070  3181  2100  3180   	fcall	_TMR1_StartTimer
  1091  0073                     l1035:	
  1092                           
  1093                           ;main.c: 93:     setState(STATE_WAIT_TIME);
  1094  0073  3001               	movlw	1
  1095  0074  3180  2022  3180   	fcall	_setState
  1096  0077                     l1037:	
  1097                           
  1098                           ;main.c: 96:     {;main.c: 97:         if(PORTAbits.RA4)
  1099  0077  0020               	movlb	0	; select bank0
  1100  0078  1E0C               	btfss	12,4	;volatile
  1101  0079  287B               	goto	u141
  1102  007A  287C               	goto	u140
  1103  007B                     u141:	
  1104  007B  287F               	goto	l163
  1105  007C                     u140:	
  1106  007C                     l160:	
  1107                           ;main.c: 98:         {;main.c: 99:             do { LATAbits.LATA2 = 1; } while(0);
  1108                           
  1109  007C  0022               	movlb	2	; select bank2
  1110  007D  150C               	bsf	12,2	;volatile
  1111  007E  2877               	goto	l1037
  1112  007F                     l163:	
  1113                           ;main.c: 102:         {;main.c: 103:             do { LATAbits.LATA2 = 0; } while(0);
  1114                           
  1115  007F  0022               	movlb	2	; select bank2
  1116  0080  110C               	bcf	12,2	;volatile
  1117  0081  2877               	goto	l1037
  1118  0082  2819               	ljmp	start
  1119  0083                     __end_of_main:	
  1120                           
  1121                           	psect	text1
  1122  0022                     __ptext1:	
  1123 ;; *************** function _setState *****************
  1124 ;; Defined at:
  1125 ;;		line 150 in file "main.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;  newState        1    wreg     enum E2970
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;  newState        1    2[COMMON] enum E2970
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  1    wreg      void 
  1132 ;; Registers used:
  1133 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMMON   BANK0   BANK1
  1139 ;;      Params:         0       0       0
  1140 ;;      Locals:         1       0       0
  1141 ;;      Temps:          0       2       0
  1142 ;;      Totals:         1       2       0
  1143 ;;Total ram usage:        3 bytes
  1144 ;; Hardware stack levels used:    1
  1145 ;; Hardware stack levels required when called:    4
  1146 ;; This function calls:
  1147 ;;		Nothing
  1148 ;; This function is called by:
  1149 ;;		_main
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153                           
  1154                           ;psect for function _setState
  1155  0022                     _setState:	
  1156                           
  1157                           ;incstack = 0
  1158                           ; Regs used in _setState: [wreg-fsr0h+status,2+status,0]
  1159                           ;setState@newState stored from wreg
  1160  0022  00FB               	movwf	setState@newState
  1161  0023                     l1009:	
  1162                           
  1163                           ;main.c: 150: void setState(states_t newState);main.c: 151: {;main.c: 152:     if(newSta
      +                          te == currentState)
  1164  0023  087B               	movf	setState@newState,w
  1165  0024  0674               	xorwf	_currentState,w
  1166  0025  1D03               	skipz
  1167  0026  2828               	goto	u131
  1168  0027  2829               	goto	u130
  1169  0028                     u131:	
  1170  0028  2846               	goto	l1019
  1171  0029                     u130:	
  1172  0029  2862               	goto	l188
  1173  002A                     l191:	
  1174                           ;main.c: 159:             do { LATAbits.LATA1 = 0; } while(0);
  1175                           
  1176  002A  0022               	movlb	2	; select bank2
  1177  002B  108C               	bcf	12,1	;volatile
  1178  002C                     l193:	
  1179                           ;main.c: 160:             do { LATAbits.LATA2 = 0; } while(0);
  1180                           
  1181  002C  110C               	bcf	12,2	;volatile
  1182  002D                     l1013:	
  1183                           
  1184                           ;main.c: 161:             demandedSecondsTick = currentSecondsTick + 1;
  1185  002D  0872               	movf	_currentSecondsTick,w	;volatile
  1186  002E  3E01               	addlw	1
  1187  002F  00F0               	movwf	_demandedSecondsTick
  1188  0030  3000               	movlw	0
  1189  0031  3D73               	addwfc	_currentSecondsTick+1,w	;volatile
  1190  0032  00F1               	movwf	_demandedSecondsTick+1
  1191                           
  1192                           ;main.c: 162:             break;
  1193  0033  285D               	goto	l1021
  1194  0034                     l197:	
  1195                           ;main.c: 165:             do { LATAbits.LATA1 = 1; } while(0);
  1196                           
  1197  0034  0022               	movlb	2	; select bank2
  1198  0035  148C               	bsf	12,1	;volatile
  1199  0036                     l199:	
  1200                           ;main.c: 166:             do { LATAbits.LATA2 = 0; } while(0);
  1201                           
  1202  0036  110C               	bcf	12,2	;volatile
  1203  0037  285D               	goto	l1021
  1204  0038                     l202:	
  1205                           ;main.c: 170:             do { LATAbits.LATA1 = 0; } while(0);
  1206                           
  1207  0038  0022               	movlb	2	; select bank2
  1208  0039  108C               	bcf	12,1	;volatile
  1209  003A                     l204:	
  1210                           ;main.c: 171:             do { LATAbits.LATA2 = 1; } while(0);
  1211                           
  1212  003A  150C               	bsf	12,2	;volatile
  1213  003B                     l1015:	
  1214                           
  1215                           ;main.c: 172:             demandedSecondsTick = currentSecondsTick + 30;
  1216  003B  0872               	movf	_currentSecondsTick,w	;volatile
  1217  003C  3E1E               	addlw	30
  1218  003D  00F0               	movwf	_demandedSecondsTick
  1219  003E  3000               	movlw	0
  1220  003F  3D73               	addwfc	_currentSecondsTick+1,w	;volatile
  1221  0040  00F1               	movwf	_demandedSecondsTick+1
  1222                           
  1223                           ;main.c: 173:             break;
  1224  0041  285D               	goto	l1021
  1225  0042                     l207:	
  1226                           ;main.c: 176:             do { LATAbits.LATA1 = 0; } while(0);
  1227                           
  1228  0042  0022               	movlb	2	; select bank2
  1229  0043  108C               	bcf	12,1	;volatile
  1230  0044                     l209:	
  1231                           ;main.c: 177:             do { LATAbits.LATA2 = 0; } while(0);
  1232                           
  1233  0044  110C               	bcf	12,2	;volatile
  1234  0045  285D               	goto	l1021
  1235  0046                     l1019:	
  1236  0046  087B               	movf	setState@newState,w
  1237  0047  0020               	movlb	0	; select bank0
  1238  0048  00A0               	movwf	??_setState
  1239  0049  01A1               	clrf	??_setState+1
  1240                           
  1241                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1242                           ; Switch size 1, requested type "simple"
  1243                           ; Number of cases is 1, Range of values is 0 to 0
  1244                           ; switch strategies available:
  1245                           ; Name         Instructions Cycles
  1246                           ; simple_byte            4     3 (average)
  1247                           ; direct_byte            8     6 (fixed)
  1248                           ; jumptable            260     6 (fixed)
  1249                           ;	Chosen strategy is simple_byte
  1250  004A  0821               	movf	??_setState+1,w
  1251  004B  3A00               	xorlw	0	; case 0
  1252  004C  1903               	skipnz
  1253  004D  284F               	goto	l1075
  1254  004E  285D               	goto	l1021
  1255  004F                     l1075:	
  1256                           
  1257                           ; Switch size 1, requested type "simple"
  1258                           ; Number of cases is 4, Range of values is 1 to 4
  1259                           ; switch strategies available:
  1260                           ; Name         Instructions Cycles
  1261                           ; simple_byte           13     7 (average)
  1262                           ; direct_byte           17     9 (fixed)
  1263                           ; jumptable            263     9 (fixed)
  1264                           ;	Chosen strategy is simple_byte
  1265  004F  0820               	movf	??_setState,w
  1266  0050  3A01               	xorlw	1	; case 1
  1267  0051  1903               	skipnz
  1268  0052  282A               	goto	l191
  1269  0053  3A03               	xorlw	3	; case 2
  1270  0054  1903               	skipnz
  1271  0055  2834               	goto	l197
  1272  0056  3A01               	xorlw	1	; case 3
  1273  0057  1903               	skipnz
  1274  0058  2838               	goto	l202
  1275  0059  3A07               	xorlw	7	; case 4
  1276  005A  1903               	skipnz
  1277  005B  2842               	goto	l207
  1278  005C  285D               	goto	l1021
  1279  005D                     l1021:	
  1280                           
  1281                           ;main.c: 181:     currentState = newState;
  1282  005D  087B               	movf	setState@newState,w
  1283  005E  0020               	movlb	0	; select bank0
  1284  005F  00A0               	movwf	??_setState
  1285  0060  0820               	movf	??_setState,w
  1286  0061  00F4               	movwf	_currentState
  1287  0062                     l188:	
  1288  0062  0008               	return
  1289  0063                     __end_of_setState:	
  1290                           
  1291                           	psect	text2
  1292  0100                     __ptext2:	
  1293 ;; *************** function _TMR1_StartTimer *****************
  1294 ;; Defined at:
  1295 ;;		line 93 in file "mcc_generated_files/tmr1.c"
  1296 ;; Parameters:    Size  Location     Type
  1297 ;;		None
  1298 ;; Auto vars:     Size  Location     Type
  1299 ;;		None
  1300 ;; Return value:  Size  Location     Type
  1301 ;;                  1    wreg      void 
  1302 ;; Registers used:
  1303 ;;		None
  1304 ;; Tracked objects:
  1305 ;;		On entry : 0/0
  1306 ;;		On exit  : 0/0
  1307 ;;		Unchanged: 0/0
  1308 ;; Data sizes:     COMMON   BANK0   BANK1
  1309 ;;      Params:         0       0       0
  1310 ;;      Locals:         0       0       0
  1311 ;;      Temps:          0       0       0
  1312 ;;      Totals:         0       0       0
  1313 ;;Total ram usage:        0 bytes
  1314 ;; Hardware stack levels used:    1
  1315 ;; Hardware stack levels required when called:    4
  1316 ;; This function calls:
  1317 ;;		Nothing
  1318 ;; This function is called by:
  1319 ;;		_main
  1320 ;; This function uses a non-reentrant model
  1321 ;;
  1322                           
  1323                           
  1324                           ;psect for function _TMR1_StartTimer
  1325  0100                     _TMR1_StartTimer:	
  1326  0100                     l799:	
  1327                           ;incstack = 0
  1328                           ; Regs used in _TMR1_StartTimer: []
  1329                           
  1330                           
  1331                           ;mcc_generated_files/tmr1.c: 96:     T1CONbits.TMR1ON = 1;
  1332  0100  0020               	movlb	0	; select bank0
  1333  0101  1418               	bsf	24,0	;volatile
  1334  0102                     l81:	
  1335  0102  0008               	return
  1336  0103                     __end_of_TMR1_StartTimer:	
  1337                           
  1338                           	psect	text3
  1339  00C4                     __ptext3:	
  1340 ;; *************** function _SYSTEM_Initialize *****************
  1341 ;; Defined at:
  1342 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;		None
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;		None
  1347 ;; Return value:  Size  Location     Type
  1348 ;;                  1    wreg      void 
  1349 ;; Registers used:
  1350 ;;		wreg, status,2, status,0, pclath, cstack
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMMON   BANK0   BANK1
  1356 ;;      Params:         0       0       0
  1357 ;;      Locals:         0       0       0
  1358 ;;      Temps:          0       0       0
  1359 ;;      Totals:         0       0       0
  1360 ;;Total ram usage:        0 bytes
  1361 ;; Hardware stack levels used:    1
  1362 ;; Hardware stack levels required when called:    6
  1363 ;; This function calls:
  1364 ;;		_OSCILLATOR_Initialize
  1365 ;;		_PIN_MANAGER_Initialize
  1366 ;;		_TMR1_Initialize
  1367 ;;		_WDT_Initialize
  1368 ;; This function is called by:
  1369 ;;		_main
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372                           
  1373                           
  1374                           ;psect for function _SYSTEM_Initialize
  1375  00C4                     _SYSTEM_Initialize:	
  1376  00C4                     l1007:	
  1377                           ;incstack = 0
  1378                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1379                           
  1380                           
  1381                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1382  00C4  3180  209C  3180   	fcall	_PIN_MANAGER_Initialize
  1383                           
  1384                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1385  00C7  3180  20EA  3180   	fcall	_OSCILLATOR_Initialize
  1386                           
  1387                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  1388  00CA  3180  20FC  3180   	fcall	_WDT_Initialize
  1389                           
  1390                           ;mcc_generated_files/mcc.c: 56:     TMR1_Initialize();
  1391  00CD  3180  2083  3180   	fcall	_TMR1_Initialize
  1392  00D0                     l19:	
  1393  00D0  0008               	return
  1394  00D1                     __end_of_SYSTEM_Initialize:	
  1395                           
  1396                           	psect	text4
  1397  00FC                     __ptext4:	
  1398 ;; *************** function _WDT_Initialize *****************
  1399 ;; Defined at:
  1400 ;;		line 69 in file "mcc_generated_files/mcc.c"
  1401 ;; Parameters:    Size  Location     Type
  1402 ;;		None
  1403 ;; Auto vars:     Size  Location     Type
  1404 ;;		None
  1405 ;; Return value:  Size  Location     Type
  1406 ;;                  1    wreg      void 
  1407 ;; Registers used:
  1408 ;;		wreg
  1409 ;; Tracked objects:
  1410 ;;		On entry : 0/0
  1411 ;;		On exit  : 0/0
  1412 ;;		Unchanged: 0/0
  1413 ;; Data sizes:     COMMON   BANK0   BANK1
  1414 ;;      Params:         0       0       0
  1415 ;;      Locals:         0       0       0
  1416 ;;      Temps:          0       0       0
  1417 ;;      Totals:         0       0       0
  1418 ;;Total ram usage:        0 bytes
  1419 ;; Hardware stack levels used:    1
  1420 ;; Hardware stack levels required when called:    4
  1421 ;; This function calls:
  1422 ;;		Nothing
  1423 ;; This function is called by:
  1424 ;;		_SYSTEM_Initialize
  1425 ;; This function uses a non-reentrant model
  1426 ;;
  1427                           
  1428                           
  1429                           ;psect for function _WDT_Initialize
  1430  00FC                     _WDT_Initialize:	
  1431  00FC                     l761:	
  1432                           ;incstack = 0
  1433                           ; Regs used in _WDT_Initialize: [wreg]
  1434                           
  1435                           
  1436                           ;mcc_generated_files/mcc.c: 72:     WDTCON = 0x16;
  1437  00FC  3016               	movlw	22
  1438  00FD  0021               	movlb	1	; select bank1
  1439  00FE  0097               	movwf	23	;volatile
  1440  00FF                     l25:	
  1441  00FF  0008               	return
  1442  0100                     __end_of_WDT_Initialize:	
  1443                           
  1444                           	psect	text5
  1445  0083                     __ptext5:	
  1446 ;; *************** function _TMR1_Initialize *****************
  1447 ;; Defined at:
  1448 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  1449 ;; Parameters:    Size  Location     Type
  1450 ;;		None
  1451 ;; Auto vars:     Size  Location     Type
  1452 ;;		None
  1453 ;; Return value:  Size  Location     Type
  1454 ;;                  1    wreg      void 
  1455 ;; Registers used:
  1456 ;;		wreg, status,2, status,0, pclath, cstack
  1457 ;; Tracked objects:
  1458 ;;		On entry : 0/0
  1459 ;;		On exit  : 0/0
  1460 ;;		Unchanged: 0/0
  1461 ;; Data sizes:     COMMON   BANK0   BANK1
  1462 ;;      Params:         0       0       0
  1463 ;;      Locals:         0       0       0
  1464 ;;      Temps:          0       0       0
  1465 ;;      Totals:         0       0       0
  1466 ;;Total ram usage:        0 bytes
  1467 ;; Hardware stack levels used:    1
  1468 ;; Hardware stack levels required when called:    5
  1469 ;; This function calls:
  1470 ;;		_TMR1_SetInterruptHandler
  1471 ;; This function is called by:
  1472 ;;		_SYSTEM_Initialize
  1473 ;; This function uses a non-reentrant model
  1474 ;;
  1475                           
  1476                           
  1477                           ;psect for function _TMR1_Initialize
  1478  0083                     _TMR1_Initialize:	
  1479  0083                     l991:	
  1480                           ;incstack = 0
  1481                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1482                           
  1483                           
  1484                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  1485  0083  0020               	movlb	0	; select bank0
  1486  0084  0199               	clrf	25	;volatile
  1487  0085                     l993:	
  1488                           
  1489                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x86;
  1490  0085  3086               	movlw	134
  1491  0086  0097               	movwf	23	;volatile
  1492  0087                     l995:	
  1493                           
  1494                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xE8;
  1495  0087  30E8               	movlw	232
  1496  0088  0096               	movwf	22	;volatile
  1497  0089                     l997:	
  1498                           
  1499                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  1500  0089  1011               	bcf	17,0	;volatile
  1501  008A                     l999:	
  1502                           
  1503                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  1504  008A  0817               	movf	23,w	;volatile
  1505  008B  00F8               	movwf	_timer1ReloadVal+1	;volatile
  1506  008C  0816               	movf	22,w	;volatile
  1507  008D  00F7               	movwf	_timer1ReloadVal	;volatile
  1508  008E                     l1001:	
  1509                           
  1510                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  1511  008E  0021               	movlb	1	; select bank1
  1512  008F  1411               	bsf	17,0	;volatile
  1513  0090                     l1003:	
  1514                           
  1515                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  1516  0090  3003               	movlw	low _TMR1_DefaultInterruptHandler
  1517  0091  0020               	movlb	0	; select bank0
  1518  0092  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  1519  0093  3001               	movlw	high _TMR1_DefaultInterruptHandler
  1520  0094  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  1521  0095  3180  20F1  3180   	fcall	_TMR1_SetInterruptHandler
  1522  0098                     l1005:	
  1523                           
  1524                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0xC1;
  1525  0098  30C1               	movlw	193
  1526  0099  0020               	movlb	0	; select bank0
  1527  009A  0098               	movwf	24	;volatile
  1528  009B                     l78:	
  1529  009B  0008               	return
  1530  009C                     __end_of_TMR1_Initialize:	
  1531                           
  1532                           	psect	text6
  1533  00F1                     __ptext6:	
  1534 ;; *************** function _TMR1_SetInterruptHandler *****************
  1535 ;; Defined at:
  1536 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  1539 ;;		 -> secondsTick(1), TMR1_DefaultInterruptHandler(1), 
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;		None
  1542 ;; Return value:  Size  Location     Type
  1543 ;;                  1    wreg      void 
  1544 ;; Registers used:
  1545 ;;		wreg
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMMON   BANK0   BANK1
  1551 ;;      Params:         0       2       0
  1552 ;;      Locals:         0       0       0
  1553 ;;      Temps:          0       0       0
  1554 ;;      Totals:         0       2       0
  1555 ;;Total ram usage:        2 bytes
  1556 ;; Hardware stack levels used:    1
  1557 ;; Hardware stack levels required when called:    4
  1558 ;; This function calls:
  1559 ;;		Nothing
  1560 ;; This function is called by:
  1561 ;;		_TMR1_Initialize
  1562 ;;		_main
  1563 ;; This function uses a non-reentrant model
  1564 ;;
  1565                           
  1566                           
  1567                           ;psect for function _TMR1_SetInterruptHandler
  1568  00F1                     _TMR1_SetInterruptHandler:	
  1569  00F1                     l989:	
  1570                           ;incstack = 0
  1571                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  1572                           
  1573                           
  1574                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  1575  00F1  0020               	movlb	0	; select bank0
  1576  00F2  0821               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  1577  00F3  00F6               	movwf	_TMR1_InterruptHandler+1
  1578  00F4  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  1579  00F5  00F5               	movwf	_TMR1_InterruptHandler
  1580  00F6                     l111:	
  1581  00F6  0008               	return
  1582  00F7                     __end_of_TMR1_SetInterruptHandler:	
  1583                           
  1584                           	psect	text7
  1585  009C                     __ptext7:	
  1586 ;; *************** function _PIN_MANAGER_Initialize *****************
  1587 ;; Defined at:
  1588 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1589 ;; Parameters:    Size  Location     Type
  1590 ;;		None
  1591 ;; Auto vars:     Size  Location     Type
  1592 ;;		None
  1593 ;; Return value:  Size  Location     Type
  1594 ;;                  1    wreg      void 
  1595 ;; Registers used:
  1596 ;;		wreg, status,2
  1597 ;; Tracked objects:
  1598 ;;		On entry : 0/0
  1599 ;;		On exit  : 0/0
  1600 ;;		Unchanged: 0/0
  1601 ;; Data sizes:     COMMON   BANK0   BANK1
  1602 ;;      Params:         0       0       0
  1603 ;;      Locals:         0       0       0
  1604 ;;      Temps:          0       0       0
  1605 ;;      Totals:         0       0       0
  1606 ;;Total ram usage:        0 bytes
  1607 ;; Hardware stack levels used:    1
  1608 ;; Hardware stack levels required when called:    4
  1609 ;; This function calls:
  1610 ;;		Nothing
  1611 ;; This function is called by:
  1612 ;;		_SYSTEM_Initialize
  1613 ;; This function uses a non-reentrant model
  1614 ;;
  1615                           
  1616                           
  1617                           ;psect for function _PIN_MANAGER_Initialize
  1618  009C                     _PIN_MANAGER_Initialize:	
  1619  009C                     l743:	
  1620                           ;incstack = 0
  1621                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1622                           
  1623                           
  1624                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1625  009C  0022               	movlb	2	; select bank2
  1626  009D  018C               	clrf	12	;volatile
  1627  009E                     l745:	
  1628                           
  1629                           ;mcc_generated_files/pin_manager.c: 65:     TRISA = 0x39;
  1630  009E  3039               	movlw	57
  1631  009F  0021               	movlb	1	; select bank1
  1632  00A0  008C               	movwf	12	;volatile
  1633  00A1                     l747:	
  1634                           
  1635                           ;mcc_generated_files/pin_manager.c: 70:     ANSELA = 0x07;
  1636  00A1  3007               	movlw	7
  1637  00A2  0023               	movlb	3	; select bank3
  1638  00A3  008C               	movwf	12	;volatile
  1639                           
  1640                           ;mcc_generated_files/pin_manager.c: 75:     WPUA = 0x00;
  1641  00A4  0024               	movlb	4	; select bank4
  1642  00A5  018C               	clrf	12	;volatile
  1643  00A6                     l749:	
  1644                           
  1645                           ;mcc_generated_files/pin_manager.c: 76:     OPTION_REGbits.nWPUEN = 1;
  1646  00A6  0021               	movlb	1	; select bank1
  1647  00A7  1795               	bsf	21,7	;volatile
  1648                           
  1649                           ;mcc_generated_files/pin_manager.c: 81:     ODCONA = 0x00;
  1650  00A8  0025               	movlb	5	; select bank5
  1651  00A9  018C               	clrf	12	;volatile
  1652  00AA                     l751:	
  1653                           
  1654                           ;mcc_generated_files/pin_manager.c: 86:     SLRCONA = 0x37;
  1655  00AA  3037               	movlw	55
  1656  00AB  0026               	movlb	6	; select bank6
  1657  00AC  008C               	movwf	12	;volatile
  1658  00AD                     l753:	
  1659                           
  1660                           ;mcc_generated_files/pin_manager.c: 91:     INLVLA = 0x3F;
  1661  00AD  303F               	movlw	63
  1662  00AE  0027               	movlb	7	; select bank7
  1663  00AF  008C               	movwf	12	;volatile
  1664                           
  1665                           ;mcc_generated_files/pin_manager.c: 96:     APFCON = 0x00;
  1666  00B0  0022               	movlb	2	; select bank2
  1667  00B1  019D               	clrf	29	;volatile
  1668  00B2                     l46:	
  1669  00B2  0008               	return
  1670  00B3                     __end_of_PIN_MANAGER_Initialize:	
  1671                           
  1672                           	psect	text8
  1673  00EA                     __ptext8:	
  1674 ;; *************** function _OSCILLATOR_Initialize *****************
  1675 ;; Defined at:
  1676 ;;		line 59 in file "mcc_generated_files/mcc.c"
  1677 ;; Parameters:    Size  Location     Type
  1678 ;;		None
  1679 ;; Auto vars:     Size  Location     Type
  1680 ;;		None
  1681 ;; Return value:  Size  Location     Type
  1682 ;;                  1    wreg      void 
  1683 ;; Registers used:
  1684 ;;		wreg, status,2
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMMON   BANK0   BANK1
  1690 ;;      Params:         0       0       0
  1691 ;;      Locals:         0       0       0
  1692 ;;      Temps:          0       0       0
  1693 ;;      Totals:         0       0       0
  1694 ;;Total ram usage:        0 bytes
  1695 ;; Hardware stack levels used:    1
  1696 ;; Hardware stack levels required when called:    4
  1697 ;; This function calls:
  1698 ;;		Nothing
  1699 ;; This function is called by:
  1700 ;;		_SYSTEM_Initialize
  1701 ;; This function uses a non-reentrant model
  1702 ;;
  1703                           
  1704                           
  1705                           ;psect for function _OSCILLATOR_Initialize
  1706  00EA                     _OSCILLATOR_Initialize:	
  1707  00EA                     l755:	
  1708                           ;incstack = 0
  1709                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1710                           
  1711                           
  1712                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x02;
  1713  00EA  3002               	movlw	2
  1714  00EB  0021               	movlb	1	; select bank1
  1715  00EC  0099               	movwf	25	;volatile
  1716  00ED                     l757:	
  1717                           
  1718                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
  1719  00ED  0198               	clrf	24	;volatile
  1720  00EE                     l759:	
  1721                           
  1722                           ;mcc_generated_files/mcc.c: 66:     BORCON = 0x00;
  1723  00EE  0022               	movlb	2	; select bank2
  1724  00EF  0196               	clrf	22	;volatile
  1725  00F0                     l22:	
  1726  00F0  0008               	return
  1727  00F1                     __end_of_OSCILLATOR_Initialize:	
  1728                           
  1729                           	psect	intentry
  1730  0004                     __pintentry:	
  1731 ;; *************** function _INTERRUPT_InterruptManager *****************
  1732 ;; Defined at:
  1733 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1734 ;; Parameters:    Size  Location     Type
  1735 ;;		None
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;		None
  1738 ;; Return value:  Size  Location     Type
  1739 ;;                  1    wreg      void 
  1740 ;; Registers used:
  1741 ;;		wreg, status,2, status,0, pclath, cstack
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMMON   BANK0   BANK1
  1747 ;;      Params:         0       0       0
  1748 ;;      Locals:         0       0       0
  1749 ;;      Temps:          0       0       0
  1750 ;;      Totals:         0       0       0
  1751 ;;Total ram usage:        0 bytes
  1752 ;; Hardware stack levels used:    1
  1753 ;; Hardware stack levels required when called:    3
  1754 ;; This function calls:
  1755 ;;		_TMR1_ISR
  1756 ;; This function is called by:
  1757 ;;		Interrupt level 1
  1758 ;; This function uses a non-reentrant model
  1759 ;;
  1760                           
  1761  0004                     _INTERRUPT_InterruptManager:	
  1762                           
  1763                           ;incstack = 0
  1764  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1765                           
  1766                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  1767  0005  3180               	pagesel	$
  1768  0006                     i1l933:	
  1769                           
  1770                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  1771  0006  1F0B               	btfss	11,6	;volatile
  1772  0007  2809               	goto	u9_21
  1773  0008  280A               	goto	u9_20
  1774  0009                     u9_21:	
  1775  0009  2817               	goto	i1l131
  1776  000A                     u9_20:	
  1777  000A                     i1l935:	
  1778                           
  1779                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  1780  000A  0021               	movlb	1	; select bank1
  1781  000B  1C11               	btfss	17,0	;volatile
  1782  000C  280E               	goto	u10_21
  1783  000D  280F               	goto	u10_20
  1784  000E                     u10_21:	
  1785  000E  2817               	goto	i1l131
  1786  000F                     u10_20:	
  1787  000F                     i1l937:	
  1788  000F  0020               	movlb	0	; select bank0
  1789  0010  1C11               	btfss	17,0	;volatile
  1790  0011  2813               	goto	u11_21
  1791  0012  2814               	goto	u11_20
  1792  0013                     u11_21:	
  1793  0013  2817               	goto	i1l131
  1794  0014                     u11_20:	
  1795  0014                     i1l939:	
  1796                           
  1797                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR1_ISR();
  1798  0014  3180  20D1  3180   	fcall	_TMR1_ISR
  1799  0017                     i1l131:	
  1800                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  1801                           
  1802  0017  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1803  0018  0009               	retfie
  1804  0019                     __end_of_INTERRUPT_InterruptManager:	
  1805                           
  1806                           	psect	text10
  1807  00D1                     __ptext10:	
  1808 ;; *************** function _TMR1_ISR *****************
  1809 ;; Defined at:
  1810 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;		None
  1813 ;; Auto vars:     Size  Location     Type
  1814 ;;		None
  1815 ;; Return value:  Size  Location     Type
  1816 ;;                  1    wreg      void 
  1817 ;; Registers used:
  1818 ;;		wreg, status,2, status,0, pclath, cstack
  1819 ;; Tracked objects:
  1820 ;;		On entry : 0/0
  1821 ;;		On exit  : 0/0
  1822 ;;		Unchanged: 0/0
  1823 ;; Data sizes:     COMMON   BANK0   BANK1
  1824 ;;      Params:         0       0       0
  1825 ;;      Locals:         0       0       0
  1826 ;;      Temps:          0       0       0
  1827 ;;      Totals:         0       0       0
  1828 ;;Total ram usage:        0 bytes
  1829 ;; Hardware stack levels used:    1
  1830 ;; Hardware stack levels required when called:    2
  1831 ;; This function calls:
  1832 ;;		_TMR1_CallBack
  1833 ;;		_TMR1_WriteTimer
  1834 ;; This function is called by:
  1835 ;;		_INTERRUPT_InterruptManager
  1836 ;; This function uses a non-reentrant model
  1837 ;;
  1838                           
  1839                           
  1840                           ;psect for function _TMR1_ISR
  1841  00D1                     _TMR1_ISR:	
  1842  00D1                     i1l927:	
  1843                           ;incstack = 0
  1844                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  1845                           
  1846                           
  1847                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  1848  00D1  0020               	movlb	0	; select bank0
  1849  00D2  1011               	bcf	17,0	;volatile
  1850  00D3                     i1l929:	
  1851                           
  1852                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  1853  00D3  0878               	movf	_timer1ReloadVal+1,w	;volatile
  1854  00D4  00FA               	movwf	TMR1_WriteTimer@timerVal+1
  1855  00D5  0877               	movf	_timer1ReloadVal,w	;volatile
  1856  00D6  00F9               	movwf	TMR1_WriteTimer@timerVal
  1857  00D7  3180  20B3  3180   	fcall	_TMR1_WriteTimer
  1858                           
  1859                           ;mcc_generated_files/tmr1.c: 166:     TMR1_CallBack();
  1860  00DA  3180  20DE  3180   	fcall	_TMR1_CallBack
  1861  00DD                     i1l104:	
  1862  00DD  0008               	return
  1863  00DE                     __end_of_TMR1_ISR:	
  1864                           
  1865                           	psect	text11
  1866  00B3                     __ptext11:	
  1867 ;; *************** function _TMR1_WriteTimer *****************
  1868 ;; Defined at:
  1869 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  1870 ;; Parameters:    Size  Location     Type
  1871 ;;  timerVal        2    0[COMMON] unsigned short 
  1872 ;; Auto vars:     Size  Location     Type
  1873 ;;		None
  1874 ;; Return value:  Size  Location     Type
  1875 ;;                  1    wreg      void 
  1876 ;; Registers used:
  1877 ;;		wreg, status,2
  1878 ;; Tracked objects:
  1879 ;;		On entry : 0/0
  1880 ;;		On exit  : 0/0
  1881 ;;		Unchanged: 0/0
  1882 ;; Data sizes:     COMMON   BANK0   BANK1
  1883 ;;      Params:         2       0       0
  1884 ;;      Locals:         0       0       0
  1885 ;;      Temps:          0       0       0
  1886 ;;      Totals:         2       0       0
  1887 ;;Total ram usage:        2 bytes
  1888 ;; Hardware stack levels used:    1
  1889 ;; This function calls:
  1890 ;;		Nothing
  1891 ;; This function is called by:
  1892 ;;		_TMR1_ISR
  1893 ;;		_TMR1_Reload
  1894 ;; This function uses a non-reentrant model
  1895 ;;
  1896                           
  1897                           
  1898                           ;psect for function _TMR1_WriteTimer
  1899  00B3                     _TMR1_WriteTimer:	
  1900  00B3                     i1l911:	
  1901                           ;incstack = 0
  1902                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  1903                           
  1904                           
  1905                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  1906  00B3  0020               	movlb	0	; select bank0
  1907  00B4  1D18               	btfss	24,2	;volatile
  1908  00B5  28B7               	goto	u8_21
  1909  00B6  28B8               	goto	u8_20
  1910  00B7                     u8_21:	
  1911  00B7  28BF               	goto	i1l921
  1912  00B8                     u8_20:	
  1913  00B8                     i1l913:	
  1914                           
  1915                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  1916  00B8  1018               	bcf	24,0	;volatile
  1917  00B9                     i1l915:	
  1918                           
  1919                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (timerVal >> 8);
  1920  00B9  087A               	movf	TMR1_WriteTimer@timerVal+1,w
  1921  00BA  0097               	movwf	23	;volatile
  1922  00BB                     i1l917:	
  1923                           
  1924                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = timerVal;
  1925  00BB  0879               	movf	TMR1_WriteTimer@timerVal,w
  1926  00BC  0096               	movwf	22	;volatile
  1927  00BD                     i1l919:	
  1928                           
  1929                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  1930  00BD  1418               	bsf	24,0	;volatile
  1931                           
  1932                           ;mcc_generated_files/tmr1.c: 133:     }
  1933  00BE  28C3               	goto	i1l92
  1934  00BF                     i1l921:	
  1935                           
  1936                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (timerVal >> 8);
  1937  00BF  087A               	movf	TMR1_WriteTimer@timerVal+1,w
  1938  00C0  0097               	movwf	23	;volatile
  1939  00C1                     i1l923:	
  1940                           
  1941                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = timerVal;
  1942  00C1  0879               	movf	TMR1_WriteTimer@timerVal,w
  1943  00C2  0096               	movwf	22	;volatile
  1944  00C3                     i1l92:	
  1945  00C3  0008               	return
  1946  00C4                     __end_of_TMR1_WriteTimer:	
  1947                           
  1948                           	psect	text12
  1949  00DE                     __ptext12:	
  1950 ;; *************** function _TMR1_CallBack *****************
  1951 ;; Defined at:
  1952 ;;		line 169 in file "mcc_generated_files/tmr1.c"
  1953 ;; Parameters:    Size  Location     Type
  1954 ;;		None
  1955 ;; Auto vars:     Size  Location     Type
  1956 ;;		None
  1957 ;; Return value:  Size  Location     Type
  1958 ;;                  1    wreg      void 
  1959 ;; Registers used:
  1960 ;;		wreg, status,2, status,0, pclath, cstack
  1961 ;; Tracked objects:
  1962 ;;		On entry : 0/0
  1963 ;;		On exit  : 0/0
  1964 ;;		Unchanged: 0/0
  1965 ;; Data sizes:     COMMON   BANK0   BANK1
  1966 ;;      Params:         0       0       0
  1967 ;;      Locals:         0       0       0
  1968 ;;      Temps:          0       0       0
  1969 ;;      Totals:         0       0       0
  1970 ;;Total ram usage:        0 bytes
  1971 ;; Hardware stack levels used:    1
  1972 ;; Hardware stack levels required when called:    1
  1973 ;; This function calls:
  1974 ;;		Absolute function
  1975 ;;		_TMR1_DefaultInterruptHandler
  1976 ;;		_secondsTick
  1977 ;; This function is called by:
  1978 ;;		_TMR1_ISR
  1979 ;; This function uses a non-reentrant model
  1980 ;;
  1981                           
  1982                           
  1983                           ;psect for function _TMR1_CallBack
  1984  00DE                     _TMR1_CallBack:	
  1985  00DE                     i1l793:	
  1986                           ;incstack = 0
  1987                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
  1988                           
  1989                           
  1990                           ;mcc_generated_files/tmr1.c: 172:     if(TMR1_InterruptHandler)
  1991  00DE  0875               	movf	_TMR1_InterruptHandler,w
  1992  00DF  0476               	iorwf	_TMR1_InterruptHandler+1,w
  1993  00E0  1903               	btfsc	3,2
  1994  00E1  28E3               	goto	u2_21
  1995  00E2  28E4               	goto	u2_20
  1996  00E3                     u2_21:	
  1997  00E3  28E9               	goto	i1l108
  1998  00E4                     u2_20:	
  1999  00E4                     i1l795:	
  2000                           
  2001                           ;mcc_generated_files/tmr1.c: 173:     {;mcc_generated_files/tmr1.c: 174:         TMR1_In
      +                          terruptHandler();
  2002  00E4  0876               	movf	_TMR1_InterruptHandler+1,w
  2003  00E5  008A               	movwf	10
  2004  00E6  0875               	movf	_TMR1_InterruptHandler,w
  2005  00E7  000A               	callw
  2006  00E8  3180               	pagesel	$
  2007  00E9                     i1l108:	
  2008  00E9  0008               	return
  2009  00EA                     __end_of_TMR1_CallBack:	
  2010                           
  2011                           	psect	text13
  2012  0103                     __ptext13:	
  2013 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  2014 ;; Defined at:
  2015 ;;		line 182 in file "mcc_generated_files/tmr1.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;		None
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;		None
  2020 ;; Return value:  Size  Location     Type
  2021 ;;                  1    wreg      void 
  2022 ;; Registers used:
  2023 ;;		None
  2024 ;; Tracked objects:
  2025 ;;		On entry : 0/0
  2026 ;;		On exit  : 0/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMMON   BANK0   BANK1
  2029 ;;      Params:         0       0       0
  2030 ;;      Locals:         0       0       0
  2031 ;;      Temps:          0       0       0
  2032 ;;      Totals:         0       0       0
  2033 ;;Total ram usage:        0 bytes
  2034 ;; Hardware stack levels used:    1
  2035 ;; This function calls:
  2036 ;;		Nothing
  2037 ;; This function is called by:
  2038 ;;		_TMR1_Initialize
  2039 ;;		_TMR1_CallBack
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           
  2043                           
  2044                           ;psect for function _TMR1_DefaultInterruptHandler
  2045  0103                     _TMR1_DefaultInterruptHandler:	
  2046  0103                     i1l114:	
  2047                           ;incstack = 0
  2048                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  2049                           
  2050  0103  0008               	return
  2051  0104                     __end_of_TMR1_DefaultInterruptHandler:	
  2052                           
  2053                           	psect	text14
  2054  00F7                     __ptext14:	
  2055 ;; *************** function _secondsTick *****************
  2056 ;; Defined at:
  2057 ;;		line 187 in file "main.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;		None
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;		None
  2062 ;; Return value:  Size  Location     Type
  2063 ;;                  1    wreg      void 
  2064 ;; Registers used:
  2065 ;;		wreg
  2066 ;; Tracked objects:
  2067 ;;		On entry : 0/0
  2068 ;;		On exit  : 0/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMMON   BANK0   BANK1
  2071 ;;      Params:         0       0       0
  2072 ;;      Locals:         0       0       0
  2073 ;;      Temps:          0       0       0
  2074 ;;      Totals:         0       0       0
  2075 ;;Total ram usage:        0 bytes
  2076 ;; Hardware stack levels used:    1
  2077 ;; This function calls:
  2078 ;;		Nothing
  2079 ;; This function is called by:
  2080 ;;		_main
  2081 ;;		_TMR1_CallBack
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           
  2086                           ;psect for function _secondsTick
  2087  00F7                     _secondsTick:	
  2088  00F7                     i1l741:	
  2089                           ;incstack = 0
  2090                           ; Regs used in _secondsTick: [wreg]
  2091                           
  2092                           
  2093                           ;main.c: 189:     currentSecondsTick++;
  2094  00F7  3001               	movlw	1
  2095  00F8  07F2               	addwf	_currentSecondsTick,f	;volatile
  2096  00F9  3000               	movlw	0
  2097  00FA  3DF3               	addwfc	_currentSecondsTick+1,f	;volatile
  2098  00FB                     i1l213:	
  2099  00FB  0008               	return
  2100  00FC                     __end_of_secondsTick:	
  2101  007E                     btemp	set	126	;btemp
  2102  007E                     int$flags	set	126
  2103  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3      12
    BANK0            80      2       2
    BANK1            32      0       0

Pointer List with Targets:

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> secondsTick(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> secondsTick(), Absolute function(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_setState

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->_TMR1_SetInterruptHandler
    _main->_setState
    _TMR1_Initialize->_TMR1_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     488
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
                           _setState
 ---------------------------------------------------------------------------------
 (1) _setState                                             3     3      0      66
                                              2 COMMON     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     211
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0     240
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     240
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                        _secondsTick *
 ---------------------------------------------------------------------------------
 (7) _secondsTick                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize
   _TMR1_SetInterruptHandler
   _TMR1_StartTimer
   _setState

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _secondsTick *
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      3       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       E       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2       2       6        2.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0       E       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Aug 11 22:57:43 2020

                             __CFG_CP$OFF 0000                                        l22 00F0  
                                      l25 00FF                                        l19 00D0  
                                      l46 00B2                                        l81 0102  
                                      l78 009B                                       l111 00F6  
                                     l202 0038                                       l204 003A  
                                     l207 0042                                       l160 007C  
                                     l209 0044                                       l163 007F  
                                     l191 002A                                       l193 002C  
                                     l188 0062                                       l197 0034  
                                     l199 0036                                       l751 00AA  
                                     l743 009C                                       l753 00AD  
                                     l745 009E                                       l761 00FC  
                                     l755 00EA                                       l747 00A1  
                                     l757 00ED                                       l749 00A6  
                                     l759 00EE                                       l991 0083  
                                     l799 0100                                       l993 0085  
                                     l995 0087                                       l989 00F1  
                                     l997 0089                                       l999 008A  
                                     u130 0029                                       u131 0028  
                                     u140 007C                                       u141 007B  
                         _timer1ReloadVal 0077                              __CFG_BORV$LO 0000  
                            __CFG_LVP$OFF 0000                                      l1001 008E  
                                    l1003 0090                                      l1005 0098  
                                    l1021 005D                                      l1013 002D  
                                    l1007 00C4                                      l1015 003B  
                                    l1031 0067                                      l1009 0023  
                                    l1033 0070                                      l1019 0046  
                                    l1035 0073                                      l1027 0063  
                                    l1037 0077                                      l1029 0066  
                                    l1075 004F                                      _LATA 010C  
                                    i1l92 00C3                                      _WPUA 020C  
                                    u2_20 00E4                                      u2_21 00E3  
                                    u8_20 00B8                                      u8_21 00B7  
                                    u9_20 000A                                      u9_21 0009  
                            __CFG_WRT$OFF 0000                                      _main 0063  
                                    btemp 007E                             __CFG_BOREN$ON 0000  
                                    start 0019                ??_TMR1_SetInterruptHandler 007B  
                           __CFG_MCLRE$ON 0000            __size_of_OSCILLATOR_Initialize 0007  
           __end_of_OSCILLATOR_Initialize 00F1                                     ?_main 0079  
                           __CFG_WDTE$OFF 0000                           _TMR1_StartTimer 0100  
                                   _T1CON 0018                                     i1l104 00DD  
                                   i1l114 0103                                     i1l131 0017  
                                   i1l108 00E9                                     i1l213 00FB  
                                   i1l741 00F7                                     i1l911 00B3  
                                   i1l913 00B8                                     i1l921 00BF  
                                   i1l923 00C1                                     i1l915 00B9  
                                   i1l917 00BB                                     i1l933 0006  
                                   i1l919 00BD                                     i1l927 00D1  
                                   i1l935 000A                                     i1l793 00DE  
                                   i1l929 00D3                                     i1l937 000F  
                                   i1l795 00E4                                     i1l939 0014  
                                   u10_20 000F                                     u10_21 000E  
                                   u11_20 0014                                     u11_21 0013  
                                   _TMR1H 0017                                     _TMR1L 0016  
                                   _TRISA 008C                          __end_of_TMR1_ISR 00DE  
                          _WDT_Initialize 00FC                   __end_of_TMR1_Initialize 009C  
                                   pclath 000A                                     status 0003  
                                   wtemp0 007E                           _TMR1_WriteTimer 00B3  
                         __initialization 001A                              __end_of_main 0083  
             ?_INTERRUPT_InterruptManager 0079                                    ??_main 007C  
                          __CFG_PLLEN$OFF 0000                              ?_secondsTick 0079  
                  __end_of_WDT_Initialize 0100                                    _APFCON 011D  
                                  _ANSELA 018C                                    _BORCON 0116  
                                  _T1GCON 0019                   TMR1_WriteTimer@timerVal 0079  
                                  _ODCONA 028C                                    _INLVLA 038C  
                                  _OSCCON 0099                                    _WDTCON 0097  
                          __CFG_PWRTE$OFF 0000      __end_of_TMR1_DefaultInterruptHandler 0104  
   __size_of_TMR1_DefaultInterruptHandler 0001              _TMR1_DefaultInterruptHandler 0103  
                 __end_of_TMR1_StartTimer 0103                            __CFG_STVREN$ON 0000  
                        __end_of_setState 0063                           ?_WDT_Initialize 0079  
TMR1_SetInterruptHandler@InterruptHandler 0020                   __end_of_TMR1_WriteTimer 00C4  
                   __end_of_TMR1_CallBack 00EA                          ?_TMR1_Initialize 0079  
                       _SYSTEM_Initialize 00C4                   __end_of__initialization 001F  
                      ?_SYSTEM_Initialize 0079                            __pcstackCOMMON 0079  
                     ??_SYSTEM_Initialize 007B                                 ?_TMR1_ISR 0079  
           ?_TMR1_DefaultInterruptHandler 0079                            _OPTION_REGbits 0095  
               __end_of_SYSTEM_Initialize 00D1                                __pnvCOMMON 0075  
                              __pmaintext 0063                          ?_TMR1_StartTimer 0079  
                              ??_TMR1_ISR 007B                                __pintentry 0004  
                                 _OSCTUNE 0098                                   _SLRCONA 030C  
                    __size_of_secondsTick 0005                          ?_TMR1_WriteTimer 0079  
                               ?_setState 0079                                   __ptext1 0022  
                                 __ptext2 0100                                   __ptext3 00C4  
                                 __ptext4 00FC                                   __ptext5 0083  
                                 __ptext6 00F1                                   __ptext7 009C  
                                 __ptext8 00EA            ??_TMR1_DefaultInterruptHandler 0079  
                               _T1CONbits 0018                     _OSCILLATOR_Initialize 00EA  
       __size_of_TMR1_SetInterruptHandler 0006                  ??_PIN_MANAGER_Initialize 007B  
               ?_TMR1_SetInterruptHandler 0020                __size_of_SYSTEM_Initialize 000D  
                    end_of_initialization 001F                                ??_setState 0020  
                        ??_WDT_Initialize 007B                                 _PORTAbits 000C  
                        __CFG_FOSC$INTOSC 0000                         __size_of_TMR1_ISR 000D  
                  ?_OSCILLATOR_Initialize 0079                       start_initialization 001A  
         __size_of_PIN_MANAGER_Initialize 0017                          __CFG_LPBOREN$OFF 0000  
                __size_of_TMR1_Initialize 0019                    __size_of_TMR1_CallBack 000C  
                             __pbssCOMMON 0070                                 ___latbits 0000  
                           __pcstackBANK0 0020                          setState@newState 007B  
                            _currentState 0074                    _PIN_MANAGER_Initialize 009C  
        __end_of_TMR1_SetInterruptHandler 00F7                         __size_of_setState 0041  
            ??_INTERRUPT_InterruptManager 007B                  __size_of_TMR1_StartTimer 0003  
                           ??_secondsTick 0079                             _TMR1_CallBack 00DE  
                                _LATAbits 010C                                  _PIE1bits 0091  
                __size_of_TMR1_WriteTimer 0011       __size_of_INTERRUPT_InterruptManager 0015  
                                _PIR1bits 0011                                  _TMR1_ISR 00D1  
                       ??_TMR1_Initialize 007B                        _currentSecondsTick 0072  
                     __end_of_secondsTick 00FC                            ?_TMR1_CallBack 0079  
                 ??_OSCILLATOR_Initialize 007B                  _TMR1_SetInterruptHandler 00F1  
                   _TMR1_InterruptHandler 0075                                  __ptext10 00D1  
                                __ptext11 00B3                                  __ptext12 00DE  
                                __ptext13 0103                                _T1GCONbits 0019  
                                __ptext14 00F7                         ??_TMR1_StartTimer 007B  
                           __size_of_main 0020                                  _setState 0022  
                     _demandedSecondsTick 0070                                  int$flags 007E  
      __end_of_INTERRUPT_InterruptManager 0019                _INTERRUPT_InterruptManager 0004  
                       ??_TMR1_WriteTimer 007B                                _INTCONbits 000B  
                             _secondsTick 00F7                           ??_TMR1_CallBack 0079  
                 __size_of_WDT_Initialize 0004                                  intlevel1 0000  
                 ?_PIN_MANAGER_Initialize 0079                         __CFG_CLKOUTEN$OFF 0000  
          __end_of_PIN_MANAGER_Initialize 00B3                           _TMR1_Initialize 0083  
