

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Aug 13 14:55:11 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	12F1571
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 09/04/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC12F1571 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  008C                     	;# 
    88  0091                     	;# 
    89  0092                     	;# 
    90  0093                     	;# 
    91  0095                     	;# 
    92  0096                     	;# 
    93  0097                     	;# 
    94  0098                     	;# 
    95  0099                     	;# 
    96  009A                     	;# 
    97  009B                     	;# 
    98  009B                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  0111                     	;# 
   105  0112                     	;# 
   106  0115                     	;# 
   107  0116                     	;# 
   108  0117                     	;# 
   109  0118                     	;# 
   110  0119                     	;# 
   111  011D                     	;# 
   112  011D                     	;# 
   113  018C                     	;# 
   114  0191                     	;# 
   115  0191                     	;# 
   116  0192                     	;# 
   117  0193                     	;# 
   118  0193                     	;# 
   119  0194                     	;# 
   120  0195                     	;# 
   121  0196                     	;# 
   122  0197                     	;# 
   123  020C                     	;# 
   124  028C                     	;# 
   125  030C                     	;# 
   126  038C                     	;# 
   127  0391                     	;# 
   128  0392                     	;# 
   129  0393                     	;# 
   130  0691                     	;# 
   131  0692                     	;# 
   132  0693                     	;# 
   133  0694                     	;# 
   134  0695                     	;# 
   135  0D8E                     	;# 
   136  0D8F                     	;# 
   137  0D90                     	;# 
   138  0D91                     	;# 
   139  0D91                     	;# 
   140  0D92                     	;# 
   141  0D93                     	;# 
   142  0D93                     	;# 
   143  0D94                     	;# 
   144  0D95                     	;# 
   145  0D95                     	;# 
   146  0D96                     	;# 
   147  0D97                     	;# 
   148  0D97                     	;# 
   149  0D98                     	;# 
   150  0D99                     	;# 
   151  0D99                     	;# 
   152  0D9A                     	;# 
   153  0D9B                     	;# 
   154  0D9C                     	;# 
   155  0D9C                     	;# 
   156  0D9D                     	;# 
   157  0D9D                     	;# 
   158  0D9E                     	;# 
   159  0D9F                     	;# 
   160  0DA0                     	;# 
   161  0DA1                     	;# 
   162  0DA1                     	;# 
   163  0DA2                     	;# 
   164  0DA3                     	;# 
   165  0DA3                     	;# 
   166  0DA4                     	;# 
   167  0DA5                     	;# 
   168  0DA5                     	;# 
   169  0DA6                     	;# 
   170  0DA7                     	;# 
   171  0DA7                     	;# 
   172  0DA8                     	;# 
   173  0DA9                     	;# 
   174  0DA9                     	;# 
   175  0DAA                     	;# 
   176  0DAB                     	;# 
   177  0DAC                     	;# 
   178  0DAC                     	;# 
   179  0DAD                     	;# 
   180  0DAD                     	;# 
   181  0DAE                     	;# 
   182  0DAF                     	;# 
   183  0DB0                     	;# 
   184  0DB1                     	;# 
   185  0DB1                     	;# 
   186  0DB2                     	;# 
   187  0DB3                     	;# 
   188  0DB3                     	;# 
   189  0DB4                     	;# 
   190  0DB5                     	;# 
   191  0DB5                     	;# 
   192  0DB6                     	;# 
   193  0DB7                     	;# 
   194  0DB7                     	;# 
   195  0DB8                     	;# 
   196  0DB9                     	;# 
   197  0DB9                     	;# 
   198  0DBA                     	;# 
   199  0DBB                     	;# 
   200  0DBC                     	;# 
   201  0DBC                     	;# 
   202  0DBD                     	;# 
   203  0DBD                     	;# 
   204  0DBE                     	;# 
   205  0DBF                     	;# 
   206  0DC0                     	;# 
   207  0FE4                     	;# 
   208  0FE5                     	;# 
   209  0FE6                     	;# 
   210  0FE7                     	;# 
   211  0FE8                     	;# 
   212  0FE8                     	;# 
   213  0FE9                     	;# 
   214  0FEA                     	;# 
   215  0FEA                     	;# 
   216  0FEB                     	;# 
   217  0FED                     	;# 
   218  0FEE                     	;# 
   219  0FEE                     	;# 
   220  0FEF                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  0011                     	;# 
   235  0012                     	;# 
   236  0013                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0016                     	;# 
   240  0017                     	;# 
   241  0018                     	;# 
   242  0019                     	;# 
   243  001A                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  008C                     	;# 
   247  0091                     	;# 
   248  0092                     	;# 
   249  0093                     	;# 
   250  0095                     	;# 
   251  0096                     	;# 
   252  0097                     	;# 
   253  0098                     	;# 
   254  0099                     	;# 
   255  009A                     	;# 
   256  009B                     	;# 
   257  009B                     	;# 
   258  009C                     	;# 
   259  009D                     	;# 
   260  009E                     	;# 
   261  009F                     	;# 
   262  010C                     	;# 
   263  0111                     	;# 
   264  0112                     	;# 
   265  0115                     	;# 
   266  0116                     	;# 
   267  0117                     	;# 
   268  0118                     	;# 
   269  0119                     	;# 
   270  011D                     	;# 
   271  011D                     	;# 
   272  018C                     	;# 
   273  0191                     	;# 
   274  0191                     	;# 
   275  0192                     	;# 
   276  0193                     	;# 
   277  0193                     	;# 
   278  0194                     	;# 
   279  0195                     	;# 
   280  0196                     	;# 
   281  0197                     	;# 
   282  020C                     	;# 
   283  028C                     	;# 
   284  030C                     	;# 
   285  038C                     	;# 
   286  0391                     	;# 
   287  0392                     	;# 
   288  0393                     	;# 
   289  0691                     	;# 
   290  0692                     	;# 
   291  0693                     	;# 
   292  0694                     	;# 
   293  0695                     	;# 
   294  0D8E                     	;# 
   295  0D8F                     	;# 
   296  0D90                     	;# 
   297  0D91                     	;# 
   298  0D91                     	;# 
   299  0D92                     	;# 
   300  0D93                     	;# 
   301  0D93                     	;# 
   302  0D94                     	;# 
   303  0D95                     	;# 
   304  0D95                     	;# 
   305  0D96                     	;# 
   306  0D97                     	;# 
   307  0D97                     	;# 
   308  0D98                     	;# 
   309  0D99                     	;# 
   310  0D99                     	;# 
   311  0D9A                     	;# 
   312  0D9B                     	;# 
   313  0D9C                     	;# 
   314  0D9C                     	;# 
   315  0D9D                     	;# 
   316  0D9D                     	;# 
   317  0D9E                     	;# 
   318  0D9F                     	;# 
   319  0DA0                     	;# 
   320  0DA1                     	;# 
   321  0DA1                     	;# 
   322  0DA2                     	;# 
   323  0DA3                     	;# 
   324  0DA3                     	;# 
   325  0DA4                     	;# 
   326  0DA5                     	;# 
   327  0DA5                     	;# 
   328  0DA6                     	;# 
   329  0DA7                     	;# 
   330  0DA7                     	;# 
   331  0DA8                     	;# 
   332  0DA9                     	;# 
   333  0DA9                     	;# 
   334  0DAA                     	;# 
   335  0DAB                     	;# 
   336  0DAC                     	;# 
   337  0DAC                     	;# 
   338  0DAD                     	;# 
   339  0DAD                     	;# 
   340  0DAE                     	;# 
   341  0DAF                     	;# 
   342  0DB0                     	;# 
   343  0DB1                     	;# 
   344  0DB1                     	;# 
   345  0DB2                     	;# 
   346  0DB3                     	;# 
   347  0DB3                     	;# 
   348  0DB4                     	;# 
   349  0DB5                     	;# 
   350  0DB5                     	;# 
   351  0DB6                     	;# 
   352  0DB7                     	;# 
   353  0DB7                     	;# 
   354  0DB8                     	;# 
   355  0DB9                     	;# 
   356  0DB9                     	;# 
   357  0DBA                     	;# 
   358  0DBB                     	;# 
   359  0DBC                     	;# 
   360  0DBC                     	;# 
   361  0DBD                     	;# 
   362  0DBD                     	;# 
   363  0DBE                     	;# 
   364  0DBF                     	;# 
   365  0DC0                     	;# 
   366  0FE4                     	;# 
   367  0FE5                     	;# 
   368  0FE6                     	;# 
   369  0FE7                     	;# 
   370  0FE8                     	;# 
   371  0FE8                     	;# 
   372  0FE9                     	;# 
   373  0FEA                     	;# 
   374  0FEA                     	;# 
   375  0FEB                     	;# 
   376  0FED                     	;# 
   377  0FEE                     	;# 
   378  0FEE                     	;# 
   379  0FEF                     	;# 
   380  0000                     	;# 
   381  0001                     	;# 
   382  0002                     	;# 
   383  0003                     	;# 
   384  0004                     	;# 
   385  0005                     	;# 
   386  0006                     	;# 
   387  0007                     	;# 
   388  0008                     	;# 
   389  0009                     	;# 
   390  000A                     	;# 
   391  000B                     	;# 
   392  000C                     	;# 
   393  0011                     	;# 
   394  0012                     	;# 
   395  0013                     	;# 
   396  0015                     	;# 
   397  0016                     	;# 
   398  0016                     	;# 
   399  0017                     	;# 
   400  0018                     	;# 
   401  0019                     	;# 
   402  001A                     	;# 
   403  001B                     	;# 
   404  001C                     	;# 
   405  008C                     	;# 
   406  0091                     	;# 
   407  0092                     	;# 
   408  0093                     	;# 
   409  0095                     	;# 
   410  0096                     	;# 
   411  0097                     	;# 
   412  0098                     	;# 
   413  0099                     	;# 
   414  009A                     	;# 
   415  009B                     	;# 
   416  009B                     	;# 
   417  009C                     	;# 
   418  009D                     	;# 
   419  009E                     	;# 
   420  009F                     	;# 
   421  010C                     	;# 
   422  0111                     	;# 
   423  0112                     	;# 
   424  0115                     	;# 
   425  0116                     	;# 
   426  0117                     	;# 
   427  0118                     	;# 
   428  0119                     	;# 
   429  011D                     	;# 
   430  011D                     	;# 
   431  018C                     	;# 
   432  0191                     	;# 
   433  0191                     	;# 
   434  0192                     	;# 
   435  0193                     	;# 
   436  0193                     	;# 
   437  0194                     	;# 
   438  0195                     	;# 
   439  0196                     	;# 
   440  0197                     	;# 
   441  020C                     	;# 
   442  028C                     	;# 
   443  030C                     	;# 
   444  038C                     	;# 
   445  0391                     	;# 
   446  0392                     	;# 
   447  0393                     	;# 
   448  0691                     	;# 
   449  0692                     	;# 
   450  0693                     	;# 
   451  0694                     	;# 
   452  0695                     	;# 
   453  0D8E                     	;# 
   454  0D8F                     	;# 
   455  0D90                     	;# 
   456  0D91                     	;# 
   457  0D91                     	;# 
   458  0D92                     	;# 
   459  0D93                     	;# 
   460  0D93                     	;# 
   461  0D94                     	;# 
   462  0D95                     	;# 
   463  0D95                     	;# 
   464  0D96                     	;# 
   465  0D97                     	;# 
   466  0D97                     	;# 
   467  0D98                     	;# 
   468  0D99                     	;# 
   469  0D99                     	;# 
   470  0D9A                     	;# 
   471  0D9B                     	;# 
   472  0D9C                     	;# 
   473  0D9C                     	;# 
   474  0D9D                     	;# 
   475  0D9D                     	;# 
   476  0D9E                     	;# 
   477  0D9F                     	;# 
   478  0DA0                     	;# 
   479  0DA1                     	;# 
   480  0DA1                     	;# 
   481  0DA2                     	;# 
   482  0DA3                     	;# 
   483  0DA3                     	;# 
   484  0DA4                     	;# 
   485  0DA5                     	;# 
   486  0DA5                     	;# 
   487  0DA6                     	;# 
   488  0DA7                     	;# 
   489  0DA7                     	;# 
   490  0DA8                     	;# 
   491  0DA9                     	;# 
   492  0DA9                     	;# 
   493  0DAA                     	;# 
   494  0DAB                     	;# 
   495  0DAC                     	;# 
   496  0DAC                     	;# 
   497  0DAD                     	;# 
   498  0DAD                     	;# 
   499  0DAE                     	;# 
   500  0DAF                     	;# 
   501  0DB0                     	;# 
   502  0DB1                     	;# 
   503  0DB1                     	;# 
   504  0DB2                     	;# 
   505  0DB3                     	;# 
   506  0DB3                     	;# 
   507  0DB4                     	;# 
   508  0DB5                     	;# 
   509  0DB5                     	;# 
   510  0DB6                     	;# 
   511  0DB7                     	;# 
   512  0DB7                     	;# 
   513  0DB8                     	;# 
   514  0DB9                     	;# 
   515  0DB9                     	;# 
   516  0DBA                     	;# 
   517  0DBB                     	;# 
   518  0DBC                     	;# 
   519  0DBC                     	;# 
   520  0DBD                     	;# 
   521  0DBD                     	;# 
   522  0DBE                     	;# 
   523  0DBF                     	;# 
   524  0DC0                     	;# 
   525  0FE4                     	;# 
   526  0FE5                     	;# 
   527  0FE6                     	;# 
   528  0FE7                     	;# 
   529  0FE8                     	;# 
   530  0FE8                     	;# 
   531  0FE9                     	;# 
   532  0FEA                     	;# 
   533  0FEA                     	;# 
   534  0FEB                     	;# 
   535  0FED                     	;# 
   536  0FEE                     	;# 
   537  0FEE                     	;# 
   538  0FEF                     	;# 
   539  0000                     	;# 
   540  0001                     	;# 
   541  0002                     	;# 
   542  0003                     	;# 
   543  0004                     	;# 
   544  0005                     	;# 
   545  0006                     	;# 
   546  0007                     	;# 
   547  0008                     	;# 
   548  0009                     	;# 
   549  000A                     	;# 
   550  000B                     	;# 
   551  000C                     	;# 
   552  0011                     	;# 
   553  0012                     	;# 
   554  0013                     	;# 
   555  0015                     	;# 
   556  0016                     	;# 
   557  0016                     	;# 
   558  0017                     	;# 
   559  0018                     	;# 
   560  0019                     	;# 
   561  001A                     	;# 
   562  001B                     	;# 
   563  001C                     	;# 
   564  008C                     	;# 
   565  0091                     	;# 
   566  0092                     	;# 
   567  0093                     	;# 
   568  0095                     	;# 
   569  0096                     	;# 
   570  0097                     	;# 
   571  0098                     	;# 
   572  0099                     	;# 
   573  009A                     	;# 
   574  009B                     	;# 
   575  009B                     	;# 
   576  009C                     	;# 
   577  009D                     	;# 
   578  009E                     	;# 
   579  009F                     	;# 
   580  010C                     	;# 
   581  0111                     	;# 
   582  0112                     	;# 
   583  0115                     	;# 
   584  0116                     	;# 
   585  0117                     	;# 
   586  0118                     	;# 
   587  0119                     	;# 
   588  011D                     	;# 
   589  011D                     	;# 
   590  018C                     	;# 
   591  0191                     	;# 
   592  0191                     	;# 
   593  0192                     	;# 
   594  0193                     	;# 
   595  0193                     	;# 
   596  0194                     	;# 
   597  0195                     	;# 
   598  0196                     	;# 
   599  0197                     	;# 
   600  020C                     	;# 
   601  028C                     	;# 
   602  030C                     	;# 
   603  038C                     	;# 
   604  0391                     	;# 
   605  0392                     	;# 
   606  0393                     	;# 
   607  0691                     	;# 
   608  0692                     	;# 
   609  0693                     	;# 
   610  0694                     	;# 
   611  0695                     	;# 
   612  0D8E                     	;# 
   613  0D8F                     	;# 
   614  0D90                     	;# 
   615  0D91                     	;# 
   616  0D91                     	;# 
   617  0D92                     	;# 
   618  0D93                     	;# 
   619  0D93                     	;# 
   620  0D94                     	;# 
   621  0D95                     	;# 
   622  0D95                     	;# 
   623  0D96                     	;# 
   624  0D97                     	;# 
   625  0D97                     	;# 
   626  0D98                     	;# 
   627  0D99                     	;# 
   628  0D99                     	;# 
   629  0D9A                     	;# 
   630  0D9B                     	;# 
   631  0D9C                     	;# 
   632  0D9C                     	;# 
   633  0D9D                     	;# 
   634  0D9D                     	;# 
   635  0D9E                     	;# 
   636  0D9F                     	;# 
   637  0DA0                     	;# 
   638  0DA1                     	;# 
   639  0DA1                     	;# 
   640  0DA2                     	;# 
   641  0DA3                     	;# 
   642  0DA3                     	;# 
   643  0DA4                     	;# 
   644  0DA5                     	;# 
   645  0DA5                     	;# 
   646  0DA6                     	;# 
   647  0DA7                     	;# 
   648  0DA7                     	;# 
   649  0DA8                     	;# 
   650  0DA9                     	;# 
   651  0DA9                     	;# 
   652  0DAA                     	;# 
   653  0DAB                     	;# 
   654  0DAC                     	;# 
   655  0DAC                     	;# 
   656  0DAD                     	;# 
   657  0DAD                     	;# 
   658  0DAE                     	;# 
   659  0DAF                     	;# 
   660  0DB0                     	;# 
   661  0DB1                     	;# 
   662  0DB1                     	;# 
   663  0DB2                     	;# 
   664  0DB3                     	;# 
   665  0DB3                     	;# 
   666  0DB4                     	;# 
   667  0DB5                     	;# 
   668  0DB5                     	;# 
   669  0DB6                     	;# 
   670  0DB7                     	;# 
   671  0DB7                     	;# 
   672  0DB8                     	;# 
   673  0DB9                     	;# 
   674  0DB9                     	;# 
   675  0DBA                     	;# 
   676  0DBB                     	;# 
   677  0DBC                     	;# 
   678  0DBC                     	;# 
   679  0DBD                     	;# 
   680  0DBD                     	;# 
   681  0DBE                     	;# 
   682  0DBF                     	;# 
   683  0DC0                     	;# 
   684  0FE4                     	;# 
   685  0FE5                     	;# 
   686  0FE6                     	;# 
   687  0FE7                     	;# 
   688  0FE8                     	;# 
   689  0FE8                     	;# 
   690  0FE9                     	;# 
   691  0FEA                     	;# 
   692  0FEA                     	;# 
   693  0FEB                     	;# 
   694  0FED                     	;# 
   695  0FEE                     	;# 
   696  0FEE                     	;# 
   697  0FEF                     	;# 
   698  0000                     	;# 
   699  0001                     	;# 
   700  0002                     	;# 
   701  0003                     	;# 
   702  0004                     	;# 
   703  0005                     	;# 
   704  0006                     	;# 
   705  0007                     	;# 
   706  0008                     	;# 
   707  0009                     	;# 
   708  000A                     	;# 
   709  000B                     	;# 
   710  000C                     	;# 
   711  0011                     	;# 
   712  0012                     	;# 
   713  0013                     	;# 
   714  0015                     	;# 
   715  0016                     	;# 
   716  0016                     	;# 
   717  0017                     	;# 
   718  0018                     	;# 
   719  0019                     	;# 
   720  001A                     	;# 
   721  001B                     	;# 
   722  001C                     	;# 
   723  008C                     	;# 
   724  0091                     	;# 
   725  0092                     	;# 
   726  0093                     	;# 
   727  0095                     	;# 
   728  0096                     	;# 
   729  0097                     	;# 
   730  0098                     	;# 
   731  0099                     	;# 
   732  009A                     	;# 
   733  009B                     	;# 
   734  009B                     	;# 
   735  009C                     	;# 
   736  009D                     	;# 
   737  009E                     	;# 
   738  009F                     	;# 
   739  010C                     	;# 
   740  0111                     	;# 
   741  0112                     	;# 
   742  0115                     	;# 
   743  0116                     	;# 
   744  0117                     	;# 
   745  0118                     	;# 
   746  0119                     	;# 
   747  011D                     	;# 
   748  011D                     	;# 
   749  018C                     	;# 
   750  0191                     	;# 
   751  0191                     	;# 
   752  0192                     	;# 
   753  0193                     	;# 
   754  0193                     	;# 
   755  0194                     	;# 
   756  0195                     	;# 
   757  0196                     	;# 
   758  0197                     	;# 
   759  020C                     	;# 
   760  028C                     	;# 
   761  030C                     	;# 
   762  038C                     	;# 
   763  0391                     	;# 
   764  0392                     	;# 
   765  0393                     	;# 
   766  0691                     	;# 
   767  0692                     	;# 
   768  0693                     	;# 
   769  0694                     	;# 
   770  0695                     	;# 
   771  0D8E                     	;# 
   772  0D8F                     	;# 
   773  0D90                     	;# 
   774  0D91                     	;# 
   775  0D91                     	;# 
   776  0D92                     	;# 
   777  0D93                     	;# 
   778  0D93                     	;# 
   779  0D94                     	;# 
   780  0D95                     	;# 
   781  0D95                     	;# 
   782  0D96                     	;# 
   783  0D97                     	;# 
   784  0D97                     	;# 
   785  0D98                     	;# 
   786  0D99                     	;# 
   787  0D99                     	;# 
   788  0D9A                     	;# 
   789  0D9B                     	;# 
   790  0D9C                     	;# 
   791  0D9C                     	;# 
   792  0D9D                     	;# 
   793  0D9D                     	;# 
   794  0D9E                     	;# 
   795  0D9F                     	;# 
   796  0DA0                     	;# 
   797  0DA1                     	;# 
   798  0DA1                     	;# 
   799  0DA2                     	;# 
   800  0DA3                     	;# 
   801  0DA3                     	;# 
   802  0DA4                     	;# 
   803  0DA5                     	;# 
   804  0DA5                     	;# 
   805  0DA6                     	;# 
   806  0DA7                     	;# 
   807  0DA7                     	;# 
   808  0DA8                     	;# 
   809  0DA9                     	;# 
   810  0DA9                     	;# 
   811  0DAA                     	;# 
   812  0DAB                     	;# 
   813  0DAC                     	;# 
   814  0DAC                     	;# 
   815  0DAD                     	;# 
   816  0DAD                     	;# 
   817  0DAE                     	;# 
   818  0DAF                     	;# 
   819  0DB0                     	;# 
   820  0DB1                     	;# 
   821  0DB1                     	;# 
   822  0DB2                     	;# 
   823  0DB3                     	;# 
   824  0DB3                     	;# 
   825  0DB4                     	;# 
   826  0DB5                     	;# 
   827  0DB5                     	;# 
   828  0DB6                     	;# 
   829  0DB7                     	;# 
   830  0DB7                     	;# 
   831  0DB8                     	;# 
   832  0DB9                     	;# 
   833  0DB9                     	;# 
   834  0DBA                     	;# 
   835  0DBB                     	;# 
   836  0DBC                     	;# 
   837  0DBC                     	;# 
   838  0DBD                     	;# 
   839  0DBD                     	;# 
   840  0DBE                     	;# 
   841  0DBF                     	;# 
   842  0DC0                     	;# 
   843  0FE4                     	;# 
   844  0FE5                     	;# 
   845  0FE6                     	;# 
   846  0FE7                     	;# 
   847  0FE8                     	;# 
   848  0FE8                     	;# 
   849  0FE9                     	;# 
   850  0FEA                     	;# 
   851  0FEA                     	;# 
   852  0FEB                     	;# 
   853  0FED                     	;# 
   854  0FEE                     	;# 
   855  0FEE                     	;# 
   856  0FEF                     	;# 
   857                           
   858                           	psect	nvCOMMON
   859  007A                     __pnvCOMMON:
   860  007A                     _timer1ReloadVal:
   861  007A                     	ds	2
   862                           
   863                           	psect	nvBANK0
   864  0020                     __pnvBANK0:
   865  0020                     _TMR1_InterruptHandler:
   866  0020                     	ds	2
   867  000C                     _PORTAbits	set	12
   868  000B                     _INTCONbits	set	11
   869  0019                     _T1GCONbits	set	25
   870  0018                     _T1CONbits	set	24
   871  0018                     _T1CON	set	24
   872  0011                     _PIR1bits	set	17
   873  0016                     _TMR1L	set	22
   874  0017                     _TMR1H	set	23
   875  0019                     _T1GCON	set	25
   876  0091                     _PIE1bits	set	145
   877  0095                     _OPTION_REGbits	set	149
   878  008C                     _TRISA	set	140
   879  0097                     _WDTCON	set	151
   880  0098                     _OSCTUNE	set	152
   881  0099                     _OSCCON	set	153
   882  010C                     _LATAbits	set	268
   883  011D                     _APFCON	set	285
   884  010C                     _LATA	set	268
   885  0116                     _BORCON	set	278
   886  018C                     _ANSELA	set	396
   887  020C                     _WPUA	set	524
   888  028C                     _ODCONA	set	652
   889  030C                     _SLRCONA	set	780
   890  038C                     _INLVLA	set	908
   891                           
   892                           	psect	cinit
   893  001A                     start_initialization:	
   894                           ; #config settings
   895                           
   896  001A                     __initialization:
   897                           
   898                           ; Clear objects allocated to COMMON
   899  001A  01F0               	clrf	__pbssCOMMON& (0+127)
   900  001B  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   901  001C  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   902  001D  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   903  001E  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   904  001F                     end_of_initialization:	
   905                           ;End of C runtime variable initialization code
   906                           
   907  001F                     __end_of__initialization:
   908  001F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   909  0020  0020               	movlb	0
   910  0021  2822               	ljmp	_main	;jump to C main() function
   911                           
   912                           	psect	bssCOMMON
   913  0070                     __pbssCOMMON:
   914  0070                     _demandedSecondsTick:
   915  0070                     	ds	2
   916  0072                     _currentSecondsTick:
   917  0072                     	ds	2
   918  0074                     _currentState:
   919  0074                     	ds	1
   920                           
   921                           	psect	cstackCOMMON
   922  0075                     __pcstackCOMMON:
   923  0075                     ?_PIN_MANAGER_Initialize:
   924  0075                     ?_OSCILLATOR_Initialize:	
   925                           ; 1 bytes @ 0x0
   926                           
   927  0075                     ?_WDT_Initialize:	
   928                           ; 1 bytes @ 0x0
   929                           
   930  0075                     ?_TMR1_Initialize:	
   931                           ; 1 bytes @ 0x0
   932                           
   933  0075                     ?_TMR1_DefaultInterruptHandler:	
   934                           ; 1 bytes @ 0x0
   935                           
   936  0075                     ??_TMR1_DefaultInterruptHandler:	
   937                           ; 1 bytes @ 0x0
   938                           
   939  0075                     ?_TMR1_CallBack:	
   940                           ; 1 bytes @ 0x0
   941                           
   942  0075                     ??_TMR1_CallBack:	
   943                           ; 1 bytes @ 0x0
   944                           
   945  0075                     ?_secondsTick:	
   946                           ; 1 bytes @ 0x0
   947                           
   948  0075                     ??_secondsTick:	
   949                           ; 1 bytes @ 0x0
   950                           
   951  0075                     ?_setState:	
   952                           ; 1 bytes @ 0x0
   953                           
   954  0075                     ?_SYSTEM_Initialize:	
   955                           ; 1 bytes @ 0x0
   956                           
   957  0075                     ?_TMR1_StartTimer:	
   958                           ; 1 bytes @ 0x0
   959                           
   960  0075                     ?_TMR1_WriteTimer:	
   961                           ; 1 bytes @ 0x0
   962                           
   963  0075                     ?_TMR1_ISR:	
   964                           ; 1 bytes @ 0x0
   965                           
   966  0075                     ?_INTERRUPT_InterruptManager:	
   967                           ; 1 bytes @ 0x0
   968                           
   969  0075                     ?_main:	
   970                           ; 1 bytes @ 0x0
   971                           
   972  0075                     TMR1_WriteTimer@timerVal:	
   973                           ; 1 bytes @ 0x0
   974                           
   975                           
   976                           ; 2 bytes @ 0x0
   977  0075                     	ds	2
   978  0077                     ??_PIN_MANAGER_Initialize:
   979  0077                     ??_OSCILLATOR_Initialize:	
   980                           ; 1 bytes @ 0x2
   981                           
   982  0077                     ??_WDT_Initialize:	
   983                           ; 1 bytes @ 0x2
   984                           
   985  0077                     ?_TMR1_SetInterruptHandler:	
   986                           ; 1 bytes @ 0x2
   987                           
   988  0077                     ??_setState:	
   989                           ; 1 bytes @ 0x2
   990                           
   991  0077                     ??_TMR1_StartTimer:	
   992                           ; 1 bytes @ 0x2
   993                           
   994  0077                     ??_TMR1_WriteTimer:	
   995                           ; 1 bytes @ 0x2
   996                           
   997  0077                     ??_TMR1_ISR:	
   998                           ; 1 bytes @ 0x2
   999                           
  1000  0077                     ??_INTERRUPT_InterruptManager:	
  1001                           ; 1 bytes @ 0x2
  1002                           
  1003  0077                     TMR1_SetInterruptHandler@InterruptHandler:	
  1004                           ; 1 bytes @ 0x2
  1005                           
  1006                           
  1007                           ; 2 bytes @ 0x2
  1008  0077                     	ds	2
  1009  0079                     ??_TMR1_Initialize:
  1010  0079                     ??_TMR1_SetInterruptHandler:	
  1011                           ; 1 bytes @ 0x4
  1012                           
  1013  0079                     ??_SYSTEM_Initialize:	
  1014                           ; 1 bytes @ 0x4
  1015                           
  1016  0079                     setState@newState:	
  1017                           ; 1 bytes @ 0x4
  1018                           
  1019                           
  1020                           ; 1 bytes @ 0x4
  1021  0079                     	ds	1
  1022                           
  1023                           	psect	cstackBANK0
  1024  0022                     __pcstackBANK0:
  1025  0022                     ??_main:
  1026                           
  1027                           ; 1 bytes @ 0x0
  1028  0022                     	ds	2
  1029                           
  1030                           	psect	maintext
  1031  0022                     __pmaintext:	
  1032 ;;
  1033 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1034 ;;
  1035 ;; *************** function _main *****************
  1036 ;; Defined at:
  1037 ;;		line 68 in file "main.c"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;		None
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;		None
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  1    wreg      void 
  1044 ;; Registers used:
  1045 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1046 ;; Tracked objects:
  1047 ;;		On entry : B1F/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMMON   BANK0   BANK1
  1051 ;;      Params:         0       0       0
  1052 ;;      Locals:         0       0       0
  1053 ;;      Temps:          0       2       0
  1054 ;;      Totals:         0       2       0
  1055 ;;Total ram usage:        2 bytes
  1056 ;; Hardware stack levels required when called:    7
  1057 ;; This function calls:
  1058 ;;		_SYSTEM_Initialize
  1059 ;;		_TMR1_SetInterruptHandler
  1060 ;;		_TMR1_StartTimer
  1061 ;;		_setState
  1062 ;; This function is called by:
  1063 ;;		Startup code after reset
  1064 ;; This function uses a non-reentrant model
  1065 ;;
  1066                           
  1067                           
  1068                           ;psect for function _main
  1069  0022                     _main:
  1070  0022                     l1024:	
  1071                           ;incstack = 0
  1072                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1073                           
  1074                           
  1075                           ;main.c: 71:     SYSTEM_Initialize();
  1076  0022  3180  20F9  3180   	fcall	_SYSTEM_Initialize
  1077  0025                     l1026:
  1078                           
  1079                           ;main.c: 77:     (INTCONbits.GIE = 1);
  1080  0025  178B               	bsf	11,7	;volatile
  1081  0026                     l1028:
  1082                           
  1083                           ;main.c: 80:     (INTCONbits.PEIE = 1);
  1084  0026  170B               	bsf	11,6	;volatile
  1085                           
  1086                           ;main.c: 89:     TMR1_SetInterruptHandler(secondsTick);
  1087  0027  302D               	movlw	low _secondsTick
  1088  0028  00F7               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  1089  0029  3001               	movlw	high _secondsTick
  1090  002A  00F8               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  1091  002B  3181  2127  3180   	fcall	_TMR1_SetInterruptHandler
  1092  002E                     l1030:
  1093                           
  1094                           ;main.c: 91:     TMR1_StartTimer();
  1095  002E  3181  2136  3180   	fcall	_TMR1_StartTimer
  1096  0031                     l1032:
  1097                           
  1098                           ;main.c: 93:     setState(STATE_WAIT_TIME);
  1099  0031  3001               	movlw	1
  1100  0032  3180  207A  3180   	fcall	_setState
  1101  0035  2862               	goto	l1046
  1102  0036                     l160:	
  1103                           ;main.c: 100:         {;main.c: 101:             case STATE_WAIT_TIME:
  1104                           
  1105                           
  1106                           ;main.c: 103:                 if(PORTAbits.RA5 && (currentSecondsTick >= demandedSeconds
      +                          Tick))
  1107  0036  1E8C               	btfss	12,5	;volatile
  1108  0037  2839               	goto	u201
  1109  0038  283A               	goto	u200
  1110  0039                     u201:
  1111  0039  2862               	goto	l159
  1112  003A                     u200:
  1113  003A                     l1034:
  1114  003A  0871               	movf	_demandedSecondsTick+1,w
  1115  003B  0273               	subwf	_currentSecondsTick+1,w	;volatile
  1116  003C  1D03               	skipz
  1117  003D  2840               	goto	u215
  1118  003E  0870               	movf	_demandedSecondsTick,w
  1119  003F  0272               	subwf	_currentSecondsTick,w	;volatile
  1120  0040                     u215:
  1121  0040  1C03               	skipc
  1122  0041  2843               	goto	u211
  1123  0042  2844               	goto	u210
  1124  0043                     u211:
  1125  0043  2862               	goto	l159
  1126  0044                     u210:
  1127  0044                     l1036:
  1128                           
  1129                           ;main.c: 104:                 {;main.c: 105:                     setState(STATE_OPEN_VAL
      +                          VE);
  1130  0044  3002               	movlw	2
  1131  0045  3180  207A  3180   	fcall	_setState
  1132  0048  2862               	goto	l1046
  1133  0049                     l163:	
  1134                           ;main.c: 109:             case STATE_OPEN_VALVE:
  1135                           
  1136                           
  1137                           ;main.c: 110:                 if(PORTAbits.RA4)
  1138  0049  1E0C               	btfss	12,4	;volatile
  1139  004A  284C               	goto	u221
  1140  004B  284D               	goto	u220
  1141  004C                     u221:
  1142  004C  2862               	goto	l159
  1143  004D                     u220:
  1144  004D                     l1038:
  1145                           
  1146                           ;main.c: 111:                 {;main.c: 112:                     setState(STATE_CLOSE_VA
      +                          LVE);
  1147  004D  3003               	movlw	3
  1148  004E  3180  207A  3180   	fcall	_setState
  1149  0051  2862               	goto	l1046
  1150  0052                     l1040:
  1151                           
  1152                           ;main.c: 118:                 if(currentSecondsTick >= demandedSecondsTick)
  1153  0052  0871               	movf	_demandedSecondsTick+1,w
  1154  0053  0273               	subwf	_currentSecondsTick+1,w	;volatile
  1155  0054  1D03               	skipz
  1156  0055  2858               	goto	u235
  1157  0056  0870               	movf	_demandedSecondsTick,w
  1158  0057  0272               	subwf	_currentSecondsTick,w	;volatile
  1159  0058                     u235:
  1160  0058  1C03               	skipc
  1161  0059  285B               	goto	u231
  1162  005A  285C               	goto	u230
  1163  005B                     u231:
  1164  005B  2862               	goto	l159
  1165  005C                     u230:
  1166  005C                     l1042:
  1167                           
  1168                           ;main.c: 119:                 {;main.c: 120:                     setState(STATE_END);
  1169  005C  3004               	movlw	4
  1170  005D  3180  207A  3180   	fcall	_setState
  1171  0060  2862               	goto	l1046
  1172  0061                     l168:	
  1173                           ;main.c: 125:                 while(1);
  1174                           
  1175  0061  2861               	goto	l168
  1176  0062                     l159:
  1177  0062                     l1046:
  1178  0062  0874               	movf	_currentState,w
  1179  0063  0020               	movlb	0	; select bank0
  1180  0064  00A2               	movwf	??_main
  1181  0065  01A3               	clrf	??_main+1
  1182                           
  1183                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1184                           ; Switch size 1, requested type "simple"
  1185                           ; Number of cases is 1, Range of values is 0 to 0
  1186                           ; switch strategies available:
  1187                           ; Name         Instructions Cycles
  1188                           ; simple_byte            4     3 (average)
  1189                           ; direct_byte            8     6 (fixed)
  1190                           ; jumptable            260     6 (fixed)
  1191                           ;	Chosen strategy is simple_byte
  1192  0066  0823               	movf	??_main+1,w
  1193  0067  3A00               	xorlw	0	; case 0
  1194  0068  1903               	skipnz
  1195  0069  286B               	goto	l1104
  1196  006A  2862               	goto	l1046
  1197  006B                     l1104:
  1198                           
  1199                           ; Switch size 1, requested type "simple"
  1200                           ; Number of cases is 4, Range of values is 1 to 4
  1201                           ; switch strategies available:
  1202                           ; Name         Instructions Cycles
  1203                           ; simple_byte           13     7 (average)
  1204                           ; direct_byte           17     9 (fixed)
  1205                           ; jumptable            263     9 (fixed)
  1206                           ;	Chosen strategy is simple_byte
  1207  006B  0822               	movf	??_main,w
  1208  006C  3A01               	xorlw	1	; case 1
  1209  006D  1903               	skipnz
  1210  006E  2836               	goto	l160
  1211  006F  3A03               	xorlw	3	; case 2
  1212  0070  1903               	skipnz
  1213  0071  2849               	goto	l163
  1214  0072  3A01               	xorlw	1	; case 3
  1215  0073  1903               	skipnz
  1216  0074  2852               	goto	l1040
  1217  0075  3A07               	xorlw	7	; case 4
  1218  0076  1903               	skipnz
  1219  0077  2861               	goto	l168
  1220  0078  2862               	goto	l1046
  1221  0079  2819               	ljmp	start
  1222  007A                     __end_of_main:
  1223                           
  1224                           	psect	text1
  1225  007A                     __ptext1:	
  1226 ;; *************** function _setState *****************
  1227 ;; Defined at:
  1228 ;;		line 138 in file "main.c"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;  newState        1    wreg     enum E2970
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;  newState        1    4[COMMON] enum E2970
  1233 ;; Return value:  Size  Location     Type
  1234 ;;                  1    wreg      void 
  1235 ;; Registers used:
  1236 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMMON   BANK0   BANK1
  1242 ;;      Params:         0       0       0
  1243 ;;      Locals:         1       0       0
  1244 ;;      Temps:          2       0       0
  1245 ;;      Totals:         3       0       0
  1246 ;;Total ram usage:        3 bytes
  1247 ;; Hardware stack levels used:    1
  1248 ;; Hardware stack levels required when called:    4
  1249 ;; This function calls:
  1250 ;;		Nothing
  1251 ;; This function is called by:
  1252 ;;		_main
  1253 ;; This function uses a non-reentrant model
  1254 ;;
  1255                           
  1256                           
  1257                           ;psect for function _setState
  1258  007A                     _setState:
  1259                           
  1260                           ;incstack = 0
  1261                           ; Regs used in _setState: [wreg-fsr0h+status,2+status,0]
  1262                           ;setState@newState stored from wreg
  1263  007A  00F9               	movwf	setState@newState
  1264  007B                     l794:
  1265                           
  1266                           ;main.c: 138: void setState(states_t newState);main.c: 139: {;main.c: 140:     if(newSta
      +                          te == currentState)
  1267  007B  0879               	movf	setState@newState,w
  1268  007C  0674               	xorwf	_currentState,w
  1269  007D  1D03               	skipz
  1270  007E  2880               	goto	u31
  1271  007F  2881               	goto	u30
  1272  0080                     u31:
  1273  0080  289E               	goto	l804
  1274  0081                     u30:
  1275  0081  28B8               	goto	l177
  1276  0082                     l180:	
  1277                           ;main.c: 147:             do { LATAbits.LATA1 = 0; } while(0);
  1278                           
  1279  0082  0022               	movlb	2	; select bank2
  1280  0083  108C               	bcf	12,1	;volatile
  1281  0084                     l182:	
  1282                           ;main.c: 148:             do { LATAbits.LATA2 = 0; } while(0);
  1283                           
  1284  0084  110C               	bcf	12,2	;volatile
  1285  0085                     l798:
  1286                           
  1287                           ;main.c: 149:             demandedSecondsTick = currentSecondsTick + 1;
  1288  0085  0872               	movf	_currentSecondsTick,w	;volatile
  1289  0086  3E01               	addlw	1
  1290  0087  00F0               	movwf	_demandedSecondsTick
  1291  0088  3000               	movlw	0
  1292  0089  3D73               	addwfc	_currentSecondsTick+1,w	;volatile
  1293  008A  00F1               	movwf	_demandedSecondsTick+1
  1294                           
  1295                           ;main.c: 150:             break;
  1296  008B  28B4               	goto	l806
  1297  008C                     l186:	
  1298                           ;main.c: 153:             do { LATAbits.LATA1 = 1; } while(0);
  1299                           
  1300  008C  0022               	movlb	2	; select bank2
  1301  008D  148C               	bsf	12,1	;volatile
  1302  008E                     l188:	
  1303                           ;main.c: 154:             do { LATAbits.LATA2 = 0; } while(0);
  1304                           
  1305  008E  110C               	bcf	12,2	;volatile
  1306  008F  28B4               	goto	l806
  1307  0090                     l191:	
  1308                           ;main.c: 158:             do { LATAbits.LATA1 = 0; } while(0);
  1309                           
  1310  0090  0022               	movlb	2	; select bank2
  1311  0091  108C               	bcf	12,1	;volatile
  1312  0092                     l193:	
  1313                           ;main.c: 159:             do { LATAbits.LATA2 = 1; } while(0);
  1314                           
  1315  0092  150C               	bsf	12,2	;volatile
  1316  0093                     l800:
  1317                           
  1318                           ;main.c: 160:             demandedSecondsTick = currentSecondsTick + 10;
  1319  0093  0872               	movf	_currentSecondsTick,w	;volatile
  1320  0094  3E0A               	addlw	10
  1321  0095  00F0               	movwf	_demandedSecondsTick
  1322  0096  3000               	movlw	0
  1323  0097  3D73               	addwfc	_currentSecondsTick+1,w	;volatile
  1324  0098  00F1               	movwf	_demandedSecondsTick+1
  1325                           
  1326                           ;main.c: 161:             break;
  1327  0099  28B4               	goto	l806
  1328  009A                     l196:	
  1329                           ;main.c: 164:             do { LATAbits.LATA1 = 0; } while(0);
  1330                           
  1331  009A  0022               	movlb	2	; select bank2
  1332  009B  108C               	bcf	12,1	;volatile
  1333  009C                     l198:	
  1334                           ;main.c: 165:             do { LATAbits.LATA2 = 0; } while(0);
  1335                           
  1336  009C  110C               	bcf	12,2	;volatile
  1337  009D  28B4               	goto	l806
  1338  009E                     l804:
  1339  009E  0879               	movf	setState@newState,w
  1340  009F  00F7               	movwf	??_setState
  1341  00A0  01F8               	clrf	??_setState+1
  1342                           
  1343                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1344                           ; Switch size 1, requested type "simple"
  1345                           ; Number of cases is 1, Range of values is 0 to 0
  1346                           ; switch strategies available:
  1347                           ; Name         Instructions Cycles
  1348                           ; simple_byte            4     3 (average)
  1349                           ; direct_byte            8     6 (fixed)
  1350                           ; jumptable            260     6 (fixed)
  1351                           ;	Chosen strategy is simple_byte
  1352  00A1  0878               	movf	??_setState+1,w
  1353  00A2  3A00               	xorlw	0	; case 0
  1354  00A3  1903               	skipnz
  1355  00A4  28A6               	goto	l1106
  1356  00A5  28B4               	goto	l806
  1357  00A6                     l1106:
  1358                           
  1359                           ; Switch size 1, requested type "simple"
  1360                           ; Number of cases is 4, Range of values is 1 to 4
  1361                           ; switch strategies available:
  1362                           ; Name         Instructions Cycles
  1363                           ; simple_byte           13     7 (average)
  1364                           ; direct_byte           17     9 (fixed)
  1365                           ; jumptable            263     9 (fixed)
  1366                           ;	Chosen strategy is simple_byte
  1367  00A6  0877               	movf	??_setState,w
  1368  00A7  3A01               	xorlw	1	; case 1
  1369  00A8  1903               	skipnz
  1370  00A9  2882               	goto	l180
  1371  00AA  3A03               	xorlw	3	; case 2
  1372  00AB  1903               	skipnz
  1373  00AC  288C               	goto	l186
  1374  00AD  3A01               	xorlw	1	; case 3
  1375  00AE  1903               	skipnz
  1376  00AF  2890               	goto	l191
  1377  00B0  3A07               	xorlw	7	; case 4
  1378  00B1  1903               	skipnz
  1379  00B2  289A               	goto	l196
  1380  00B3  28B4               	goto	l806
  1381  00B4                     l806:
  1382                           
  1383                           ;main.c: 169:     currentState = newState;
  1384  00B4  0879               	movf	setState@newState,w
  1385  00B5  00F7               	movwf	??_setState
  1386  00B6  0877               	movf	??_setState,w
  1387  00B7  00F4               	movwf	_currentState
  1388  00B8                     l177:
  1389  00B8  0008               	return
  1390  00B9                     __end_of_setState:
  1391                           
  1392                           	psect	text2
  1393  0136                     __ptext2:	
  1394 ;; *************** function _TMR1_StartTimer *****************
  1395 ;; Defined at:
  1396 ;;		line 93 in file "mcc_generated_files/tmr1.c"
  1397 ;; Parameters:    Size  Location     Type
  1398 ;;		None
  1399 ;; Auto vars:     Size  Location     Type
  1400 ;;		None
  1401 ;; Return value:  Size  Location     Type
  1402 ;;                  1    wreg      void 
  1403 ;; Registers used:
  1404 ;;		None
  1405 ;; Tracked objects:
  1406 ;;		On entry : 0/0
  1407 ;;		On exit  : 0/0
  1408 ;;		Unchanged: 0/0
  1409 ;; Data sizes:     COMMON   BANK0   BANK1
  1410 ;;      Params:         0       0       0
  1411 ;;      Locals:         0       0       0
  1412 ;;      Temps:          0       0       0
  1413 ;;      Totals:         0       0       0
  1414 ;;Total ram usage:        0 bytes
  1415 ;; Hardware stack levels used:    1
  1416 ;; Hardware stack levels required when called:    4
  1417 ;; This function calls:
  1418 ;;		Nothing
  1419 ;; This function is called by:
  1420 ;;		_main
  1421 ;; This function uses a non-reentrant model
  1422 ;;
  1423                           
  1424                           
  1425                           ;psect for function _TMR1_StartTimer
  1426  0136                     _TMR1_StartTimer:
  1427  0136                     l788:	
  1428                           ;incstack = 0
  1429                           ; Regs used in _TMR1_StartTimer: []
  1430                           
  1431                           
  1432                           ;mcc_generated_files/tmr1.c: 96:     T1CONbits.TMR1ON = 1;
  1433  0136  0020               	movlb	0	; select bank0
  1434  0137  1418               	bsf	24,0	;volatile
  1435  0138                     l81:
  1436  0138  0008               	return
  1437  0139                     __end_of_TMR1_StartTimer:
  1438                           
  1439                           	psect	text3
  1440  00F9                     __ptext3:	
  1441 ;; *************** function _SYSTEM_Initialize *****************
  1442 ;; Defined at:
  1443 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1444 ;; Parameters:    Size  Location     Type
  1445 ;;		None
  1446 ;; Auto vars:     Size  Location     Type
  1447 ;;		None
  1448 ;; Return value:  Size  Location     Type
  1449 ;;                  1    wreg      void 
  1450 ;; Registers used:
  1451 ;;		wreg, status,2, status,0, pclath, cstack
  1452 ;; Tracked objects:
  1453 ;;		On entry : 0/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMMON   BANK0   BANK1
  1457 ;;      Params:         0       0       0
  1458 ;;      Locals:         0       0       0
  1459 ;;      Temps:          0       0       0
  1460 ;;      Totals:         0       0       0
  1461 ;;Total ram usage:        0 bytes
  1462 ;; Hardware stack levels used:    1
  1463 ;; Hardware stack levels required when called:    6
  1464 ;; This function calls:
  1465 ;;		_OSCILLATOR_Initialize
  1466 ;;		_PIN_MANAGER_Initialize
  1467 ;;		_TMR1_Initialize
  1468 ;;		_WDT_Initialize
  1469 ;; This function is called by:
  1470 ;;		_main
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           
  1474                           
  1475                           ;psect for function _SYSTEM_Initialize
  1476  00F9                     _SYSTEM_Initialize:
  1477  00F9                     l940:	
  1478                           ;incstack = 0
  1479                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1480                           
  1481                           
  1482                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1483  00F9  3180  20D1  3180   	fcall	_PIN_MANAGER_Initialize
  1484                           
  1485                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1486  00FC  3181  2120  3180   	fcall	_OSCILLATOR_Initialize
  1487                           
  1488                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  1489  00FF  3181  2132  3180   	fcall	_WDT_Initialize
  1490                           
  1491                           ;mcc_generated_files/mcc.c: 56:     TMR1_Initialize();
  1492  0102  3180  20B9  3180   	fcall	_TMR1_Initialize
  1493  0105                     l19:
  1494  0105  0008               	return
  1495  0106                     __end_of_SYSTEM_Initialize:
  1496                           
  1497                           	psect	text4
  1498  0132                     __ptext4:	
  1499 ;; *************** function _WDT_Initialize *****************
  1500 ;; Defined at:
  1501 ;;		line 69 in file "mcc_generated_files/mcc.c"
  1502 ;; Parameters:    Size  Location     Type
  1503 ;;		None
  1504 ;; Auto vars:     Size  Location     Type
  1505 ;;		None
  1506 ;; Return value:  Size  Location     Type
  1507 ;;                  1    wreg      void 
  1508 ;; Registers used:
  1509 ;;		wreg
  1510 ;; Tracked objects:
  1511 ;;		On entry : 0/0
  1512 ;;		On exit  : 0/0
  1513 ;;		Unchanged: 0/0
  1514 ;; Data sizes:     COMMON   BANK0   BANK1
  1515 ;;      Params:         0       0       0
  1516 ;;      Locals:         0       0       0
  1517 ;;      Temps:          0       0       0
  1518 ;;      Totals:         0       0       0
  1519 ;;Total ram usage:        0 bytes
  1520 ;; Hardware stack levels used:    1
  1521 ;; Hardware stack levels required when called:    4
  1522 ;; This function calls:
  1523 ;;		Nothing
  1524 ;; This function is called by:
  1525 ;;		_SYSTEM_Initialize
  1526 ;; This function uses a non-reentrant model
  1527 ;;
  1528                           
  1529                           
  1530                           ;psect for function _WDT_Initialize
  1531  0132                     _WDT_Initialize:
  1532  0132                     l750:	
  1533                           ;incstack = 0
  1534                           ; Regs used in _WDT_Initialize: [wreg]
  1535                           
  1536                           
  1537                           ;mcc_generated_files/mcc.c: 72:     WDTCON = 0x16;
  1538  0132  3016               	movlw	22
  1539  0133  0021               	movlb	1	; select bank1
  1540  0134  0097               	movwf	23	;volatile
  1541  0135                     l25:
  1542  0135  0008               	return
  1543  0136                     __end_of_WDT_Initialize:
  1544                           
  1545                           	psect	text5
  1546  00B9                     __ptext5:	
  1547 ;; *************** function _TMR1_Initialize *****************
  1548 ;; Defined at:
  1549 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  1550 ;; Parameters:    Size  Location     Type
  1551 ;;		None
  1552 ;; Auto vars:     Size  Location     Type
  1553 ;;		None
  1554 ;; Return value:  Size  Location     Type
  1555 ;;                  1    wreg      void 
  1556 ;; Registers used:
  1557 ;;		wreg, status,2, status,0, pclath, cstack
  1558 ;; Tracked objects:
  1559 ;;		On entry : 0/0
  1560 ;;		On exit  : 0/0
  1561 ;;		Unchanged: 0/0
  1562 ;; Data sizes:     COMMON   BANK0   BANK1
  1563 ;;      Params:         0       0       0
  1564 ;;      Locals:         0       0       0
  1565 ;;      Temps:          0       0       0
  1566 ;;      Totals:         0       0       0
  1567 ;;Total ram usage:        0 bytes
  1568 ;; Hardware stack levels used:    1
  1569 ;; Hardware stack levels required when called:    5
  1570 ;; This function calls:
  1571 ;;		_TMR1_SetInterruptHandler
  1572 ;; This function is called by:
  1573 ;;		_SYSTEM_Initialize
  1574 ;; This function uses a non-reentrant model
  1575 ;;
  1576                           
  1577                           
  1578                           ;psect for function _TMR1_Initialize
  1579  00B9                     _TMR1_Initialize:
  1580  00B9                     l906:	
  1581                           ;incstack = 0
  1582                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1583                           
  1584                           
  1585                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  1586  00B9  0020               	movlb	0	; select bank0
  1587  00BA  0199               	clrf	25	;volatile
  1588  00BB                     l908:
  1589                           
  1590                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x86;
  1591  00BB  3086               	movlw	134
  1592  00BC  0097               	movwf	23	;volatile
  1593  00BD                     l910:
  1594                           
  1595                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xE8;
  1596  00BD  30E8               	movlw	232
  1597  00BE  0096               	movwf	22	;volatile
  1598  00BF                     l912:
  1599                           
  1600                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  1601  00BF  1011               	bcf	17,0	;volatile
  1602  00C0                     l914:
  1603                           
  1604                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  1605  00C0  0817               	movf	23,w	;volatile
  1606  00C1  00FB               	movwf	_timer1ReloadVal+1	;volatile
  1607  00C2  0816               	movf	22,w	;volatile
  1608  00C3  00FA               	movwf	_timer1ReloadVal	;volatile
  1609  00C4                     l916:
  1610                           
  1611                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  1612  00C4  0021               	movlb	1	; select bank1
  1613  00C5  1411               	bsf	17,0	;volatile
  1614  00C6                     l918:
  1615                           
  1616                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  1617  00C6  3039               	movlw	low _TMR1_DefaultInterruptHandler
  1618  00C7  00F7               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  1619  00C8  3001               	movlw	high _TMR1_DefaultInterruptHandler
  1620  00C9  00F8               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  1621  00CA  3181  2127  3180   	fcall	_TMR1_SetInterruptHandler
  1622  00CD                     l920:
  1623                           
  1624                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x41;
  1625  00CD  3041               	movlw	65
  1626  00CE  0020               	movlb	0	; select bank0
  1627  00CF  0098               	movwf	24	;volatile
  1628  00D0                     l78:
  1629  00D0  0008               	return
  1630  00D1                     __end_of_TMR1_Initialize:
  1631                           
  1632                           	psect	text6
  1633  0127                     __ptext6:	
  1634 ;; *************** function _TMR1_SetInterruptHandler *****************
  1635 ;; Defined at:
  1636 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  1637 ;; Parameters:    Size  Location     Type
  1638 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  1639 ;;		 -> secondsTick(1), TMR1_DefaultInterruptHandler(1), 
  1640 ;; Auto vars:     Size  Location     Type
  1641 ;;		None
  1642 ;; Return value:  Size  Location     Type
  1643 ;;                  1    wreg      void 
  1644 ;; Registers used:
  1645 ;;		wreg
  1646 ;; Tracked objects:
  1647 ;;		On entry : 0/0
  1648 ;;		On exit  : 0/0
  1649 ;;		Unchanged: 0/0
  1650 ;; Data sizes:     COMMON   BANK0   BANK1
  1651 ;;      Params:         2       0       0
  1652 ;;      Locals:         0       0       0
  1653 ;;      Temps:          0       0       0
  1654 ;;      Totals:         2       0       0
  1655 ;;Total ram usage:        2 bytes
  1656 ;; Hardware stack levels used:    1
  1657 ;; Hardware stack levels required when called:    4
  1658 ;; This function calls:
  1659 ;;		Nothing
  1660 ;; This function is called by:
  1661 ;;		_TMR1_Initialize
  1662 ;;		_main
  1663 ;; This function uses a non-reentrant model
  1664 ;;
  1665                           
  1666                           
  1667                           ;psect for function _TMR1_SetInterruptHandler
  1668  0127                     _TMR1_SetInterruptHandler:
  1669  0127                     l902:	
  1670                           ;incstack = 0
  1671                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  1672                           
  1673                           
  1674                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  1675  0127  0878               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  1676  0128  0020               	movlb	0	; select bank0
  1677  0129  00A1               	movwf	_TMR1_InterruptHandler+1
  1678  012A  0877               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  1679  012B  00A0               	movwf	_TMR1_InterruptHandler
  1680  012C                     l111:
  1681  012C  0008               	return
  1682  012D                     __end_of_TMR1_SetInterruptHandler:
  1683                           
  1684                           	psect	text7
  1685  00D1                     __ptext7:	
  1686 ;; *************** function _PIN_MANAGER_Initialize *****************
  1687 ;; Defined at:
  1688 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1689 ;; Parameters:    Size  Location     Type
  1690 ;;		None
  1691 ;; Auto vars:     Size  Location     Type
  1692 ;;		None
  1693 ;; Return value:  Size  Location     Type
  1694 ;;                  1    wreg      void 
  1695 ;; Registers used:
  1696 ;;		wreg, status,2
  1697 ;; Tracked objects:
  1698 ;;		On entry : 0/0
  1699 ;;		On exit  : 0/0
  1700 ;;		Unchanged: 0/0
  1701 ;; Data sizes:     COMMON   BANK0   BANK1
  1702 ;;      Params:         0       0       0
  1703 ;;      Locals:         0       0       0
  1704 ;;      Temps:          0       0       0
  1705 ;;      Totals:         0       0       0
  1706 ;;Total ram usage:        0 bytes
  1707 ;; Hardware stack levels used:    1
  1708 ;; Hardware stack levels required when called:    4
  1709 ;; This function calls:
  1710 ;;		Nothing
  1711 ;; This function is called by:
  1712 ;;		_SYSTEM_Initialize
  1713 ;; This function uses a non-reentrant model
  1714 ;;
  1715                           
  1716                           
  1717                           ;psect for function _PIN_MANAGER_Initialize
  1718  00D1                     _PIN_MANAGER_Initialize:
  1719  00D1                     l732:	
  1720                           ;incstack = 0
  1721                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1722                           
  1723                           
  1724                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1725  00D1  0022               	movlb	2	; select bank2
  1726  00D2  018C               	clrf	12	;volatile
  1727  00D3                     l734:
  1728                           
  1729                           ;mcc_generated_files/pin_manager.c: 65:     TRISA = 0x39;
  1730  00D3  3039               	movlw	57
  1731  00D4  0021               	movlb	1	; select bank1
  1732  00D5  008C               	movwf	12	;volatile
  1733  00D6                     l736:
  1734                           
  1735                           ;mcc_generated_files/pin_manager.c: 70:     ANSELA = 0x07;
  1736  00D6  3007               	movlw	7
  1737  00D7  0023               	movlb	3	; select bank3
  1738  00D8  008C               	movwf	12	;volatile
  1739                           
  1740                           ;mcc_generated_files/pin_manager.c: 75:     WPUA = 0x00;
  1741  00D9  0024               	movlb	4	; select bank4
  1742  00DA  018C               	clrf	12	;volatile
  1743  00DB                     l738:
  1744                           
  1745                           ;mcc_generated_files/pin_manager.c: 76:     OPTION_REGbits.nWPUEN = 1;
  1746  00DB  0021               	movlb	1	; select bank1
  1747  00DC  1795               	bsf	21,7	;volatile
  1748                           
  1749                           ;mcc_generated_files/pin_manager.c: 81:     ODCONA = 0x00;
  1750  00DD  0025               	movlb	5	; select bank5
  1751  00DE  018C               	clrf	12	;volatile
  1752  00DF                     l740:
  1753                           
  1754                           ;mcc_generated_files/pin_manager.c: 86:     SLRCONA = 0x37;
  1755  00DF  3037               	movlw	55
  1756  00E0  0026               	movlb	6	; select bank6
  1757  00E1  008C               	movwf	12	;volatile
  1758  00E2                     l742:
  1759                           
  1760                           ;mcc_generated_files/pin_manager.c: 91:     INLVLA = 0x3F;
  1761  00E2  303F               	movlw	63
  1762  00E3  0027               	movlb	7	; select bank7
  1763  00E4  008C               	movwf	12	;volatile
  1764                           
  1765                           ;mcc_generated_files/pin_manager.c: 96:     APFCON = 0x00;
  1766  00E5  0022               	movlb	2	; select bank2
  1767  00E6  019D               	clrf	29	;volatile
  1768  00E7                     l46:
  1769  00E7  0008               	return
  1770  00E8                     __end_of_PIN_MANAGER_Initialize:
  1771                           
  1772                           	psect	text8
  1773  0120                     __ptext8:	
  1774 ;; *************** function _OSCILLATOR_Initialize *****************
  1775 ;; Defined at:
  1776 ;;		line 59 in file "mcc_generated_files/mcc.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;		None
  1779 ;; Auto vars:     Size  Location     Type
  1780 ;;		None
  1781 ;; Return value:  Size  Location     Type
  1782 ;;                  1    wreg      void 
  1783 ;; Registers used:
  1784 ;;		wreg, status,2
  1785 ;; Tracked objects:
  1786 ;;		On entry : 0/0
  1787 ;;		On exit  : 0/0
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMMON   BANK0   BANK1
  1790 ;;      Params:         0       0       0
  1791 ;;      Locals:         0       0       0
  1792 ;;      Temps:          0       0       0
  1793 ;;      Totals:         0       0       0
  1794 ;;Total ram usage:        0 bytes
  1795 ;; Hardware stack levels used:    1
  1796 ;; Hardware stack levels required when called:    4
  1797 ;; This function calls:
  1798 ;;		Nothing
  1799 ;; This function is called by:
  1800 ;;		_SYSTEM_Initialize
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803                           
  1804                           
  1805                           ;psect for function _OSCILLATOR_Initialize
  1806  0120                     _OSCILLATOR_Initialize:
  1807  0120                     l744:	
  1808                           ;incstack = 0
  1809                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1810                           
  1811                           
  1812                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x02;
  1813  0120  3002               	movlw	2
  1814  0121  0021               	movlb	1	; select bank1
  1815  0122  0099               	movwf	25	;volatile
  1816  0123                     l746:
  1817                           
  1818                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
  1819  0123  0198               	clrf	24	;volatile
  1820  0124                     l748:
  1821                           
  1822                           ;mcc_generated_files/mcc.c: 66:     BORCON = 0x00;
  1823  0124  0022               	movlb	2	; select bank2
  1824  0125  0196               	clrf	22	;volatile
  1825  0126                     l22:
  1826  0126  0008               	return
  1827  0127                     __end_of_OSCILLATOR_Initialize:
  1828                           
  1829                           	psect	intentry
  1830  0004                     __pintentry:	
  1831 ;; *************** function _INTERRUPT_InterruptManager *****************
  1832 ;; Defined at:
  1833 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1834 ;; Parameters:    Size  Location     Type
  1835 ;;		None
  1836 ;; Auto vars:     Size  Location     Type
  1837 ;;		None
  1838 ;; Return value:  Size  Location     Type
  1839 ;;                  1    wreg      void 
  1840 ;; Registers used:
  1841 ;;		wreg, status,2, status,0, pclath, cstack
  1842 ;; Tracked objects:
  1843 ;;		On entry : 0/0
  1844 ;;		On exit  : 0/0
  1845 ;;		Unchanged: 0/0
  1846 ;; Data sizes:     COMMON   BANK0   BANK1
  1847 ;;      Params:         0       0       0
  1848 ;;      Locals:         0       0       0
  1849 ;;      Temps:          0       0       0
  1850 ;;      Totals:         0       0       0
  1851 ;;Total ram usage:        0 bytes
  1852 ;; Hardware stack levels used:    1
  1853 ;; Hardware stack levels required when called:    3
  1854 ;; This function calls:
  1855 ;;		_TMR1_ISR
  1856 ;; This function is called by:
  1857 ;;		Interrupt level 1
  1858 ;; This function uses a non-reentrant model
  1859 ;;
  1860                           
  1861  0004                     _INTERRUPT_InterruptManager:
  1862                           
  1863                           ;incstack = 0
  1864  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1865                           
  1866                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  1867  0005  3180               	pagesel	$
  1868  0006                     i1l948:
  1869                           
  1870                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  1871  0006  1F0B               	btfss	11,6	;volatile
  1872  0007  2809               	goto	u13_21
  1873  0008  280A               	goto	u13_20
  1874  0009                     u13_21:
  1875  0009  2817               	goto	i1l131
  1876  000A                     u13_20:
  1877  000A                     i1l950:
  1878                           
  1879                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  1880  000A  0021               	movlb	1	; select bank1
  1881  000B  1C11               	btfss	17,0	;volatile
  1882  000C  280E               	goto	u14_21
  1883  000D  280F               	goto	u14_20
  1884  000E                     u14_21:
  1885  000E  2817               	goto	i1l131
  1886  000F                     u14_20:
  1887  000F                     i1l952:
  1888  000F  0020               	movlb	0	; select bank0
  1889  0010  1C11               	btfss	17,0	;volatile
  1890  0011  2813               	goto	u15_21
  1891  0012  2814               	goto	u15_20
  1892  0013                     u15_21:
  1893  0013  2817               	goto	i1l131
  1894  0014                     u15_20:
  1895  0014                     i1l954:
  1896                           
  1897                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR1_ISR();
  1898  0014  3181  2106  3180   	fcall	_TMR1_ISR
  1899  0017                     i1l131:	
  1900                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  1901                           
  1902  0017  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1903  0018  0009               	retfie
  1904  0019                     __end_of_INTERRUPT_InterruptManager:
  1905                           
  1906                           	psect	text10
  1907  0106                     __ptext10:	
  1908 ;; *************** function _TMR1_ISR *****************
  1909 ;; Defined at:
  1910 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  1911 ;; Parameters:    Size  Location     Type
  1912 ;;		None
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;		None
  1915 ;; Return value:  Size  Location     Type
  1916 ;;                  1    wreg      void 
  1917 ;; Registers used:
  1918 ;;		wreg, status,2, status,0, pclath, cstack
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMMON   BANK0   BANK1
  1924 ;;      Params:         0       0       0
  1925 ;;      Locals:         0       0       0
  1926 ;;      Temps:          0       0       0
  1927 ;;      Totals:         0       0       0
  1928 ;;Total ram usage:        0 bytes
  1929 ;; Hardware stack levels used:    1
  1930 ;; Hardware stack levels required when called:    2
  1931 ;; This function calls:
  1932 ;;		_TMR1_CallBack
  1933 ;;		_TMR1_WriteTimer
  1934 ;; This function is called by:
  1935 ;;		_INTERRUPT_InterruptManager
  1936 ;; This function uses a non-reentrant model
  1937 ;;
  1938                           
  1939                           
  1940                           ;psect for function _TMR1_ISR
  1941  0106                     _TMR1_ISR:
  1942  0106                     i1l942:	
  1943                           ;incstack = 0
  1944                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  1945                           
  1946                           
  1947                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  1948  0106  0020               	movlb	0	; select bank0
  1949  0107  1011               	bcf	17,0	;volatile
  1950  0108                     i1l944:
  1951                           
  1952                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  1953  0108  087B               	movf	_timer1ReloadVal+1,w	;volatile
  1954  0109  00F6               	movwf	TMR1_WriteTimer@timerVal+1
  1955  010A  087A               	movf	_timer1ReloadVal,w	;volatile
  1956  010B  00F5               	movwf	TMR1_WriteTimer@timerVal
  1957  010C  3180  20E8  3181   	fcall	_TMR1_WriteTimer
  1958                           
  1959                           ;mcc_generated_files/tmr1.c: 166:     TMR1_CallBack();
  1960  010F  3181  2113  3181   	fcall	_TMR1_CallBack
  1961  0112                     i1l104:
  1962  0112  0008               	return
  1963  0113                     __end_of_TMR1_ISR:
  1964                           
  1965                           	psect	text11
  1966  00E8                     __ptext11:	
  1967 ;; *************** function _TMR1_WriteTimer *****************
  1968 ;; Defined at:
  1969 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  1970 ;; Parameters:    Size  Location     Type
  1971 ;;  timerVal        2    0[COMMON] unsigned short 
  1972 ;; Auto vars:     Size  Location     Type
  1973 ;;		None
  1974 ;; Return value:  Size  Location     Type
  1975 ;;                  1    wreg      void 
  1976 ;; Registers used:
  1977 ;;		wreg, status,2
  1978 ;; Tracked objects:
  1979 ;;		On entry : 0/0
  1980 ;;		On exit  : 0/0
  1981 ;;		Unchanged: 0/0
  1982 ;; Data sizes:     COMMON   BANK0   BANK1
  1983 ;;      Params:         2       0       0
  1984 ;;      Locals:         0       0       0
  1985 ;;      Temps:          0       0       0
  1986 ;;      Totals:         2       0       0
  1987 ;;Total ram usage:        2 bytes
  1988 ;; Hardware stack levels used:    1
  1989 ;; This function calls:
  1990 ;;		Nothing
  1991 ;; This function is called by:
  1992 ;;		_TMR1_ISR
  1993 ;;		_TMR1_Reload
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           
  1997                           
  1998                           ;psect for function _TMR1_WriteTimer
  1999  00E8                     _TMR1_WriteTimer:
  2000  00E8                     i1l922:	
  2001                           ;incstack = 0
  2002                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  2003                           
  2004                           
  2005                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  2006  00E8  0020               	movlb	0	; select bank0
  2007  00E9  1D18               	btfss	24,2	;volatile
  2008  00EA  28EC               	goto	u11_21
  2009  00EB  28ED               	goto	u11_20
  2010  00EC                     u11_21:
  2011  00EC  28F4               	goto	i1l932
  2012  00ED                     u11_20:
  2013  00ED                     i1l924:
  2014                           
  2015                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  2016  00ED  1018               	bcf	24,0	;volatile
  2017  00EE                     i1l926:
  2018                           
  2019                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (timerVal >> 8);
  2020  00EE  0876               	movf	TMR1_WriteTimer@timerVal+1,w
  2021  00EF  0097               	movwf	23	;volatile
  2022  00F0                     i1l928:
  2023                           
  2024                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = timerVal;
  2025  00F0  0875               	movf	TMR1_WriteTimer@timerVal,w
  2026  00F1  0096               	movwf	22	;volatile
  2027  00F2                     i1l930:
  2028                           
  2029                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  2030  00F2  1418               	bsf	24,0	;volatile
  2031                           
  2032                           ;mcc_generated_files/tmr1.c: 133:     }
  2033  00F3  28F8               	goto	i1l92
  2034  00F4                     i1l932:
  2035                           
  2036                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (timerVal >> 8);
  2037  00F4  0876               	movf	TMR1_WriteTimer@timerVal+1,w
  2038  00F5  0097               	movwf	23	;volatile
  2039  00F6                     i1l934:
  2040                           
  2041                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = timerVal;
  2042  00F6  0875               	movf	TMR1_WriteTimer@timerVal,w
  2043  00F7  0096               	movwf	22	;volatile
  2044  00F8                     i1l92:
  2045  00F8  0008               	return
  2046  00F9                     __end_of_TMR1_WriteTimer:
  2047                           
  2048                           	psect	text12
  2049  0113                     __ptext12:	
  2050 ;; *************** function _TMR1_CallBack *****************
  2051 ;; Defined at:
  2052 ;;		line 169 in file "mcc_generated_files/tmr1.c"
  2053 ;; Parameters:    Size  Location     Type
  2054 ;;		None
  2055 ;; Auto vars:     Size  Location     Type
  2056 ;;		None
  2057 ;; Return value:  Size  Location     Type
  2058 ;;                  1    wreg      void 
  2059 ;; Registers used:
  2060 ;;		wreg, status,2, status,0, pclath, cstack
  2061 ;; Tracked objects:
  2062 ;;		On entry : 0/0
  2063 ;;		On exit  : 0/0
  2064 ;;		Unchanged: 0/0
  2065 ;; Data sizes:     COMMON   BANK0   BANK1
  2066 ;;      Params:         0       0       0
  2067 ;;      Locals:         0       0       0
  2068 ;;      Temps:          0       0       0
  2069 ;;      Totals:         0       0       0
  2070 ;;Total ram usage:        0 bytes
  2071 ;; Hardware stack levels used:    1
  2072 ;; Hardware stack levels required when called:    1
  2073 ;; This function calls:
  2074 ;;		Absolute function
  2075 ;;		_TMR1_DefaultInterruptHandler
  2076 ;;		_secondsTick
  2077 ;; This function is called by:
  2078 ;;		_TMR1_ISR
  2079 ;; This function uses a non-reentrant model
  2080 ;;
  2081                           
  2082                           
  2083                           ;psect for function _TMR1_CallBack
  2084  0113                     _TMR1_CallBack:
  2085  0113                     i1l936:	
  2086                           ;incstack = 0
  2087                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
  2088                           
  2089                           
  2090                           ;mcc_generated_files/tmr1.c: 172:     if(TMR1_InterruptHandler)
  2091  0113  0020               	movlb	0	; select bank0
  2092  0114  0820               	movf	_TMR1_InterruptHandler,w
  2093  0115  0421               	iorwf	_TMR1_InterruptHandler+1,w
  2094  0116  1903               	btfsc	3,2
  2095  0117  2919               	goto	u12_21
  2096  0118  291A               	goto	u12_20
  2097  0119                     u12_21:
  2098  0119  291F               	goto	i1l108
  2099  011A                     u12_20:
  2100  011A                     i1l938:
  2101                           
  2102                           ;mcc_generated_files/tmr1.c: 173:     {;mcc_generated_files/tmr1.c: 174:         TMR1_In
      +                          terruptHandler();
  2103  011A  0821               	movf	_TMR1_InterruptHandler+1,w
  2104  011B  008A               	movwf	10
  2105  011C  0820               	movf	_TMR1_InterruptHandler,w
  2106  011D  000A               	callw
  2107  011E  3181               	pagesel	$
  2108  011F                     i1l108:
  2109  011F  0008               	return
  2110  0120                     __end_of_TMR1_CallBack:
  2111                           
  2112                           	psect	text13
  2113  0139                     __ptext13:	
  2114 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  2115 ;; Defined at:
  2116 ;;		line 182 in file "mcc_generated_files/tmr1.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;		None
  2119 ;; Auto vars:     Size  Location     Type
  2120 ;;		None
  2121 ;; Return value:  Size  Location     Type
  2122 ;;                  1    wreg      void 
  2123 ;; Registers used:
  2124 ;;		None
  2125 ;; Tracked objects:
  2126 ;;		On entry : 0/0
  2127 ;;		On exit  : 0/0
  2128 ;;		Unchanged: 0/0
  2129 ;; Data sizes:     COMMON   BANK0   BANK1
  2130 ;;      Params:         0       0       0
  2131 ;;      Locals:         0       0       0
  2132 ;;      Temps:          0       0       0
  2133 ;;      Totals:         0       0       0
  2134 ;;Total ram usage:        0 bytes
  2135 ;; Hardware stack levels used:    1
  2136 ;; This function calls:
  2137 ;;		Nothing
  2138 ;; This function is called by:
  2139 ;;		_TMR1_Initialize
  2140 ;;		_TMR1_CallBack
  2141 ;; This function uses a non-reentrant model
  2142 ;;
  2143                           
  2144                           
  2145                           ;psect for function _TMR1_DefaultInterruptHandler
  2146  0139                     _TMR1_DefaultInterruptHandler:
  2147  0139                     i1l114:	
  2148                           ;incstack = 0
  2149                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  2150                           
  2151  0139  0008               	return
  2152  013A                     __end_of_TMR1_DefaultInterruptHandler:
  2153                           
  2154                           	psect	text14
  2155  012D                     __ptext14:	
  2156 ;; *************** function _secondsTick *****************
  2157 ;; Defined at:
  2158 ;;		line 173 in file "main.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;		None
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;		None
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  1    wreg      void 
  2165 ;; Registers used:
  2166 ;;		wreg
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMMON   BANK0   BANK1
  2172 ;;      Params:         0       0       0
  2173 ;;      Locals:         0       0       0
  2174 ;;      Temps:          0       0       0
  2175 ;;      Totals:         0       0       0
  2176 ;;Total ram usage:        0 bytes
  2177 ;; Hardware stack levels used:    1
  2178 ;; This function calls:
  2179 ;;		Nothing
  2180 ;; This function is called by:
  2181 ;;		_main
  2182 ;;		_TMR1_CallBack
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186                           
  2187                           ;psect for function _secondsTick
  2188  012D                     _secondsTick:
  2189  012D                     i1l904:	
  2190                           ;incstack = 0
  2191                           ; Regs used in _secondsTick: [wreg]
  2192                           
  2193                           
  2194                           ;main.c: 175:     currentSecondsTick++;
  2195  012D  3001               	movlw	1
  2196  012E  07F2               	addwf	_currentSecondsTick,f	;volatile
  2197  012F  3000               	movlw	0
  2198  0130  3DF3               	addwfc	_currentSecondsTick+1,f	;volatile
  2199  0131                     i1l202:
  2200  0131  0008               	return
  2201  0132                     __end_of_secondsTick:
  2202  007E                     btemp	set	126	;btemp
  2203  007E                     int$flags	set	126
  2204  007E                     wtemp0	set	126
  2205                           
  2206                           	psect	config
  2207                           
  2208                           ;Config register CONFIG1 @ 0x8007
  2209                           ;	
  2210                           ;	FOSC = INTOSC, INTOSC oscillator; I/O function on CLKIN pin
  2211                           ;	Watchdog Timer Enable
  2212                           ;	WDTE = OFF, WDT disabled
  2213                           ;	Power-up Timer Enable
  2214                           ;	PWRTE = OFF, PWRT disabled
  2215                           ;	MCLR Pin Function Select
  2216                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2217                           ;	Flash Program Memory Code Protection
  2218                           ;	CP = OFF, Program memory code protection is disabled
  2219                           ;	Brown-out Reset Enable
  2220                           ;	BOREN = ON, Brown-out Reset enabled
  2221                           ;	Clock Out Enable
  2222                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2223  8007                     	org	32775
  2224  8007  3FE4               	dw	16356
  2225                           
  2226                           ;Config register CONFIG2 @ 0x8008
  2227                           ;	Flash Memory Self-Write Protection
  2228                           ;	WRT = OFF, Write protection off
  2229                           ;	PLL Enable
  2230                           ;	PLLEN = OFF, 4x PLL disabled
  2231                           ;	Stack Overflow/Underflow Reset Enable
  2232                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2233                           ;	Brown-out Reset Voltage Selection
  2234                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2235                           ;	Low Power Brown-out Reset enable bit
  2236                           ;	LPBOREN = OFF, LPBOR is disabled
  2237                           ;	Low-Voltage Programming Enable
  2238                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  2239  8008                     	org	32776
  2240  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      12
    BANK0            80      2       4
    BANK1            32      0       0

Pointer List with Targets:

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> secondsTick(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> secondsTick(), Absolute function(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_setState
    _TMR1_Initialize->_TMR1_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     393
                                              0 BANK0      2     2      0
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
                           _setState
 ---------------------------------------------------------------------------------
 (1) _setState                                             3     3      0      45
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0     240
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     240
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                        _secondsTick *
 ---------------------------------------------------------------------------------
 (7) _secondsTick                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize
   _TMR1_SetInterruptHandler
   _TMR1_StartTimer
   _setState

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _secondsTick *
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      10       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2       4       6        5.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      10       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Aug 13 14:55:11 2020

                                      l22 0126                                        l25 0135  
                                      l19 0105                                        l46 00E7  
                                      l81 0138                                        l78 00D0  
                                      u30 0081                                        u31 0080  
                                     l111 012C                                       l160 0036  
                                     l163 0049                                       l180 0082  
                                     l182 0084                                       l191 0090  
                                     l159 0062                                       l168 0061  
                                     l193 0092                                       l177 00B8  
                                     l186 008C                                       l196 009A  
                                     l188 008E                                       l198 009C  
                                     l800 0093                                       l740 00DF  
                                     l732 00D1                                       l804 009E  
                                     l742 00E2                                       l734 00D3  
                                     l902 0127                                       l910 00BD  
                                     l750 0132                                       l806 00B4  
                                     l744 0120                                       l736 00D6  
                                     l920 00CD                                       l912 00BF  
                                     l746 0123                                       l738 00DB  
                                     l914 00C0                                       l906 00B9  
                                     l748 0124                                       l916 00C4  
                                     l908 00BB                                       l940 00F9  
                                     l918 00C6                                       l794 007B  
                                     l788 0136                                       l798 0085  
                                     u200 003A                                       u201 0039  
                                     u210 0044                                       u211 0043  
                                     u220 004D                                       u221 004C  
                                     u230 005C                                       u231 005B  
                                     u215 0040                                       u235 0058  
                         _timer1ReloadVal 007A                                      l1030 002E  
                                    l1104 006B                                      l1040 0052  
                                    l1032 0031                                      l1024 0022  
                                    l1106 00A6                                      l1042 005C  
                                    l1034 003A                                      l1026 0025  
                                    l1036 0044                                      l1028 0026  
                                    l1038 004D                                      l1046 0062  
                                    _LATA 010C                                      i1l92 00F8  
                                    _WPUA 020C                                      _main 0022  
                                    btemp 007E                                      start 0019  
              ??_TMR1_SetInterruptHandler 0079            __size_of_OSCILLATOR_Initialize 0007  
           __end_of_OSCILLATOR_Initialize 0127                                     ?_main 0075  
                         _TMR1_StartTimer 0136                                     _T1CON 0018  
                                   i1l104 0112                                     i1l202 0131  
                                   i1l114 0139                                     i1l131 0017  
                                   i1l108 011F                                     i1l904 012D  
                                   i1l930 00F2                                     i1l922 00E8  
                                   i1l924 00ED                                     i1l932 00F4  
                                   i1l934 00F6                                     i1l926 00EE  
                                   i1l942 0106                                     i1l950 000A  
                                   i1l936 0113                                     i1l928 00F0  
                                   i1l944 0108                                     i1l952 000F  
                                   i1l938 011A                                     i1l954 0014  
                                   i1l948 0006                                     u11_20 00ED  
                                   u11_21 00EC                                     u12_20 011A  
                                   u12_21 0119                                     u13_20 000A  
                                   u13_21 0009                                     u14_20 000F  
                                   u14_21 000E                                     u15_20 0014  
                                   u15_21 0013                                     _TMR1H 0017  
                                   _TMR1L 0016                                     _TRISA 008C  
                        __end_of_TMR1_ISR 0113                            _WDT_Initialize 0132  
                 __end_of_TMR1_Initialize 00D1                                     pclath 000A  
                                   status 0003                                     wtemp0 007E  
                         _TMR1_WriteTimer 00E8                           __initialization 001A  
                            __end_of_main 007A               ?_INTERRUPT_InterruptManager 0075  
                                  ??_main 0022                              ?_secondsTick 0075  
                  __end_of_WDT_Initialize 0136                                    _APFCON 011D  
                                  _ANSELA 018C                                    _BORCON 0116  
                                  _T1GCON 0019                   TMR1_WriteTimer@timerVal 0075  
                                  _ODCONA 028C                                    _INLVLA 038C  
                                  _OSCCON 0099                                    _WDTCON 0097  
    __end_of_TMR1_DefaultInterruptHandler 013A     __size_of_TMR1_DefaultInterruptHandler 0001  
            _TMR1_DefaultInterruptHandler 0139                   __end_of_TMR1_StartTimer 0139  
                        __end_of_setState 00B9                           ?_WDT_Initialize 0075  
TMR1_SetInterruptHandler@InterruptHandler 0077                   __end_of_TMR1_WriteTimer 00F9  
                   __end_of_TMR1_CallBack 0120                          ?_TMR1_Initialize 0075  
                       _SYSTEM_Initialize 00F9                   __end_of__initialization 001F  
                      ?_SYSTEM_Initialize 0075                            __pcstackCOMMON 0075  
                     ??_SYSTEM_Initialize 0079                                 ?_TMR1_ISR 0075  
           ?_TMR1_DefaultInterruptHandler 0075                            _OPTION_REGbits 0095  
               __end_of_SYSTEM_Initialize 0106                                __pnvCOMMON 007A  
                              __pmaintext 0022                          ?_TMR1_StartTimer 0075  
                              ??_TMR1_ISR 0077                                __pintentry 0004  
                                 _OSCTUNE 0098                                   _SLRCONA 030C  
                    __size_of_secondsTick 0005                          ?_TMR1_WriteTimer 0075  
                               ?_setState 0075                                   __ptext1 007A  
                                 __ptext2 0136                                   __ptext3 00F9  
                                 __ptext4 0132                                   __ptext5 00B9  
                                 __ptext6 0127                                   __ptext7 00D1  
                                 __ptext8 0120            ??_TMR1_DefaultInterruptHandler 0075  
                               _T1CONbits 0018                     _OSCILLATOR_Initialize 0120  
       __size_of_TMR1_SetInterruptHandler 0006                  ??_PIN_MANAGER_Initialize 0077  
               ?_TMR1_SetInterruptHandler 0077                __size_of_SYSTEM_Initialize 000D  
                    end_of_initialization 001F                                ??_setState 0077  
                        ??_WDT_Initialize 0077                                 _PORTAbits 000C  
                       __size_of_TMR1_ISR 000D                    ?_OSCILLATOR_Initialize 0075  
                     start_initialization 001A           __size_of_PIN_MANAGER_Initialize 0017  
                __size_of_TMR1_Initialize 0018                    __size_of_TMR1_CallBack 000D  
                             __pbssCOMMON 0070                                 ___latbits 0000  
                           __pcstackBANK0 0022                          setState@newState 0079  
                            _currentState 0074                                 __pnvBANK0 0020  
                  _PIN_MANAGER_Initialize 00D1          __end_of_TMR1_SetInterruptHandler 012D  
                       __size_of_setState 003F              ??_INTERRUPT_InterruptManager 0077  
                __size_of_TMR1_StartTimer 0003                             ??_secondsTick 0075  
                           _TMR1_CallBack 0113                                  _LATAbits 010C  
                                _PIE1bits 0091                  __size_of_TMR1_WriteTimer 0011  
     __size_of_INTERRUPT_InterruptManager 0015                                  _PIR1bits 0011  
                                _TMR1_ISR 0106                         ??_TMR1_Initialize 0079  
                      _currentSecondsTick 0072                       __end_of_secondsTick 0132  
                          ?_TMR1_CallBack 0075                   ??_OSCILLATOR_Initialize 0077  
                _TMR1_SetInterruptHandler 0127                     _TMR1_InterruptHandler 0020  
                                __ptext10 0106                                  __ptext11 00E8  
                                __ptext12 0113                                  __ptext13 0139  
                              _T1GCONbits 0019                                  __ptext14 012D  
                       ??_TMR1_StartTimer 0077                             __size_of_main 0058  
                                _setState 007A                       _demandedSecondsTick 0070  
                                int$flags 007E        __end_of_INTERRUPT_InterruptManager 0019  
              _INTERRUPT_InterruptManager 0004                         ??_TMR1_WriteTimer 0077  
                              _INTCONbits 000B                               _secondsTick 012D  
                         ??_TMR1_CallBack 0075                   __size_of_WDT_Initialize 0004  
                                intlevel1 0000                   ?_PIN_MANAGER_Initialize 0075  
          __end_of_PIN_MANAGER_Initialize 00E8                           _TMR1_Initialize 00B9  
