

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Fri Aug 14 11:09:58 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	12F1571
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 09/04/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC12F1571 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  008C                     	;# 
    88  0091                     	;# 
    89  0092                     	;# 
    90  0093                     	;# 
    91  0095                     	;# 
    92  0096                     	;# 
    93  0097                     	;# 
    94  0098                     	;# 
    95  0099                     	;# 
    96  009A                     	;# 
    97  009B                     	;# 
    98  009B                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  0111                     	;# 
   105  0112                     	;# 
   106  0115                     	;# 
   107  0116                     	;# 
   108  0117                     	;# 
   109  0118                     	;# 
   110  0119                     	;# 
   111  011D                     	;# 
   112  011D                     	;# 
   113  018C                     	;# 
   114  0191                     	;# 
   115  0191                     	;# 
   116  0192                     	;# 
   117  0193                     	;# 
   118  0193                     	;# 
   119  0194                     	;# 
   120  0195                     	;# 
   121  0196                     	;# 
   122  0197                     	;# 
   123  020C                     	;# 
   124  028C                     	;# 
   125  030C                     	;# 
   126  038C                     	;# 
   127  0391                     	;# 
   128  0392                     	;# 
   129  0393                     	;# 
   130  0691                     	;# 
   131  0692                     	;# 
   132  0693                     	;# 
   133  0694                     	;# 
   134  0695                     	;# 
   135  0D8E                     	;# 
   136  0D8F                     	;# 
   137  0D90                     	;# 
   138  0D91                     	;# 
   139  0D91                     	;# 
   140  0D92                     	;# 
   141  0D93                     	;# 
   142  0D93                     	;# 
   143  0D94                     	;# 
   144  0D95                     	;# 
   145  0D95                     	;# 
   146  0D96                     	;# 
   147  0D97                     	;# 
   148  0D97                     	;# 
   149  0D98                     	;# 
   150  0D99                     	;# 
   151  0D99                     	;# 
   152  0D9A                     	;# 
   153  0D9B                     	;# 
   154  0D9C                     	;# 
   155  0D9C                     	;# 
   156  0D9D                     	;# 
   157  0D9D                     	;# 
   158  0D9E                     	;# 
   159  0D9F                     	;# 
   160  0DA0                     	;# 
   161  0DA1                     	;# 
   162  0DA1                     	;# 
   163  0DA2                     	;# 
   164  0DA3                     	;# 
   165  0DA3                     	;# 
   166  0DA4                     	;# 
   167  0DA5                     	;# 
   168  0DA5                     	;# 
   169  0DA6                     	;# 
   170  0DA7                     	;# 
   171  0DA7                     	;# 
   172  0DA8                     	;# 
   173  0DA9                     	;# 
   174  0DA9                     	;# 
   175  0DAA                     	;# 
   176  0DAB                     	;# 
   177  0DAC                     	;# 
   178  0DAC                     	;# 
   179  0DAD                     	;# 
   180  0DAD                     	;# 
   181  0DAE                     	;# 
   182  0DAF                     	;# 
   183  0DB0                     	;# 
   184  0DB1                     	;# 
   185  0DB1                     	;# 
   186  0DB2                     	;# 
   187  0DB3                     	;# 
   188  0DB3                     	;# 
   189  0DB4                     	;# 
   190  0DB5                     	;# 
   191  0DB5                     	;# 
   192  0DB6                     	;# 
   193  0DB7                     	;# 
   194  0DB7                     	;# 
   195  0DB8                     	;# 
   196  0DB9                     	;# 
   197  0DB9                     	;# 
   198  0DBA                     	;# 
   199  0DBB                     	;# 
   200  0DBC                     	;# 
   201  0DBC                     	;# 
   202  0DBD                     	;# 
   203  0DBD                     	;# 
   204  0DBE                     	;# 
   205  0DBF                     	;# 
   206  0DC0                     	;# 
   207  0FE4                     	;# 
   208  0FE5                     	;# 
   209  0FE6                     	;# 
   210  0FE7                     	;# 
   211  0FE8                     	;# 
   212  0FE8                     	;# 
   213  0FE9                     	;# 
   214  0FEA                     	;# 
   215  0FEA                     	;# 
   216  0FEB                     	;# 
   217  0FED                     	;# 
   218  0FEE                     	;# 
   219  0FEE                     	;# 
   220  0FEF                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  0011                     	;# 
   235  0012                     	;# 
   236  0013                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0016                     	;# 
   240  0017                     	;# 
   241  0018                     	;# 
   242  0019                     	;# 
   243  001A                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  008C                     	;# 
   247  0091                     	;# 
   248  0092                     	;# 
   249  0093                     	;# 
   250  0095                     	;# 
   251  0096                     	;# 
   252  0097                     	;# 
   253  0098                     	;# 
   254  0099                     	;# 
   255  009A                     	;# 
   256  009B                     	;# 
   257  009B                     	;# 
   258  009C                     	;# 
   259  009D                     	;# 
   260  009E                     	;# 
   261  009F                     	;# 
   262  010C                     	;# 
   263  0111                     	;# 
   264  0112                     	;# 
   265  0115                     	;# 
   266  0116                     	;# 
   267  0117                     	;# 
   268  0118                     	;# 
   269  0119                     	;# 
   270  011D                     	;# 
   271  011D                     	;# 
   272  018C                     	;# 
   273  0191                     	;# 
   274  0191                     	;# 
   275  0192                     	;# 
   276  0193                     	;# 
   277  0193                     	;# 
   278  0194                     	;# 
   279  0195                     	;# 
   280  0196                     	;# 
   281  0197                     	;# 
   282  020C                     	;# 
   283  028C                     	;# 
   284  030C                     	;# 
   285  038C                     	;# 
   286  0391                     	;# 
   287  0392                     	;# 
   288  0393                     	;# 
   289  0691                     	;# 
   290  0692                     	;# 
   291  0693                     	;# 
   292  0694                     	;# 
   293  0695                     	;# 
   294  0D8E                     	;# 
   295  0D8F                     	;# 
   296  0D90                     	;# 
   297  0D91                     	;# 
   298  0D91                     	;# 
   299  0D92                     	;# 
   300  0D93                     	;# 
   301  0D93                     	;# 
   302  0D94                     	;# 
   303  0D95                     	;# 
   304  0D95                     	;# 
   305  0D96                     	;# 
   306  0D97                     	;# 
   307  0D97                     	;# 
   308  0D98                     	;# 
   309  0D99                     	;# 
   310  0D99                     	;# 
   311  0D9A                     	;# 
   312  0D9B                     	;# 
   313  0D9C                     	;# 
   314  0D9C                     	;# 
   315  0D9D                     	;# 
   316  0D9D                     	;# 
   317  0D9E                     	;# 
   318  0D9F                     	;# 
   319  0DA0                     	;# 
   320  0DA1                     	;# 
   321  0DA1                     	;# 
   322  0DA2                     	;# 
   323  0DA3                     	;# 
   324  0DA3                     	;# 
   325  0DA4                     	;# 
   326  0DA5                     	;# 
   327  0DA5                     	;# 
   328  0DA6                     	;# 
   329  0DA7                     	;# 
   330  0DA7                     	;# 
   331  0DA8                     	;# 
   332  0DA9                     	;# 
   333  0DA9                     	;# 
   334  0DAA                     	;# 
   335  0DAB                     	;# 
   336  0DAC                     	;# 
   337  0DAC                     	;# 
   338  0DAD                     	;# 
   339  0DAD                     	;# 
   340  0DAE                     	;# 
   341  0DAF                     	;# 
   342  0DB0                     	;# 
   343  0DB1                     	;# 
   344  0DB1                     	;# 
   345  0DB2                     	;# 
   346  0DB3                     	;# 
   347  0DB3                     	;# 
   348  0DB4                     	;# 
   349  0DB5                     	;# 
   350  0DB5                     	;# 
   351  0DB6                     	;# 
   352  0DB7                     	;# 
   353  0DB7                     	;# 
   354  0DB8                     	;# 
   355  0DB9                     	;# 
   356  0DB9                     	;# 
   357  0DBA                     	;# 
   358  0DBB                     	;# 
   359  0DBC                     	;# 
   360  0DBC                     	;# 
   361  0DBD                     	;# 
   362  0DBD                     	;# 
   363  0DBE                     	;# 
   364  0DBF                     	;# 
   365  0DC0                     	;# 
   366  0FE4                     	;# 
   367  0FE5                     	;# 
   368  0FE6                     	;# 
   369  0FE7                     	;# 
   370  0FE8                     	;# 
   371  0FE8                     	;# 
   372  0FE9                     	;# 
   373  0FEA                     	;# 
   374  0FEA                     	;# 
   375  0FEB                     	;# 
   376  0FED                     	;# 
   377  0FEE                     	;# 
   378  0FEE                     	;# 
   379  0FEF                     	;# 
   380  0000                     	;# 
   381  0001                     	;# 
   382  0002                     	;# 
   383  0003                     	;# 
   384  0004                     	;# 
   385  0005                     	;# 
   386  0006                     	;# 
   387  0007                     	;# 
   388  0008                     	;# 
   389  0009                     	;# 
   390  000A                     	;# 
   391  000B                     	;# 
   392  000C                     	;# 
   393  0011                     	;# 
   394  0012                     	;# 
   395  0013                     	;# 
   396  0015                     	;# 
   397  0016                     	;# 
   398  0016                     	;# 
   399  0017                     	;# 
   400  0018                     	;# 
   401  0019                     	;# 
   402  001A                     	;# 
   403  001B                     	;# 
   404  001C                     	;# 
   405  008C                     	;# 
   406  0091                     	;# 
   407  0092                     	;# 
   408  0093                     	;# 
   409  0095                     	;# 
   410  0096                     	;# 
   411  0097                     	;# 
   412  0098                     	;# 
   413  0099                     	;# 
   414  009A                     	;# 
   415  009B                     	;# 
   416  009B                     	;# 
   417  009C                     	;# 
   418  009D                     	;# 
   419  009E                     	;# 
   420  009F                     	;# 
   421  010C                     	;# 
   422  0111                     	;# 
   423  0112                     	;# 
   424  0115                     	;# 
   425  0116                     	;# 
   426  0117                     	;# 
   427  0118                     	;# 
   428  0119                     	;# 
   429  011D                     	;# 
   430  011D                     	;# 
   431  018C                     	;# 
   432  0191                     	;# 
   433  0191                     	;# 
   434  0192                     	;# 
   435  0193                     	;# 
   436  0193                     	;# 
   437  0194                     	;# 
   438  0195                     	;# 
   439  0196                     	;# 
   440  0197                     	;# 
   441  020C                     	;# 
   442  028C                     	;# 
   443  030C                     	;# 
   444  038C                     	;# 
   445  0391                     	;# 
   446  0392                     	;# 
   447  0393                     	;# 
   448  0691                     	;# 
   449  0692                     	;# 
   450  0693                     	;# 
   451  0694                     	;# 
   452  0695                     	;# 
   453  0D8E                     	;# 
   454  0D8F                     	;# 
   455  0D90                     	;# 
   456  0D91                     	;# 
   457  0D91                     	;# 
   458  0D92                     	;# 
   459  0D93                     	;# 
   460  0D93                     	;# 
   461  0D94                     	;# 
   462  0D95                     	;# 
   463  0D95                     	;# 
   464  0D96                     	;# 
   465  0D97                     	;# 
   466  0D97                     	;# 
   467  0D98                     	;# 
   468  0D99                     	;# 
   469  0D99                     	;# 
   470  0D9A                     	;# 
   471  0D9B                     	;# 
   472  0D9C                     	;# 
   473  0D9C                     	;# 
   474  0D9D                     	;# 
   475  0D9D                     	;# 
   476  0D9E                     	;# 
   477  0D9F                     	;# 
   478  0DA0                     	;# 
   479  0DA1                     	;# 
   480  0DA1                     	;# 
   481  0DA2                     	;# 
   482  0DA3                     	;# 
   483  0DA3                     	;# 
   484  0DA4                     	;# 
   485  0DA5                     	;# 
   486  0DA5                     	;# 
   487  0DA6                     	;# 
   488  0DA7                     	;# 
   489  0DA7                     	;# 
   490  0DA8                     	;# 
   491  0DA9                     	;# 
   492  0DA9                     	;# 
   493  0DAA                     	;# 
   494  0DAB                     	;# 
   495  0DAC                     	;# 
   496  0DAC                     	;# 
   497  0DAD                     	;# 
   498  0DAD                     	;# 
   499  0DAE                     	;# 
   500  0DAF                     	;# 
   501  0DB0                     	;# 
   502  0DB1                     	;# 
   503  0DB1                     	;# 
   504  0DB2                     	;# 
   505  0DB3                     	;# 
   506  0DB3                     	;# 
   507  0DB4                     	;# 
   508  0DB5                     	;# 
   509  0DB5                     	;# 
   510  0DB6                     	;# 
   511  0DB7                     	;# 
   512  0DB7                     	;# 
   513  0DB8                     	;# 
   514  0DB9                     	;# 
   515  0DB9                     	;# 
   516  0DBA                     	;# 
   517  0DBB                     	;# 
   518  0DBC                     	;# 
   519  0DBC                     	;# 
   520  0DBD                     	;# 
   521  0DBD                     	;# 
   522  0DBE                     	;# 
   523  0DBF                     	;# 
   524  0DC0                     	;# 
   525  0FE4                     	;# 
   526  0FE5                     	;# 
   527  0FE6                     	;# 
   528  0FE7                     	;# 
   529  0FE8                     	;# 
   530  0FE8                     	;# 
   531  0FE9                     	;# 
   532  0FEA                     	;# 
   533  0FEA                     	;# 
   534  0FEB                     	;# 
   535  0FED                     	;# 
   536  0FEE                     	;# 
   537  0FEE                     	;# 
   538  0FEF                     	;# 
   539  0000                     	;# 
   540  0001                     	;# 
   541  0002                     	;# 
   542  0003                     	;# 
   543  0004                     	;# 
   544  0005                     	;# 
   545  0006                     	;# 
   546  0007                     	;# 
   547  0008                     	;# 
   548  0009                     	;# 
   549  000A                     	;# 
   550  000B                     	;# 
   551  000C                     	;# 
   552  0011                     	;# 
   553  0012                     	;# 
   554  0013                     	;# 
   555  0015                     	;# 
   556  0016                     	;# 
   557  0016                     	;# 
   558  0017                     	;# 
   559  0018                     	;# 
   560  0019                     	;# 
   561  001A                     	;# 
   562  001B                     	;# 
   563  001C                     	;# 
   564  008C                     	;# 
   565  0091                     	;# 
   566  0092                     	;# 
   567  0093                     	;# 
   568  0095                     	;# 
   569  0096                     	;# 
   570  0097                     	;# 
   571  0098                     	;# 
   572  0099                     	;# 
   573  009A                     	;# 
   574  009B                     	;# 
   575  009B                     	;# 
   576  009C                     	;# 
   577  009D                     	;# 
   578  009E                     	;# 
   579  009F                     	;# 
   580  010C                     	;# 
   581  0111                     	;# 
   582  0112                     	;# 
   583  0115                     	;# 
   584  0116                     	;# 
   585  0117                     	;# 
   586  0118                     	;# 
   587  0119                     	;# 
   588  011D                     	;# 
   589  011D                     	;# 
   590  018C                     	;# 
   591  0191                     	;# 
   592  0191                     	;# 
   593  0192                     	;# 
   594  0193                     	;# 
   595  0193                     	;# 
   596  0194                     	;# 
   597  0195                     	;# 
   598  0196                     	;# 
   599  0197                     	;# 
   600  020C                     	;# 
   601  028C                     	;# 
   602  030C                     	;# 
   603  038C                     	;# 
   604  0391                     	;# 
   605  0392                     	;# 
   606  0393                     	;# 
   607  0691                     	;# 
   608  0692                     	;# 
   609  0693                     	;# 
   610  0694                     	;# 
   611  0695                     	;# 
   612  0D8E                     	;# 
   613  0D8F                     	;# 
   614  0D90                     	;# 
   615  0D91                     	;# 
   616  0D91                     	;# 
   617  0D92                     	;# 
   618  0D93                     	;# 
   619  0D93                     	;# 
   620  0D94                     	;# 
   621  0D95                     	;# 
   622  0D95                     	;# 
   623  0D96                     	;# 
   624  0D97                     	;# 
   625  0D97                     	;# 
   626  0D98                     	;# 
   627  0D99                     	;# 
   628  0D99                     	;# 
   629  0D9A                     	;# 
   630  0D9B                     	;# 
   631  0D9C                     	;# 
   632  0D9C                     	;# 
   633  0D9D                     	;# 
   634  0D9D                     	;# 
   635  0D9E                     	;# 
   636  0D9F                     	;# 
   637  0DA0                     	;# 
   638  0DA1                     	;# 
   639  0DA1                     	;# 
   640  0DA2                     	;# 
   641  0DA3                     	;# 
   642  0DA3                     	;# 
   643  0DA4                     	;# 
   644  0DA5                     	;# 
   645  0DA5                     	;# 
   646  0DA6                     	;# 
   647  0DA7                     	;# 
   648  0DA7                     	;# 
   649  0DA8                     	;# 
   650  0DA9                     	;# 
   651  0DA9                     	;# 
   652  0DAA                     	;# 
   653  0DAB                     	;# 
   654  0DAC                     	;# 
   655  0DAC                     	;# 
   656  0DAD                     	;# 
   657  0DAD                     	;# 
   658  0DAE                     	;# 
   659  0DAF                     	;# 
   660  0DB0                     	;# 
   661  0DB1                     	;# 
   662  0DB1                     	;# 
   663  0DB2                     	;# 
   664  0DB3                     	;# 
   665  0DB3                     	;# 
   666  0DB4                     	;# 
   667  0DB5                     	;# 
   668  0DB5                     	;# 
   669  0DB6                     	;# 
   670  0DB7                     	;# 
   671  0DB7                     	;# 
   672  0DB8                     	;# 
   673  0DB9                     	;# 
   674  0DB9                     	;# 
   675  0DBA                     	;# 
   676  0DBB                     	;# 
   677  0DBC                     	;# 
   678  0DBC                     	;# 
   679  0DBD                     	;# 
   680  0DBD                     	;# 
   681  0DBE                     	;# 
   682  0DBF                     	;# 
   683  0DC0                     	;# 
   684  0FE4                     	;# 
   685  0FE5                     	;# 
   686  0FE6                     	;# 
   687  0FE7                     	;# 
   688  0FE8                     	;# 
   689  0FE8                     	;# 
   690  0FE9                     	;# 
   691  0FEA                     	;# 
   692  0FEA                     	;# 
   693  0FEB                     	;# 
   694  0FED                     	;# 
   695  0FEE                     	;# 
   696  0FEE                     	;# 
   697  0FEF                     	;# 
   698  0000                     	;# 
   699  0001                     	;# 
   700  0002                     	;# 
   701  0003                     	;# 
   702  0004                     	;# 
   703  0005                     	;# 
   704  0006                     	;# 
   705  0007                     	;# 
   706  0008                     	;# 
   707  0009                     	;# 
   708  000A                     	;# 
   709  000B                     	;# 
   710  000C                     	;# 
   711  0011                     	;# 
   712  0012                     	;# 
   713  0013                     	;# 
   714  0015                     	;# 
   715  0016                     	;# 
   716  0016                     	;# 
   717  0017                     	;# 
   718  0018                     	;# 
   719  0019                     	;# 
   720  001A                     	;# 
   721  001B                     	;# 
   722  001C                     	;# 
   723  008C                     	;# 
   724  0091                     	;# 
   725  0092                     	;# 
   726  0093                     	;# 
   727  0095                     	;# 
   728  0096                     	;# 
   729  0097                     	;# 
   730  0098                     	;# 
   731  0099                     	;# 
   732  009A                     	;# 
   733  009B                     	;# 
   734  009B                     	;# 
   735  009C                     	;# 
   736  009D                     	;# 
   737  009E                     	;# 
   738  009F                     	;# 
   739  010C                     	;# 
   740  0111                     	;# 
   741  0112                     	;# 
   742  0115                     	;# 
   743  0116                     	;# 
   744  0117                     	;# 
   745  0118                     	;# 
   746  0119                     	;# 
   747  011D                     	;# 
   748  011D                     	;# 
   749  018C                     	;# 
   750  0191                     	;# 
   751  0191                     	;# 
   752  0192                     	;# 
   753  0193                     	;# 
   754  0193                     	;# 
   755  0194                     	;# 
   756  0195                     	;# 
   757  0196                     	;# 
   758  0197                     	;# 
   759  020C                     	;# 
   760  028C                     	;# 
   761  030C                     	;# 
   762  038C                     	;# 
   763  0391                     	;# 
   764  0392                     	;# 
   765  0393                     	;# 
   766  0691                     	;# 
   767  0692                     	;# 
   768  0693                     	;# 
   769  0694                     	;# 
   770  0695                     	;# 
   771  0D8E                     	;# 
   772  0D8F                     	;# 
   773  0D90                     	;# 
   774  0D91                     	;# 
   775  0D91                     	;# 
   776  0D92                     	;# 
   777  0D93                     	;# 
   778  0D93                     	;# 
   779  0D94                     	;# 
   780  0D95                     	;# 
   781  0D95                     	;# 
   782  0D96                     	;# 
   783  0D97                     	;# 
   784  0D97                     	;# 
   785  0D98                     	;# 
   786  0D99                     	;# 
   787  0D99                     	;# 
   788  0D9A                     	;# 
   789  0D9B                     	;# 
   790  0D9C                     	;# 
   791  0D9C                     	;# 
   792  0D9D                     	;# 
   793  0D9D                     	;# 
   794  0D9E                     	;# 
   795  0D9F                     	;# 
   796  0DA0                     	;# 
   797  0DA1                     	;# 
   798  0DA1                     	;# 
   799  0DA2                     	;# 
   800  0DA3                     	;# 
   801  0DA3                     	;# 
   802  0DA4                     	;# 
   803  0DA5                     	;# 
   804  0DA5                     	;# 
   805  0DA6                     	;# 
   806  0DA7                     	;# 
   807  0DA7                     	;# 
   808  0DA8                     	;# 
   809  0DA9                     	;# 
   810  0DA9                     	;# 
   811  0DAA                     	;# 
   812  0DAB                     	;# 
   813  0DAC                     	;# 
   814  0DAC                     	;# 
   815  0DAD                     	;# 
   816  0DAD                     	;# 
   817  0DAE                     	;# 
   818  0DAF                     	;# 
   819  0DB0                     	;# 
   820  0DB1                     	;# 
   821  0DB1                     	;# 
   822  0DB2                     	;# 
   823  0DB3                     	;# 
   824  0DB3                     	;# 
   825  0DB4                     	;# 
   826  0DB5                     	;# 
   827  0DB5                     	;# 
   828  0DB6                     	;# 
   829  0DB7                     	;# 
   830  0DB7                     	;# 
   831  0DB8                     	;# 
   832  0DB9                     	;# 
   833  0DB9                     	;# 
   834  0DBA                     	;# 
   835  0DBB                     	;# 
   836  0DBC                     	;# 
   837  0DBC                     	;# 
   838  0DBD                     	;# 
   839  0DBD                     	;# 
   840  0DBE                     	;# 
   841  0DBF                     	;# 
   842  0DC0                     	;# 
   843  0FE4                     	;# 
   844  0FE5                     	;# 
   845  0FE6                     	;# 
   846  0FE7                     	;# 
   847  0FE8                     	;# 
   848  0FE8                     	;# 
   849  0FE9                     	;# 
   850  0FEA                     	;# 
   851  0FEA                     	;# 
   852  0FEB                     	;# 
   853  0FED                     	;# 
   854  0FEE                     	;# 
   855  0FEE                     	;# 
   856  0FEF                     	;# 
   857                           
   858                           	psect	nvCOMMON
   859  007A                     __pnvCOMMON:
   860  007A                     _timer1ReloadVal:
   861  007A                     	ds	2
   862                           
   863                           	psect	nvBANK0
   864  0020                     __pnvBANK0:
   865  0020                     _TMR1_InterruptHandler:
   866  0020                     	ds	2
   867  000C                     _PORTAbits	set	12
   868  000B                     _INTCONbits	set	11
   869  0019                     _T1GCONbits	set	25
   870  0018                     _T1CONbits	set	24
   871  0018                     _T1CON	set	24
   872  0011                     _PIR1bits	set	17
   873  0016                     _TMR1L	set	22
   874  0017                     _TMR1H	set	23
   875  0019                     _T1GCON	set	25
   876  0091                     _PIE1bits	set	145
   877  0095                     _OPTION_REGbits	set	149
   878  008C                     _TRISA	set	140
   879  0097                     _WDTCON	set	151
   880  0098                     _OSCTUNE	set	152
   881  0099                     _OSCCON	set	153
   882  010C                     _LATAbits	set	268
   883  011D                     _APFCON	set	285
   884  010C                     _LATA	set	268
   885  0116                     _BORCON	set	278
   886  018C                     _ANSELA	set	396
   887  020C                     _WPUA	set	524
   888  028C                     _ODCONA	set	652
   889  030C                     _SLRCONA	set	780
   890  038C                     _INLVLA	set	908
   891                           
   892                           	psect	cinit
   893  001A                     start_initialization:	
   894                           ; #config settings
   895                           
   896  001A                     __initialization:
   897                           
   898                           ; Clear objects allocated to COMMON
   899  001A  01F0               	clrf	__pbssCOMMON& (0+127)
   900  001B  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   901  001C  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   902  001D  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   903  001E  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   904  001F                     end_of_initialization:	
   905                           ;End of C runtime variable initialization code
   906                           
   907  001F                     __end_of__initialization:
   908  001F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   909  0020  0020               	movlb	0
   910  0021  2822               	ljmp	_main	;jump to C main() function
   911                           
   912                           	psect	bssCOMMON
   913  0070                     __pbssCOMMON:
   914  0070                     _demandedSecondsTick:
   915  0070                     	ds	2
   916  0072                     _currentSecondsTick:
   917  0072                     	ds	2
   918  0074                     _currentState:
   919  0074                     	ds	1
   920                           
   921                           	psect	cstackCOMMON
   922  0075                     __pcstackCOMMON:
   923  0075                     ?_PIN_MANAGER_Initialize:
   924  0075                     ?_OSCILLATOR_Initialize:	
   925                           ; 1 bytes @ 0x0
   926                           
   927  0075                     ?_WDT_Initialize:	
   928                           ; 1 bytes @ 0x0
   929                           
   930  0075                     ?_TMR1_Initialize:	
   931                           ; 1 bytes @ 0x0
   932                           
   933  0075                     ?_TMR1_DefaultInterruptHandler:	
   934                           ; 1 bytes @ 0x0
   935                           
   936  0075                     ??_TMR1_DefaultInterruptHandler:	
   937                           ; 1 bytes @ 0x0
   938                           
   939  0075                     ?_TMR1_CallBack:	
   940                           ; 1 bytes @ 0x0
   941                           
   942  0075                     ??_TMR1_CallBack:	
   943                           ; 1 bytes @ 0x0
   944                           
   945  0075                     ?_secondsTick:	
   946                           ; 1 bytes @ 0x0
   947                           
   948  0075                     ??_secondsTick:	
   949                           ; 1 bytes @ 0x0
   950                           
   951  0075                     ?_setState:	
   952                           ; 1 bytes @ 0x0
   953                           
   954  0075                     ?_SYSTEM_Initialize:	
   955                           ; 1 bytes @ 0x0
   956                           
   957  0075                     ?_TMR1_StartTimer:	
   958                           ; 1 bytes @ 0x0
   959                           
   960  0075                     ?_TMR1_WriteTimer:	
   961                           ; 1 bytes @ 0x0
   962                           
   963  0075                     ?_TMR1_ISR:	
   964                           ; 1 bytes @ 0x0
   965                           
   966  0075                     ?_INTERRUPT_InterruptManager:	
   967                           ; 1 bytes @ 0x0
   968                           
   969  0075                     ?_main:	
   970                           ; 1 bytes @ 0x0
   971                           
   972  0075                     TMR1_WriteTimer@timerVal:	
   973                           ; 1 bytes @ 0x0
   974                           
   975                           
   976                           ; 2 bytes @ 0x0
   977  0075                     	ds	2
   978  0077                     ??_PIN_MANAGER_Initialize:
   979  0077                     ??_OSCILLATOR_Initialize:	
   980                           ; 1 bytes @ 0x2
   981                           
   982  0077                     ??_WDT_Initialize:	
   983                           ; 1 bytes @ 0x2
   984                           
   985  0077                     ?_TMR1_SetInterruptHandler:	
   986                           ; 1 bytes @ 0x2
   987                           
   988  0077                     ??_setState:	
   989                           ; 1 bytes @ 0x2
   990                           
   991  0077                     ??_TMR1_StartTimer:	
   992                           ; 1 bytes @ 0x2
   993                           
   994  0077                     ??_TMR1_WriteTimer:	
   995                           ; 1 bytes @ 0x2
   996                           
   997  0077                     ??_TMR1_ISR:	
   998                           ; 1 bytes @ 0x2
   999                           
  1000  0077                     ??_INTERRUPT_InterruptManager:	
  1001                           ; 1 bytes @ 0x2
  1002                           
  1003  0077                     TMR1_SetInterruptHandler@InterruptHandler:	
  1004                           ; 1 bytes @ 0x2
  1005                           
  1006                           
  1007                           ; 2 bytes @ 0x2
  1008  0077                     	ds	2
  1009  0079                     ??_TMR1_Initialize:
  1010  0079                     ??_TMR1_SetInterruptHandler:	
  1011                           ; 1 bytes @ 0x4
  1012                           
  1013  0079                     ??_SYSTEM_Initialize:	
  1014                           ; 1 bytes @ 0x4
  1015                           
  1016  0079                     setState@newState:	
  1017                           ; 1 bytes @ 0x4
  1018                           
  1019                           
  1020                           ; 1 bytes @ 0x4
  1021  0079                     	ds	1
  1022                           
  1023                           	psect	cstackBANK0
  1024  0022                     __pcstackBANK0:
  1025  0022                     ??_main:
  1026                           
  1027                           ; 1 bytes @ 0x0
  1028  0022                     	ds	2
  1029                           
  1030                           	psect	maintext
  1031  0022                     __pmaintext:	
  1032 ;;
  1033 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1034 ;;
  1035 ;; *************** function _main *****************
  1036 ;; Defined at:
  1037 ;;		line 68 in file "main.c"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;		None
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;		None
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  1    wreg      void 
  1044 ;; Registers used:
  1045 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1046 ;; Tracked objects:
  1047 ;;		On entry : B1F/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMMON   BANK0   BANK1
  1051 ;;      Params:         0       0       0
  1052 ;;      Locals:         0       0       0
  1053 ;;      Temps:          0       2       0
  1054 ;;      Totals:         0       2       0
  1055 ;;Total ram usage:        2 bytes
  1056 ;; Hardware stack levels required when called:    7
  1057 ;; This function calls:
  1058 ;;		_SYSTEM_Initialize
  1059 ;;		_TMR1_SetInterruptHandler
  1060 ;;		_TMR1_StartTimer
  1061 ;;		_setState
  1062 ;; This function is called by:
  1063 ;;		Startup code after reset
  1064 ;; This function uses a non-reentrant model
  1065 ;;
  1066                           
  1067                           
  1068                           ;psect for function _main
  1069  0022                     _main:
  1070  0022                     l1040:	
  1071                           ;incstack = 0
  1072                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1073                           
  1074                           
  1075                           ;main.c: 71:     SYSTEM_Initialize();
  1076  0022  3181  2115  3180   	fcall	_SYSTEM_Initialize
  1077  0025                     l1042:
  1078                           
  1079                           ;main.c: 77:     (INTCONbits.GIE = 1);
  1080  0025  178B               	bsf	11,7	;volatile
  1081  0026                     l1044:
  1082                           
  1083                           ;main.c: 80:     (INTCONbits.PEIE = 1);
  1084  0026  170B               	bsf	11,6	;volatile
  1085                           
  1086                           ;main.c: 89:     TMR1_SetInterruptHandler(secondsTick);
  1087  0027  3049               	movlw	low _secondsTick
  1088  0028  00F7               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  1089  0029  3001               	movlw	high _secondsTick
  1090  002A  00F8               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  1091  002B  3181  2143  3180   	fcall	_TMR1_SetInterruptHandler
  1092  002E                     l1046:
  1093                           
  1094                           ;main.c: 91:     TMR1_StartTimer();
  1095  002E  3181  2152  3180   	fcall	_TMR1_StartTimer
  1096  0031                     l1048:
  1097                           
  1098                           ;main.c: 93:     setState(STATE_WAIT_TIME);
  1099  0031  3001               	movlw	1
  1100  0032  3180  208D  3180   	fcall	_setState
  1101  0035  2875               	goto	l1066
  1102  0036                     l160:	
  1103                           ;main.c: 100:         {;main.c: 101:             case STATE_WAIT_TIME:
  1104                           
  1105                           
  1106                           ;main.c: 102:                 if(PORTAbits.RA5 && (currentSecondsTick >= demandedSeconds
      +                          Tick))
  1107  0036  1E8C               	btfss	12,5	;volatile
  1108  0037  2839               	goto	u241
  1109  0038  283A               	goto	u240
  1110  0039                     u241:
  1111  0039  2875               	goto	l1066
  1112  003A                     u240:
  1113  003A                     l1050:
  1114  003A  0871               	movf	_demandedSecondsTick+1,w
  1115  003B  0273               	subwf	_currentSecondsTick+1,w	;volatile
  1116  003C  1D03               	skipz
  1117  003D  2840               	goto	u255
  1118  003E  0870               	movf	_demandedSecondsTick,w
  1119  003F  0272               	subwf	_currentSecondsTick,w	;volatile
  1120  0040                     u255:
  1121  0040  1C03               	skipc
  1122  0041  2843               	goto	u251
  1123  0042  2844               	goto	u250
  1124  0043                     u251:
  1125  0043  2875               	goto	l1066
  1126  0044                     u250:
  1127  0044                     l1052:
  1128                           
  1129                           ;main.c: 103:                 {;main.c: 104:                     setState(STATE_OPEN_VAL
      +                          VE);
  1130  0044  3002               	movlw	2
  1131  0045  3180  208D  3180   	fcall	_setState
  1132  0048  2875               	goto	l1066
  1133  0049                     l163:	
  1134                           ;main.c: 108:             case STATE_OPEN_VALVE:
  1135                           
  1136                           
  1137                           ;main.c: 110:                 if(PORTAbits.RA4 || (currentSecondsTick >= demandedSeconds
      +                          Tick))
  1138  0049  1A0C               	btfsc	12,4	;volatile
  1139  004A  284C               	goto	u261
  1140  004B  284D               	goto	u260
  1141  004C                     u261:
  1142  004C  2857               	goto	l1056
  1143  004D                     u260:
  1144  004D                     l1054:
  1145  004D  0871               	movf	_demandedSecondsTick+1,w
  1146  004E  0273               	subwf	_currentSecondsTick+1,w	;volatile
  1147  004F  1D03               	skipz
  1148  0050  2853               	goto	u275
  1149  0051  0870               	movf	_demandedSecondsTick,w
  1150  0052  0272               	subwf	_currentSecondsTick,w	;volatile
  1151  0053                     u275:
  1152  0053  1C03               	skipc
  1153  0054  2856               	goto	u271
  1154  0055  2857               	goto	u270
  1155  0056                     u271:
  1156  0056  2875               	goto	l159
  1157  0057                     u270:
  1158  0057                     l1056:
  1159                           
  1160                           ;main.c: 111:                 {;main.c: 112:                     setState(STATE_CLOSE_VA
      +                          LVE);
  1161  0057  3003               	movlw	3
  1162  0058  3180  208D  3180   	fcall	_setState
  1163  005B  2875               	goto	l1066
  1164  005C                     l167:	
  1165                           ;main.c: 116:             case STATE_CLOSE_VALVE:
  1166                           
  1167                           
  1168                           ;main.c: 117:                 if(PORTAbits.RA5)
  1169  005C  1E8C               	btfss	12,5	;volatile
  1170  005D  285F               	goto	u281
  1171  005E  2860               	goto	u280
  1172  005F                     u281:
  1173  005F  2865               	goto	l1060
  1174  0060                     u280:
  1175  0060                     l1058:
  1176                           
  1177                           ;main.c: 118:                 {;main.c: 119:                     setState(STATE_OPEN_VAL
      +                          VE);
  1178  0060  3002               	movlw	2
  1179  0061  3180  208D  3180   	fcall	_setState
  1180                           
  1181                           ;main.c: 120:                 }
  1182  0064  2875               	goto	l1066
  1183  0065                     l1060:
  1184  0065  0871               	movf	_demandedSecondsTick+1,w
  1185  0066  0273               	subwf	_currentSecondsTick+1,w	;volatile
  1186  0067  1D03               	skipz
  1187  0068  286B               	goto	u295
  1188  0069  0870               	movf	_demandedSecondsTick,w
  1189  006A  0272               	subwf	_currentSecondsTick,w	;volatile
  1190  006B                     u295:
  1191  006B  1C03               	skipc
  1192  006C  286E               	goto	u291
  1193  006D  286F               	goto	u290
  1194  006E                     u291:
  1195  006E  2875               	goto	l159
  1196  006F                     u290:
  1197  006F                     l1062:
  1198                           
  1199                           ;main.c: 122:                 {;main.c: 123:                     setState(STATE_END);
  1200  006F  3004               	movlw	4
  1201  0070  3180  208D  3180   	fcall	_setState
  1202  0073  2875               	goto	l1066
  1203  0074                     l172:	
  1204                           ;main.c: 128:                 while(1);
  1205                           
  1206  0074  2874               	goto	l172
  1207  0075                     l159:
  1208  0075                     l1066:
  1209  0075  0874               	movf	_currentState,w
  1210  0076  0020               	movlb	0	; select bank0
  1211  0077  00A2               	movwf	??_main
  1212  0078  01A3               	clrf	??_main+1
  1213                           
  1214                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1215                           ; Switch size 1, requested type "simple"
  1216                           ; Number of cases is 1, Range of values is 0 to 0
  1217                           ; switch strategies available:
  1218                           ; Name         Instructions Cycles
  1219                           ; simple_byte            4     3 (average)
  1220                           ; direct_byte            8     6 (fixed)
  1221                           ; jumptable            260     6 (fixed)
  1222                           ;	Chosen strategy is simple_byte
  1223  0079  0823               	movf	??_main+1,w
  1224  007A  3A00               	xorlw	0	; case 0
  1225  007B  1903               	skipnz
  1226  007C  287E               	goto	l1112
  1227  007D  2875               	goto	l1066
  1228  007E                     l1112:
  1229                           
  1230                           ; Switch size 1, requested type "simple"
  1231                           ; Number of cases is 4, Range of values is 1 to 4
  1232                           ; switch strategies available:
  1233                           ; Name         Instructions Cycles
  1234                           ; simple_byte           13     7 (average)
  1235                           ; direct_byte           17     9 (fixed)
  1236                           ; jumptable            263     9 (fixed)
  1237                           ;	Chosen strategy is simple_byte
  1238  007E  0822               	movf	??_main,w
  1239  007F  3A01               	xorlw	1	; case 1
  1240  0080  1903               	skipnz
  1241  0081  2836               	goto	l160
  1242  0082  3A03               	xorlw	3	; case 2
  1243  0083  1903               	skipnz
  1244  0084  2849               	goto	l163
  1245  0085  3A01               	xorlw	1	; case 3
  1246  0086  1903               	skipnz
  1247  0087  285C               	goto	l167
  1248  0088  3A07               	xorlw	7	; case 4
  1249  0089  1903               	skipnz
  1250  008A  2874               	goto	l172
  1251  008B  2875               	goto	l1066
  1252  008C  2819               	ljmp	start
  1253  008D                     __end_of_main:
  1254                           
  1255                           	psect	text1
  1256  008D                     __ptext1:	
  1257 ;; *************** function _setState *****************
  1258 ;; Defined at:
  1259 ;;		line 141 in file "main.c"
  1260 ;; Parameters:    Size  Location     Type
  1261 ;;  newState        1    wreg     enum E2970
  1262 ;; Auto vars:     Size  Location     Type
  1263 ;;  newState        1    4[COMMON] enum E2970
  1264 ;; Return value:  Size  Location     Type
  1265 ;;                  1    wreg      void 
  1266 ;; Registers used:
  1267 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1268 ;; Tracked objects:
  1269 ;;		On entry : 0/0
  1270 ;;		On exit  : 0/0
  1271 ;;		Unchanged: 0/0
  1272 ;; Data sizes:     COMMON   BANK0   BANK1
  1273 ;;      Params:         0       0       0
  1274 ;;      Locals:         1       0       0
  1275 ;;      Temps:          2       0       0
  1276 ;;      Totals:         3       0       0
  1277 ;;Total ram usage:        3 bytes
  1278 ;; Hardware stack levels used:    1
  1279 ;; Hardware stack levels required when called:    4
  1280 ;; This function calls:
  1281 ;;		Nothing
  1282 ;; This function is called by:
  1283 ;;		_main
  1284 ;; This function uses a non-reentrant model
  1285 ;;
  1286                           
  1287                           
  1288                           ;psect for function _setState
  1289  008D                     _setState:
  1290                           
  1291                           ;incstack = 0
  1292                           ; Regs used in _setState: [wreg-fsr0h+status,2+status,0]
  1293                           ;setState@newState stored from wreg
  1294  008D  00F9               	movwf	setState@newState
  1295  008E                     l798:
  1296                           
  1297                           ;main.c: 141: void setState(states_t newState);main.c: 142: {;main.c: 143:     if(newSta
      +                          te == currentState)
  1298  008E  0879               	movf	setState@newState,w
  1299  008F  0674               	xorwf	_currentState,w
  1300  0090  1D03               	skipz
  1301  0091  2893               	goto	u31
  1302  0092  2894               	goto	u30
  1303  0093                     u31:
  1304  0093  2895               	goto	l802
  1305  0094                     u30:
  1306  0094  28D4               	goto	l181
  1307  0095                     l802:
  1308                           
  1309                           ;main.c: 148:     currentSecondsTick = 0;
  1310  0095  01F2               	clrf	_currentSecondsTick	;volatile
  1311  0096  01F3               	clrf	_currentSecondsTick+1	;volatile
  1312                           
  1313                           ;main.c: 151:     switch(newState)
  1314  0097  28BA               	goto	l812
  1315  0098                     l184:	
  1316                           ;main.c: 154:             do { LATAbits.LATA1 = 0; } while(0);
  1317                           
  1318  0098  0022               	movlb	2	; select bank2
  1319  0099  108C               	bcf	12,1	;volatile
  1320  009A                     l186:	
  1321                           ;main.c: 155:             do { LATAbits.LATA2 = 0; } while(0);
  1322                           
  1323  009A  110C               	bcf	12,2	;volatile
  1324  009B                     l804:
  1325                           
  1326                           ;main.c: 156:             demandedSecondsTick = currentSecondsTick + 1;
  1327  009B  0872               	movf	_currentSecondsTick,w	;volatile
  1328  009C  3E01               	addlw	1
  1329  009D  00F0               	movwf	_demandedSecondsTick
  1330  009E  3000               	movlw	0
  1331  009F  3D73               	addwfc	_currentSecondsTick+1,w	;volatile
  1332  00A0  00F1               	movwf	_demandedSecondsTick+1
  1333                           
  1334                           ;main.c: 157:             break;
  1335  00A1  28D0               	goto	l814
  1336  00A2                     l190:	
  1337                           ;main.c: 160:             do { LATAbits.LATA1 = 1; } while(0);
  1338                           
  1339  00A2  0022               	movlb	2	; select bank2
  1340  00A3  148C               	bsf	12,1	;volatile
  1341  00A4                     l192:	
  1342                           ;main.c: 161:             do { LATAbits.LATA2 = 0; } while(0);
  1343                           
  1344  00A4  110C               	bcf	12,2	;volatile
  1345  00A5                     l806:
  1346                           
  1347                           ;main.c: 162:             demandedSecondsTick = currentSecondsTick + 1200;
  1348  00A5  0872               	movf	_currentSecondsTick,w	;volatile
  1349  00A6  3EB0               	addlw	176
  1350  00A7  00F0               	movwf	_demandedSecondsTick
  1351  00A8  3004               	movlw	4
  1352  00A9  3D73               	addwfc	_currentSecondsTick+1,w	;volatile
  1353  00AA  00F1               	movwf	_demandedSecondsTick+1
  1354                           
  1355                           ;main.c: 163:             break;
  1356  00AB  28D0               	goto	l814
  1357  00AC                     l195:	
  1358                           ;main.c: 166:             do { LATAbits.LATA1 = 0; } while(0);
  1359                           
  1360  00AC  0022               	movlb	2	; select bank2
  1361  00AD  108C               	bcf	12,1	;volatile
  1362  00AE                     l197:	
  1363                           ;main.c: 167:             do { LATAbits.LATA2 = 1; } while(0);
  1364                           
  1365  00AE  150C               	bsf	12,2	;volatile
  1366  00AF                     l808:
  1367                           
  1368                           ;main.c: 168:             demandedSecondsTick = currentSecondsTick + 10;
  1369  00AF  0872               	movf	_currentSecondsTick,w	;volatile
  1370  00B0  3E0A               	addlw	10
  1371  00B1  00F0               	movwf	_demandedSecondsTick
  1372  00B2  3000               	movlw	0
  1373  00B3  3D73               	addwfc	_currentSecondsTick+1,w	;volatile
  1374  00B4  00F1               	movwf	_demandedSecondsTick+1
  1375                           
  1376                           ;main.c: 169:             break;
  1377  00B5  28D0               	goto	l814
  1378  00B6                     l200:	
  1379                           ;main.c: 172:             do { LATAbits.LATA1 = 0; } while(0);
  1380                           
  1381  00B6  0022               	movlb	2	; select bank2
  1382  00B7  108C               	bcf	12,1	;volatile
  1383  00B8                     l202:	
  1384                           ;main.c: 173:             do { LATAbits.LATA2 = 0; } while(0);
  1385                           
  1386  00B8  110C               	bcf	12,2	;volatile
  1387  00B9  28D0               	goto	l814
  1388  00BA                     l812:
  1389  00BA  0879               	movf	setState@newState,w
  1390  00BB  00F7               	movwf	??_setState
  1391  00BC  01F8               	clrf	??_setState+1
  1392                           
  1393                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1394                           ; Switch size 1, requested type "simple"
  1395                           ; Number of cases is 1, Range of values is 0 to 0
  1396                           ; switch strategies available:
  1397                           ; Name         Instructions Cycles
  1398                           ; simple_byte            4     3 (average)
  1399                           ; direct_byte            8     6 (fixed)
  1400                           ; jumptable            260     6 (fixed)
  1401                           ;	Chosen strategy is simple_byte
  1402  00BD  0878               	movf	??_setState+1,w
  1403  00BE  3A00               	xorlw	0	; case 0
  1404  00BF  1903               	skipnz
  1405  00C0  28C2               	goto	l1114
  1406  00C1  28D0               	goto	l814
  1407  00C2                     l1114:
  1408                           
  1409                           ; Switch size 1, requested type "simple"
  1410                           ; Number of cases is 4, Range of values is 1 to 4
  1411                           ; switch strategies available:
  1412                           ; Name         Instructions Cycles
  1413                           ; simple_byte           13     7 (average)
  1414                           ; direct_byte           17     9 (fixed)
  1415                           ; jumptable            263     9 (fixed)
  1416                           ;	Chosen strategy is simple_byte
  1417  00C2  0877               	movf	??_setState,w
  1418  00C3  3A01               	xorlw	1	; case 1
  1419  00C4  1903               	skipnz
  1420  00C5  2898               	goto	l184
  1421  00C6  3A03               	xorlw	3	; case 2
  1422  00C7  1903               	skipnz
  1423  00C8  28A2               	goto	l190
  1424  00C9  3A01               	xorlw	1	; case 3
  1425  00CA  1903               	skipnz
  1426  00CB  28AC               	goto	l195
  1427  00CC  3A07               	xorlw	7	; case 4
  1428  00CD  1903               	skipnz
  1429  00CE  28B6               	goto	l200
  1430  00CF  28D0               	goto	l814
  1431  00D0                     l814:
  1432                           
  1433                           ;main.c: 177:     currentState = newState;
  1434  00D0  0879               	movf	setState@newState,w
  1435  00D1  00F7               	movwf	??_setState
  1436  00D2  0877               	movf	??_setState,w
  1437  00D3  00F4               	movwf	_currentState
  1438  00D4                     l181:
  1439  00D4  0008               	return
  1440  00D5                     __end_of_setState:
  1441                           
  1442                           	psect	text2
  1443  0152                     __ptext2:	
  1444 ;; *************** function _TMR1_StartTimer *****************
  1445 ;; Defined at:
  1446 ;;		line 93 in file "mcc_generated_files/tmr1.c"
  1447 ;; Parameters:    Size  Location     Type
  1448 ;;		None
  1449 ;; Auto vars:     Size  Location     Type
  1450 ;;		None
  1451 ;; Return value:  Size  Location     Type
  1452 ;;                  1    wreg      void 
  1453 ;; Registers used:
  1454 ;;		None
  1455 ;; Tracked objects:
  1456 ;;		On entry : 0/0
  1457 ;;		On exit  : 0/0
  1458 ;;		Unchanged: 0/0
  1459 ;; Data sizes:     COMMON   BANK0   BANK1
  1460 ;;      Params:         0       0       0
  1461 ;;      Locals:         0       0       0
  1462 ;;      Temps:          0       0       0
  1463 ;;      Totals:         0       0       0
  1464 ;;Total ram usage:        0 bytes
  1465 ;; Hardware stack levels used:    1
  1466 ;; Hardware stack levels required when called:    4
  1467 ;; This function calls:
  1468 ;;		Nothing
  1469 ;; This function is called by:
  1470 ;;		_main
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           
  1474                           
  1475                           ;psect for function _TMR1_StartTimer
  1476  0152                     _TMR1_StartTimer:
  1477  0152                     l792:	
  1478                           ;incstack = 0
  1479                           ; Regs used in _TMR1_StartTimer: []
  1480                           
  1481                           
  1482                           ;mcc_generated_files/tmr1.c: 96:     T1CONbits.TMR1ON = 1;
  1483  0152  0020               	movlb	0	; select bank0
  1484  0153  1418               	bsf	24,0	;volatile
  1485  0154                     l81:
  1486  0154  0008               	return
  1487  0155                     __end_of_TMR1_StartTimer:
  1488                           
  1489                           	psect	text3
  1490  0115                     __ptext3:	
  1491 ;; *************** function _SYSTEM_Initialize *****************
  1492 ;; Defined at:
  1493 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1494 ;; Parameters:    Size  Location     Type
  1495 ;;		None
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;		None
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  1    wreg      void 
  1500 ;; Registers used:
  1501 ;;		wreg, status,2, status,0, pclath, cstack
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMMON   BANK0   BANK1
  1507 ;;      Params:         0       0       0
  1508 ;;      Locals:         0       0       0
  1509 ;;      Temps:          0       0       0
  1510 ;;      Totals:         0       0       0
  1511 ;;Total ram usage:        0 bytes
  1512 ;; Hardware stack levels used:    1
  1513 ;; Hardware stack levels required when called:    6
  1514 ;; This function calls:
  1515 ;;		_OSCILLATOR_Initialize
  1516 ;;		_PIN_MANAGER_Initialize
  1517 ;;		_TMR1_Initialize
  1518 ;;		_WDT_Initialize
  1519 ;; This function is called by:
  1520 ;;		_main
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524                           
  1525                           ;psect for function _SYSTEM_Initialize
  1526  0115                     _SYSTEM_Initialize:
  1527  0115                     l952:	
  1528                           ;incstack = 0
  1529                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1530                           
  1531                           
  1532                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1533  0115  3180  20ED  3181   	fcall	_PIN_MANAGER_Initialize
  1534                           
  1535                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1536  0118  3181  213C  3181   	fcall	_OSCILLATOR_Initialize
  1537                           
  1538                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  1539  011B  3181  214E  3181   	fcall	_WDT_Initialize
  1540                           
  1541                           ;mcc_generated_files/mcc.c: 56:     TMR1_Initialize();
  1542  011E  3180  20D5  3181   	fcall	_TMR1_Initialize
  1543  0121                     l19:
  1544  0121  0008               	return
  1545  0122                     __end_of_SYSTEM_Initialize:
  1546                           
  1547                           	psect	text4
  1548  014E                     __ptext4:	
  1549 ;; *************** function _WDT_Initialize *****************
  1550 ;; Defined at:
  1551 ;;		line 69 in file "mcc_generated_files/mcc.c"
  1552 ;; Parameters:    Size  Location     Type
  1553 ;;		None
  1554 ;; Auto vars:     Size  Location     Type
  1555 ;;		None
  1556 ;; Return value:  Size  Location     Type
  1557 ;;                  1    wreg      void 
  1558 ;; Registers used:
  1559 ;;		wreg
  1560 ;; Tracked objects:
  1561 ;;		On entry : 0/0
  1562 ;;		On exit  : 0/0
  1563 ;;		Unchanged: 0/0
  1564 ;; Data sizes:     COMMON   BANK0   BANK1
  1565 ;;      Params:         0       0       0
  1566 ;;      Locals:         0       0       0
  1567 ;;      Temps:          0       0       0
  1568 ;;      Totals:         0       0       0
  1569 ;;Total ram usage:        0 bytes
  1570 ;; Hardware stack levels used:    1
  1571 ;; Hardware stack levels required when called:    4
  1572 ;; This function calls:
  1573 ;;		Nothing
  1574 ;; This function is called by:
  1575 ;;		_SYSTEM_Initialize
  1576 ;; This function uses a non-reentrant model
  1577 ;;
  1578                           
  1579                           
  1580                           ;psect for function _WDT_Initialize
  1581  014E                     _WDT_Initialize:
  1582  014E                     l754:	
  1583                           ;incstack = 0
  1584                           ; Regs used in _WDT_Initialize: [wreg]
  1585                           
  1586                           
  1587                           ;mcc_generated_files/mcc.c: 72:     WDTCON = 0x16;
  1588  014E  3016               	movlw	22
  1589  014F  0021               	movlb	1	; select bank1
  1590  0150  0097               	movwf	23	;volatile
  1591  0151                     l25:
  1592  0151  0008               	return
  1593  0152                     __end_of_WDT_Initialize:
  1594                           
  1595                           	psect	text5
  1596  00D5                     __ptext5:	
  1597 ;; *************** function _TMR1_Initialize *****************
  1598 ;; Defined at:
  1599 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  1600 ;; Parameters:    Size  Location     Type
  1601 ;;		None
  1602 ;; Auto vars:     Size  Location     Type
  1603 ;;		None
  1604 ;; Return value:  Size  Location     Type
  1605 ;;                  1    wreg      void 
  1606 ;; Registers used:
  1607 ;;		wreg, status,2, status,0, pclath, cstack
  1608 ;; Tracked objects:
  1609 ;;		On entry : 0/0
  1610 ;;		On exit  : 0/0
  1611 ;;		Unchanged: 0/0
  1612 ;; Data sizes:     COMMON   BANK0   BANK1
  1613 ;;      Params:         0       0       0
  1614 ;;      Locals:         0       0       0
  1615 ;;      Temps:          0       0       0
  1616 ;;      Totals:         0       0       0
  1617 ;;Total ram usage:        0 bytes
  1618 ;; Hardware stack levels used:    1
  1619 ;; Hardware stack levels required when called:    5
  1620 ;; This function calls:
  1621 ;;		_TMR1_SetInterruptHandler
  1622 ;; This function is called by:
  1623 ;;		_SYSTEM_Initialize
  1624 ;; This function uses a non-reentrant model
  1625 ;;
  1626                           
  1627                           
  1628                           ;psect for function _TMR1_Initialize
  1629  00D5                     _TMR1_Initialize:
  1630  00D5                     l918:	
  1631                           ;incstack = 0
  1632                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1633                           
  1634                           
  1635                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  1636  00D5  0020               	movlb	0	; select bank0
  1637  00D6  0199               	clrf	25	;volatile
  1638  00D7                     l920:
  1639                           
  1640                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x86;
  1641  00D7  3086               	movlw	134
  1642  00D8  0097               	movwf	23	;volatile
  1643  00D9                     l922:
  1644                           
  1645                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xE8;
  1646  00D9  30E8               	movlw	232
  1647  00DA  0096               	movwf	22	;volatile
  1648  00DB                     l924:
  1649                           
  1650                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  1651  00DB  1011               	bcf	17,0	;volatile
  1652  00DC                     l926:
  1653                           
  1654                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  1655  00DC  0817               	movf	23,w	;volatile
  1656  00DD  00FB               	movwf	_timer1ReloadVal+1	;volatile
  1657  00DE  0816               	movf	22,w	;volatile
  1658  00DF  00FA               	movwf	_timer1ReloadVal	;volatile
  1659  00E0                     l928:
  1660                           
  1661                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  1662  00E0  0021               	movlb	1	; select bank1
  1663  00E1  1411               	bsf	17,0	;volatile
  1664  00E2                     l930:
  1665                           
  1666                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  1667  00E2  3055               	movlw	low _TMR1_DefaultInterruptHandler
  1668  00E3  00F7               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  1669  00E4  3001               	movlw	high _TMR1_DefaultInterruptHandler
  1670  00E5  00F8               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  1671  00E6  3181  2143  3180   	fcall	_TMR1_SetInterruptHandler
  1672  00E9                     l932:
  1673                           
  1674                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x41;
  1675  00E9  3041               	movlw	65
  1676  00EA  0020               	movlb	0	; select bank0
  1677  00EB  0098               	movwf	24	;volatile
  1678  00EC                     l78:
  1679  00EC  0008               	return
  1680  00ED                     __end_of_TMR1_Initialize:
  1681                           
  1682                           	psect	text6
  1683  0143                     __ptext6:	
  1684 ;; *************** function _TMR1_SetInterruptHandler *****************
  1685 ;; Defined at:
  1686 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  1687 ;; Parameters:    Size  Location     Type
  1688 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  1689 ;;		 -> secondsTick(1), TMR1_DefaultInterruptHandler(1), 
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;		None
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  1    wreg      void 
  1694 ;; Registers used:
  1695 ;;		wreg
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMMON   BANK0   BANK1
  1701 ;;      Params:         2       0       0
  1702 ;;      Locals:         0       0       0
  1703 ;;      Temps:          0       0       0
  1704 ;;      Totals:         2       0       0
  1705 ;;Total ram usage:        2 bytes
  1706 ;; Hardware stack levels used:    1
  1707 ;; Hardware stack levels required when called:    4
  1708 ;; This function calls:
  1709 ;;		Nothing
  1710 ;; This function is called by:
  1711 ;;		_TMR1_Initialize
  1712 ;;		_main
  1713 ;; This function uses a non-reentrant model
  1714 ;;
  1715                           
  1716                           
  1717                           ;psect for function _TMR1_SetInterruptHandler
  1718  0143                     _TMR1_SetInterruptHandler:
  1719  0143                     l914:	
  1720                           ;incstack = 0
  1721                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  1722                           
  1723                           
  1724                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  1725  0143  0878               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  1726  0144  0020               	movlb	0	; select bank0
  1727  0145  00A1               	movwf	_TMR1_InterruptHandler+1
  1728  0146  0877               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  1729  0147  00A0               	movwf	_TMR1_InterruptHandler
  1730  0148                     l111:
  1731  0148  0008               	return
  1732  0149                     __end_of_TMR1_SetInterruptHandler:
  1733                           
  1734                           	psect	text7
  1735  00ED                     __ptext7:	
  1736 ;; *************** function _PIN_MANAGER_Initialize *****************
  1737 ;; Defined at:
  1738 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;		None
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;		None
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  1    wreg      void 
  1745 ;; Registers used:
  1746 ;;		wreg, status,2
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMMON   BANK0   BANK1
  1752 ;;      Params:         0       0       0
  1753 ;;      Locals:         0       0       0
  1754 ;;      Temps:          0       0       0
  1755 ;;      Totals:         0       0       0
  1756 ;;Total ram usage:        0 bytes
  1757 ;; Hardware stack levels used:    1
  1758 ;; Hardware stack levels required when called:    4
  1759 ;; This function calls:
  1760 ;;		Nothing
  1761 ;; This function is called by:
  1762 ;;		_SYSTEM_Initialize
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           
  1766                           
  1767                           ;psect for function _PIN_MANAGER_Initialize
  1768  00ED                     _PIN_MANAGER_Initialize:
  1769  00ED                     l736:	
  1770                           ;incstack = 0
  1771                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1772                           
  1773                           
  1774                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1775  00ED  0022               	movlb	2	; select bank2
  1776  00EE  018C               	clrf	12	;volatile
  1777  00EF                     l738:
  1778                           
  1779                           ;mcc_generated_files/pin_manager.c: 65:     TRISA = 0x39;
  1780  00EF  3039               	movlw	57
  1781  00F0  0021               	movlb	1	; select bank1
  1782  00F1  008C               	movwf	12	;volatile
  1783  00F2                     l740:
  1784                           
  1785                           ;mcc_generated_files/pin_manager.c: 70:     ANSELA = 0x07;
  1786  00F2  3007               	movlw	7
  1787  00F3  0023               	movlb	3	; select bank3
  1788  00F4  008C               	movwf	12	;volatile
  1789                           
  1790                           ;mcc_generated_files/pin_manager.c: 75:     WPUA = 0x00;
  1791  00F5  0024               	movlb	4	; select bank4
  1792  00F6  018C               	clrf	12	;volatile
  1793  00F7                     l742:
  1794                           
  1795                           ;mcc_generated_files/pin_manager.c: 76:     OPTION_REGbits.nWPUEN = 1;
  1796  00F7  0021               	movlb	1	; select bank1
  1797  00F8  1795               	bsf	21,7	;volatile
  1798                           
  1799                           ;mcc_generated_files/pin_manager.c: 81:     ODCONA = 0x00;
  1800  00F9  0025               	movlb	5	; select bank5
  1801  00FA  018C               	clrf	12	;volatile
  1802  00FB                     l744:
  1803                           
  1804                           ;mcc_generated_files/pin_manager.c: 86:     SLRCONA = 0x37;
  1805  00FB  3037               	movlw	55
  1806  00FC  0026               	movlb	6	; select bank6
  1807  00FD  008C               	movwf	12	;volatile
  1808  00FE                     l746:
  1809                           
  1810                           ;mcc_generated_files/pin_manager.c: 91:     INLVLA = 0x3F;
  1811  00FE  303F               	movlw	63
  1812  00FF  0027               	movlb	7	; select bank7
  1813  0100  008C               	movwf	12	;volatile
  1814                           
  1815                           ;mcc_generated_files/pin_manager.c: 96:     APFCON = 0x00;
  1816  0101  0022               	movlb	2	; select bank2
  1817  0102  019D               	clrf	29	;volatile
  1818  0103                     l46:
  1819  0103  0008               	return
  1820  0104                     __end_of_PIN_MANAGER_Initialize:
  1821                           
  1822                           	psect	text8
  1823  013C                     __ptext8:	
  1824 ;; *************** function _OSCILLATOR_Initialize *****************
  1825 ;; Defined at:
  1826 ;;		line 59 in file "mcc_generated_files/mcc.c"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;		None
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;		None
  1831 ;; Return value:  Size  Location     Type
  1832 ;;                  1    wreg      void 
  1833 ;; Registers used:
  1834 ;;		wreg, status,2
  1835 ;; Tracked objects:
  1836 ;;		On entry : 0/0
  1837 ;;		On exit  : 0/0
  1838 ;;		Unchanged: 0/0
  1839 ;; Data sizes:     COMMON   BANK0   BANK1
  1840 ;;      Params:         0       0       0
  1841 ;;      Locals:         0       0       0
  1842 ;;      Temps:          0       0       0
  1843 ;;      Totals:         0       0       0
  1844 ;;Total ram usage:        0 bytes
  1845 ;; Hardware stack levels used:    1
  1846 ;; Hardware stack levels required when called:    4
  1847 ;; This function calls:
  1848 ;;		Nothing
  1849 ;; This function is called by:
  1850 ;;		_SYSTEM_Initialize
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853                           
  1854                           
  1855                           ;psect for function _OSCILLATOR_Initialize
  1856  013C                     _OSCILLATOR_Initialize:
  1857  013C                     l748:	
  1858                           ;incstack = 0
  1859                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1860                           
  1861                           
  1862                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x02;
  1863  013C  3002               	movlw	2
  1864  013D  0021               	movlb	1	; select bank1
  1865  013E  0099               	movwf	25	;volatile
  1866  013F                     l750:
  1867                           
  1868                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
  1869  013F  0198               	clrf	24	;volatile
  1870  0140                     l752:
  1871                           
  1872                           ;mcc_generated_files/mcc.c: 66:     BORCON = 0x00;
  1873  0140  0022               	movlb	2	; select bank2
  1874  0141  0196               	clrf	22	;volatile
  1875  0142                     l22:
  1876  0142  0008               	return
  1877  0143                     __end_of_OSCILLATOR_Initialize:
  1878                           
  1879                           	psect	intentry
  1880  0004                     __pintentry:	
  1881 ;; *************** function _INTERRUPT_InterruptManager *****************
  1882 ;; Defined at:
  1883 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1884 ;; Parameters:    Size  Location     Type
  1885 ;;		None
  1886 ;; Auto vars:     Size  Location     Type
  1887 ;;		None
  1888 ;; Return value:  Size  Location     Type
  1889 ;;                  1    wreg      void 
  1890 ;; Registers used:
  1891 ;;		wreg, status,2, status,0, pclath, cstack
  1892 ;; Tracked objects:
  1893 ;;		On entry : 0/0
  1894 ;;		On exit  : 0/0
  1895 ;;		Unchanged: 0/0
  1896 ;; Data sizes:     COMMON   BANK0   BANK1
  1897 ;;      Params:         0       0       0
  1898 ;;      Locals:         0       0       0
  1899 ;;      Temps:          0       0       0
  1900 ;;      Totals:         0       0       0
  1901 ;;Total ram usage:        0 bytes
  1902 ;; Hardware stack levels used:    1
  1903 ;; Hardware stack levels required when called:    3
  1904 ;; This function calls:
  1905 ;;		_TMR1_ISR
  1906 ;; This function is called by:
  1907 ;;		Interrupt level 1
  1908 ;; This function uses a non-reentrant model
  1909 ;;
  1910                           
  1911  0004                     _INTERRUPT_InterruptManager:
  1912                           
  1913                           ;incstack = 0
  1914  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1915                           
  1916                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  1917  0005  3180               	pagesel	$
  1918  0006                     i1l960:
  1919                           
  1920                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  1921  0006  1F0B               	btfss	11,6	;volatile
  1922  0007  2809               	goto	u15_21
  1923  0008  280A               	goto	u15_20
  1924  0009                     u15_21:
  1925  0009  2817               	goto	i1l131
  1926  000A                     u15_20:
  1927  000A                     i1l962:
  1928                           
  1929                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  1930  000A  0021               	movlb	1	; select bank1
  1931  000B  1C11               	btfss	17,0	;volatile
  1932  000C  280E               	goto	u16_21
  1933  000D  280F               	goto	u16_20
  1934  000E                     u16_21:
  1935  000E  2817               	goto	i1l131
  1936  000F                     u16_20:
  1937  000F                     i1l964:
  1938  000F  0020               	movlb	0	; select bank0
  1939  0010  1C11               	btfss	17,0	;volatile
  1940  0011  2813               	goto	u17_21
  1941  0012  2814               	goto	u17_20
  1942  0013                     u17_21:
  1943  0013  2817               	goto	i1l131
  1944  0014                     u17_20:
  1945  0014                     i1l966:
  1946                           
  1947                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR1_ISR();
  1948  0014  3181  2122  3180   	fcall	_TMR1_ISR
  1949  0017                     i1l131:	
  1950                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  1951                           
  1952  0017  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1953  0018  0009               	retfie
  1954  0019                     __end_of_INTERRUPT_InterruptManager:
  1955                           
  1956                           	psect	text10
  1957  0122                     __ptext10:	
  1958 ;; *************** function _TMR1_ISR *****************
  1959 ;; Defined at:
  1960 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;		None
  1963 ;; Auto vars:     Size  Location     Type
  1964 ;;		None
  1965 ;; Return value:  Size  Location     Type
  1966 ;;                  1    wreg      void 
  1967 ;; Registers used:
  1968 ;;		wreg, status,2, status,0, pclath, cstack
  1969 ;; Tracked objects:
  1970 ;;		On entry : 0/0
  1971 ;;		On exit  : 0/0
  1972 ;;		Unchanged: 0/0
  1973 ;; Data sizes:     COMMON   BANK0   BANK1
  1974 ;;      Params:         0       0       0
  1975 ;;      Locals:         0       0       0
  1976 ;;      Temps:          0       0       0
  1977 ;;      Totals:         0       0       0
  1978 ;;Total ram usage:        0 bytes
  1979 ;; Hardware stack levels used:    1
  1980 ;; Hardware stack levels required when called:    2
  1981 ;; This function calls:
  1982 ;;		_TMR1_CallBack
  1983 ;;		_TMR1_WriteTimer
  1984 ;; This function is called by:
  1985 ;;		_INTERRUPT_InterruptManager
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989                           
  1990                           ;psect for function _TMR1_ISR
  1991  0122                     _TMR1_ISR:
  1992  0122                     i1l954:	
  1993                           ;incstack = 0
  1994                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  1995                           
  1996                           
  1997                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  1998  0122  0020               	movlb	0	; select bank0
  1999  0123  1011               	bcf	17,0	;volatile
  2000  0124                     i1l956:
  2001                           
  2002                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  2003  0124  087B               	movf	_timer1ReloadVal+1,w	;volatile
  2004  0125  00F6               	movwf	TMR1_WriteTimer@timerVal+1
  2005  0126  087A               	movf	_timer1ReloadVal,w	;volatile
  2006  0127  00F5               	movwf	TMR1_WriteTimer@timerVal
  2007  0128  3181  2104  3181   	fcall	_TMR1_WriteTimer
  2008                           
  2009                           ;mcc_generated_files/tmr1.c: 166:     TMR1_CallBack();
  2010  012B  3181  212F  3181   	fcall	_TMR1_CallBack
  2011  012E                     i1l104:
  2012  012E  0008               	return
  2013  012F                     __end_of_TMR1_ISR:
  2014                           
  2015                           	psect	text11
  2016  0104                     __ptext11:	
  2017 ;; *************** function _TMR1_WriteTimer *****************
  2018 ;; Defined at:
  2019 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  2020 ;; Parameters:    Size  Location     Type
  2021 ;;  timerVal        2    0[COMMON] unsigned short 
  2022 ;; Auto vars:     Size  Location     Type
  2023 ;;		None
  2024 ;; Return value:  Size  Location     Type
  2025 ;;                  1    wreg      void 
  2026 ;; Registers used:
  2027 ;;		wreg, status,2
  2028 ;; Tracked objects:
  2029 ;;		On entry : 0/0
  2030 ;;		On exit  : 0/0
  2031 ;;		Unchanged: 0/0
  2032 ;; Data sizes:     COMMON   BANK0   BANK1
  2033 ;;      Params:         2       0       0
  2034 ;;      Locals:         0       0       0
  2035 ;;      Temps:          0       0       0
  2036 ;;      Totals:         2       0       0
  2037 ;;Total ram usage:        2 bytes
  2038 ;; Hardware stack levels used:    1
  2039 ;; This function calls:
  2040 ;;		Nothing
  2041 ;; This function is called by:
  2042 ;;		_TMR1_ISR
  2043 ;;		_TMR1_Reload
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           
  2048                           ;psect for function _TMR1_WriteTimer
  2049  0104                     _TMR1_WriteTimer:
  2050  0104                     i1l934:	
  2051                           ;incstack = 0
  2052                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  2053                           
  2054                           
  2055                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  2056  0104  0020               	movlb	0	; select bank0
  2057  0105  1D18               	btfss	24,2	;volatile
  2058  0106  2908               	goto	u13_21
  2059  0107  2909               	goto	u13_20
  2060  0108                     u13_21:
  2061  0108  2910               	goto	i1l944
  2062  0109                     u13_20:
  2063  0109                     i1l936:
  2064                           
  2065                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  2066  0109  1018               	bcf	24,0	;volatile
  2067  010A                     i1l938:
  2068                           
  2069                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (timerVal >> 8);
  2070  010A  0876               	movf	TMR1_WriteTimer@timerVal+1,w
  2071  010B  0097               	movwf	23	;volatile
  2072  010C                     i1l940:
  2073                           
  2074                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = timerVal;
  2075  010C  0875               	movf	TMR1_WriteTimer@timerVal,w
  2076  010D  0096               	movwf	22	;volatile
  2077  010E                     i1l942:
  2078                           
  2079                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  2080  010E  1418               	bsf	24,0	;volatile
  2081                           
  2082                           ;mcc_generated_files/tmr1.c: 133:     }
  2083  010F  2914               	goto	i1l92
  2084  0110                     i1l944:
  2085                           
  2086                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (timerVal >> 8);
  2087  0110  0876               	movf	TMR1_WriteTimer@timerVal+1,w
  2088  0111  0097               	movwf	23	;volatile
  2089  0112                     i1l946:
  2090                           
  2091                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = timerVal;
  2092  0112  0875               	movf	TMR1_WriteTimer@timerVal,w
  2093  0113  0096               	movwf	22	;volatile
  2094  0114                     i1l92:
  2095  0114  0008               	return
  2096  0115                     __end_of_TMR1_WriteTimer:
  2097                           
  2098                           	psect	text12
  2099  012F                     __ptext12:	
  2100 ;; *************** function _TMR1_CallBack *****************
  2101 ;; Defined at:
  2102 ;;		line 169 in file "mcc_generated_files/tmr1.c"
  2103 ;; Parameters:    Size  Location     Type
  2104 ;;		None
  2105 ;; Auto vars:     Size  Location     Type
  2106 ;;		None
  2107 ;; Return value:  Size  Location     Type
  2108 ;;                  1    wreg      void 
  2109 ;; Registers used:
  2110 ;;		wreg, status,2, status,0, pclath, cstack
  2111 ;; Tracked objects:
  2112 ;;		On entry : 0/0
  2113 ;;		On exit  : 0/0
  2114 ;;		Unchanged: 0/0
  2115 ;; Data sizes:     COMMON   BANK0   BANK1
  2116 ;;      Params:         0       0       0
  2117 ;;      Locals:         0       0       0
  2118 ;;      Temps:          0       0       0
  2119 ;;      Totals:         0       0       0
  2120 ;;Total ram usage:        0 bytes
  2121 ;; Hardware stack levels used:    1
  2122 ;; Hardware stack levels required when called:    1
  2123 ;; This function calls:
  2124 ;;		Absolute function
  2125 ;;		_TMR1_DefaultInterruptHandler
  2126 ;;		_secondsTick
  2127 ;; This function is called by:
  2128 ;;		_TMR1_ISR
  2129 ;; This function uses a non-reentrant model
  2130 ;;
  2131                           
  2132                           
  2133                           ;psect for function _TMR1_CallBack
  2134  012F                     _TMR1_CallBack:
  2135  012F                     i1l948:	
  2136                           ;incstack = 0
  2137                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
  2138                           
  2139                           
  2140                           ;mcc_generated_files/tmr1.c: 172:     if(TMR1_InterruptHandler)
  2141  012F  0020               	movlb	0	; select bank0
  2142  0130  0820               	movf	_TMR1_InterruptHandler,w
  2143  0131  0421               	iorwf	_TMR1_InterruptHandler+1,w
  2144  0132  1903               	btfsc	3,2
  2145  0133  2935               	goto	u14_21
  2146  0134  2936               	goto	u14_20
  2147  0135                     u14_21:
  2148  0135  293B               	goto	i1l108
  2149  0136                     u14_20:
  2150  0136                     i1l950:
  2151                           
  2152                           ;mcc_generated_files/tmr1.c: 173:     {;mcc_generated_files/tmr1.c: 174:         TMR1_In
      +                          terruptHandler();
  2153  0136  0821               	movf	_TMR1_InterruptHandler+1,w
  2154  0137  008A               	movwf	10
  2155  0138  0820               	movf	_TMR1_InterruptHandler,w
  2156  0139  000A               	callw
  2157  013A  3181               	pagesel	$
  2158  013B                     i1l108:
  2159  013B  0008               	return
  2160  013C                     __end_of_TMR1_CallBack:
  2161                           
  2162                           	psect	text13
  2163  0155                     __ptext13:	
  2164 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  2165 ;; Defined at:
  2166 ;;		line 182 in file "mcc_generated_files/tmr1.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;		None
  2169 ;; Auto vars:     Size  Location     Type
  2170 ;;		None
  2171 ;; Return value:  Size  Location     Type
  2172 ;;                  1    wreg      void 
  2173 ;; Registers used:
  2174 ;;		None
  2175 ;; Tracked objects:
  2176 ;;		On entry : 0/0
  2177 ;;		On exit  : 0/0
  2178 ;;		Unchanged: 0/0
  2179 ;; Data sizes:     COMMON   BANK0   BANK1
  2180 ;;      Params:         0       0       0
  2181 ;;      Locals:         0       0       0
  2182 ;;      Temps:          0       0       0
  2183 ;;      Totals:         0       0       0
  2184 ;;Total ram usage:        0 bytes
  2185 ;; Hardware stack levels used:    1
  2186 ;; This function calls:
  2187 ;;		Nothing
  2188 ;; This function is called by:
  2189 ;;		_TMR1_Initialize
  2190 ;;		_TMR1_CallBack
  2191 ;; This function uses a non-reentrant model
  2192 ;;
  2193                           
  2194                           
  2195                           ;psect for function _TMR1_DefaultInterruptHandler
  2196  0155                     _TMR1_DefaultInterruptHandler:
  2197  0155                     i1l114:	
  2198                           ;incstack = 0
  2199                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  2200                           
  2201  0155  0008               	return
  2202  0156                     __end_of_TMR1_DefaultInterruptHandler:
  2203                           
  2204                           	psect	text14
  2205  0149                     __ptext14:	
  2206 ;; *************** function _secondsTick *****************
  2207 ;; Defined at:
  2208 ;;		line 181 in file "main.c"
  2209 ;; Parameters:    Size  Location     Type
  2210 ;;		None
  2211 ;; Auto vars:     Size  Location     Type
  2212 ;;		None
  2213 ;; Return value:  Size  Location     Type
  2214 ;;                  1    wreg      void 
  2215 ;; Registers used:
  2216 ;;		wreg
  2217 ;; Tracked objects:
  2218 ;;		On entry : 0/0
  2219 ;;		On exit  : 0/0
  2220 ;;		Unchanged: 0/0
  2221 ;; Data sizes:     COMMON   BANK0   BANK1
  2222 ;;      Params:         0       0       0
  2223 ;;      Locals:         0       0       0
  2224 ;;      Temps:          0       0       0
  2225 ;;      Totals:         0       0       0
  2226 ;;Total ram usage:        0 bytes
  2227 ;; Hardware stack levels used:    1
  2228 ;; This function calls:
  2229 ;;		Nothing
  2230 ;; This function is called by:
  2231 ;;		_main
  2232 ;;		_TMR1_CallBack
  2233 ;; This function uses a non-reentrant model
  2234 ;;
  2235                           
  2236                           
  2237                           ;psect for function _secondsTick
  2238  0149                     _secondsTick:
  2239  0149                     i1l916:	
  2240                           ;incstack = 0
  2241                           ; Regs used in _secondsTick: [wreg]
  2242                           
  2243                           
  2244                           ;main.c: 183:     currentSecondsTick++;
  2245  0149  3001               	movlw	1
  2246  014A  07F2               	addwf	_currentSecondsTick,f	;volatile
  2247  014B  3000               	movlw	0
  2248  014C  3DF3               	addwfc	_currentSecondsTick+1,f	;volatile
  2249  014D                     i1l206:
  2250  014D  0008               	return
  2251  014E                     __end_of_secondsTick:
  2252  007E                     btemp	set	126	;btemp
  2253  007E                     int$flags	set	126
  2254  007E                     wtemp0	set	126
  2255                           
  2256                           	psect	config
  2257                           
  2258                           ;Config register CONFIG1 @ 0x8007
  2259                           ;	
  2260                           ;	FOSC = INTOSC, INTOSC oscillator; I/O function on CLKIN pin
  2261                           ;	Watchdog Timer Enable
  2262                           ;	WDTE = OFF, WDT disabled
  2263                           ;	Power-up Timer Enable
  2264                           ;	PWRTE = OFF, PWRT disabled
  2265                           ;	MCLR Pin Function Select
  2266                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2267                           ;	Flash Program Memory Code Protection
  2268                           ;	CP = OFF, Program memory code protection is disabled
  2269                           ;	Brown-out Reset Enable
  2270                           ;	BOREN = ON, Brown-out Reset enabled
  2271                           ;	Clock Out Enable
  2272                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2273  8007                     	org	32775
  2274  8007  3FE4               	dw	16356
  2275                           
  2276                           ;Config register CONFIG2 @ 0x8008
  2277                           ;	Flash Memory Self-Write Protection
  2278                           ;	WRT = OFF, Write protection off
  2279                           ;	PLL Enable
  2280                           ;	PLLEN = OFF, 4x PLL disabled
  2281                           ;	Stack Overflow/Underflow Reset Enable
  2282                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2283                           ;	Brown-out Reset Voltage Selection
  2284                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2285                           ;	Low Power Brown-out Reset enable bit
  2286                           ;	LPBOREN = OFF, LPBOR is disabled
  2287                           ;	Low-Voltage Programming Enable
  2288                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  2289  8008                     	org	32776
  2290  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      12
    BANK0            80      2       4
    BANK1            32      0       0

Pointer List with Targets:

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> secondsTick(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> secondsTick(), Absolute function(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_setState
    _TMR1_Initialize->_TMR1_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     393
                                              0 BANK0      2     2      0
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
                           _setState
 ---------------------------------------------------------------------------------
 (1) _setState                                             3     3      0      45
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0     240
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     240
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                        _secondsTick *
 ---------------------------------------------------------------------------------
 (7) _secondsTick                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize
   _TMR1_SetInterruptHandler
   _TMR1_StartTimer
   _setState

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _secondsTick *
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      10       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2       4       6        5.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      10       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Fri Aug 14 11:09:58 2020

                                      l22 0142                                        l25 0151  
                                      l19 0121                                        l46 0103  
                                      l81 0154                                        l78 00EC  
                                      u30 0094                                        u31 0093  
                                     l111 0148                                       l200 00B6  
                                     l202 00B8                                       l160 0036  
                                     l163 0049                                       l172 0074  
                                     l181 00D4                                       l190 00A2  
                                     l167 005C                                       l159 0075  
                                     l192 00A4                                       l184 0098  
                                     l186 009A                                       l195 00AC  
                                     l197 00AE                                       l802 0095  
                                     l740 00F2                                       l804 009B  
                                     l812 00BA                                       l750 013F  
                                     l742 00F7                                       l806 00A5  
                                     l814 00D0                                       l752 0140  
                                     l744 00FB                                       l736 00ED  
                                     l920 00D7                                       l808 00AF  
                                     l746 00FE                                       l738 00EF  
                                     l914 0143                                       l930 00E2  
                                     l922 00D9                                       l754 014E  
                                     l748 013C                                       l932 00E9  
                                     l924 00DB                                       l926 00DC  
                                     l918 00D5                                       l928 00E0  
                                     l952 0115                                       l792 0152  
                                     l798 008E                                       u240 003A  
                                     u241 0039                                       u250 0044  
                                     u251 0043                                       u260 004D  
                                     u261 004C                                       u270 0057  
                                     u271 0056                                       u255 0040  
                                     u280 0060                                       u281 005F  
                                     u290 006F                                       u291 006E  
                                     u275 0053                                       u295 006B  
                         _timer1ReloadVal 007A                                      l1112 007E  
                                    l1040 0022                                      l1114 00C2  
                                    l1050 003A                                      l1042 0025  
                                    l1060 0065                                      l1052 0044  
                                    l1044 0026                                      l1062 006F  
                                    l1054 004D                                      l1046 002E  
                                    l1056 0057                                      l1048 0031  
                                    l1058 0060                                      l1066 0075  
                                    _LATA 010C                                      i1l92 0114  
                                    _WPUA 020C                                      _main 0022  
                                    btemp 007E                                      start 0019  
              ??_TMR1_SetInterruptHandler 0079            __size_of_OSCILLATOR_Initialize 0007  
           __end_of_OSCILLATOR_Initialize 0143                                     ?_main 0075  
                         _TMR1_StartTimer 0152                                     _T1CON 0018  
                                   i1l104 012E                                     i1l114 0155  
                                   i1l131 0017                                     i1l108 013B  
                                   i1l206 014D                                     i1l916 0149  
                                   i1l940 010C                                     i1l950 0136  
                                   i1l942 010E                                     i1l934 0104  
                                   i1l936 0109                                     i1l944 0110  
                                   i1l960 0006                                     i1l946 0112  
                                   i1l938 010A                                     i1l954 0122  
                                   i1l962 000A                                     i1l948 012F  
                                   i1l956 0124                                     i1l964 000F  
                                   i1l966 0014                                     u13_20 0109  
                                   u13_21 0108                                     u14_20 0136  
                                   u14_21 0135                                     u15_20 000A  
                                   u15_21 0009                                     u16_20 000F  
                                   u16_21 000E                                     u17_20 0014  
                                   u17_21 0013                                     _TMR1H 0017  
                                   _TMR1L 0016                                     _TRISA 008C  
                        __end_of_TMR1_ISR 012F                            _WDT_Initialize 014E  
                 __end_of_TMR1_Initialize 00ED                                     pclath 000A  
                                   status 0003                                     wtemp0 007E  
                         _TMR1_WriteTimer 0104                           __initialization 001A  
                            __end_of_main 008D               ?_INTERRUPT_InterruptManager 0075  
                                  ??_main 0022                              ?_secondsTick 0075  
                  __end_of_WDT_Initialize 0152                                    _APFCON 011D  
                                  _ANSELA 018C                                    _BORCON 0116  
                                  _T1GCON 0019                   TMR1_WriteTimer@timerVal 0075  
                                  _ODCONA 028C                                    _INLVLA 038C  
                                  _OSCCON 0099                                    _WDTCON 0097  
    __end_of_TMR1_DefaultInterruptHandler 0156     __size_of_TMR1_DefaultInterruptHandler 0001  
            _TMR1_DefaultInterruptHandler 0155                   __end_of_TMR1_StartTimer 0155  
                        __end_of_setState 00D5                           ?_WDT_Initialize 0075  
TMR1_SetInterruptHandler@InterruptHandler 0077                   __end_of_TMR1_WriteTimer 0115  
                   __end_of_TMR1_CallBack 013C                          ?_TMR1_Initialize 0075  
                       _SYSTEM_Initialize 0115                   __end_of__initialization 001F  
                      ?_SYSTEM_Initialize 0075                            __pcstackCOMMON 0075  
                     ??_SYSTEM_Initialize 0079                                 ?_TMR1_ISR 0075  
           ?_TMR1_DefaultInterruptHandler 0075                            _OPTION_REGbits 0095  
               __end_of_SYSTEM_Initialize 0122                                __pnvCOMMON 007A  
                              __pmaintext 0022                          ?_TMR1_StartTimer 0075  
                              ??_TMR1_ISR 0077                                __pintentry 0004  
                                 _OSCTUNE 0098                                   _SLRCONA 030C  
                    __size_of_secondsTick 0005                          ?_TMR1_WriteTimer 0075  
                               ?_setState 0075                                   __ptext1 008D  
                                 __ptext2 0152                                   __ptext3 0115  
                                 __ptext4 014E                                   __ptext5 00D5  
                                 __ptext6 0143                                   __ptext7 00ED  
                                 __ptext8 013C            ??_TMR1_DefaultInterruptHandler 0075  
                               _T1CONbits 0018                     _OSCILLATOR_Initialize 013C  
       __size_of_TMR1_SetInterruptHandler 0006                  ??_PIN_MANAGER_Initialize 0077  
               ?_TMR1_SetInterruptHandler 0077                __size_of_SYSTEM_Initialize 000D  
                    end_of_initialization 001F                                ??_setState 0077  
                        ??_WDT_Initialize 0077                                 _PORTAbits 000C  
                       __size_of_TMR1_ISR 000D                    ?_OSCILLATOR_Initialize 0075  
                     start_initialization 001A           __size_of_PIN_MANAGER_Initialize 0017  
                __size_of_TMR1_Initialize 0018                    __size_of_TMR1_CallBack 000D  
                             __pbssCOMMON 0070                                 ___latbits 0000  
                           __pcstackBANK0 0022                          setState@newState 0079  
                            _currentState 0074                                 __pnvBANK0 0020  
                  _PIN_MANAGER_Initialize 00ED          __end_of_TMR1_SetInterruptHandler 0149  
                       __size_of_setState 0048              ??_INTERRUPT_InterruptManager 0077  
                __size_of_TMR1_StartTimer 0003                             ??_secondsTick 0075  
                           _TMR1_CallBack 012F                                  _LATAbits 010C  
                                _PIE1bits 0091                  __size_of_TMR1_WriteTimer 0011  
     __size_of_INTERRUPT_InterruptManager 0015                                  _PIR1bits 0011  
                                _TMR1_ISR 0122                         ??_TMR1_Initialize 0079  
                      _currentSecondsTick 0072                       __end_of_secondsTick 014E  
                          ?_TMR1_CallBack 0075                   ??_OSCILLATOR_Initialize 0077  
                _TMR1_SetInterruptHandler 0143                     _TMR1_InterruptHandler 0020  
                                __ptext10 0122                                  __ptext11 0104  
                                __ptext12 012F                                  __ptext13 0155  
                              _T1GCONbits 0019                                  __ptext14 0149  
                       ??_TMR1_StartTimer 0077                             __size_of_main 006B  
                                _setState 008D                       _demandedSecondsTick 0070  
                                int$flags 007E        __end_of_INTERRUPT_InterruptManager 0019  
              _INTERRUPT_InterruptManager 0004                         ??_TMR1_WriteTimer 0077  
                              _INTCONbits 000B                               _secondsTick 0149  
                         ??_TMR1_CallBack 0075                   __size_of_WDT_Initialize 0004  
                                intlevel1 0000                   ?_PIN_MANAGER_Initialize 0075  
          __end_of_PIN_MANAGER_Initialize 0104                           _TMR1_Initialize 00D5  
