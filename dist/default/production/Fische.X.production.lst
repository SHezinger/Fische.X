

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Aug 06 15:52:35 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	12LF1571
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 12/02/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC12LF1571 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  008C                     	;# 
    88  0091                     	;# 
    89  0092                     	;# 
    90  0093                     	;# 
    91  0095                     	;# 
    92  0096                     	;# 
    93  0097                     	;# 
    94  0098                     	;# 
    95  0099                     	;# 
    96  009A                     	;# 
    97  009B                     	;# 
    98  009B                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  0111                     	;# 
   105  0112                     	;# 
   106  0115                     	;# 
   107  0116                     	;# 
   108  0117                     	;# 
   109  0118                     	;# 
   110  0119                     	;# 
   111  011D                     	;# 
   112  011D                     	;# 
   113  018C                     	;# 
   114  0191                     	;# 
   115  0191                     	;# 
   116  0192                     	;# 
   117  0193                     	;# 
   118  0193                     	;# 
   119  0194                     	;# 
   120  0195                     	;# 
   121  0196                     	;# 
   122  020C                     	;# 
   123  028C                     	;# 
   124  030C                     	;# 
   125  038C                     	;# 
   126  0391                     	;# 
   127  0392                     	;# 
   128  0393                     	;# 
   129  0691                     	;# 
   130  0692                     	;# 
   131  0693                     	;# 
   132  0694                     	;# 
   133  0695                     	;# 
   134  0D8E                     	;# 
   135  0D8F                     	;# 
   136  0D90                     	;# 
   137  0D91                     	;# 
   138  0D91                     	;# 
   139  0D92                     	;# 
   140  0D93                     	;# 
   141  0D93                     	;# 
   142  0D94                     	;# 
   143  0D95                     	;# 
   144  0D95                     	;# 
   145  0D96                     	;# 
   146  0D97                     	;# 
   147  0D97                     	;# 
   148  0D98                     	;# 
   149  0D99                     	;# 
   150  0D99                     	;# 
   151  0D9A                     	;# 
   152  0D9B                     	;# 
   153  0D9C                     	;# 
   154  0D9C                     	;# 
   155  0D9D                     	;# 
   156  0D9D                     	;# 
   157  0D9E                     	;# 
   158  0D9F                     	;# 
   159  0DA0                     	;# 
   160  0DA1                     	;# 
   161  0DA1                     	;# 
   162  0DA2                     	;# 
   163  0DA3                     	;# 
   164  0DA3                     	;# 
   165  0DA4                     	;# 
   166  0DA5                     	;# 
   167  0DA5                     	;# 
   168  0DA6                     	;# 
   169  0DA7                     	;# 
   170  0DA7                     	;# 
   171  0DA8                     	;# 
   172  0DA9                     	;# 
   173  0DA9                     	;# 
   174  0DAA                     	;# 
   175  0DAB                     	;# 
   176  0DAC                     	;# 
   177  0DAC                     	;# 
   178  0DAD                     	;# 
   179  0DAD                     	;# 
   180  0DAE                     	;# 
   181  0DAF                     	;# 
   182  0DB0                     	;# 
   183  0DB1                     	;# 
   184  0DB1                     	;# 
   185  0DB2                     	;# 
   186  0DB3                     	;# 
   187  0DB3                     	;# 
   188  0DB4                     	;# 
   189  0DB5                     	;# 
   190  0DB5                     	;# 
   191  0DB6                     	;# 
   192  0DB7                     	;# 
   193  0DB7                     	;# 
   194  0DB8                     	;# 
   195  0DB9                     	;# 
   196  0DB9                     	;# 
   197  0DBA                     	;# 
   198  0DBB                     	;# 
   199  0DBC                     	;# 
   200  0DBC                     	;# 
   201  0DBD                     	;# 
   202  0DBD                     	;# 
   203  0DBE                     	;# 
   204  0DBF                     	;# 
   205  0DC0                     	;# 
   206  0FE4                     	;# 
   207  0FE5                     	;# 
   208  0FE6                     	;# 
   209  0FE7                     	;# 
   210  0FE8                     	;# 
   211  0FE8                     	;# 
   212  0FE9                     	;# 
   213  0FEA                     	;# 
   214  0FEA                     	;# 
   215  0FEB                     	;# 
   216  0FED                     	;# 
   217  0FEE                     	;# 
   218  0FEE                     	;# 
   219  0FEF                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  0011                     	;# 
   234  0012                     	;# 
   235  0013                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  008C                     	;# 
   246  0091                     	;# 
   247  0092                     	;# 
   248  0093                     	;# 
   249  0095                     	;# 
   250  0096                     	;# 
   251  0097                     	;# 
   252  0098                     	;# 
   253  0099                     	;# 
   254  009A                     	;# 
   255  009B                     	;# 
   256  009B                     	;# 
   257  009C                     	;# 
   258  009D                     	;# 
   259  009E                     	;# 
   260  009F                     	;# 
   261  010C                     	;# 
   262  0111                     	;# 
   263  0112                     	;# 
   264  0115                     	;# 
   265  0116                     	;# 
   266  0117                     	;# 
   267  0118                     	;# 
   268  0119                     	;# 
   269  011D                     	;# 
   270  011D                     	;# 
   271  018C                     	;# 
   272  0191                     	;# 
   273  0191                     	;# 
   274  0192                     	;# 
   275  0193                     	;# 
   276  0193                     	;# 
   277  0194                     	;# 
   278  0195                     	;# 
   279  0196                     	;# 
   280  020C                     	;# 
   281  028C                     	;# 
   282  030C                     	;# 
   283  038C                     	;# 
   284  0391                     	;# 
   285  0392                     	;# 
   286  0393                     	;# 
   287  0691                     	;# 
   288  0692                     	;# 
   289  0693                     	;# 
   290  0694                     	;# 
   291  0695                     	;# 
   292  0D8E                     	;# 
   293  0D8F                     	;# 
   294  0D90                     	;# 
   295  0D91                     	;# 
   296  0D91                     	;# 
   297  0D92                     	;# 
   298  0D93                     	;# 
   299  0D93                     	;# 
   300  0D94                     	;# 
   301  0D95                     	;# 
   302  0D95                     	;# 
   303  0D96                     	;# 
   304  0D97                     	;# 
   305  0D97                     	;# 
   306  0D98                     	;# 
   307  0D99                     	;# 
   308  0D99                     	;# 
   309  0D9A                     	;# 
   310  0D9B                     	;# 
   311  0D9C                     	;# 
   312  0D9C                     	;# 
   313  0D9D                     	;# 
   314  0D9D                     	;# 
   315  0D9E                     	;# 
   316  0D9F                     	;# 
   317  0DA0                     	;# 
   318  0DA1                     	;# 
   319  0DA1                     	;# 
   320  0DA2                     	;# 
   321  0DA3                     	;# 
   322  0DA3                     	;# 
   323  0DA4                     	;# 
   324  0DA5                     	;# 
   325  0DA5                     	;# 
   326  0DA6                     	;# 
   327  0DA7                     	;# 
   328  0DA7                     	;# 
   329  0DA8                     	;# 
   330  0DA9                     	;# 
   331  0DA9                     	;# 
   332  0DAA                     	;# 
   333  0DAB                     	;# 
   334  0DAC                     	;# 
   335  0DAC                     	;# 
   336  0DAD                     	;# 
   337  0DAD                     	;# 
   338  0DAE                     	;# 
   339  0DAF                     	;# 
   340  0DB0                     	;# 
   341  0DB1                     	;# 
   342  0DB1                     	;# 
   343  0DB2                     	;# 
   344  0DB3                     	;# 
   345  0DB3                     	;# 
   346  0DB4                     	;# 
   347  0DB5                     	;# 
   348  0DB5                     	;# 
   349  0DB6                     	;# 
   350  0DB7                     	;# 
   351  0DB7                     	;# 
   352  0DB8                     	;# 
   353  0DB9                     	;# 
   354  0DB9                     	;# 
   355  0DBA                     	;# 
   356  0DBB                     	;# 
   357  0DBC                     	;# 
   358  0DBC                     	;# 
   359  0DBD                     	;# 
   360  0DBD                     	;# 
   361  0DBE                     	;# 
   362  0DBF                     	;# 
   363  0DC0                     	;# 
   364  0FE4                     	;# 
   365  0FE5                     	;# 
   366  0FE6                     	;# 
   367  0FE7                     	;# 
   368  0FE8                     	;# 
   369  0FE8                     	;# 
   370  0FE9                     	;# 
   371  0FEA                     	;# 
   372  0FEA                     	;# 
   373  0FEB                     	;# 
   374  0FED                     	;# 
   375  0FEE                     	;# 
   376  0FEE                     	;# 
   377  0FEF                     	;# 
   378  0000                     	;# 
   379  0001                     	;# 
   380  0002                     	;# 
   381  0003                     	;# 
   382  0004                     	;# 
   383  0005                     	;# 
   384  0006                     	;# 
   385  0007                     	;# 
   386  0008                     	;# 
   387  0009                     	;# 
   388  000A                     	;# 
   389  000B                     	;# 
   390  000C                     	;# 
   391  0011                     	;# 
   392  0012                     	;# 
   393  0013                     	;# 
   394  0015                     	;# 
   395  0016                     	;# 
   396  0016                     	;# 
   397  0017                     	;# 
   398  0018                     	;# 
   399  0019                     	;# 
   400  001A                     	;# 
   401  001B                     	;# 
   402  001C                     	;# 
   403  008C                     	;# 
   404  0091                     	;# 
   405  0092                     	;# 
   406  0093                     	;# 
   407  0095                     	;# 
   408  0096                     	;# 
   409  0097                     	;# 
   410  0098                     	;# 
   411  0099                     	;# 
   412  009A                     	;# 
   413  009B                     	;# 
   414  009B                     	;# 
   415  009C                     	;# 
   416  009D                     	;# 
   417  009E                     	;# 
   418  009F                     	;# 
   419  010C                     	;# 
   420  0111                     	;# 
   421  0112                     	;# 
   422  0115                     	;# 
   423  0116                     	;# 
   424  0117                     	;# 
   425  0118                     	;# 
   426  0119                     	;# 
   427  011D                     	;# 
   428  011D                     	;# 
   429  018C                     	;# 
   430  0191                     	;# 
   431  0191                     	;# 
   432  0192                     	;# 
   433  0193                     	;# 
   434  0193                     	;# 
   435  0194                     	;# 
   436  0195                     	;# 
   437  0196                     	;# 
   438  020C                     	;# 
   439  028C                     	;# 
   440  030C                     	;# 
   441  038C                     	;# 
   442  0391                     	;# 
   443  0392                     	;# 
   444  0393                     	;# 
   445  0691                     	;# 
   446  0692                     	;# 
   447  0693                     	;# 
   448  0694                     	;# 
   449  0695                     	;# 
   450  0D8E                     	;# 
   451  0D8F                     	;# 
   452  0D90                     	;# 
   453  0D91                     	;# 
   454  0D91                     	;# 
   455  0D92                     	;# 
   456  0D93                     	;# 
   457  0D93                     	;# 
   458  0D94                     	;# 
   459  0D95                     	;# 
   460  0D95                     	;# 
   461  0D96                     	;# 
   462  0D97                     	;# 
   463  0D97                     	;# 
   464  0D98                     	;# 
   465  0D99                     	;# 
   466  0D99                     	;# 
   467  0D9A                     	;# 
   468  0D9B                     	;# 
   469  0D9C                     	;# 
   470  0D9C                     	;# 
   471  0D9D                     	;# 
   472  0D9D                     	;# 
   473  0D9E                     	;# 
   474  0D9F                     	;# 
   475  0DA0                     	;# 
   476  0DA1                     	;# 
   477  0DA1                     	;# 
   478  0DA2                     	;# 
   479  0DA3                     	;# 
   480  0DA3                     	;# 
   481  0DA4                     	;# 
   482  0DA5                     	;# 
   483  0DA5                     	;# 
   484  0DA6                     	;# 
   485  0DA7                     	;# 
   486  0DA7                     	;# 
   487  0DA8                     	;# 
   488  0DA9                     	;# 
   489  0DA9                     	;# 
   490  0DAA                     	;# 
   491  0DAB                     	;# 
   492  0DAC                     	;# 
   493  0DAC                     	;# 
   494  0DAD                     	;# 
   495  0DAD                     	;# 
   496  0DAE                     	;# 
   497  0DAF                     	;# 
   498  0DB0                     	;# 
   499  0DB1                     	;# 
   500  0DB1                     	;# 
   501  0DB2                     	;# 
   502  0DB3                     	;# 
   503  0DB3                     	;# 
   504  0DB4                     	;# 
   505  0DB5                     	;# 
   506  0DB5                     	;# 
   507  0DB6                     	;# 
   508  0DB7                     	;# 
   509  0DB7                     	;# 
   510  0DB8                     	;# 
   511  0DB9                     	;# 
   512  0DB9                     	;# 
   513  0DBA                     	;# 
   514  0DBB                     	;# 
   515  0DBC                     	;# 
   516  0DBC                     	;# 
   517  0DBD                     	;# 
   518  0DBD                     	;# 
   519  0DBE                     	;# 
   520  0DBF                     	;# 
   521  0DC0                     	;# 
   522  0FE4                     	;# 
   523  0FE5                     	;# 
   524  0FE6                     	;# 
   525  0FE7                     	;# 
   526  0FE8                     	;# 
   527  0FE8                     	;# 
   528  0FE9                     	;# 
   529  0FEA                     	;# 
   530  0FEA                     	;# 
   531  0FEB                     	;# 
   532  0FED                     	;# 
   533  0FEE                     	;# 
   534  0FEE                     	;# 
   535  0FEF                     	;# 
   536  0000                     	;# 
   537  0001                     	;# 
   538  0002                     	;# 
   539  0003                     	;# 
   540  0004                     	;# 
   541  0005                     	;# 
   542  0006                     	;# 
   543  0007                     	;# 
   544  0008                     	;# 
   545  0009                     	;# 
   546  000A                     	;# 
   547  000B                     	;# 
   548  000C                     	;# 
   549  0011                     	;# 
   550  0012                     	;# 
   551  0013                     	;# 
   552  0015                     	;# 
   553  0016                     	;# 
   554  0016                     	;# 
   555  0017                     	;# 
   556  0018                     	;# 
   557  0019                     	;# 
   558  001A                     	;# 
   559  001B                     	;# 
   560  001C                     	;# 
   561  008C                     	;# 
   562  0091                     	;# 
   563  0092                     	;# 
   564  0093                     	;# 
   565  0095                     	;# 
   566  0096                     	;# 
   567  0097                     	;# 
   568  0098                     	;# 
   569  0099                     	;# 
   570  009A                     	;# 
   571  009B                     	;# 
   572  009B                     	;# 
   573  009C                     	;# 
   574  009D                     	;# 
   575  009E                     	;# 
   576  009F                     	;# 
   577  010C                     	;# 
   578  0111                     	;# 
   579  0112                     	;# 
   580  0115                     	;# 
   581  0116                     	;# 
   582  0117                     	;# 
   583  0118                     	;# 
   584  0119                     	;# 
   585  011D                     	;# 
   586  011D                     	;# 
   587  018C                     	;# 
   588  0191                     	;# 
   589  0191                     	;# 
   590  0192                     	;# 
   591  0193                     	;# 
   592  0193                     	;# 
   593  0194                     	;# 
   594  0195                     	;# 
   595  0196                     	;# 
   596  020C                     	;# 
   597  028C                     	;# 
   598  030C                     	;# 
   599  038C                     	;# 
   600  0391                     	;# 
   601  0392                     	;# 
   602  0393                     	;# 
   603  0691                     	;# 
   604  0692                     	;# 
   605  0693                     	;# 
   606  0694                     	;# 
   607  0695                     	;# 
   608  0D8E                     	;# 
   609  0D8F                     	;# 
   610  0D90                     	;# 
   611  0D91                     	;# 
   612  0D91                     	;# 
   613  0D92                     	;# 
   614  0D93                     	;# 
   615  0D93                     	;# 
   616  0D94                     	;# 
   617  0D95                     	;# 
   618  0D95                     	;# 
   619  0D96                     	;# 
   620  0D97                     	;# 
   621  0D97                     	;# 
   622  0D98                     	;# 
   623  0D99                     	;# 
   624  0D99                     	;# 
   625  0D9A                     	;# 
   626  0D9B                     	;# 
   627  0D9C                     	;# 
   628  0D9C                     	;# 
   629  0D9D                     	;# 
   630  0D9D                     	;# 
   631  0D9E                     	;# 
   632  0D9F                     	;# 
   633  0DA0                     	;# 
   634  0DA1                     	;# 
   635  0DA1                     	;# 
   636  0DA2                     	;# 
   637  0DA3                     	;# 
   638  0DA3                     	;# 
   639  0DA4                     	;# 
   640  0DA5                     	;# 
   641  0DA5                     	;# 
   642  0DA6                     	;# 
   643  0DA7                     	;# 
   644  0DA7                     	;# 
   645  0DA8                     	;# 
   646  0DA9                     	;# 
   647  0DA9                     	;# 
   648  0DAA                     	;# 
   649  0DAB                     	;# 
   650  0DAC                     	;# 
   651  0DAC                     	;# 
   652  0DAD                     	;# 
   653  0DAD                     	;# 
   654  0DAE                     	;# 
   655  0DAF                     	;# 
   656  0DB0                     	;# 
   657  0DB1                     	;# 
   658  0DB1                     	;# 
   659  0DB2                     	;# 
   660  0DB3                     	;# 
   661  0DB3                     	;# 
   662  0DB4                     	;# 
   663  0DB5                     	;# 
   664  0DB5                     	;# 
   665  0DB6                     	;# 
   666  0DB7                     	;# 
   667  0DB7                     	;# 
   668  0DB8                     	;# 
   669  0DB9                     	;# 
   670  0DB9                     	;# 
   671  0DBA                     	;# 
   672  0DBB                     	;# 
   673  0DBC                     	;# 
   674  0DBC                     	;# 
   675  0DBD                     	;# 
   676  0DBD                     	;# 
   677  0DBE                     	;# 
   678  0DBF                     	;# 
   679  0DC0                     	;# 
   680  0FE4                     	;# 
   681  0FE5                     	;# 
   682  0FE6                     	;# 
   683  0FE7                     	;# 
   684  0FE8                     	;# 
   685  0FE8                     	;# 
   686  0FE9                     	;# 
   687  0FEA                     	;# 
   688  0FEA                     	;# 
   689  0FEB                     	;# 
   690  0FED                     	;# 
   691  0FEE                     	;# 
   692  0FEE                     	;# 
   693  0FEF                     	;# 
   694  0000                     	;# 
   695  0001                     	;# 
   696  0002                     	;# 
   697  0003                     	;# 
   698  0004                     	;# 
   699  0005                     	;# 
   700  0006                     	;# 
   701  0007                     	;# 
   702  0008                     	;# 
   703  0009                     	;# 
   704  000A                     	;# 
   705  000B                     	;# 
   706  000C                     	;# 
   707  0011                     	;# 
   708  0012                     	;# 
   709  0013                     	;# 
   710  0015                     	;# 
   711  0016                     	;# 
   712  0016                     	;# 
   713  0017                     	;# 
   714  0018                     	;# 
   715  0019                     	;# 
   716  001A                     	;# 
   717  001B                     	;# 
   718  001C                     	;# 
   719  008C                     	;# 
   720  0091                     	;# 
   721  0092                     	;# 
   722  0093                     	;# 
   723  0095                     	;# 
   724  0096                     	;# 
   725  0097                     	;# 
   726  0098                     	;# 
   727  0099                     	;# 
   728  009A                     	;# 
   729  009B                     	;# 
   730  009B                     	;# 
   731  009C                     	;# 
   732  009D                     	;# 
   733  009E                     	;# 
   734  009F                     	;# 
   735  010C                     	;# 
   736  0111                     	;# 
   737  0112                     	;# 
   738  0115                     	;# 
   739  0116                     	;# 
   740  0117                     	;# 
   741  0118                     	;# 
   742  0119                     	;# 
   743  011D                     	;# 
   744  011D                     	;# 
   745  018C                     	;# 
   746  0191                     	;# 
   747  0191                     	;# 
   748  0192                     	;# 
   749  0193                     	;# 
   750  0193                     	;# 
   751  0194                     	;# 
   752  0195                     	;# 
   753  0196                     	;# 
   754  020C                     	;# 
   755  028C                     	;# 
   756  030C                     	;# 
   757  038C                     	;# 
   758  0391                     	;# 
   759  0392                     	;# 
   760  0393                     	;# 
   761  0691                     	;# 
   762  0692                     	;# 
   763  0693                     	;# 
   764  0694                     	;# 
   765  0695                     	;# 
   766  0D8E                     	;# 
   767  0D8F                     	;# 
   768  0D90                     	;# 
   769  0D91                     	;# 
   770  0D91                     	;# 
   771  0D92                     	;# 
   772  0D93                     	;# 
   773  0D93                     	;# 
   774  0D94                     	;# 
   775  0D95                     	;# 
   776  0D95                     	;# 
   777  0D96                     	;# 
   778  0D97                     	;# 
   779  0D97                     	;# 
   780  0D98                     	;# 
   781  0D99                     	;# 
   782  0D99                     	;# 
   783  0D9A                     	;# 
   784  0D9B                     	;# 
   785  0D9C                     	;# 
   786  0D9C                     	;# 
   787  0D9D                     	;# 
   788  0D9D                     	;# 
   789  0D9E                     	;# 
   790  0D9F                     	;# 
   791  0DA0                     	;# 
   792  0DA1                     	;# 
   793  0DA1                     	;# 
   794  0DA2                     	;# 
   795  0DA3                     	;# 
   796  0DA3                     	;# 
   797  0DA4                     	;# 
   798  0DA5                     	;# 
   799  0DA5                     	;# 
   800  0DA6                     	;# 
   801  0DA7                     	;# 
   802  0DA7                     	;# 
   803  0DA8                     	;# 
   804  0DA9                     	;# 
   805  0DA9                     	;# 
   806  0DAA                     	;# 
   807  0DAB                     	;# 
   808  0DAC                     	;# 
   809  0DAC                     	;# 
   810  0DAD                     	;# 
   811  0DAD                     	;# 
   812  0DAE                     	;# 
   813  0DAF                     	;# 
   814  0DB0                     	;# 
   815  0DB1                     	;# 
   816  0DB1                     	;# 
   817  0DB2                     	;# 
   818  0DB3                     	;# 
   819  0DB3                     	;# 
   820  0DB4                     	;# 
   821  0DB5                     	;# 
   822  0DB5                     	;# 
   823  0DB6                     	;# 
   824  0DB7                     	;# 
   825  0DB7                     	;# 
   826  0DB8                     	;# 
   827  0DB9                     	;# 
   828  0DB9                     	;# 
   829  0DBA                     	;# 
   830  0DBB                     	;# 
   831  0DBC                     	;# 
   832  0DBC                     	;# 
   833  0DBD                     	;# 
   834  0DBD                     	;# 
   835  0DBE                     	;# 
   836  0DBF                     	;# 
   837  0DC0                     	;# 
   838  0FE4                     	;# 
   839  0FE5                     	;# 
   840  0FE6                     	;# 
   841  0FE7                     	;# 
   842  0FE8                     	;# 
   843  0FE8                     	;# 
   844  0FE9                     	;# 
   845  0FEA                     	;# 
   846  0FEA                     	;# 
   847  0FEB                     	;# 
   848  0FED                     	;# 
   849  0FEE                     	;# 
   850  0FEE                     	;# 
   851  0FEF                     	;# 
   852                           
   853                           	psect	nvCOMMON
   854  007A                     __pnvCOMMON:
   855  007A                     _timer1ReloadVal:
   856  007A                     	ds	2
   857                           
   858                           	psect	nvBANK0
   859  0020                     __pnvBANK0:
   860  0020                     _TMR1_InterruptHandler:
   861  0020                     	ds	2
   862  000C                     _PORTAbits	set	12
   863  000B                     _INTCONbits	set	11
   864  0019                     _T1GCONbits	set	25
   865  0018                     _T1CONbits	set	24
   866  0018                     _T1CON	set	24
   867  0011                     _PIR1bits	set	17
   868  0016                     _TMR1L	set	22
   869  0017                     _TMR1H	set	23
   870  0019                     _T1GCON	set	25
   871  0091                     _PIE1bits	set	145
   872  0095                     _OPTION_REGbits	set	149
   873  008C                     _TRISA	set	140
   874  0097                     _WDTCON	set	151
   875  0098                     _OSCTUNE	set	152
   876  0099                     _OSCCON	set	153
   877  010C                     _LATAbits	set	268
   878  011D                     _APFCON	set	285
   879  010C                     _LATA	set	268
   880  0116                     _BORCON	set	278
   881  018C                     _ANSELA	set	396
   882  020C                     _WPUA	set	524
   883  028C                     _ODCONA	set	652
   884  030C                     _SLRCONA	set	780
   885  038C                     _INLVLA	set	908
   886                           
   887                           	psect	cinit
   888  001A                     start_initialization:	
   889                           ; #config settings
   890                           
   891  001A                     __initialization:
   892                           
   893                           ; Clear objects allocated to COMMON
   894  001A  01F0               	clrf	__pbssCOMMON& (0+127)
   895  001B  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   896  001C  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   897  001D  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   898  001E  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   899  001F                     end_of_initialization:	
   900                           ;End of C runtime variable initialization code
   901                           
   902  001F                     __end_of__initialization:
   903  001F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   904  0020  0020               	movlb	0
   905  0021  2822               	ljmp	_main	;jump to C main() function
   906                           
   907                           	psect	bssCOMMON
   908  0070                     __pbssCOMMON:
   909  0070                     _demandedSecondsTick:
   910  0070                     	ds	2
   911  0072                     _currentSecondsTick:
   912  0072                     	ds	2
   913  0074                     _currentState:
   914  0074                     	ds	1
   915                           
   916                           	psect	cstackCOMMON
   917  0075                     __pcstackCOMMON:
   918  0075                     ?_PIN_MANAGER_Initialize:
   919  0075                     ?_OSCILLATOR_Initialize:	
   920                           ; 1 bytes @ 0x0
   921                           
   922  0075                     ?_WDT_Initialize:	
   923                           ; 1 bytes @ 0x0
   924                           
   925  0075                     ?_TMR1_Initialize:	
   926                           ; 1 bytes @ 0x0
   927                           
   928  0075                     ?_TMR1_DefaultInterruptHandler:	
   929                           ; 1 bytes @ 0x0
   930                           
   931  0075                     ??_TMR1_DefaultInterruptHandler:	
   932                           ; 1 bytes @ 0x0
   933                           
   934  0075                     ?_TMR1_CallBack:	
   935                           ; 1 bytes @ 0x0
   936                           
   937  0075                     ??_TMR1_CallBack:	
   938                           ; 1 bytes @ 0x0
   939                           
   940  0075                     ?_secondsTick:	
   941                           ; 1 bytes @ 0x0
   942                           
   943  0075                     ??_secondsTick:	
   944                           ; 1 bytes @ 0x0
   945                           
   946  0075                     ?_setState:	
   947                           ; 1 bytes @ 0x0
   948                           
   949  0075                     ?_SYSTEM_Initialize:	
   950                           ; 1 bytes @ 0x0
   951                           
   952  0075                     ?_TMR1_StartTimer:	
   953                           ; 1 bytes @ 0x0
   954                           
   955  0075                     ?_TMR1_WriteTimer:	
   956                           ; 1 bytes @ 0x0
   957                           
   958  0075                     ?_TMR1_ISR:	
   959                           ; 1 bytes @ 0x0
   960                           
   961  0075                     ?_INTERRUPT_InterruptManager:	
   962                           ; 1 bytes @ 0x0
   963                           
   964  0075                     ?_main:	
   965                           ; 1 bytes @ 0x0
   966                           
   967  0075                     TMR1_WriteTimer@timerVal:	
   968                           ; 1 bytes @ 0x0
   969                           
   970                           
   971                           ; 2 bytes @ 0x0
   972  0075                     	ds	2
   973  0077                     ??_PIN_MANAGER_Initialize:
   974  0077                     ??_OSCILLATOR_Initialize:	
   975                           ; 1 bytes @ 0x2
   976                           
   977  0077                     ??_WDT_Initialize:	
   978                           ; 1 bytes @ 0x2
   979                           
   980  0077                     ?_TMR1_SetInterruptHandler:	
   981                           ; 1 bytes @ 0x2
   982                           
   983  0077                     ??_setState:	
   984                           ; 1 bytes @ 0x2
   985                           
   986  0077                     ??_TMR1_StartTimer:	
   987                           ; 1 bytes @ 0x2
   988                           
   989  0077                     ??_TMR1_WriteTimer:	
   990                           ; 1 bytes @ 0x2
   991                           
   992  0077                     ??_TMR1_ISR:	
   993                           ; 1 bytes @ 0x2
   994                           
   995  0077                     ??_INTERRUPT_InterruptManager:	
   996                           ; 1 bytes @ 0x2
   997                           
   998  0077                     TMR1_SetInterruptHandler@InterruptHandler:	
   999                           ; 1 bytes @ 0x2
  1000                           
  1001                           
  1002                           ; 2 bytes @ 0x2
  1003  0077                     	ds	2
  1004  0079                     ??_TMR1_Initialize:
  1005  0079                     ??_TMR1_SetInterruptHandler:	
  1006                           ; 1 bytes @ 0x4
  1007                           
  1008  0079                     ??_SYSTEM_Initialize:	
  1009                           ; 1 bytes @ 0x4
  1010                           
  1011  0079                     setState@newState:	
  1012                           ; 1 bytes @ 0x4
  1013                           
  1014                           
  1015                           ; 1 bytes @ 0x4
  1016  0079                     	ds	1
  1017                           
  1018                           	psect	cstackBANK0
  1019  0022                     __pcstackBANK0:
  1020  0022                     ??_main:
  1021                           
  1022                           ; 1 bytes @ 0x0
  1023  0022                     	ds	2
  1024                           
  1025                           	psect	maintext
  1026  0022                     __pmaintext:	
  1027 ;;
  1028 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1029 ;;
  1030 ;; *************** function _main *****************
  1031 ;; Defined at:
  1032 ;;		line 68 in file "main.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;		None
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;		None
  1037 ;; Return value:  Size  Location     Type
  1038 ;;                  1    wreg      void 
  1039 ;; Registers used:
  1040 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1041 ;; Tracked objects:
  1042 ;;		On entry : B1F/0
  1043 ;;		On exit  : 0/0
  1044 ;;		Unchanged: 0/0
  1045 ;; Data sizes:     COMMON   BANK0   BANK1
  1046 ;;      Params:         0       0       0
  1047 ;;      Locals:         0       0       0
  1048 ;;      Temps:          0       2       0
  1049 ;;      Totals:         0       2       0
  1050 ;;Total ram usage:        2 bytes
  1051 ;; Hardware stack levels required when called:    7
  1052 ;; This function calls:
  1053 ;;		_SYSTEM_Initialize
  1054 ;;		_TMR1_SetInterruptHandler
  1055 ;;		_TMR1_StartTimer
  1056 ;;		_setState
  1057 ;; This function is called by:
  1058 ;;		Startup code after reset
  1059 ;; This function uses a non-reentrant model
  1060 ;;
  1061                           
  1062                           
  1063                           ;psect for function _main
  1064  0022                     _main:
  1065  0022                     l1026:	
  1066                           ;incstack = 0
  1067                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1068                           
  1069                           
  1070                           ;main.c: 71:     SYSTEM_Initialize();
  1071  0022  3181  2109  3180   	fcall	_SYSTEM_Initialize
  1072                           
  1073                           ;main.c: 76:     TMR1_SetInterruptHandler(secondsTick);
  1074  0025  30F8               	movlw	low _secondsTick
  1075  0026  00F7               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  1076  0027  3000               	movlw	high _secondsTick
  1077  0028  00F8               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  1078  0029  3181  2137  3180   	fcall	_TMR1_SetInterruptHandler
  1079  002C                     l1028:
  1080                           
  1081                           ;main.c: 79:     (INTCONbits.GIE = 1);
  1082  002C  178B               	bsf	11,7	;volatile
  1083  002D                     l1030:
  1084                           
  1085                           ;main.c: 90:     TMR1_StartTimer();
  1086  002D  3181  2141  3180   	fcall	_TMR1_StartTimer
  1087  0030                     l1032:
  1088                           
  1089                           ;main.c: 92:     setState( STATE_WAIT_TIME);
  1090  0030  3001               	movlw	1
  1091  0031  3180  2079  3180   	fcall	_setState
  1092  0034  2861               	goto	l1046
  1093  0035                     l160:	
  1094                           ;main.c: 98:         {;main.c: 99:             case STATE_WAIT_TIME:
  1095                           
  1096                           
  1097                           ;main.c: 101:                 if(PORTAbits.RA5 && (currentSecondsTick >= demandedSeconds
      +                          Tick))
  1098  0035  1E8C               	btfss	12,5	;volatile
  1099  0036  2838               	goto	u241
  1100  0037  2839               	goto	u240
  1101  0038                     u241:
  1102  0038  2861               	goto	l159
  1103  0039                     u240:
  1104  0039                     l1034:
  1105  0039  0871               	movf	_demandedSecondsTick+1,w
  1106  003A  0273               	subwf	_currentSecondsTick+1,w
  1107  003B  1D03               	skipz
  1108  003C  283F               	goto	u255
  1109  003D  0870               	movf	_demandedSecondsTick,w
  1110  003E  0272               	subwf	_currentSecondsTick,w
  1111  003F                     u255:
  1112  003F  1C03               	skipc
  1113  0040  2842               	goto	u251
  1114  0041  2843               	goto	u250
  1115  0042                     u251:
  1116  0042  2861               	goto	l159
  1117  0043                     u250:
  1118  0043                     l1036:
  1119                           
  1120                           ;main.c: 102:                 {;main.c: 103:                     setState(STATE_OPEN_VAL
      +                          VE);
  1121  0043  3002               	movlw	2
  1122  0044  3180  2079  3180   	fcall	_setState
  1123  0047  2861               	goto	l1046
  1124  0048                     l163:	
  1125                           ;main.c: 107:             case STATE_OPEN_VALVE:
  1126                           
  1127                           
  1128                           ;main.c: 108:                 if(PORTAbits.RA4)
  1129  0048  1E0C               	btfss	12,4	;volatile
  1130  0049  284B               	goto	u261
  1131  004A  284C               	goto	u260
  1132  004B                     u261:
  1133  004B  2861               	goto	l159
  1134  004C                     u260:
  1135  004C                     l1038:
  1136                           
  1137                           ;main.c: 109:                 {;main.c: 110:                     setState(STATE_CLOSE_VA
      +                          LVE);
  1138  004C  3003               	movlw	3
  1139  004D  3180  2079  3180   	fcall	_setState
  1140  0050  2861               	goto	l1046
  1141  0051                     l1040:
  1142                           
  1143                           ;main.c: 116:                 if(currentSecondsTick >= demandedSecondsTick)
  1144  0051  0871               	movf	_demandedSecondsTick+1,w
  1145  0052  0273               	subwf	_currentSecondsTick+1,w
  1146  0053  1D03               	skipz
  1147  0054  2857               	goto	u275
  1148  0055  0870               	movf	_demandedSecondsTick,w
  1149  0056  0272               	subwf	_currentSecondsTick,w
  1150  0057                     u275:
  1151  0057  1C03               	skipc
  1152  0058  285A               	goto	u271
  1153  0059  285B               	goto	u270
  1154  005A                     u271:
  1155  005A  2861               	goto	l159
  1156  005B                     u270:
  1157  005B                     l1042:
  1158                           
  1159                           ;main.c: 117:                 {;main.c: 118:                     setState(STATE_END);
  1160  005B  3004               	movlw	4
  1161  005C  3180  2079  3180   	fcall	_setState
  1162  005F  2861               	goto	l1046
  1163  0060                     l168:	
  1164                           ;main.c: 123:                 while(1);
  1165                           
  1166  0060  2860               	goto	l168
  1167  0061                     l159:
  1168  0061                     l1046:
  1169  0061  0874               	movf	_currentState,w
  1170  0062  0020               	movlb	0	; select bank0
  1171  0063  00A2               	movwf	??_main
  1172  0064  01A3               	clrf	??_main+1
  1173                           
  1174                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1175                           ; Switch size 1, requested type "simple"
  1176                           ; Number of cases is 1, Range of values is 0 to 0
  1177                           ; switch strategies available:
  1178                           ; Name         Instructions Cycles
  1179                           ; simple_byte            4     3 (average)
  1180                           ; direct_byte            8     6 (fixed)
  1181                           ; jumptable            260     6 (fixed)
  1182                           ;	Chosen strategy is simple_byte
  1183  0065  0823               	movf	??_main+1,w
  1184  0066  3A00               	xorlw	0	; case 0
  1185  0067  1903               	skipnz
  1186  0068  286A               	goto	l1104
  1187  0069  2861               	goto	l1046
  1188  006A                     l1104:
  1189                           
  1190                           ; Switch size 1, requested type "simple"
  1191                           ; Number of cases is 4, Range of values is 1 to 4
  1192                           ; switch strategies available:
  1193                           ; Name         Instructions Cycles
  1194                           ; simple_byte           13     7 (average)
  1195                           ; direct_byte           17     9 (fixed)
  1196                           ; jumptable            263     9 (fixed)
  1197                           ;	Chosen strategy is simple_byte
  1198  006A  0822               	movf	??_main,w
  1199  006B  3A01               	xorlw	1	; case 1
  1200  006C  1903               	skipnz
  1201  006D  2835               	goto	l160
  1202  006E  3A03               	xorlw	3	; case 2
  1203  006F  1903               	skipnz
  1204  0070  2848               	goto	l163
  1205  0071  3A01               	xorlw	1	; case 3
  1206  0072  1903               	skipnz
  1207  0073  2851               	goto	l1040
  1208  0074  3A07               	xorlw	7	; case 4
  1209  0075  1903               	skipnz
  1210  0076  2860               	goto	l168
  1211  0077  2861               	goto	l1046
  1212  0078  2819               	ljmp	start
  1213  0079                     __end_of_main:
  1214                           
  1215                           	psect	text1
  1216  0079                     __ptext1:	
  1217 ;; *************** function _setState *****************
  1218 ;; Defined at:
  1219 ;;		line 134 in file "main.c"
  1220 ;; Parameters:    Size  Location     Type
  1221 ;;  newState        1    wreg     enum E2961
  1222 ;; Auto vars:     Size  Location     Type
  1223 ;;  newState        1    4[COMMON] enum E2961
  1224 ;; Return value:  Size  Location     Type
  1225 ;;                  1    wreg      void 
  1226 ;; Registers used:
  1227 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1228 ;; Tracked objects:
  1229 ;;		On entry : 0/0
  1230 ;;		On exit  : 0/0
  1231 ;;		Unchanged: 0/0
  1232 ;; Data sizes:     COMMON   BANK0   BANK1
  1233 ;;      Params:         0       0       0
  1234 ;;      Locals:         1       0       0
  1235 ;;      Temps:          2       0       0
  1236 ;;      Totals:         3       0       0
  1237 ;;Total ram usage:        3 bytes
  1238 ;; Hardware stack levels used:    1
  1239 ;; Hardware stack levels required when called:    4
  1240 ;; This function calls:
  1241 ;;		Nothing
  1242 ;; This function is called by:
  1243 ;;		_main
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247                           
  1248                           ;psect for function _setState
  1249  0079                     _setState:
  1250                           
  1251                           ;incstack = 0
  1252                           ; Regs used in _setState: [wreg-fsr0h+status,2+status,0]
  1253                           ;setState@newState stored from wreg
  1254  0079  00F9               	movwf	setState@newState
  1255  007A                     l798:
  1256                           
  1257                           ;main.c: 134: void setState(states_t newState);main.c: 135: {;main.c: 136:     if(newSta
      +                          te == currentState)
  1258  007A  0879               	movf	setState@newState,w
  1259  007B  0674               	xorwf	_currentState,w
  1260  007C  1D03               	skipz
  1261  007D  287F               	goto	u51
  1262  007E  2880               	goto	u50
  1263  007F                     u51:
  1264  007F  289D               	goto	l808
  1265  0080                     u50:
  1266  0080  28B7               	goto	l177
  1267  0081                     l180:	
  1268                           ;main.c: 143:             do { LATAbits.LATA1 = 0; } while(0);
  1269                           
  1270  0081  0022               	movlb	2	; select bank2
  1271  0082  108C               	bcf	12,1	;volatile
  1272  0083                     l182:	
  1273                           ;main.c: 144:             do { LATAbits.LATA2 = 0; } while(0);
  1274                           
  1275  0083  110C               	bcf	12,2	;volatile
  1276  0084                     l802:
  1277                           
  1278                           ;main.c: 145:             demandedSecondsTick = currentSecondsTick + 1;
  1279  0084  0872               	movf	_currentSecondsTick,w
  1280  0085  3E01               	addlw	1
  1281  0086  00F0               	movwf	_demandedSecondsTick
  1282  0087  3000               	movlw	0
  1283  0088  3D73               	addwfc	_currentSecondsTick+1,w
  1284  0089  00F1               	movwf	_demandedSecondsTick+1
  1285                           
  1286                           ;main.c: 146:             break;
  1287  008A  28B3               	goto	l810
  1288  008B                     l186:	
  1289                           ;main.c: 149:             do { LATAbits.LATA1 = 1; } while(0);
  1290                           
  1291  008B  0022               	movlb	2	; select bank2
  1292  008C  148C               	bsf	12,1	;volatile
  1293  008D                     l188:	
  1294                           ;main.c: 150:             do { LATAbits.LATA2 = 0; } while(0);
  1295                           
  1296  008D  110C               	bcf	12,2	;volatile
  1297  008E  28B3               	goto	l810
  1298  008F                     l191:	
  1299                           ;main.c: 154:             do { LATAbits.LATA1 = 0; } while(0);
  1300                           
  1301  008F  0022               	movlb	2	; select bank2
  1302  0090  108C               	bcf	12,1	;volatile
  1303  0091                     l193:	
  1304                           ;main.c: 155:             do { LATAbits.LATA2 = 1; } while(0);
  1305                           
  1306  0091  150C               	bsf	12,2	;volatile
  1307  0092                     l804:
  1308                           
  1309                           ;main.c: 156:             demandedSecondsTick = currentSecondsTick + 30;
  1310  0092  0872               	movf	_currentSecondsTick,w
  1311  0093  3E1E               	addlw	30
  1312  0094  00F0               	movwf	_demandedSecondsTick
  1313  0095  3000               	movlw	0
  1314  0096  3D73               	addwfc	_currentSecondsTick+1,w
  1315  0097  00F1               	movwf	_demandedSecondsTick+1
  1316                           
  1317                           ;main.c: 157:             break;
  1318  0098  28B3               	goto	l810
  1319  0099                     l196:	
  1320                           ;main.c: 160:             do { LATAbits.LATA1 = 0; } while(0);
  1321                           
  1322  0099  0022               	movlb	2	; select bank2
  1323  009A  108C               	bcf	12,1	;volatile
  1324  009B                     l198:	
  1325                           ;main.c: 161:             do { LATAbits.LATA2 = 0; } while(0);
  1326                           
  1327  009B  110C               	bcf	12,2	;volatile
  1328  009C  28B3               	goto	l810
  1329  009D                     l808:
  1330  009D  0879               	movf	setState@newState,w
  1331  009E  00F7               	movwf	??_setState
  1332  009F  01F8               	clrf	??_setState+1
  1333                           
  1334                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1335                           ; Switch size 1, requested type "simple"
  1336                           ; Number of cases is 1, Range of values is 0 to 0
  1337                           ; switch strategies available:
  1338                           ; Name         Instructions Cycles
  1339                           ; simple_byte            4     3 (average)
  1340                           ; direct_byte            8     6 (fixed)
  1341                           ; jumptable            260     6 (fixed)
  1342                           ;	Chosen strategy is simple_byte
  1343  00A0  0878               	movf	??_setState+1,w
  1344  00A1  3A00               	xorlw	0	; case 0
  1345  00A2  1903               	skipnz
  1346  00A3  28A5               	goto	l1106
  1347  00A4  28B3               	goto	l810
  1348  00A5                     l1106:
  1349                           
  1350                           ; Switch size 1, requested type "simple"
  1351                           ; Number of cases is 4, Range of values is 1 to 4
  1352                           ; switch strategies available:
  1353                           ; Name         Instructions Cycles
  1354                           ; simple_byte           13     7 (average)
  1355                           ; direct_byte           17     9 (fixed)
  1356                           ; jumptable            263     9 (fixed)
  1357                           ;	Chosen strategy is simple_byte
  1358  00A5  0877               	movf	??_setState,w
  1359  00A6  3A01               	xorlw	1	; case 1
  1360  00A7  1903               	skipnz
  1361  00A8  2881               	goto	l180
  1362  00A9  3A03               	xorlw	3	; case 2
  1363  00AA  1903               	skipnz
  1364  00AB  288B               	goto	l186
  1365  00AC  3A01               	xorlw	1	; case 3
  1366  00AD  1903               	skipnz
  1367  00AE  288F               	goto	l191
  1368  00AF  3A07               	xorlw	7	; case 4
  1369  00B0  1903               	skipnz
  1370  00B1  2899               	goto	l196
  1371  00B2  28B3               	goto	l810
  1372  00B3                     l810:
  1373                           
  1374                           ;main.c: 165:     currentState = newState;
  1375  00B3  0879               	movf	setState@newState,w
  1376  00B4  00F7               	movwf	??_setState
  1377  00B5  0877               	movf	??_setState,w
  1378  00B6  00F4               	movwf	_currentState
  1379  00B7                     l177:
  1380  00B7  0008               	return
  1381  00B8                     __end_of_setState:
  1382                           
  1383                           	psect	text2
  1384  0141                     __ptext2:	
  1385 ;; *************** function _TMR1_StartTimer *****************
  1386 ;; Defined at:
  1387 ;;		line 93 in file "mcc_generated_files/tmr1.c"
  1388 ;; Parameters:    Size  Location     Type
  1389 ;;		None
  1390 ;; Auto vars:     Size  Location     Type
  1391 ;;		None
  1392 ;; Return value:  Size  Location     Type
  1393 ;;                  1    wreg      void 
  1394 ;; Registers used:
  1395 ;;		None
  1396 ;; Tracked objects:
  1397 ;;		On entry : 0/0
  1398 ;;		On exit  : 0/0
  1399 ;;		Unchanged: 0/0
  1400 ;; Data sizes:     COMMON   BANK0   BANK1
  1401 ;;      Params:         0       0       0
  1402 ;;      Locals:         0       0       0
  1403 ;;      Temps:          0       0       0
  1404 ;;      Totals:         0       0       0
  1405 ;;Total ram usage:        0 bytes
  1406 ;; Hardware stack levels used:    1
  1407 ;; Hardware stack levels required when called:    4
  1408 ;; This function calls:
  1409 ;;		Nothing
  1410 ;; This function is called by:
  1411 ;;		_main
  1412 ;; This function uses a non-reentrant model
  1413 ;;
  1414                           
  1415                           
  1416                           ;psect for function _TMR1_StartTimer
  1417  0141                     _TMR1_StartTimer:
  1418  0141                     l792:	
  1419                           ;incstack = 0
  1420                           ; Regs used in _TMR1_StartTimer: []
  1421                           
  1422                           
  1423                           ;mcc_generated_files/tmr1.c: 96:     T1CONbits.TMR1ON = 1;
  1424  0141  0020               	movlb	0	; select bank0
  1425  0142  1418               	bsf	24,0	;volatile
  1426  0143                     l81:
  1427  0143  0008               	return
  1428  0144                     __end_of_TMR1_StartTimer:
  1429                           
  1430                           	psect	text3
  1431  0109                     __ptext3:	
  1432 ;; *************** function _SYSTEM_Initialize *****************
  1433 ;; Defined at:
  1434 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1435 ;; Parameters:    Size  Location     Type
  1436 ;;		None
  1437 ;; Auto vars:     Size  Location     Type
  1438 ;;		None
  1439 ;; Return value:  Size  Location     Type
  1440 ;;                  1    wreg      void 
  1441 ;; Registers used:
  1442 ;;		wreg, status,2, status,0, pclath, cstack
  1443 ;; Tracked objects:
  1444 ;;		On entry : 0/0
  1445 ;;		On exit  : 0/0
  1446 ;;		Unchanged: 0/0
  1447 ;; Data sizes:     COMMON   BANK0   BANK1
  1448 ;;      Params:         0       0       0
  1449 ;;      Locals:         0       0       0
  1450 ;;      Temps:          0       0       0
  1451 ;;      Totals:         0       0       0
  1452 ;;Total ram usage:        0 bytes
  1453 ;; Hardware stack levels used:    1
  1454 ;; Hardware stack levels required when called:    6
  1455 ;; This function calls:
  1456 ;;		_OSCILLATOR_Initialize
  1457 ;;		_PIN_MANAGER_Initialize
  1458 ;;		_TMR1_Initialize
  1459 ;;		_WDT_Initialize
  1460 ;; This function is called by:
  1461 ;;		_main
  1462 ;; This function uses a non-reentrant model
  1463 ;;
  1464                           
  1465                           
  1466                           ;psect for function _SYSTEM_Initialize
  1467  0109                     _SYSTEM_Initialize:
  1468  0109                     l944:	
  1469                           ;incstack = 0
  1470                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1471                           
  1472                           
  1473                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1474  0109  3180  20D0  3181   	fcall	_PIN_MANAGER_Initialize
  1475                           
  1476                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1477  010C  3181  2130  3181   	fcall	_OSCILLATOR_Initialize
  1478                           
  1479                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  1480  010F  3181  213D  3181   	fcall	_WDT_Initialize
  1481                           
  1482                           ;mcc_generated_files/mcc.c: 56:     TMR1_Initialize();
  1483  0112  3180  20B8  3181   	fcall	_TMR1_Initialize
  1484  0115                     l19:
  1485  0115  0008               	return
  1486  0116                     __end_of_SYSTEM_Initialize:
  1487                           
  1488                           	psect	text4
  1489  013D                     __ptext4:	
  1490 ;; *************** function _WDT_Initialize *****************
  1491 ;; Defined at:
  1492 ;;		line 69 in file "mcc_generated_files/mcc.c"
  1493 ;; Parameters:    Size  Location     Type
  1494 ;;		None
  1495 ;; Auto vars:     Size  Location     Type
  1496 ;;		None
  1497 ;; Return value:  Size  Location     Type
  1498 ;;                  1    wreg      void 
  1499 ;; Registers used:
  1500 ;;		wreg
  1501 ;; Tracked objects:
  1502 ;;		On entry : 0/0
  1503 ;;		On exit  : 0/0
  1504 ;;		Unchanged: 0/0
  1505 ;; Data sizes:     COMMON   BANK0   BANK1
  1506 ;;      Params:         0       0       0
  1507 ;;      Locals:         0       0       0
  1508 ;;      Temps:          0       0       0
  1509 ;;      Totals:         0       0       0
  1510 ;;Total ram usage:        0 bytes
  1511 ;; Hardware stack levels used:    1
  1512 ;; Hardware stack levels required when called:    4
  1513 ;; This function calls:
  1514 ;;		Nothing
  1515 ;; This function is called by:
  1516 ;;		_SYSTEM_Initialize
  1517 ;; This function uses a non-reentrant model
  1518 ;;
  1519                           
  1520                           
  1521                           ;psect for function _WDT_Initialize
  1522  013D                     _WDT_Initialize:
  1523  013D                     l754:	
  1524                           ;incstack = 0
  1525                           ; Regs used in _WDT_Initialize: [wreg]
  1526                           
  1527                           
  1528                           ;mcc_generated_files/mcc.c: 72:     WDTCON = 0x16;
  1529  013D  3016               	movlw	22
  1530  013E  0021               	movlb	1	; select bank1
  1531  013F  0097               	movwf	23	;volatile
  1532  0140                     l25:
  1533  0140  0008               	return
  1534  0141                     __end_of_WDT_Initialize:
  1535                           
  1536                           	psect	text5
  1537  00B8                     __ptext5:	
  1538 ;; *************** function _TMR1_Initialize *****************
  1539 ;; Defined at:
  1540 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;		None
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;		None
  1545 ;; Return value:  Size  Location     Type
  1546 ;;                  1    wreg      void 
  1547 ;; Registers used:
  1548 ;;		wreg, status,2, status,0, pclath, cstack
  1549 ;; Tracked objects:
  1550 ;;		On entry : 0/0
  1551 ;;		On exit  : 0/0
  1552 ;;		Unchanged: 0/0
  1553 ;; Data sizes:     COMMON   BANK0   BANK1
  1554 ;;      Params:         0       0       0
  1555 ;;      Locals:         0       0       0
  1556 ;;      Temps:          0       0       0
  1557 ;;      Totals:         0       0       0
  1558 ;;Total ram usage:        0 bytes
  1559 ;; Hardware stack levels used:    1
  1560 ;; Hardware stack levels required when called:    5
  1561 ;; This function calls:
  1562 ;;		_TMR1_SetInterruptHandler
  1563 ;; This function is called by:
  1564 ;;		_SYSTEM_Initialize
  1565 ;; This function uses a non-reentrant model
  1566 ;;
  1567                           
  1568                           
  1569                           ;psect for function _TMR1_Initialize
  1570  00B8                     _TMR1_Initialize:
  1571  00B8                     l910:	
  1572                           ;incstack = 0
  1573                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1574                           
  1575                           
  1576                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  1577  00B8  0020               	movlb	0	; select bank0
  1578  00B9  0199               	clrf	25	;volatile
  1579  00BA                     l912:
  1580                           
  1581                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x86;
  1582  00BA  3086               	movlw	134
  1583  00BB  0097               	movwf	23	;volatile
  1584  00BC                     l914:
  1585                           
  1586                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xE8;
  1587  00BC  30E8               	movlw	232
  1588  00BD  0096               	movwf	22	;volatile
  1589  00BE                     l916:
  1590                           
  1591                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  1592  00BE  1011               	bcf	17,0	;volatile
  1593  00BF                     l918:
  1594                           
  1595                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  1596  00BF  0817               	movf	23,w	;volatile
  1597  00C0  00FB               	movwf	_timer1ReloadVal+1	;volatile
  1598  00C1  0816               	movf	22,w	;volatile
  1599  00C2  00FA               	movwf	_timer1ReloadVal	;volatile
  1600  00C3                     l920:
  1601                           
  1602                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  1603  00C3  0021               	movlb	1	; select bank1
  1604  00C4  1411               	bsf	17,0	;volatile
  1605  00C5                     l922:
  1606                           
  1607                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  1608  00C5  3044               	movlw	low _TMR1_DefaultInterruptHandler
  1609  00C6  00F7               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  1610  00C7  3001               	movlw	high _TMR1_DefaultInterruptHandler
  1611  00C8  00F8               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  1612  00C9  3181  2137  3180   	fcall	_TMR1_SetInterruptHandler
  1613  00CC                     l924:
  1614                           
  1615                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0xC1;
  1616  00CC  30C1               	movlw	193
  1617  00CD  0020               	movlb	0	; select bank0
  1618  00CE  0098               	movwf	24	;volatile
  1619  00CF                     l78:
  1620  00CF  0008               	return
  1621  00D0                     __end_of_TMR1_Initialize:
  1622                           
  1623                           	psect	text6
  1624  0137                     __ptext6:	
  1625 ;; *************** function _TMR1_SetInterruptHandler *****************
  1626 ;; Defined at:
  1627 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  1630 ;;		 -> secondsTick(1), TMR1_DefaultInterruptHandler(1), 
  1631 ;; Auto vars:     Size  Location     Type
  1632 ;;		None
  1633 ;; Return value:  Size  Location     Type
  1634 ;;                  1    wreg      void 
  1635 ;; Registers used:
  1636 ;;		wreg
  1637 ;; Tracked objects:
  1638 ;;		On entry : 0/0
  1639 ;;		On exit  : 0/0
  1640 ;;		Unchanged: 0/0
  1641 ;; Data sizes:     COMMON   BANK0   BANK1
  1642 ;;      Params:         2       0       0
  1643 ;;      Locals:         0       0       0
  1644 ;;      Temps:          0       0       0
  1645 ;;      Totals:         2       0       0
  1646 ;;Total ram usage:        2 bytes
  1647 ;; Hardware stack levels used:    1
  1648 ;; Hardware stack levels required when called:    4
  1649 ;; This function calls:
  1650 ;;		Nothing
  1651 ;; This function is called by:
  1652 ;;		_TMR1_Initialize
  1653 ;;		_main
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           
  1657                           
  1658                           ;psect for function _TMR1_SetInterruptHandler
  1659  0137                     _TMR1_SetInterruptHandler:
  1660  0137                     l904:	
  1661                           ;incstack = 0
  1662                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  1663                           
  1664                           
  1665                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  1666  0137  0878               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  1667  0138  0020               	movlb	0	; select bank0
  1668  0139  00A1               	movwf	_TMR1_InterruptHandler+1
  1669  013A  0877               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  1670  013B  00A0               	movwf	_TMR1_InterruptHandler
  1671  013C                     l111:
  1672  013C  0008               	return
  1673  013D                     __end_of_TMR1_SetInterruptHandler:
  1674                           
  1675                           	psect	text7
  1676  00D0                     __ptext7:	
  1677 ;; *************** function _PIN_MANAGER_Initialize *****************
  1678 ;; Defined at:
  1679 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;		None
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;		None
  1684 ;; Return value:  Size  Location     Type
  1685 ;;                  1    wreg      void 
  1686 ;; Registers used:
  1687 ;;		wreg, status,2
  1688 ;; Tracked objects:
  1689 ;;		On entry : 0/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMMON   BANK0   BANK1
  1693 ;;      Params:         0       0       0
  1694 ;;      Locals:         0       0       0
  1695 ;;      Temps:          0       0       0
  1696 ;;      Totals:         0       0       0
  1697 ;;Total ram usage:        0 bytes
  1698 ;; Hardware stack levels used:    1
  1699 ;; Hardware stack levels required when called:    4
  1700 ;; This function calls:
  1701 ;;		Nothing
  1702 ;; This function is called by:
  1703 ;;		_SYSTEM_Initialize
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           
  1707                           
  1708                           ;psect for function _PIN_MANAGER_Initialize
  1709  00D0                     _PIN_MANAGER_Initialize:
  1710  00D0                     l736:	
  1711                           ;incstack = 0
  1712                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1713                           
  1714                           
  1715                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1716  00D0  0022               	movlb	2	; select bank2
  1717  00D1  018C               	clrf	12	;volatile
  1718  00D2                     l738:
  1719                           
  1720                           ;mcc_generated_files/pin_manager.c: 65:     TRISA = 0x39;
  1721  00D2  3039               	movlw	57
  1722  00D3  0021               	movlb	1	; select bank1
  1723  00D4  008C               	movwf	12	;volatile
  1724  00D5                     l740:
  1725                           
  1726                           ;mcc_generated_files/pin_manager.c: 70:     ANSELA = 0x07;
  1727  00D5  3007               	movlw	7
  1728  00D6  0023               	movlb	3	; select bank3
  1729  00D7  008C               	movwf	12	;volatile
  1730                           
  1731                           ;mcc_generated_files/pin_manager.c: 75:     WPUA = 0x00;
  1732  00D8  0024               	movlb	4	; select bank4
  1733  00D9  018C               	clrf	12	;volatile
  1734  00DA                     l742:
  1735                           
  1736                           ;mcc_generated_files/pin_manager.c: 76:     OPTION_REGbits.nWPUEN = 1;
  1737  00DA  0021               	movlb	1	; select bank1
  1738  00DB  1795               	bsf	21,7	;volatile
  1739                           
  1740                           ;mcc_generated_files/pin_manager.c: 81:     ODCONA = 0x00;
  1741  00DC  0025               	movlb	5	; select bank5
  1742  00DD  018C               	clrf	12	;volatile
  1743  00DE                     l744:
  1744                           
  1745                           ;mcc_generated_files/pin_manager.c: 86:     SLRCONA = 0x37;
  1746  00DE  3037               	movlw	55
  1747  00DF  0026               	movlb	6	; select bank6
  1748  00E0  008C               	movwf	12	;volatile
  1749  00E1                     l746:
  1750                           
  1751                           ;mcc_generated_files/pin_manager.c: 91:     INLVLA = 0x3F;
  1752  00E1  303F               	movlw	63
  1753  00E2  0027               	movlb	7	; select bank7
  1754  00E3  008C               	movwf	12	;volatile
  1755                           
  1756                           ;mcc_generated_files/pin_manager.c: 96:     APFCON = 0x00;
  1757  00E4  0022               	movlb	2	; select bank2
  1758  00E5  019D               	clrf	29	;volatile
  1759  00E6                     l46:
  1760  00E6  0008               	return
  1761  00E7                     __end_of_PIN_MANAGER_Initialize:
  1762                           
  1763                           	psect	text8
  1764  0130                     __ptext8:	
  1765 ;; *************** function _OSCILLATOR_Initialize *****************
  1766 ;; Defined at:
  1767 ;;		line 59 in file "mcc_generated_files/mcc.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;		None
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;		None
  1772 ;; Return value:  Size  Location     Type
  1773 ;;                  1    wreg      void 
  1774 ;; Registers used:
  1775 ;;		wreg, status,2
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMMON   BANK0   BANK1
  1781 ;;      Params:         0       0       0
  1782 ;;      Locals:         0       0       0
  1783 ;;      Temps:          0       0       0
  1784 ;;      Totals:         0       0       0
  1785 ;;Total ram usage:        0 bytes
  1786 ;; Hardware stack levels used:    1
  1787 ;; Hardware stack levels required when called:    4
  1788 ;; This function calls:
  1789 ;;		Nothing
  1790 ;; This function is called by:
  1791 ;;		_SYSTEM_Initialize
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           
  1796                           ;psect for function _OSCILLATOR_Initialize
  1797  0130                     _OSCILLATOR_Initialize:
  1798  0130                     l748:	
  1799                           ;incstack = 0
  1800                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1801                           
  1802                           
  1803                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x02;
  1804  0130  3002               	movlw	2
  1805  0131  0021               	movlb	1	; select bank1
  1806  0132  0099               	movwf	25	;volatile
  1807  0133                     l750:
  1808                           
  1809                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
  1810  0133  0198               	clrf	24	;volatile
  1811  0134                     l752:
  1812                           
  1813                           ;mcc_generated_files/mcc.c: 66:     BORCON = 0x00;
  1814  0134  0022               	movlb	2	; select bank2
  1815  0135  0196               	clrf	22	;volatile
  1816  0136                     l22:
  1817  0136  0008               	return
  1818  0137                     __end_of_OSCILLATOR_Initialize:
  1819                           
  1820                           	psect	intentry
  1821  0004                     __pintentry:	
  1822 ;; *************** function _INTERRUPT_InterruptManager *****************
  1823 ;; Defined at:
  1824 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1825 ;; Parameters:    Size  Location     Type
  1826 ;;		None
  1827 ;; Auto vars:     Size  Location     Type
  1828 ;;		None
  1829 ;; Return value:  Size  Location     Type
  1830 ;;                  1    wreg      void 
  1831 ;; Registers used:
  1832 ;;		wreg, status,2, status,0, pclath, cstack
  1833 ;; Tracked objects:
  1834 ;;		On entry : 0/0
  1835 ;;		On exit  : 0/0
  1836 ;;		Unchanged: 0/0
  1837 ;; Data sizes:     COMMON   BANK0   BANK1
  1838 ;;      Params:         0       0       0
  1839 ;;      Locals:         0       0       0
  1840 ;;      Temps:          0       0       0
  1841 ;;      Totals:         0       0       0
  1842 ;;Total ram usage:        0 bytes
  1843 ;; Hardware stack levels used:    1
  1844 ;; Hardware stack levels required when called:    3
  1845 ;; This function calls:
  1846 ;;		_TMR1_ISR
  1847 ;; This function is called by:
  1848 ;;		Interrupt level 1
  1849 ;; This function uses a non-reentrant model
  1850 ;;
  1851                           
  1852  0004                     _INTERRUPT_InterruptManager:
  1853                           
  1854                           ;incstack = 0
  1855  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1856                           
  1857                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  1858  0005  3180               	pagesel	$
  1859  0006                     i1l952:
  1860                           
  1861                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  1862  0006  1F0B               	btfss	11,6	;volatile
  1863  0007  2809               	goto	u17_21
  1864  0008  280A               	goto	u17_20
  1865  0009                     u17_21:
  1866  0009  2817               	goto	i1l131
  1867  000A                     u17_20:
  1868  000A                     i1l954:
  1869                           
  1870                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  1871  000A  0021               	movlb	1	; select bank1
  1872  000B  1C11               	btfss	17,0	;volatile
  1873  000C  280E               	goto	u18_21
  1874  000D  280F               	goto	u18_20
  1875  000E                     u18_21:
  1876  000E  2817               	goto	i1l131
  1877  000F                     u18_20:
  1878  000F                     i1l956:
  1879  000F  0020               	movlb	0	; select bank0
  1880  0010  1C11               	btfss	17,0	;volatile
  1881  0011  2813               	goto	u19_21
  1882  0012  2814               	goto	u19_20
  1883  0013                     u19_21:
  1884  0013  2817               	goto	i1l131
  1885  0014                     u19_20:
  1886  0014                     i1l958:
  1887                           
  1888                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR1_ISR();
  1889  0014  3181  2116  3180   	fcall	_TMR1_ISR
  1890  0017                     i1l131:	
  1891                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  1892                           
  1893  0017  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1894  0018  0009               	retfie
  1895  0019                     __end_of_INTERRUPT_InterruptManager:
  1896                           
  1897                           	psect	text10
  1898  0116                     __ptext10:	
  1899 ;; *************** function _TMR1_ISR *****************
  1900 ;; Defined at:
  1901 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  1902 ;; Parameters:    Size  Location     Type
  1903 ;;		None
  1904 ;; Auto vars:     Size  Location     Type
  1905 ;;		None
  1906 ;; Return value:  Size  Location     Type
  1907 ;;                  1    wreg      void 
  1908 ;; Registers used:
  1909 ;;		wreg, status,2, status,0, pclath, cstack
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMMON   BANK0   BANK1
  1915 ;;      Params:         0       0       0
  1916 ;;      Locals:         0       0       0
  1917 ;;      Temps:          0       0       0
  1918 ;;      Totals:         0       0       0
  1919 ;;Total ram usage:        0 bytes
  1920 ;; Hardware stack levels used:    1
  1921 ;; Hardware stack levels required when called:    2
  1922 ;; This function calls:
  1923 ;;		_TMR1_CallBack
  1924 ;;		_TMR1_WriteTimer
  1925 ;; This function is called by:
  1926 ;;		_INTERRUPT_InterruptManager
  1927 ;; This function uses a non-reentrant model
  1928 ;;
  1929                           
  1930                           
  1931                           ;psect for function _TMR1_ISR
  1932  0116                     _TMR1_ISR:
  1933  0116                     i1l946:	
  1934                           ;incstack = 0
  1935                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  1936                           
  1937                           
  1938                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  1939  0116  0020               	movlb	0	; select bank0
  1940  0117  1011               	bcf	17,0	;volatile
  1941  0118                     i1l948:
  1942                           
  1943                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  1944  0118  087B               	movf	_timer1ReloadVal+1,w	;volatile
  1945  0119  00F6               	movwf	TMR1_WriteTimer@timerVal+1
  1946  011A  087A               	movf	_timer1ReloadVal,w	;volatile
  1947  011B  00F5               	movwf	TMR1_WriteTimer@timerVal
  1948  011C  3180  20E7  3181   	fcall	_TMR1_WriteTimer
  1949                           
  1950                           ;mcc_generated_files/tmr1.c: 166:     TMR1_CallBack();
  1951  011F  3181  2123  3181   	fcall	_TMR1_CallBack
  1952  0122                     i1l104:
  1953  0122  0008               	return
  1954  0123                     __end_of_TMR1_ISR:
  1955                           
  1956                           	psect	text11
  1957  00E7                     __ptext11:	
  1958 ;; *************** function _TMR1_WriteTimer *****************
  1959 ;; Defined at:
  1960 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;  timerVal        2    0[COMMON] unsigned short 
  1963 ;; Auto vars:     Size  Location     Type
  1964 ;;		None
  1965 ;; Return value:  Size  Location     Type
  1966 ;;                  1    wreg      void 
  1967 ;; Registers used:
  1968 ;;		wreg, status,2
  1969 ;; Tracked objects:
  1970 ;;		On entry : 0/0
  1971 ;;		On exit  : 0/0
  1972 ;;		Unchanged: 0/0
  1973 ;; Data sizes:     COMMON   BANK0   BANK1
  1974 ;;      Params:         2       0       0
  1975 ;;      Locals:         0       0       0
  1976 ;;      Temps:          0       0       0
  1977 ;;      Totals:         2       0       0
  1978 ;;Total ram usage:        2 bytes
  1979 ;; Hardware stack levels used:    1
  1980 ;; This function calls:
  1981 ;;		Nothing
  1982 ;; This function is called by:
  1983 ;;		_TMR1_ISR
  1984 ;;		_TMR1_Reload
  1985 ;; This function uses a non-reentrant model
  1986 ;;
  1987                           
  1988                           
  1989                           ;psect for function _TMR1_WriteTimer
  1990  00E7                     _TMR1_WriteTimer:
  1991  00E7                     i1l926:	
  1992                           ;incstack = 0
  1993                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  1994                           
  1995                           
  1996                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  1997  00E7  0020               	movlb	0	; select bank0
  1998  00E8  1D18               	btfss	24,2	;volatile
  1999  00E9  28EB               	goto	u15_21
  2000  00EA  28EC               	goto	u15_20
  2001  00EB                     u15_21:
  2002  00EB  28F3               	goto	i1l936
  2003  00EC                     u15_20:
  2004  00EC                     i1l928:
  2005                           
  2006                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  2007  00EC  1018               	bcf	24,0	;volatile
  2008  00ED                     i1l930:
  2009                           
  2010                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (timerVal >> 8);
  2011  00ED  0876               	movf	TMR1_WriteTimer@timerVal+1,w
  2012  00EE  0097               	movwf	23	;volatile
  2013  00EF                     i1l932:
  2014                           
  2015                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = timerVal;
  2016  00EF  0875               	movf	TMR1_WriteTimer@timerVal,w
  2017  00F0  0096               	movwf	22	;volatile
  2018  00F1                     i1l934:
  2019                           
  2020                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  2021  00F1  1418               	bsf	24,0	;volatile
  2022                           
  2023                           ;mcc_generated_files/tmr1.c: 133:     }
  2024  00F2  28F7               	goto	i1l92
  2025  00F3                     i1l936:
  2026                           
  2027                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (timerVal >> 8);
  2028  00F3  0876               	movf	TMR1_WriteTimer@timerVal+1,w
  2029  00F4  0097               	movwf	23	;volatile
  2030  00F5                     i1l938:
  2031                           
  2032                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = timerVal;
  2033  00F5  0875               	movf	TMR1_WriteTimer@timerVal,w
  2034  00F6  0096               	movwf	22	;volatile
  2035  00F7                     i1l92:
  2036  00F7  0008               	return
  2037  00F8                     __end_of_TMR1_WriteTimer:
  2038                           
  2039                           	psect	text12
  2040  0123                     __ptext12:	
  2041 ;; *************** function _TMR1_CallBack *****************
  2042 ;; Defined at:
  2043 ;;		line 169 in file "mcc_generated_files/tmr1.c"
  2044 ;; Parameters:    Size  Location     Type
  2045 ;;		None
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;		None
  2048 ;; Return value:  Size  Location     Type
  2049 ;;                  1    wreg      void 
  2050 ;; Registers used:
  2051 ;;		wreg, status,2, status,0, pclath, cstack
  2052 ;; Tracked objects:
  2053 ;;		On entry : 0/0
  2054 ;;		On exit  : 0/0
  2055 ;;		Unchanged: 0/0
  2056 ;; Data sizes:     COMMON   BANK0   BANK1
  2057 ;;      Params:         0       0       0
  2058 ;;      Locals:         0       0       0
  2059 ;;      Temps:          0       0       0
  2060 ;;      Totals:         0       0       0
  2061 ;;Total ram usage:        0 bytes
  2062 ;; Hardware stack levels used:    1
  2063 ;; Hardware stack levels required when called:    1
  2064 ;; This function calls:
  2065 ;;		Absolute function
  2066 ;;		_TMR1_DefaultInterruptHandler
  2067 ;;		_secondsTick
  2068 ;; This function is called by:
  2069 ;;		_TMR1_ISR
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073                           
  2074                           ;psect for function _TMR1_CallBack
  2075  0123                     _TMR1_CallBack:
  2076  0123                     i1l940:	
  2077                           ;incstack = 0
  2078                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
  2079                           
  2080                           
  2081                           ;mcc_generated_files/tmr1.c: 172:     if(TMR1_InterruptHandler)
  2082  0123  0020               	movlb	0	; select bank0
  2083  0124  0820               	movf	_TMR1_InterruptHandler,w
  2084  0125  0421               	iorwf	_TMR1_InterruptHandler+1,w
  2085  0126  1903               	btfsc	3,2
  2086  0127  2929               	goto	u16_21
  2087  0128  292A               	goto	u16_20
  2088  0129                     u16_21:
  2089  0129  292F               	goto	i1l108
  2090  012A                     u16_20:
  2091  012A                     i1l942:
  2092                           
  2093                           ;mcc_generated_files/tmr1.c: 173:     {;mcc_generated_files/tmr1.c: 174:         TMR1_In
      +                          terruptHandler();
  2094  012A  0821               	movf	_TMR1_InterruptHandler+1,w
  2095  012B  008A               	movwf	10
  2096  012C  0820               	movf	_TMR1_InterruptHandler,w
  2097  012D  000A               	callw
  2098  012E  3181               	pagesel	$
  2099  012F                     i1l108:
  2100  012F  0008               	return
  2101  0130                     __end_of_TMR1_CallBack:
  2102                           
  2103                           	psect	text13
  2104  0144                     __ptext13:	
  2105 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  2106 ;; Defined at:
  2107 ;;		line 182 in file "mcc_generated_files/tmr1.c"
  2108 ;; Parameters:    Size  Location     Type
  2109 ;;		None
  2110 ;; Auto vars:     Size  Location     Type
  2111 ;;		None
  2112 ;; Return value:  Size  Location     Type
  2113 ;;                  1    wreg      void 
  2114 ;; Registers used:
  2115 ;;		None
  2116 ;; Tracked objects:
  2117 ;;		On entry : 0/0
  2118 ;;		On exit  : 0/0
  2119 ;;		Unchanged: 0/0
  2120 ;; Data sizes:     COMMON   BANK0   BANK1
  2121 ;;      Params:         0       0       0
  2122 ;;      Locals:         0       0       0
  2123 ;;      Temps:          0       0       0
  2124 ;;      Totals:         0       0       0
  2125 ;;Total ram usage:        0 bytes
  2126 ;; Hardware stack levels used:    1
  2127 ;; This function calls:
  2128 ;;		Nothing
  2129 ;; This function is called by:
  2130 ;;		_TMR1_Initialize
  2131 ;;		_TMR1_CallBack
  2132 ;; This function uses a non-reentrant model
  2133 ;;
  2134                           
  2135                           
  2136                           ;psect for function _TMR1_DefaultInterruptHandler
  2137  0144                     _TMR1_DefaultInterruptHandler:
  2138  0144                     i1l114:	
  2139                           ;incstack = 0
  2140                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  2141                           
  2142  0144  0008               	return
  2143  0145                     __end_of_TMR1_DefaultInterruptHandler:
  2144                           
  2145                           	psect	text14
  2146  00F8                     __ptext14:	
  2147 ;; *************** function _secondsTick *****************
  2148 ;; Defined at:
  2149 ;;		line 171 in file "main.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;		None
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;		None
  2154 ;; Return value:  Size  Location     Type
  2155 ;;                  1    wreg      void 
  2156 ;; Registers used:
  2157 ;;		wreg, status,0
  2158 ;; Tracked objects:
  2159 ;;		On entry : 0/0
  2160 ;;		On exit  : 0/0
  2161 ;;		Unchanged: 0/0
  2162 ;; Data sizes:     COMMON   BANK0   BANK1
  2163 ;;      Params:         0       0       0
  2164 ;;      Locals:         0       0       0
  2165 ;;      Temps:          0       0       0
  2166 ;;      Totals:         0       0       0
  2167 ;;Total ram usage:        0 bytes
  2168 ;; Hardware stack levels used:    1
  2169 ;; This function calls:
  2170 ;;		Nothing
  2171 ;; This function is called by:
  2172 ;;		_main
  2173 ;;		_TMR1_CallBack
  2174 ;; This function uses a non-reentrant model
  2175 ;;
  2176                           
  2177                           
  2178                           ;psect for function _secondsTick
  2179  00F8                     _secondsTick:
  2180  00F8                     i1l906:	
  2181                           ;incstack = 0
  2182                           ; Regs used in _secondsTick: [wreg+status,0]
  2183                           
  2184                           
  2185                           ;main.c: 173:     currentSecondsTick++;
  2186  00F8  3001               	movlw	1
  2187  00F9  07F2               	addwf	_currentSecondsTick,f
  2188  00FA  3000               	movlw	0
  2189  00FB  3DF3               	addwfc	_currentSecondsTick+1,f
  2190  00FC                     i1l908:
  2191  00FC  1003               	clrc
  2192  00FD  0022               	movlb	2	; select bank2
  2193  00FE  1D0C               	btfss	12,2	;volatile
  2194  00FF  1403               	setc
  2195  0100  1803               	btfsc	3,0
  2196  0101  2903               	goto	u13_21
  2197  0102  2906               	goto	u13_20
  2198  0103                     u13_21:
  2199  0103  0022               	movlb	2	; select bank2
  2200  0104  150C               	bsf	12,2	;volatile
  2201  0105  2908               	goto	u14_24
  2202  0106                     u13_20:
  2203  0106  0022               	movlb	2	; select bank2
  2204  0107  110C               	bcf	12,2	;volatile
  2205  0108                     u14_24:
  2206  0108                     i1l204:
  2207  0108  0008               	return
  2208  0109                     __end_of_secondsTick:
  2209  007E                     btemp	set	126	;btemp
  2210  007E                     int$flags	set	126
  2211  007E                     wtemp0	set	126
  2212                           
  2213                           	psect	config
  2214                           
  2215                           ;Config register CONFIG1 @ 0x8007
  2216                           ;	
  2217                           ;	FOSC = INTOSC, INTOSC oscillator; I/O function on CLKIN pin
  2218                           ;	Watchdog Timer Enable
  2219                           ;	WDTE = OFF, WDT disabled
  2220                           ;	Power-up Timer Enable
  2221                           ;	PWRTE = OFF, PWRT disabled
  2222                           ;	MCLR Pin Function Select
  2223                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2224                           ;	Flash Program Memory Code Protection
  2225                           ;	CP = OFF, Program memory code protection is disabled
  2226                           ;	Brown-out Reset Enable
  2227                           ;	BOREN = ON, Brown-out Reset enabled
  2228                           ;	Clock Out Enable
  2229                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2230  8007                     	org	32775
  2231  8007  3FE4               	dw	16356
  2232                           
  2233                           ;Config register CONFIG2 @ 0x8008
  2234                           ;	Flash Memory Self-Write Protection
  2235                           ;	WRT = OFF, Write protection off
  2236                           ;	PLL Enable
  2237                           ;	PLLEN = OFF, 4x PLL disabled
  2238                           ;	Stack Overflow/Underflow Reset Enable
  2239                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2240                           ;	Brown-out Reset Voltage Selection
  2241                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2242                           ;	Low Power Brown-out Reset enable bit
  2243                           ;	LPBOREN = OFF, LPBOR is disabled
  2244                           ;	Low-Voltage Programming Enable
  2245                           ;	LVP = ON, Low-voltage programming enabled
  2246  8008                     	org	32776
  2247  8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      12
    BANK0            80      2       4
    BANK1            32      0       0

Pointer List with Targets:

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> secondsTick(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> secondsTick(), Absolute function(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_setState
    _TMR1_Initialize->_TMR1_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     393
                                              0 BANK0      2     2      0
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
                           _setState
 ---------------------------------------------------------------------------------
 (1) _setState                                             3     3      0      45
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0     240
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     240
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                        _secondsTick *
 ---------------------------------------------------------------------------------
 (7) _secondsTick                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize
   _TMR1_SetInterruptHandler
   _TMR1_StartTimer
   _setState

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _secondsTick *
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      10       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2       4       6        5.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      10       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Aug 06 15:52:35 2020

                                      l22 0136                                        l25 0140  
                                      l19 0115                                        l46 00E6  
                                      l81 0143                                        l78 00CF  
                                      u50 0080                                        u51 007F  
                                     l111 013C                                       l160 0035  
                                     l163 0048                                       l180 0081  
                                     l182 0083                                       l191 008F  
                                     l159 0061                                       l168 0060  
                                     l193 0091                                       l177 00B7  
                                     l186 008B                                       l196 0099  
                                     l188 008D                                       l198 009B  
                                     l810 00B3                                       l802 0084  
                                     l740 00D5                                       l804 0092  
                                     l750 0133                                       l742 00DA  
                                     l910 00B8                                       l752 0134  
                                     l744 00DE                                       l736 00D0  
                                     l904 0137                                       l920 00C3  
                                     l912 00BA                                       l808 009D  
                                     l746 00E1                                       l738 00D2  
                                     l922 00C5                                       l914 00BC  
                                     l754 013D                                       l748 0130  
                                     l924 00CC                                       l916 00BE  
                                     l918 00BF                                       l944 0109  
                                     l792 0141                                       l798 007A  
                                     u240 0039                                       u241 0038  
                                     u250 0043                                       u251 0042  
                                     u260 004C                                       u261 004B  
                                     u270 005B                                       u271 005A  
                                     u255 003F                                       u275 0057  
                         _timer1ReloadVal 007A                                      l1030 002D  
                                    l1104 006A                                      l1040 0051  
                                    l1032 0030                                      l1106 00A5  
                                    l1042 005B                                      l1034 0039  
                                    l1026 0022                                      l1036 0043  
                                    l1028 002C                                      l1038 004C  
                                    l1046 0061                                      _LATA 010C  
                                    i1l92 00F7                                      _WPUA 020C  
                                    _main 0022                                      btemp 007E  
                                    start 0019                ??_TMR1_SetInterruptHandler 0079  
          __size_of_OSCILLATOR_Initialize 0007             __end_of_OSCILLATOR_Initialize 0137  
                                   ?_main 0075                           _TMR1_StartTimer 0141  
                                   _T1CON 0018                                     i1l104 0122  
                                   i1l114 0144                                     i1l131 0017  
                                   i1l204 0108                                     i1l108 012F  
                                   i1l906 00F8                                     i1l930 00ED  
                                   i1l908 00FC                                     i1l940 0123  
                                   i1l932 00EF                                     i1l942 012A  
                                   i1l934 00F1                                     i1l926 00E7  
                                   i1l928 00EC                                     i1l936 00F3  
                                   i1l952 0006                                     i1l938 00F5  
                                   i1l946 0116                                     i1l954 000A  
                                   i1l948 0118                                     i1l956 000F  
                                   i1l958 0014                                     u13_20 0106  
                                   u13_21 0103                                     u14_24 0108  
                                   u15_20 00EC                                     u15_21 00EB  
                                   u16_20 012A                                     u16_21 0129  
                                   u17_20 000A                                     u17_21 0009  
                                   _TMR1H 0017                                     _TMR1L 0016  
                                   u18_20 000F                                     u18_21 000E  
                                   u19_20 0014                                     u19_21 0013  
                                   _TRISA 008C                          __end_of_TMR1_ISR 0123  
                          _WDT_Initialize 013D                   __end_of_TMR1_Initialize 00D0  
                                   pclath 000A                                     status 0003  
                                   wtemp0 007E                           _TMR1_WriteTimer 00E7  
                         __initialization 001A                              __end_of_main 0079  
             ?_INTERRUPT_InterruptManager 0075                                    ??_main 0022  
                            ?_secondsTick 0075                    __end_of_WDT_Initialize 0141  
                                  _APFCON 011D                                    _ANSELA 018C  
                                  _BORCON 0116                                    _T1GCON 0019  
                 TMR1_WriteTimer@timerVal 0075                                    _ODCONA 028C  
                                  _INLVLA 038C                                    _OSCCON 0099  
                                  _WDTCON 0097      __end_of_TMR1_DefaultInterruptHandler 0145  
   __size_of_TMR1_DefaultInterruptHandler 0001              _TMR1_DefaultInterruptHandler 0144  
                 __end_of_TMR1_StartTimer 0144                          __end_of_setState 00B8  
                         ?_WDT_Initialize 0075  TMR1_SetInterruptHandler@InterruptHandler 0077  
                 __end_of_TMR1_WriteTimer 00F8                     __end_of_TMR1_CallBack 0130  
                        ?_TMR1_Initialize 0075                         _SYSTEM_Initialize 0109  
                 __end_of__initialization 001F                        ?_SYSTEM_Initialize 0075  
                          __pcstackCOMMON 0075                       ??_SYSTEM_Initialize 0079  
                               ?_TMR1_ISR 0075             ?_TMR1_DefaultInterruptHandler 0075  
                          _OPTION_REGbits 0095                 __end_of_SYSTEM_Initialize 0116  
                              __pnvCOMMON 007A                                __pmaintext 0022  
                        ?_TMR1_StartTimer 0075                                ??_TMR1_ISR 0077  
                              __pintentry 0004                                   _OSCTUNE 0098  
                                 _SLRCONA 030C                      __size_of_secondsTick 0011  
                        ?_TMR1_WriteTimer 0075                                 ?_setState 0075  
                                 __ptext1 0079                                   __ptext2 0141  
                                 __ptext3 0109                                   __ptext4 013D  
                                 __ptext5 00B8                                   __ptext6 0137  
                                 __ptext7 00D0                                   __ptext8 0130  
          ??_TMR1_DefaultInterruptHandler 0075                                 _T1CONbits 0018  
                   _OSCILLATOR_Initialize 0130         __size_of_TMR1_SetInterruptHandler 0006  
                ??_PIN_MANAGER_Initialize 0077                 ?_TMR1_SetInterruptHandler 0077  
              __size_of_SYSTEM_Initialize 000D                      end_of_initialization 001F  
                              ??_setState 0077                          ??_WDT_Initialize 0077  
                               _PORTAbits 000C                         __size_of_TMR1_ISR 000D  
                  ?_OSCILLATOR_Initialize 0075                       start_initialization 001A  
         __size_of_PIN_MANAGER_Initialize 0017                  __size_of_TMR1_Initialize 0018  
                  __size_of_TMR1_CallBack 000D                               __pbssCOMMON 0070  
                               ___latbits 0000                             __pcstackBANK0 0022  
                        setState@newState 0079                              _currentState 0074  
                               __pnvBANK0 0020                    _PIN_MANAGER_Initialize 00D0  
        __end_of_TMR1_SetInterruptHandler 013D                         __size_of_setState 003F  
            ??_INTERRUPT_InterruptManager 0077                  __size_of_TMR1_StartTimer 0003  
                           ??_secondsTick 0075                             _TMR1_CallBack 0123  
                                _LATAbits 010C                                  _PIE1bits 0091  
                __size_of_TMR1_WriteTimer 0011       __size_of_INTERRUPT_InterruptManager 0015  
                                _PIR1bits 0011                                  _TMR1_ISR 0116  
                       ??_TMR1_Initialize 0079                        _currentSecondsTick 0072  
                     __end_of_secondsTick 0109                            ?_TMR1_CallBack 0075  
                 ??_OSCILLATOR_Initialize 0077                  _TMR1_SetInterruptHandler 0137  
                   _TMR1_InterruptHandler 0020                                  __ptext10 0116  
                                __ptext11 00E7                                  __ptext12 0123  
                                __ptext13 0144                                _T1GCONbits 0019  
                                __ptext14 00F8                         ??_TMR1_StartTimer 0077  
                           __size_of_main 0057                                  _setState 0079  
                     _demandedSecondsTick 0070                                  int$flags 007E  
      __end_of_INTERRUPT_InterruptManager 0019                _INTERRUPT_InterruptManager 0004  
                       ??_TMR1_WriteTimer 0077                                _INTCONbits 000B  
                             _secondsTick 00F8                           ??_TMR1_CallBack 0075  
                 __size_of_WDT_Initialize 0004                                  intlevel1 0000  
                 ?_PIN_MANAGER_Initialize 0075            __end_of_PIN_MANAGER_Initialize 00E7  
                         _TMR1_Initialize 00B8  
